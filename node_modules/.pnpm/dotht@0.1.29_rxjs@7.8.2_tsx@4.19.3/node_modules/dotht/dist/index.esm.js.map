{"version":3,"file":"index.esm.js","sources":["../src/connectors/types.ts","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-O3YJ5EQO.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-TNXLGJUM.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-ZIBWTERM.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-YMWTNFEZ.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-QZBWUVER.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-LG5IOLTV.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-JXLVOOH5.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-SOINKWG7.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-AVS4PDRR.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-WPYCR7LE.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-V5VATG3Q.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-5FIWG7XZ.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-DQYTBFVY.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-QE62BN6Z.mjs","../node_modules/.pnpm/@polkadot-api+known-chains@0.7.2/node_modules/@polkadot-api/known-chains/dist/chunk-4Q5KAEDT.mjs","../src/connectors/utils/index.ts","../node_modules/.pnpm/scale-ts@1.6.1/node_modules/scale-ts/dist/scale-ts.js","../node_modules/.pnpm/@scure+base@1.2.4/node_modules/@scure/base/lib/esm/index.js","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/_assert.js","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/utils.js","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/_blake.js","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/_u64.js","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/blake2b.js","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/utils/ss58-util.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/AccountId.mjs","../node_modules/.pnpm/@polkadot-api+utils@0.1.2/node_modules/@polkadot-api/utils/dist/esm/hex.mjs","../node_modules/.pnpm/@polkadot-api+utils@0.1.2/node_modules/@polkadot-api/utils/dist/esm/mapObject.mjs","../node_modules/.pnpm/@polkadot-api+utils@0.1.2/node_modules/@polkadot-api/utils/dist/esm/mergeUint8.mjs","../node_modules/.pnpm/@polkadot-api+utils@0.1.2/node_modules/@polkadot-api/utils/dist/esm/noop.mjs","../node_modules/.pnpm/@polkadot-api+utils@0.1.2/node_modules/@polkadot-api/utils/dist/esm/AbortError.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/Binary.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/compact.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/bitSequence.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/char.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/Hex.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/fixed-str.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/Self.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/types/enum.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/Variant.mjs","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/sha3.js","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/scale/ethAccount.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/blockHeader.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/metadata/docs.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/metadata/lookup.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/metadata/pallets.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/metadata/v14.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/metadata/runtime-api.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/metadata/v15.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/codecs/metadata/metadata.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/hashes/blake2.mjs","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/blake2s.js","../node_modules/.pnpm/@noble+hashes@1.7.1/node_modules/@noble/hashes/esm/blake3.js","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/hashes/blake3.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/hashes/identity.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/hashes/h64.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/hashes/twoX.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/storage.mjs","../node_modules/.pnpm/@polkadot-api+substrate-bindings@0.11.1/node_modules/@polkadot-api/substrate-bindings/dist/esm/utils/multisig.mjs","../node_modules/.pnpm/@polkadot-api+metadata-compatibility@0.1.16/node_modules/@polkadot-api/metadata-compatibility/dist/esm/typedef.mjs","../node_modules/.pnpm/@polkadot-api+metadata-compatibility@0.1.16/node_modules/@polkadot-api/metadata-compatibility/dist/esm/isCompatible.mjs","../node_modules/.pnpm/@polkadot-api+metadata-compatibility@0.1.16/node_modules/@polkadot-api/metadata-compatibility/dist/esm/doubleSet.mjs","../node_modules/.pnpm/@polkadot-api+metadata-compatibility@0.1.16/node_modules/@polkadot-api/metadata-compatibility/dist/esm/isStaticCompatible.mjs","../node_modules/.pnpm/@polkadot-api+metadata-compatibility@0.1.16/node_modules/@polkadot-api/metadata-compatibility/dist/esm/entryPoint.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/internal-utils/noop.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/methods.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/transaction/transaction.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/errors.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/internal-utils/deferred-promise.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/internal-utils/subscriptions-manager.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/internal-utils/abortablePromiseFn.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/operation-promise.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/body.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/call.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/header.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/storage-subscription.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/storage.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/unpin.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/client/DestroyedError.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainhead/chainhead.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/client/RpcError.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/client/createClient.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/chainspec.mjs","../node_modules/.pnpm/@polkadot-api+substrate-client@0.3.0/node_modules/@polkadot-api/substrate-client/dist/esm/index.mjs","../node_modules/.pnpm/@rollup+plugin-typescript@12.1.2_rollup@4.38.0_tslib@2.8.1_typescript@5.8.2/node_modules/tslib/tslib.es6.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isFunction.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/createErrorClass.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/UnsubscriptionError.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/arrRemove.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/Subscription.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/config.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduler/timeoutProvider.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/reportUnhandledError.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/noop.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/errorContext.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/Subscriber.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/symbol/observable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/identity.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/pipe.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/Observable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/lift.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/ObjectUnsubscribedError.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/Subject.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/BehaviorSubject.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduler/dateTimestampProvider.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/ReplaySubject.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduler/Action.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduler/intervalProvider.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduler/AsyncAction.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/Scheduler.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduler/AsyncScheduler.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduler/async.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/empty.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isScheduler.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/args.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isArrayLike.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isPromise.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isInteropObservable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isAsyncIterable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/throwUnobservableError.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/symbol/iterator.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isIterable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isReadableStreamLike.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/innerFrom.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/executeSchedule.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/observeOn.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/subscribeOn.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleObservable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduled/schedulePromise.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleArray.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleIterable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleAsyncIterable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduled/scheduleReadableStreamLike.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/scheduled/scheduled.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/from.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/of.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/throwError.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/EmptyError.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/lastValueFrom.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/firstValueFrom.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/isDate.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/map.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/mapOneOrManyArgs.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/argsArgArrayOrObject.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/createObject.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/combineLatest.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/mergeInternals.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/mergeMap.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/mergeAll.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/concatAll.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/concat.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/defer.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/connectable.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/timer.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/observable/merge.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/util/argsOrArgArray.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/filter.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/catchError.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/scanInternals.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/combineLatest.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/combineLatestWith.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/concatMap.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/take.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/mapTo.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/delayWhen.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/delay.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/distinct.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/pairwise.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/scan.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/share.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/shareReplay.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/startWith.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/switchMap.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/switchAll.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/takeUntil.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/takeWhile.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/tap.js","../node_modules/.pnpm/rxjs@7.8.2/node_modules/rxjs/dist/esm5/internal/operators/withLatestFrom.js","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/enhancers/operationLimitRecovery.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/errors.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/enhancers/optionalHash.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/enhancers/fromAbortControllerFn.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/enhancers/lazyFollower.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/streams/block-operations.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/enhancers/whileBestBlock.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/enhancers/withStopRecovery.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/storage-queries.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/streams/follow.mjs","../node_modules/.pnpm/@polkadot-api+metadata-builders@0.10.2/node_modules/@polkadot-api/metadata-builders/dist/esm/lookups.mjs","../node_modules/.pnpm/@polkadot-api+metadata-builders@0.10.2/node_modules/@polkadot-api/metadata-builders/dist/esm/with-cache.mjs","../node_modules/.pnpm/@polkadot-api+metadata-builders@0.10.2/node_modules/@polkadot-api/metadata-builders/dist/esm/lookup-codec-builder.mjs","../node_modules/.pnpm/@polkadot-api+metadata-builders@0.10.2/node_modules/@polkadot-api/metadata-builders/dist/esm/dynamic-builder.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/streams/get-runtime-creator.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/utils/shareLatest.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/streams/pinned-blocks.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/track-tx.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/validate-tx.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/utils/with-default-value.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/utils/concatMapEager.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/utils/delay-unsubscription.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/chainHead/chainHead.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/tx.mjs","../node_modules/.pnpm/@polkadot-api+observable-client@0.8.4_@polkadot-api+substrate-client@0.3.0_rxjs@7.8.2/node_modules/@polkadot-api/observable-client/dist/esm/getObservableClient.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/compatibility.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/constants.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/utils/shareLatest.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/event.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/utils/firstValueFromWithSignal.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/utils/optional-arg.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/runtime-call.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/utils/lossLessExhaustMap.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/storage.mjs","../node_modules/.pnpm/@polkadot-api+signers-common@0.1.6/node_modules/@polkadot-api/signers-common/dist/esm/v4.mjs","../node_modules/.pnpm/@polkadot-api+signers-common@0.1.6/node_modules/@polkadot-api/signers-common/dist/esm/sign-bytes.mjs","../node_modules/.pnpm/@polkadot-api+signer@0.1.15/node_modules/@polkadot-api/signer/dist/esm/from-raw-signer.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/tx/signed-extensions/system-version.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/tx/signed-extensions/mortal-enc.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/tx/signed-extensions/charge-asset-tx-enc.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/tx/signed-extensions/sign-extensions.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/tx/create-tx.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/utils/continue-with.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/tx/submit-fns.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/tx/tx.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/utils/self-dependent.mjs","../node_modules/.pnpm/@rx-state+core@0.1.4_rxjs@7.8.2/node_modules/@rx-state/core/dist/rxstate.core.es2017.js","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/watch-entries.mjs","../node_modules/.pnpm/polkadot-api@1.9.7_postcss@8.5.3_rxjs@7.8.2_yaml@2.7.0/node_modules/polkadot-api/dist/esm/client.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/methods.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/chain-spec.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/fix-premature-blocks.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/utils.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/fix-descendant-values.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/fix-unordered-blocks.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/fix-unordered-events.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/patch-chainhead-events.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/unpin-hash.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/translate.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/parsed-enhancers/numeric-ids.mjs","../node_modules/.pnpm/@polkadot-api+polkadot-sdk-compat@2.3.2/node_modules/@polkadot-api/polkadot-sdk-compat/dist/esm/index.mjs","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/constants.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/buffer-util.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/limiter.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/permessage-deflate.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/validation.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/receiver.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/sender.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/event-target.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/extension.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/websocket.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/stream.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/subprotocol.js","../node_modules/.pnpm/ws@8.18.1/node_modules/ws/lib/websocket-server.js","../node_modules/.pnpm/@polkadot-api+json-rpc-provider-proxy@0.2.4/node_modules/@polkadot-api/json-rpc-provider-proxy/dist/esm/json-rpc-message.mjs","../node_modules/.pnpm/@polkadot-api+json-rpc-provider-proxy@0.2.4/node_modules/@polkadot-api/json-rpc-provider-proxy/dist/esm/get-proxy.mjs","../node_modules/.pnpm/@polkadot-api+json-rpc-provider-proxy@0.2.4/node_modules/@polkadot-api/json-rpc-provider-proxy/dist/esm/get-sync-provider.mjs","../node_modules/.pnpm/@polkadot-api+ws-provider@0.4.0/node_modules/@polkadot-api/ws-provider/dist/node/esm/types.mjs","../node_modules/.pnpm/@polkadot-api+ws-provider@0.4.0/node_modules/@polkadot-api/ws-provider/dist/node/esm/follow-enhancer.mjs","../node_modules/.pnpm/@polkadot-api+ws-provider@0.4.0/node_modules/@polkadot-api/ws-provider/dist/node/esm/ws-provider.mjs","../node_modules/.pnpm/@polkadot-api+ws-provider@0.4.0/node_modules/@polkadot-api/ws-provider/dist/node/esm/node.mjs","../src/chains/constants.ts","../src/chains/pallets/system.ts","../src/chains/pallets/balances.ts","../src/chains/index.ts","../src/registry/ChainRegistry.ts","../src/connectors/WebSocketConnector.ts","../node_modules/.pnpm/smoldot@2.0.34/node_modules/smoldot/dist/mjs/public-types.js","../node_modules/.pnpm/smoldot@2.0.34/node_modules/smoldot/dist/mjs/internals/buffer.js","../node_modules/.pnpm/smoldot@2.0.34/node_modules/smoldot/dist/mjs/internals/local-instance.js","../node_modules/.pnpm/smoldot@2.0.34/node_modules/smoldot/dist/mjs/internals/remote-instance.js","../node_modules/.pnpm/smoldot@2.0.34/node_modules/smoldot/dist/mjs/internals/client.js","../node_modules/.pnpm/smoldot@2.0.34/node_modules/smoldot/dist/mjs/no-auto-bytecode-browser.js","../node_modules/.pnpm/@polkadot-api+smoldot@0.3.8/node_modules/@polkadot-api/smoldot/dist/from-worker/esm/from-worker.mjs","../node_modules/.pnpm/@polkadot-api+smoldot@0.3.8/node_modules/@polkadot-api/smoldot/dist/from-node-worker/esm/from-node-worker.mjs","../node_modules/.pnpm/smoldot@2.0.34/node_modules/smoldot/dist/mjs/bytecode-browser.js","../node_modules/.pnpm/@polkadot-api+sm-provider@0.1.7_@polkadot-api+smoldot@0.3.8/node_modules/@polkadot-api/sm-provider/dist/esm/sm-provider.mjs","../src/connectors/SmoldotConnector.ts","../src/registry/ConnectorRegistry.ts","../src/createNetworkConnector.ts","../node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/packageInfo.js","../node_modules/.pnpm/@polkadot+x-global@13.4.3/node_modules/@polkadot/x-global/index.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/function.js","../node_modules/.pnpm/@polkadot+x-bigint@13.4.3/node_modules/@polkadot/x-bigint/packageInfo.js","../node_modules/.pnpm/@polkadot+x-bigint@13.4.3/node_modules/@polkadot/x-bigint/index.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toBigInt.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/hex/toU8a.js","../node_modules/.pnpm/bn.js@5.2.1/node_modules/bn.js/lib/bn.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/bn.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/hex.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/object.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/helpers.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/toBigInt.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/toBn.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/has.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/buffer.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/u8a.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/string/toU8a.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toU8a.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/concat.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toHex.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/toString.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/u8a/wrap.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/hex/stripPrefix.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/hex/toBn.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/bn/consts.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/is/bigInt.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/bn/toBn.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/bn/toU8a.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/compact/toU8a.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/compact/addLength.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/format/formatDate.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/noop.js","../node_modules/.pnpm/@polkadot+util@13.4.3/node_modules/@polkadot/util/logger.js","../node_modules/.pnpm/@polkadot+wasm-crypto@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_3a6p6dwoyg77iyxprahdteacfa/node_modules/@polkadot/wasm-crypto/packageInfo.js","../node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/wbg.js","../node_modules/.pnpm/@polkadot+wasm-bridge@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_gvlwcquwhwduchieihclbuz4qa/node_modules/@polkadot/wasm-bridge/bridge.js","../node_modules/.pnpm/@polkadot+wasm-crypto@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_3a6p6dwoyg77iyxprahdteacfa/node_modules/@polkadot/wasm-crypto/init.js","../node_modules/.pnpm/@polkadot+wasm-crypto@7.4.1_@polkadot+util@13.4.3_@polkadot+x-randomvalues@13.4.3_@polkadot+u_3a6p6dwoyg77iyxprahdteacfa/node_modules/@polkadot/wasm-crypto/bundle.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/base32/helpers.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/base58/bs58.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/blake2/asU8a.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/address/sshash.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/address/checksum.js","../node_modules/.pnpm/@substrate+ss58-registry@1.51.0/node_modules/@substrate/ss58-registry/esm/index.js","../node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/genesis.js","../node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/icons.js","../node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/ledger.js","../node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/defaults/testnets.js","../node_modules/.pnpm/@polkadot+networks@13.4.3/node_modules/@polkadot/networks/interfaces.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/address/defaults.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/address/decode.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/secp256k1/deriveHard.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/ed25519/deriveHard.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/random/asNumber.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/address/keyDerived.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/address/keyMulti.js","../node_modules/.pnpm/@polkadot+util-crypto@13.4.3_@polkadot+util@13.4.3/node_modules/@polkadot/util-crypto/address/setSS58Format.js","../src/registry/Account.ts"],"sourcesContent":["import { Client } from \"polkadot-api/smoldot\"\nimport type { ChainId, ChainIdRelay } from \"../chains/types\"\nimport { ChainConnector } from \"../chains\"\n\nexport abstract class NetworkConnector {\n  network: ChainIdRelay\n  client: Client | null = null\n  protected chains: Map<ChainId, ChainConnector> = new Map()\n  protected isConnected = false\n\n  protected constructor(network: ChainIdRelay, client?: Client) {\n    this.network = network\n    this.client = client || null\n  }\n\n  abstract connect(): Promise<void>\n  abstract disconnect(): Promise<void>\n  abstract loadChains(): Promise<string[]>\n\n  getChain(chainId: ChainId): ChainConnector | undefined {\n    return this.chains.get(chainId)\n  }\n\n  getStatus(): string {\n    return this.isConnected ? \"connected\" : \"disconnected\"\n  }\n\n  getChains(): ChainId[] {\n    return [...this.chains.keys()]\n  }\n}\n","// src/specs/westend2.ts\nvar chainSpec = `{\n  \"name\": \"Westend\",\n  \"id\": \"westend2\",\n  \"bootNodes\": [\n    \"/dns/westend-bootnode-0.polkadot.io/tcp/30333/p2p/12D3KooWKer94o1REDPtAhjtYR4SdLehnSrN8PEhBnZm5NBoCrMC\",\n    \"/dns/westend-bootnode-0.polkadot.io/tcp/30334/ws/p2p/12D3KooWKer94o1REDPtAhjtYR4SdLehnSrN8PEhBnZm5NBoCrMC\",\n    \"/dns/westend-bootnode-0.polkadot.io/tcp/443/wss/p2p/12D3KooWKer94o1REDPtAhjtYR4SdLehnSrN8PEhBnZm5NBoCrMC\",\n    \"/dns/westend-bootnode-1.polkadot.io/tcp/30333/p2p/12D3KooWPVPzs42GvRBShdUMtFsk4SvnByrSdWqb6aeAAHvLMSLS\",\n    \"/dns/westend-bootnode-1.polkadot.io/tcp/30334/ws/p2p/12D3KooWPVPzs42GvRBShdUMtFsk4SvnByrSdWqb6aeAAHvLMSLS\",\n    \"/dns/westend-bootnode-1.polkadot.io/tcp/443/wss/p2p/12D3KooWPVPzs42GvRBShdUMtFsk4SvnByrSdWqb6aeAAHvLMSLS\",\n    \"/dns/westend.boot.stake.plus/tcp/30334/wss/p2p/12D3KooWAzfLkJarihZAyDeDet2WpYNkzjpXocGmmDFiRaHJjoyw\",\n    \"/dns/westend.boot.stake.plus/tcp/31334/wss/p2p/12D3KooWBdcVpUwnB3AgwZQXcyrvd4yzPBXtSLknvoBSHQZNoftP\",\n    \"/dns/boot-node.helikon.io/tcp/7080/p2p/12D3KooWRFDPyT8vA8mLzh6dJoyujn4QNjeqi6Ch79eSMz9beKXC\",\n    \"/dns/boot-node.helikon.io/tcp/7082/wss/p2p/12D3KooWRFDPyT8vA8mLzh6dJoyujn4QNjeqi6Ch79eSMz9beKXC\",\n    \"/dns/westend.bootnode.amforc.com/tcp/30001/p2p/12D3KooWAPmR7rbm2axPjHzF51yvQNDM5GvWfkF5BTV44Y5vJ3ct\",\n    \"/dns/westend.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWAPmR7rbm2axPjHzF51yvQNDM5GvWfkF5BTV44Y5vJ3ct\",\n    \"/dns/westend.bootnodes.polkadotters.com/tcp/30308/p2p/12D3KooWHPHb64jXMtSRJDrYFATWeLnvChL8NtWVttY67DCH1eC5\",\n    \"/dns/westend.bootnodes.polkadotters.com/tcp/30310/wss/p2p/12D3KooWHPHb64jXMtSRJDrYFATWeLnvChL8NtWVttY67DCH1eC5\",\n    \"/dns/boot.gatotech.network/tcp/33300/p2p/12D3KooWQGR1vUhoy6mvQorFp3bZFn6NNezhQZ6NWnVV7tpFgoPd\",\n    \"/dns/boot.gatotech.network/tcp/35300/wss/p2p/12D3KooWQGR1vUhoy6mvQorFp3bZFn6NNezhQZ6NWnVV7tpFgoPd\",\n    \"/dns/boot.metaspan.io/tcp/33012/p2p/12D3KooWNTau7iG4G9cUJSwwt2QJP1W88pUf2SgqsHjRU2RL8pfa\",\n    \"/dns/boot.metaspan.io/tcp/33015/ws/p2p/12D3KooWNTau7iG4G9cUJSwwt2QJP1W88pUf2SgqsHjRU2RL8pfa\",\n    \"/dns/boot.metaspan.io/tcp/33016/wss/p2p/12D3KooWNTau7iG4G9cUJSwwt2QJP1W88pUf2SgqsHjRU2RL8pfa\",\n    \"/dns/westend-bootnode.turboflakes.io/tcp/30310/p2p/12D3KooWJvPDCZmReU46ghpCMJCPVUvUCav4WQdKtXQhZgJdH6tZ\",\n    \"/dns/westend-bootnode.turboflakes.io/tcp/30410/wss/p2p/12D3KooWJvPDCZmReU46ghpCMJCPVUvUCav4WQdKtXQhZgJdH6tZ\",\n    \"/dns/westend-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWJifoDhCL3swAKt7MWhFb7wLRFD9oG33AL3nAathmU24x\",\n    \"/dns/westend-boot-ng.dwellir.com/tcp/30335/p2p/12D3KooWJifoDhCL3swAKt7MWhFb7wLRFD9oG33AL3nAathmU24x\",\n    \"/dns/westend-bootnode.radiumblock.com/tcp/30335/wss/p2p/12D3KooWJBowJuX1TaWNWHt8Dz8z44BoCZunLCfFqxA2rLTn6TBD\",\n    \"/dns/westend-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWJBowJuX1TaWNWHt8Dz8z44BoCZunLCfFqxA2rLTn6TBD\",\n    \"/dns/wnd-bootnode.stakeworld.io/tcp/30320/p2p/12D3KooWBYdKipcNbrV5rCbgT5hco8HMLME7cE9hHC3ckqCKDuzP\",\n    \"/dns/wnd-bootnode.stakeworld.io/tcp/30321/ws/p2p/12D3KooWBYdKipcNbrV5rCbgT5hco8HMLME7cE9hHC3ckqCKDuzP\",\n    \"/dns/wnd-bootnode.stakeworld.io/tcp/30322/wss/p2p/12D3KooWBYdKipcNbrV5rCbgT5hco8HMLME7cE9hHC3ckqCKDuzP\",\n    \"/dns/wnd14.rotko.net/tcp/35234/wss/p2p/12D3KooWLK8Zj1uZ46phU3vQwiDVda8tB76S8J26rXZQLHpwWkDJ\",\n    \"/dns/wnd14.rotko.net/tcp/33234/p2p/12D3KooWLK8Zj1uZ46phU3vQwiDVda8tB76S8J26rXZQLHpwWkDJ\",\n    \"/dns/ibp-boot-westend.luckyfriday.io/tcp/30333/p2p/12D3KooWDg1YEytdwFFNWroFj6gio4YFsMB3miSbHKgdpJteUMB9\",\n    \"/dns/ibp-boot-westend.luckyfriday.io/tcp/30334/wss/p2p/12D3KooWDg1YEytdwFFNWroFj6gio4YFsMB3miSbHKgdpJteUMB9\",\n    \"/dns/westend.bootnode.stkd.io/tcp/30633/wss/p2p/12D3KooWHaQKkJiTPqeNgqDcW7dfYgJxYwT8YqJMtTkueSu6378V\"\n  ],\n  \"properties\": {\n    \"ss58Format\": 42,\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"WND\"\n  },\n  \"forkBlocks\": null,\n  \"badBlocks\": null,\n  \"consensusEngine\": null,\n  \"genesis\": {\n    \"stateRootHash\": \"0x7e92439a94f79671f9cade9dff96a094519b9001a7432244d46ab644bb6f746f\"\n  },\n  \"lightSyncState\": {\n    \"babeEpochChanges\": \"0x04dca29bdbbba853100862e037d9c6b22976bfe14d626971566f3e992acf2536e58716810101074a4f11000000005f4c4f11000000000455b068bc03d5ad0ec9f59e3976d245c289811b8a730eea227a33bd6c904ac4f5ce188101015f4c4f1100000000b74e4f110000000004dba62ed24fe7113e4fc5c85b91d6a098cf2c1e0ba99fbc370f917f8653580d0d111b810101b74e4f11000000000f514f110000000000000c55b068bc03d5ad0ec9f59e3976d245c289811b8a730eea227a33bd6c904ac4f5ce1881010177a90000000000005f4c4f1100000000580200000000000048d2310999d6ae0682e44e3da219df34cd3811bd34af774bfad25565deb4b521190100000000000000247b81e76ef04a25aba83bd5683f3faf88bb35bd7149a1e0e80afcb1f6e0fd700100000000000000723f91e0acb2815a86917b95b3376c193cf9456bb3beb85c55f6569d47a4847201000000000000002ace79d5531a9bae7ae3d3476755bbedb9d0744f511b44d420f09a34ac68b416010000000000000092f25bd4b37fcbc1d7331f15df9ed627c09c609f20ed3c0b91f6c142b89c4044010000000000000004d51db6301080ce1c1296799c648d2d652e2180f18e528fc2f4a05836a1ea6d0100000000000000c004c49d979b93f072eddee932b3b6e1d5d26629ae6927b01dce5c7d5ff9292a0100000000000000688675958d7f12269b16f305937c82b0ecbdd8e70186e038b7cffab9a44d5f320100000000000000e06cdf5b567644218d36079ccfa8a6e677a6423e2be4ddc1dd99e5393fe908600100000000000000664cd82485d2633e6ccbc6b0065d3af49223fa0e7bcef9fdc578ad408d64b2360100000000000000fc3f45618ebfc689a0707fa1cad64f9b192610229b1f2ef52c1672036efcd5540100000000000000347ec3e4d776414205b28938594930c030fcb4a9b8f0acca81adc05761b8dc590100000000000000962759c480c1004055e450eaa27838eebf5203fca49824a3beb2c66d53583175010000000000000028ec995c53da14b06c760704711c6ea1428a762222cbba6ae2c1c9707a78755e0100000000000000ba887256963719329ed36b6410ad32fb32c84753a2321bf0ecd7da3bd122a5730100000000000000565332a5d0ceb244880ecfd6ffdbbb03f3e90ad98ff78fe79e4d47951431c42f0100000000000000b050d26decf3150b7632193cd62827c0954780323bd548b0ea07a7f34050df35010000000000000060f6d3b029e11988123ed716cc14dc9fe33d482997ed511dd4aca7c9aa999d63010000000000000097455bf3209e2a46b595e391da260b5af895325972b158ef0743ce8b700ac9ae0100000000000000040000000000000002dba62ed24fe7113e4fc5c85b91d6a098cf2c1e0ba99fbc370f917f8653580d0d111b81010178a9000000000000b74e4f1100000000580200000000000048d2310999d6ae0682e44e3da219df34cd3811bd34af774bfad25565deb4b521190100000000000000247b81e76ef04a25aba83bd5683f3faf88bb35bd7149a1e0e80afcb1f6e0fd700100000000000000723f91e0acb2815a86917b95b3376c193cf9456bb3beb85c55f6569d47a4847201000000000000002ace79d5531a9bae7ae3d3476755bbedb9d0744f511b44d420f09a34ac68b416010000000000000092f25bd4b37fcbc1d7331f15df9ed627c09c609f20ed3c0b91f6c142b89c4044010000000000000004d51db6301080ce1c1296799c648d2d652e2180f18e528fc2f4a05836a1ea6d0100000000000000c004c49d979b93f072eddee932b3b6e1d5d26629ae6927b01dce5c7d5ff9292a0100000000000000688675958d7f12269b16f305937c82b0ecbdd8e70186e038b7cffab9a44d5f320100000000000000e06cdf5b567644218d36079ccfa8a6e677a6423e2be4ddc1dd99e5393fe908600100000000000000664cd82485d2633e6ccbc6b0065d3af49223fa0e7bcef9fdc578ad408d64b2360100000000000000fc3f45618ebfc689a0707fa1cad64f9b192610229b1f2ef52c1672036efcd5540100000000000000347ec3e4d776414205b28938594930c030fcb4a9b8f0acca81adc05761b8dc590100000000000000962759c480c1004055e450eaa27838eebf5203fca49824a3beb2c66d53583175010000000000000028ec995c53da14b06c760704711c6ea1428a762222cbba6ae2c1c9707a78755e0100000000000000ba887256963719329ed36b6410ad32fb32c84753a2321bf0ecd7da3bd122a5730100000000000000565332a5d0ceb244880ecfd6ffdbbb03f3e90ad98ff78fe79e4d47951431c42f0100000000000000b050d26decf3150b7632193cd62827c0954780323bd548b0ea07a7f34050df35010000000000000060f6d3b029e11988123ed716cc14dc9fe33d482997ed511dd4aca7c9aa999d630100000000000000da7d7d5d67b4727b975da8853427310c9139220449d5b8927504791903e6ff780100000000000000040000000000000002dca29bdbbba853100862e037d9c6b22976bfe14d626971566f3e992acf2536e5871681010176a9000000000000074a4f1100000000580200000000000048d2310999d6ae0682e44e3da219df34cd3811bd34af774bfad25565deb4b521190100000000000000247b81e76ef04a25aba83bd5683f3faf88bb35bd7149a1e0e80afcb1f6e0fd700100000000000000723f91e0acb2815a86917b95b3376c193cf9456bb3beb85c55f6569d47a4847201000000000000002ace79d5531a9bae7ae3d3476755bbedb9d0744f511b44d420f09a34ac68b416010000000000000092f25bd4b37fcbc1d7331f15df9ed627c09c609f20ed3c0b91f6c142b89c4044010000000000000004d51db6301080ce1c1296799c648d2d652e2180f18e528fc2f4a05836a1ea6d0100000000000000c004c49d979b93f072eddee932b3b6e1d5d26629ae6927b01dce5c7d5ff9292a0100000000000000688675958d7f12269b16f305937c82b0ecbdd8e70186e038b7cffab9a44d5f320100000000000000e06cdf5b567644218d36079ccfa8a6e677a6423e2be4ddc1dd99e5393fe908600100000000000000664cd82485d2633e6ccbc6b0065d3af49223fa0e7bcef9fdc578ad408d64b2360100000000000000fc3f45618ebfc689a0707fa1cad64f9b192610229b1f2ef52c1672036efcd5540100000000000000347ec3e4d776414205b28938594930c030fcb4a9b8f0acca81adc05761b8dc590100000000000000962759c480c1004055e450eaa27838eebf5203fca49824a3beb2c66d53583175010000000000000028ec995c53da14b06c760704711c6ea1428a762222cbba6ae2c1c9707a78755e0100000000000000ba887256963719329ed36b6410ad32fb32c84753a2321bf0ecd7da3bd122a5730100000000000000565332a5d0ceb244880ecfd6ffdbbb03f3e90ad98ff78fe79e4d47951431c42f0100000000000000b050d26decf3150b7632193cd62827c0954780323bd548b0ea07a7f34050df35010000000000000060f6d3b029e11988123ed716cc14dc9fe33d482997ed511dd4aca7c9aa999d630100000000000000259f4a39cf8c638aa1bbe06cc336ddef40dbf495b7af64dd43f1c154562512d20100000000000000040000000000000002\",\n    \"babeFinalizedBlockWeight\": 6295236,\n    \"finalizedBlockHeader\": \"0x88ad2603028b5c5c6dda1b5a9aef889672c7a371a6d2b1b02ac5832c2ad73ad60e6d04063a5be029f6e027e27dbf462188f880350ff5dae9a9b6887a24a453c1a52657a6a848c043a21e3eebf88419df197e10c34ef65366c217a489bdaea47cb6fb9ef30c0642414245b5010306000000924c4f1100000000c209c135d5595adbb1f3b759361fe3b8f5543457af7571124e2c9e959e9d1b3e9b3e6ee3d03d7ae54d4731ee6969e8344c6e46a7682cad905673ac4d6ee9360a7641a456b73868fad47bbb96156cf8695bc496d0897aa3962468ce68a520700804424545468403d3149967fba75e4b708664e78f8a7aab4ca3136de1e10c3ca4685a900082e8ac05424142450101f6711093d9968bbb3ff4d9c9ed1958e10f51be487fdc9a8203ebd92a74161a2a8a2e8f25e456d04592ecaeffcbf5d3977a9824dc8606a05805c581f65741418b\",\n    \"grandpaAuthoritySet\": \"0x48e408b1a16d123c3f9eebdd4b0be7dbbbfca28730b5f381b7ccf74e790c2fb7de0100000000000000160039442cdf3ddd22aeb3e1fb02668ef4a91bfde316d110d23bfcadc93b3e54010000000000000098bd69db92af7c0467eafc427b64e37df7f23744ca3eaea5073365f5ffea1b660100000000000000fcf5f94a513c06d03e64e2e96754c6eb2c8bd0ba299fcfd743e51a10733109a20100000000000000e1c7542e6b1bcda02941908c6a527e9f5a5113497d91c6b37f85286ab9e376ce01000000000000005f0b282a6b2338ad515535bc9a15b72077591f66c7b9117af54b05576d7b53f30100000000000000913d832017d5ffb4b34ed51a099e509a366f7be9ea27435489ffd616de854d7d01000000000000002859cfca60e6490ad903a1e7cbae1637a358e93d0b87fc28c015a8c03f44699b010000000000000061306d006ca775e8716270130340f97ea797c832bf5d12d5ce5437048f5594bd0100000000000000ee9a46051b2ca860cb42abd6d35c13dd44ef07e98376ea64a3f5b4f3fb1e559d010000000000000022d37fb3c2cc93588c8e269c3dafd06d405eff713096f7c777e1117664827a5501000000000000007b270550abd5f899df482c0504b61a996f96360b57be8c8af1cc009c0c55b5cf010000000000000002e1878ec4350e2a81d0010619119a11fb98f37ed499de6568768d5d02a5a4690100000000000000cde3d8c2d8ddbf15188878876ed758f8e627f75d6da947ed24aada1af3358f110100000000000000ba59e330b7ec7afd4373df02547647b633438bc53164bc00d3e09df053999a920100000000000000c1dab4fcb5c72e4317a2763b9584f6e815946ded7fc13389ce1e152290d40a390100000000000000441606473cfe94e5bfff627ce52d2325bfd42cef4853d1a509c503d3abe5f15f0100000000000000e59e04bb87bc4e1e890372b74c4cb9434d95edd43cf7b82f086b6249696d4dbb010000000000000094230000000000000001431b810100518e00000000000000002a2a00000100000000000000822c00000200000000000000da2e000003000000000000003231000004000000000000008a3300000500000000000000e235000006000000000000003a3800000700000000000000923a00000800000000000000e83c00000900000000000000403f00000a00000000000000984100000b00000000000000f04300000c00000000000000484600000d00000000000000a04800000e00000000000000f84a00000f00000000000000504d00001000000000000000a84f00001100000000000000005200001200000000000000585400001300000000000000b05600001400000000000000085900001500000000000000605b00001600000000000000b85d00001700000000000000106000001800000000000000686200001900000000000000c06400001a00000000000000186700001b00000000000000706900001c00000000000000c86b00001d00000000000000206e00001e00000000000000787000001f00000000000000d07200002000000000000000287500002100000000000000807700002200000000000000d87900002300000000000000307c00002400000000000000887e00002500000000000000e08000002600000000000000388300002700000000000000908500002800000000000000e88700002900000000000000408a00002a00000000000000988c00002b00000000000000ef8e00002c00000000000000479100002d000000000000009f9300002e00000000000000f79500002f000000000000004f9800003000000000000000a79a00003100000000000000ff9c00003200000000000000579f00003300000000000000afa10000340000000000000007a4000035000000000000005fa600003600000000000000b7a8000037000000000000000fab0000380000000000000067ad00003900000000000000bfaf00003a0000000000000017b200003b000000000000006fb400003c00000000000000c7b600003d000000000000001fb900003e0000000000000077bb00003f00000000000000cfbd0000400000000000000027c0000041000000000000007fc200004200000000000000d7c4000043000000000000002fc70000440000000000000087c900004500000000000000dfcb0000460000000000000037ce000047000000000000008fd000004800000000000000e7d2000049000000000000003fd500004a0000000000000097d700004b00000000000000efd900004c0000000000000047dc00004d000000000000009fde00004e00000000000000f7e000004f000000000000004fe300005000000000000000a7e500005100000000000000ffe70000520000000000000057ea00005300000000000000afec0000540000000000000007ef000055000000000000005ff100005600000000000000b7f3000057000000000000000ff60000580000000000000067f800005900000000000000bffa00005a0000000000000017fd00005b000000000000006fff00005c00000000000000c70101005d000000000000001f0401005e00000000000000770601005f00000000000000cf0801006000000000000000270b010061000000000000007f0d01006200000000000000d70f010063000000000000002f1201006400000000000000871401006500000000000000df16010066000000000000003719010067000000000000008f1b01006800000000000000e71d010069000000000000003f2001006a00000000000000972201006b00000000000000ef2401006c00000000000000472701006d000000000000009f2901006e00000000000000f72b01006f000000000000004d2e01007000000000000000a53001007100000000000000fd3201007200000000000000553501007300000000000000ac3701007400000000000000043a010075000000000000005c3c01007600000000000000b43e010077000000000000000c4101007800000000000000644301007900000000000000bc4501007a00000000000000144801007b000000000000006c4a01007c00000000000000c44c01007d000000000000001c4f01007e00000000000000745101007f00000000000000cc53010080000000000000002456010081000000000000007c5801008200000000000000d45a010083000000000000002c5d01008400000000000000845f01008500000000000000dc61010086000000000000003464010087000000000000008c6601008800000000000000e468010089000000000000003c6b01008a00000000000000946d01008b00000000000000ec6f01008c00000000000000447201008d000000000000009c7401008e00000000000000f47601008f000000000000004c7901009000000000000000a47b01009100000000000000fc7d01009200000000000000548001009300000000000000ac82010094000000000000000485010095000000000000005c8701009600000000000000b489010097000000000000000c8c01009800000000000000648e01009900000000000000bc9001009a00000000000000149301009b000000000000006c9501009c00000000000000c49701009d000000000000001c9a01009e00000000000000749c01009f00000000000000cc9e0100a00000000000000024a10100a1000000000000007ba30100a200000000000000d3a50100a3000000000000002ba80100a40000000000000083aa0100a500000000000000dbac0100a60000000000000033af0100a7000000000000008bb10100a800000000000000e3b30100a9000000000000003bb60100aa0000000000000093b80100ab00000000000000ebba0100ac0000000000000043bd0100ad000000000000009bbf0100ae00000000000000f3c10100af000000000000004bc40100b000000000000000a3c60100b100000000000000fbc80100b20000000000000053cb0100b300000000000000abcd0100b40000000000000003d00100b5000000000000005bd20100b600000000000000b3d40100b7000000000000000bd70100b80000000000000063d90100b900000000000000bbdb0100ba0000000000000013de0100bb000000000000006be00100bc00000000000000c3e20100bd000000000000001be50100be0000000000000073e70100bf00000000000000cbe90100c00000000000000023ec0100c1000000000000007bee0100c200000000000000d3f00100c3000000000000002bf30100c40000000000000083f50100c500000000000000dbf70100c60000000000000033fa0100c7000000000000008bfc0100c800000000000000e3fe0100c9000000000000003b010200ca0000000000000093030200cb00000000000000eb050200cc0000000000000043080200cd000000000000009b0a0200ce00000000000000f30c0200cf000000000000004b0f0200d000000000000000a3110200d100000000000000fb130200d20000000000000053160200d300000000000000ab180200d400000000000000031b0200d5000000000000005b1d0200d600000000000000b31f0200d7000000000000000b220200d80000000000000063240200d900000000000000bb260200da0000000000000013290200db000000000000006b2b0200dc00000000000000c32d0200dd000000000000001b300200de0000000000000073320200df00000000000000cb340200e00000000000000023370200e1000000000000007b390200e200000000000000d33b0200e3000000000000002b3e0200e40000000000000083400200e500000000000000db420200e60000000000000033450200e7000000000000008b470200e800000000000000e3490200e9000000000000003b4c0200ea00000000000000934e0200eb00000000000000eb500200ec0000000000000043530200ed000000000000009b550200ee00000000000000f3570200ef000000000000004b5a0200f000000000000000a35c0200f100000000000000fb5e0200f20000000000000053610200f300000000000000ab630200f40000000000000003660200f5000000000000005b680200f600000000000000b36a0200f7000000000000000b6d0200f800000000000000636f0200f900000000000000bb710200fa0000000000000013740200fb000000000000006b760200fc00000000000000c3780200fd000000000000001b7b0200fe00000000000000737d0200ff00000000000000cb7f020000010000000000002282020001010000000000007a8402000201000000000000d286020003010000000000002a8902000401000000000000828b02000501000000000000da8d020006010000000000003290020007010000000000008a9202000801000000000000e294020009010000000000003a9702000a01000000000000929902000b01000000000000ea9b02000c01000000000000429e02000d010000000000009aa002000e01000000000000f2a202000f010000000000004aa502001001000000000000a2a702001101000000000000faa90200120100000000000052ac02001301000000000000a7ae02001401000000000000ffb00200150100000000000057b302001601000000000000afb50200170100000000000007b8020018010000000000005fba02001901000000000000b7bc02001a010000000000000fbf02001b0100000000000067c102001c01000000000000bfc302001d0100000000000017c602001e010000000000006fc802001f01000000000000c7ca020020010000000000001fcd0200210100000000000077cf02002201000000000000cfd10200230100000000000027d4020024010000000000007fd602002501000000000000d7d8020026010000000000002fdb0200270100000000000087dd02002801000000000000dfdf0200290100000000000037e202002a010000000000008fe402002b01000000000000e7e602002c010000000000003fe902002d0100000000000097eb02002e01000000000000efed02002f0100000000000047f0020030010000000000009ff202003101000000000000f7f4020032010000000000004ff702003301000000000000a7f902003401000000000000fffb0200350100000000000057fe02003601000000000000af00030037010000000000000703030038010000000000005f0503003901000000000000b70703003a01000000000000810803003b010000000000001c0903003c01000000000000480a03003d01000000000000860c03003e01000000000000de0e03003f010000000000003611030040010000000000008e1303004101000000000000e615030042010000000000003e1803004301000000000000961a03004401000000000000ee1c03004501000000000000461f030046010000000000009e2103004701000000000000f623030048010000000000004e2603004901000000000000a62803004a01000000000000fe2a03004b01000000000000562d03004c01000000000000ae2f03004d01000000000000063203004e010000000000005e3403004f01000000000000b636030050010000000000000e3903005101000000000000663b03005201000000000000be3d030053010000000000001540030054010000000000006d4203005501000000000000c544030056010000000000001b4703005701000000000000734903005801000000000000cb4b03005901000000000000234e03005a010000000000007b5003005b01000000000000d35203005c010000000000002b5503005d01000000000000835703005e01000000000000db5903005f01000000000000335c030060010000000000008b5e03006101000000000000e360030062010000000000003b6303006301000000000000936503006401000000000000eb6703006501000000000000436a030066010000000000009b6c03006701000000000000f36e030068010000000000004b7103006901000000000000a37303006a01000000000000fb7503006b01000000000000537803006c01000000000000ab7a03006d01000000000000037d03006e010000000000005b7f03006f01000000000000b381030070010000000000000b8403007101000000000000638603007201000000000000bb8803007301000000000000118b03007401000000000000698d03007501000000000000c18f03007601000000000000199203007701000000000000719403007801000000000000c99603007901000000000000219903007a01000000000000799b03007b01000000000000d19d03007c0100000000000029a003007d0100000000000081a203007e01000000000000d9a403007f0100000000000031a70300800100000000000089a903008101000000000000e1ab0300820100000000000038ae0300830100000000000090b003008401000000000000e8b20300850100000000000001b503008601000000000000bbb603008701000000000000bdb803008801000000000000e0ba0300890100000000000038bd03008a0100000000000090bf03008b01000000000000e8c103008c0100000000000040c403008d0100000000000098c603008e01000000000000f0c803008f0100000000000048cb03009001000000000000a0cd03009101000000000000f8cf0300920100000000000050d203009301000000000000a8d40300940100000000000000d70300950100000000000058d903009601000000000000b0db0300970100000000000008de030098010000000000000de00300990100000000000011e203009a0100000000000069e403009b01000000000000c1e603009c0100000000000019e903009d0100000000000071eb03009e01000000000000c9ed03009f0100000000000021f00300a00100000000000079f20300a101000000000000d1f40300a20100000000000029f70300a30100000000000081f90300a401000000000000d9fb0300a50100000000000031fe0300a60100000000000089000400a701000000000000e1020400a80100000000000039050400a90100000000000091070400aa01000000000000e9090400ab01000000000000410c0400ac01000000000000990e0400ad01000000000000f1100400ae0100000000000049130400af01000000000000a1150400b001000000000000f9170400b101000000000000511a0400b201000000000000a91c0400b301000000000000011f0400b40100000000000059210400b501000000000000b1230400b60100000000000009260400b70100000000000061280400b801000000000000b92a0400b901000000000000112d0400ba01000000000000692f0400bb01000000000000c1310400bc0100000000000019340400bd0100000000000071360400be01000000000000c9380400bf01000000000000213b0400c001000000000000793d0400c101000000000000d13f0400c20100000000000029420400c30100000000000081440400c401000000000000d9460400c50100000000000031490400c601000000000000894b0400c701000000000000e14d0400c80100000000000039500400c90100000000000091520400ca01000000000000e9540400cb0100000000000041570400cc0100000000000099590400cd01000000000000f15b0400ce01000000000000495e0400cf01000000000000a1600400d001000000000000f7620400d10100000000000032650400d201000000000000ec660400d3010000000000007c680400d401000000000000086a0400d5010000000000008d6b0400d601000000000000a66d0400d701000000000000b26f0400d801000000000000c0710400d901000000000000cd730400da01000000000000e3750400db0100000000000006780400dc010000000000001b7a0400dd01000000000000287c0400de010000000000003f7e0400df0100000000000058800400e0010000000000006c820400e1010000000000007d840400e2010000000000008d860400e301000000000000a0880400e401000000000000be8a0400e501000000000000ce8c0400e601000000000000dc8e0400e701000000000000f4900400e8010000000000000f930400e90100000000000021950400ea010000000000002e970400eb0100000000000047990400ec01000000000000689b0400ed010000000000007e9d0400ee01000000000000989f0400ef01000000000000aea10400f001000000000000c0a30400f101000000000000cba50400f201000000000000e8a70400f301000000000000f1a90400f40100000000000004ac0400f5010000000000001bae0400f6010000000000003eb00400f70100000000000057b20400f80100000000000070b40400f90100000000000082b60400fa0100000000000092b80400fb010000000000009fba0400fc01000000000000babc0400fd01000000000000c8be0400fe01000000000000c7c00400ff0100000000000000c3040000020000000000007ec404000102000000000000d6c6040002020000000000002ec90400030200000000000086cb04000402000000000000decd0400050200000000000036d0040006020000000000008ed204000702000000000000e6d4040008020000000000003ed70400090200000000000096d904000a02000000000000eedb04000b0200000000000046de04000c020000000000009ee004000d02000000000000f6e204000e020000000000004ee504000f02000000000000a6e704001002000000000000fee90400110200000000000056ec04001202000000000000aeee0400130200000000000006f1040014020000000000005ef304001502000000000000b6f5040016020000000000000ef80400170200000000000066fa04001802000000000000b2fc040019020000000000000aff04001a02000000000000620105001b020000000000008e0305001c020000000000008a0505001d02000000000000900705001e020000000000008c0905001f02000000000000e40b050020020000000000003c0e05002102000000000000941005002202000000000000ec12050023020000000000004415050024020000000000009c1705002502000000000000f419050026020000000000004c1c05002702000000000000a41e05002802000000000000fc2005002902000000000000542305002a02000000000000ac2505002b02000000000000042805002c020000000000005c2a05002d02000000000000b42c05002e020000000000000c2f05002f02000000000000643105003002000000000000bc33050031020000000000001436050032020000000000006c3805003302000000000000c43a050034020000000000001c3d05003502000000000000743f05003602000000000000cc41050037020000000000002444050038020000000000007c4605003902000000000000d44805003a020000000000002c4b05003b02000000000000844d05003c02000000000000dc4f05003d02000000000000345205003e020000000000008c5405003f02000000000000e456050040020000000000003c5905004102000000000000945b05004202000000000000ec5d050043020000000000004460050044020000000000009c6205004502000000000000f464050046020000000000004c6705004702000000000000a46905004802000000000000fc6b05004902000000000000546e05004a02000000000000ac7005004b02000000000000047305004c020000000000005c7505004d02000000000000b47705004e020000000000000c7a05004f02000000000000647c05005002000000000000bc7e050051020000000000001481050052020000000000006c8305005302000000000000c485050054020000000000001c8805005502000000000000748a05005602000000000000cc8c05005702000000000000248f050058020000000000007c9105005902000000000000d49305005a020000000000002c9605005b02000000000000849805005c02000000000000dc9a05005d02000000000000349d05005e020000000000008c9f05005f02000000000000e4a1050060020000000000003ca40500610200000000000094a605006202000000000000eca80500630200000000000044ab050064020000000000009cad05006502000000000000f4af050066020000000000004cb205006702000000000000a4b405006802000000000000fcb60500690200000000000054b905006a02000000000000acbb05006b0200000000000004be05006c020000000000005cc005006d02000000000000b4c205006e020000000000000cc505006f0200000000000064c705007002000000000000bcc90500710200000000000014cc050072020000000000006cce05007302000000000000c4d0050074020000000000001cd30500750200000000000074d505007602000000000000ccd70500770200000000000024da050078020000000000007cdc05007902000000000000d4de05007a020000000000002ce105007b0200000000000084e305007c02000000000000dce505007d0200000000000034e805007e020000000000008cea05007f02000000000000e4ec050080020000000000003cef0500810200000000000094f105008202000000000000ecf30500830200000000000044f6050084020000000000009cf805008502000000000000f4fa050086020000000000004cfd05008702000000000000a4ff05008802000000000000fc0106008902000000000000540406008a02000000000000ac0606008b02000000000000040906008c020000000000005c0b06008d02000000000000b40d06008e020000000000000c1006008f02000000000000641206009002000000000000bc14060091020000000000001417060092020000000000006c1906009302000000000000c41b060094020000000000001c1e06009502000000000000742006009602000000000000cc22060097020000000000002425060098020000000000007c2706009902000000000000d32906009a020000000000002b2c06009b02000000000000832e06009c02000000000000db3006009d02000000000000333306009e020000000000008b3506009f02000000000000e3370600a0020000000000003b3a0600a102000000000000933c0600a202000000000000eb3e0600a30200000000000042410600a4020000000000009a430600a502000000000000f2450600a6020000000000004a480600a702000000000000a24a0600a802000000000000fa4c0600a902000000000000524f0600aa02000000000000aa510600ab0200000000000002540600ac020000000000004a560600ad02000000000000a2580600ae02000000000000fa5a0600af02000000000000525d0600b002000000000000aa5f0600b10200000000000002620600b2020000000000005a640600b302000000000000b2660600b4020000000000000a690600b502000000000000626b0600b602000000000000b86d0600b70200000000000005700600b8020000000000004b720600b902000000000000a3740600ba02000000000000fb760600bb0200000000000053790600bc02000000000000ab7b0600bd02000000000000037e0600be0200000000000059800600bf02000000000000b1820600c00200000000000009850600c10200000000000061870600c202000000000000b9890600c302000000000000118c0600c402000000000000698e0600c502000000000000c1900600c60200000000000019930600c70200000000000071950600c802000000000000c9970600c902000000000000219a0600ca02000000000000799c0600cb02000000000000d19e0600cc0200000000000029a10600cd0200000000000081a30600ce02000000000000d9a50600cf0200000000000031a80600d00200000000000089aa0600d102000000000000e1ac0600d20200000000000039af0600d30200000000000091b10600d402000000000000e9b30600d50200000000000041b60600d60200000000000099b80600d702000000000000f1ba0600d80200000000000049bd0600d902000000000000a1bf0600da02000000000000f9c10600db0200000000000051c40600dc02000000000000a9c60600dd0200000000000001c90600de0200000000000059cb0600df02000000000000b1cd0600e00200000000000009d00600e10200000000000061d20600e202000000000000b9d40600e30200000000000011d70600e40200000000000069d90600e502000000000000c1db0600e60200000000000019de0600e70200000000000071e00600e802000000000000c9e20600e90200000000000021e50600ea0200000000000079e70600eb02000000000000d1e90600ec0200000000000029ec0600ed0200000000000081ee0600ee02000000000000d9f00600ef0200000000000030f30600f00200000000000088f50600f102000000000000e0f70600f20200000000000038fa0600f30200000000000090fc0600f402000000000000e8fe0600f50200000000000040010700f60200000000000097030700f702000000000000ef050700f80200000000000045080700f9020000000000009c0a0700fa02000000000000f40c0700fb020000000000004c0f0700fc02000000000000a4110700fd02000000000000fc130700fe0200000000000054160700ff02000000000000ac1807000003000000000000041b070001030000000000005c1d07000203000000000000b41f070003030000000000000c2207000403000000000000642407000503000000000000bc26070006030000000000001429070007030000000000006c2b07000803000000000000c42d070009030000000000001c3007000a03000000000000743207000b03000000000000cc3407000c03000000000000243707000d03000000000000753907000e03000000000000cd3b07000f03000000000000253e070010030000000000007d4007001103000000000000d542070012030000000000002d4507001303000000000000854707001403000000000000dd4907001503000000000000354c070016030000000000008d4e07001703000000000000e550070018030000000000003d5307001903000000000000955507001a03000000000000ed5707001b03000000000000455a07001c030000000000009d5c07001d03000000000000f55e07001e030000000000004d6107001f03000000000000a56307002003000000000000fd6507002103000000000000556807002203000000000000ad6a07002303000000000000056d070024030000000000005d6f07002503000000000000b571070026030000000000000d7407002703000000000000657607002803000000000000bd7807002903000000000000157b07002a030000000000006d7d07002b03000000000000c57f07002c030000000000001d8207002d03000000000000758407002e03000000000000cd8607002f030000000000002589070030030000000000007d8b07003103000000000000d58d070032030000000000002d9007003303000000000000859207003403000000000000dd94070035030000000000003597070036030000000000008d9907003703000000000000e59b070038030000000000003d9e0700390300000000000095a007003a03000000000000eda207003b0300000000000045a507003c030000000000009da707003d03000000000000eaa907003e0300000000000042ac07003f030000000000009aae07004003000000000000f2b0070041030000000000004ab307004203000000000000a2b507004303000000000000fab70700440300000000000052ba07004503000000000000aabc0700460300000000000002bf070047030000000000005ac107004803000000000000b2c3070049030000000000000ac607004a0300000000000062c807004b03000000000000baca07004c0300000000000012cd07004d030000000000006acf07004e03000000000000c2d107004f030000000000001ad40700500300000000000072d607005103000000000000cad80700520300000000000021db0700530300000000000072dd07005403000000000000cadf0700550300000000000022e2070056030000000000007ae407005703000000000000d2e6070058030000000000002ae90700590300000000000082eb07005a03000000000000daed07005b0300000000000032f007005c030000000000008af207005d03000000000000e2f407005e030000000000003af707005f0300000000000092f907006003000000000000eafb0700610300000000000042fe070062030000000000009a0008006303000000000000f202080064030000000000004a0508006503000000000000a20708006603000000000000fa0908006703000000000000520c08006803000000000000aa0e08006903000000000000021108006a030000000000005a1308006b03000000000000b21508006c030000000000000a1808006d03000000000000621a08006e03000000000000ba1c08006f03000000000000121f080070030000000000006a2108007103000000000000c223080072030000000000001a2608007303000000000000722808007403000000000000ca2a08007503000000000000222d080076030000000000007a2f08007703000000000000d231080078030000000000002a3408007903000000000000823608007a03000000000000da3808007b03000000000000323b08007c030000000000008a3d08007d03000000000000e23f08007e030000000000003a4208007f03000000000000924408008003000000000000ea46080081030000000000004249080082030000000000009a4b08008303000000000000f24d080084030000000000004a5008008503000000000000a25208008603000000000000fa5408008703000000000000525708008803000000000000aa5908008903000000000000025c08008a030000000000005a5e08008b03000000000000b26008008c030000000000000a6308008d03000000000000626508008e03000000000000ba6708008f03000000000000126a080090030000000000006a6c08009103000000000000c26e080092030000000000001a7108009303000000000000727308009403000000000000ca75080095030000000000002278080096030000000000007a7a08009703000000000000d27c080098030000000000002a7f08009903000000000000828108009a03000000000000da8308009b03000000000000328608009c030000000000008a8808009d03000000000000e28a08009e030000000000003a8d08009f03000000000000928f0800a003000000000000ea910800a10300000000000042940800a2030000000000009a960800a303000000000000f2980800a4030000000000004a9b0800a503000000000000a29d0800a603000000000000fa9f0800a70300000000000052a20800a803000000000000aaa40800a90300000000000002a70800aa030000000000005aa90800ab03000000000000b2ab0800ac030000000000000aae0800ad0300000000000062b00800ae03000000000000bab20800af0300000000000012b50800b0030000000000006ab70800b103000000000000c2b90800b2030000000000001abc0800b30300000000000072be0800b403000000000000cac00800b50300000000000022c30800b6030000000000007ac50800b703000000000000d2c70800b8030000000000002aca0800b90300000000000082cc0800ba03000000000000dace0800bb0300000000000032d10800bc030000000000008ad30800bd03000000000000e2d50800be030000000000003ad80800bf0300000000000092da0800c003000000000000eadc0800c10300000000000042df0800c2030000000000009ae10800c303000000000000f2e30800c4030000000000004ae60800c503000000000000a2e80800c603000000000000faea0800c70300000000000052ed0800c803000000000000aaef0800c90300000000000002f20800ca030000000000005af40800cb03000000000000b2f60800cc030000000000000af90800cd0300000000000062fb0800ce03000000000000bafd0800cf0300000000000012000900d0030000000000006a020900d103000000000000c2040900d2030000000000001a070900d30300000000000072090900d403000000000000ca0b0900d503000000000000220e0900d6030000000000007a100900d703000000000000d2120900d8030000000000002a150900d90300000000000082170900da03000000000000da190900db03000000000000321c0900dc030000000000008a1e0900dd03000000000000e2200900de030000000000003a230900df0300000000000092250900e003000000000000ea270900e103000000000000422a0900e2030000000000009a2c0900e303000000000000f22e0900e4030000000000004a310900e503000000000000a2330900e603000000000000fa350900e70300000000000052380900e803000000000000aa3a0900e903000000000000023d0900ea030000000000005a3f0900eb03000000000000b2410900ec030000000000000a440900ed0300000000000062460900ee03000000000000ba480900ef03000000000000124b0900f0030000000000006a4d0900f103000000000000c24f0900f2030000000000001a520900f30300000000000072540900f403000000000000ca560900f50300000000000022590900f6030000000000007a5b0900f703000000000000d25d0900f8030000000000002a600900f90300000000000082620900fa03000000000000da640900fb0300000000000032670900fc030000000000008a690900fd03000000000000e26b0900fe030000000000003a6e0900ff03000000000000927009000004000000000000ea72090001040000000000004275090002040000000000009a7709000304000000000000f279090004040000000000004a7c09000504000000000000a27e09000604000000000000fa8009000704000000000000528309000804000000000000aa8509000904000000000000028809000a040000000000005a8a09000b04000000000000b28c09000c040000000000000a8f09000d04000000000000629109000e04000000000000ba9309000f040000000000001296090010040000000000006a9809001104000000000000c29a090012040000000000001a9d09001304000000000000729f09001404000000000000caa10900150400000000000022a4090016040000000000007aa609001704000000000000d2a8090018040000000000002aab0900190400000000000082ad09001a04000000000000daaf09001b0400000000000032b209001c040000000000008ab409001d04000000000000e2b609001e040000000000003ab909001f0400000000000092bb09002004000000000000eabd0900210400000000000042c0090022040000000000009ac209002304000000000000f2c4090024040000000000004ac709002504000000000000a2c909002604000000000000facb0900270400000000000052ce09002804000000000000aad00900290400000000000002d309002a040000000000005ad509002b04000000000000b2d709002c040000000000000ada09002d0400000000000000dc09002e0400000000000000de09002f040000000000000de00900300400000000000065e209003104000000000000bde40900320400000000000015e7090033040000000000006de909003404000000000000c5eb090035040000000000001dee0900360400000000000075f009003704000000000000cdf20900380400000000000025f5090039040000000000007df709003a04000000000000d5f909003b040000000000002dfc09003c040000000000007afe09003d04000000000000d2000a003e040000000000002a030a003f0400000000000082050a004004000000000000da070a004104000000000000320a0a0042040000000000007e0c0a004304000000000000a50e0a004404000000000000e6100a00450400000000000036130a0046040000000000008e150a004704000000000000e6170a0048040000000000003d1a0a004904000000000000921c0a004a04000000000000ea1e0a004b0400000000000042210a004c040000000000009a230a004d04000000000000f2250a004e040000000000004a280a004f04000000000000a22a0a005004000000000000fa2c0a005104000000000000522f0a005204000000000000aa310a00530400000000000002340a0054040000000000005a360a005504000000000000b2380a0056040000000000000a3b0a005704000000000000623d0a005804000000000000ba3f0a00590400000000000012420a005a040000000000006a440a005b04000000000000c2460a005c040000000000001a490a005d04000000000000724b0a005e04000000000000ca4d0a005f0400000000000022500a0060040000000000007a520a006104000000000000d2540a0062040000000000002a570a00630400000000000082590a006404000000000000da5b0a006504000000000000325e0a0066040000000000008a600a006704000000000000e2620a0068040000000000003a650a00690400000000000092670a006a04000000000000ea690a006b04000000000000426c0a006c040000000000009a6e0a006d04000000000000f2700a006e040000000000004a730a006f04000000000000a2750a007004000000000000fa770a007104000000000000527a0a007204000000000000aa7c0a007304000000000000027f0a0074040000000000005a810a007504000000000000b2830a0076040000000000000a860a00770400000000000062880a007804000000000000ba8a0a007904000000000000128d0a007a040000000000006a8f0a007b04000000000000c2910a007c040000000000001a940a007d0400000000000072960a007e04000000000000ca980a007f04000000000000229b0a0080040000000000007a9d0a008104000000000000d29f0a0082040000000000002aa20a00830400000000000082a40a008404000000000000daa60a00850400000000000032a90a0086040000000000008aab0a008704000000000000e2ad0a0088040000000000003ab00a00890400000000000092b20a008a04000000000000eab40a008b0400000000000042b70a008c040000000000009ab90a008d04000000000000f2bb0a008e040000000000004abe0a008f04000000000000a2c00a009004000000000000fac20a00910400000000000052c50a009204000000000000aac70a00930400000000000002ca0a0094040000000000005acc0a009504000000000000b2ce0a0096040000000000000ad10a00970400000000000062d30a009804000000000000bad50a00990400000000000012d80a009a040000000000003bda0a009b040000000000003adc0a009c0400000000000040de0a009d040000000000004de00a009e0400000000000053e20a009f0400000000000065e40a00a0040000000000006ee60a00a1040000000000007ce80a00a204000000000000d4ea0a00a3040000000000002ced0a00a40400000000000084ef0a00a50400000000000094f10a00a604000000000000aaf30a00a704000000000000baf50a00a80400000000000012f80a00a9040000000000006afa0a00aa04000000000000c2fc0a00ab040000000000001aff0a00ac0400000000000072010b00ad04000000000000ca030b00ae0400000000000022060b00af040000000000007a080b00b004000000000000d20a0b00b1040000000000002a0d0b00b204000000000000820f0b00b304000000000000da110b00b40400000000000032140b00b50400000000000089160b00b604000000000000e0180b00b704000000000000371b0b00b8040000000000008f1d0b00b904000000000000e71f0b00ba040000000000003e220b00bb0400000000000096240b00bc04000000000000ee260b00bd0400000000000044290b00be040000000000009b2b0b00bf04000000000000b72d0b00c004000000000000d82f0b00c104000000000000f0310b00c20400000000000047340b00c3040000000000009e360b00c404000000000000f6380b00c5040000000000004d3b0b00c604000000000000a53d0b00c704000000000000fd3f0b00c80400000000000050420b00c904000000000000a5440b00ca04000000000000fa460b00cb0400000000000052490b00cc04000000000000a64b0b00cd04000000000000fa4d0b00ce0400000000000049500b00cf040000000000009e520b00d004000000000000f3540b00d10400000000000046570b00d20400000000000097590b00d304000000000000db5b0b00d404000000000000f75d0b00d504000000000000bc5f0b00d60400000000000010620b00d70400000000000066640b00d804000000000000be660b00d90400000000000011690b00da04000000000000696b0b00db04000000000000bd6d0b00dc0400000000000013700b00dd0400000000000069720b00de04000000000000c0740b00df0400000000000010770b00e0040000000000005e790b00e104000000000000aa7b0b00e204000000000000f77d0b00e3040000000000003c800b00e4040000000000008b820b00e504000000000000d8840b00e60400000000000014870b00e704000000000000fb880b00e804000000000000d78a0b00e904000000000000fa8c0b00ea04000000000000528f0b00eb04000000000000aa910b00ec04000000000000ff930b00ed0400000000000057960b00ee04000000000000af980b00ef04000000000000079b0b00f0040000000000005d9d0b00f104000000000000b49f0b00f2040000000000000ca20b00f30400000000000064a40b00f404000000000000bca60b00f50400000000000013a90b00f60400000000000069ab0b00f704000000000000c0ad0b00f80400000000000018b00b00f9040000000000006eb20b00fa04000000000000c5b40b00fb040000000000001db70b00fc0400000000000075b90b00fd04000000000000cdbb0b00fe0400000000000025be0b00ff040000000000007dc00b000005000000000000d5c20b0001050000000000002cc50b00020500000000000082c70b000305000000000000d2c90b0004050000000000002acc0b00050500000000000081ce0b000605000000000000a7d00b000705000000000000c7d20b000805000000000000e5d40b0009050000000000003dd70b000a0500000000000093d90b000b05000000000000ebdb0b000c0500000000000043de0b000d050000000000009ae00b000e05000000000000f2e20b000f0500000000000046e50b0010050000000000009ce70b001105000000000000e9e90b00120500000000000040ec0b00130500000000000097ee0b001405000000000000eff00b00150500000000000047f30b0016050000000000009ff50b001705000000000000f6f70b0018050000000000004efa0b001905000000000000a1fc0b001a05000000000000f8fe0b001b050000000000004d010c001c05000000000000a4030c001d05000000000000fc050c001e0500000000000052080c001f05000000000000a70a0c002005000000000000f80c0c0021050000000000004c0f0c0022050000000000009c110c002305000000000000ee130c00240500000000000045160c00250500000000000099180c002605000000000000ec1a0c002705000000000000401d0c002805000000000000951f0c002905000000000000e8210c002a050000000000003f240c002b0500000000000094260c002c05000000000000eb280c002d05000000000000402b0c002e05000000000000972d0c002f05000000000000ee2f0c0030050000000000003f320c00310500000000000091340c003205000000000000e6360c00330500000000000039390c003405000000000000903b0c003505000000000000e53d0c00360500000000000038400c0037050000000000008f420c003805000000000000e3440c00390500000000000037470c003a050000000000008d490c003b05000000000000e24b0c003c05000000000000374e0c003d050000000000008b500c003e05000000000000e1520c003f0500000000000034550c00400500000000000088570c004105000000000000dd590c0042050000000000002a5c0c004305000000000000795e0c004405000000000000c8600c004505000000000000f0620c00460500000000000020650c00470500000000000071670c004805000000000000c3690c004905000000000000156c0c004a050000000000005e6e0c004b05000000000000ae700c004c05000000000000f7720c004d0500000000000016750c004e0500000000000038770c004f0500000000000030790c005005000000000000207b0c005105000000000000337d0c0052050000000000003d7f0c0053050000000000007e810c005405000000000000a6830c005505000000000000d1850c005605000000000000d5870c005705000000000000d6890c005805000000000000f08b0c005905000000000000bc8d0c005a05000000000000818f0c005b0500000000000029910c005c05000000000000b9920c005d0500000000000057940c005e05000000000000e3950c005f0500000000000040970c00600500000000000095980c006105000000000000599a0c006205000000000000399c0c006305000000000000189e0c006405000000000000fe9f0c006505000000000000f3a10c006605000000000000d8a30c006705000000000000d2a50c006805000000000000d3a70c006905000000000000b4a90c006a05000000000000a3ab0c006b050000000000008cad0c006c050000000000006daf0c006d050000000000005ab10c006e050000000000003db30c006f050000000000000eb50c007005000000000000e2b60c007105000000000000ceb80c007205000000000000e1ba0c007305000000000000e0bc0c007405000000000000ddbe0c007505000000000000d4c00c007605000000000000dac20c007705000000000000dcc40c007805000000000000d2c60c007905000000000000ccc80c007a05000000000000deca0c007b0500000000000015cd0c007c0500000000000062cf0c007d050000000000008cd10c007e05000000000000add30c007f05000000000000d2d50c0080050000000000002ad80c00810500000000000081da0c008205000000000000d9dc0c00830500000000000031df0c00840500000000000089e10c008505000000000000e1e30c00860500000000000039e60c0087050000000000008ee80c008805000000000000e6ea0c0089050000000000003eed0c008a0500000000000096ef0c008b05000000000000eef10c008c0500000000000045f40c008d050000000000009df60c008e05000000000000eff80c008f0500000000000046fb0c0090050000000000009efd0c009105000000000000f6ff0c0092050000000000004b020d009305000000000000a2040d009405000000000000fa060d00950500000000000052090d009605000000000000aa0b0d009705000000000000020e0d00980500000000000059100d009905000000000000b1120d009a0500000000000009150d009b0500000000000061170d009c05000000000000b9190d009d05000000000000111c0d009e05000000000000691e0d009f05000000000000c1200d00a00500000000000019230d00a10500000000000071250d00a205000000000000c9270d00a305000000000000212a0d00a405000000000000792c0d00a505000000000000d12e0d00a60500000000000029310d00a70500000000000081330d00a805000000000000d9350d00a9050000000000002c380d00aa050000000000004f3a0d00ab050000000000007a3c0d00ac05000000000000a13e0d00ad05000000000000b8400d00ae05000000000000d4420d00af0500000000000018450d00b00500000000000070470d00b105000000000000c8490d00b2050000000000001e4c0d00b305000000000000764e0d00b405000000000000ce500d00b50500000000000025530d00b6050000000000007a550d00b705000000000000d2570d00b805000000000000225a0d00b9050000000000004e5c0d00ba05000000000000675e0d00bb0500000000000089600d00bc05000000000000e1620d00bd0500000000000038650d00be0500000000000090670d00bf05000000000000e8690d00c005000000000000406c0d00c105000000000000986e0d00c205000000000000f0700d00c30500000000000048730d00c405000000000000a0750d00c505000000000000f8770d00c605000000000000507a0d00c705000000000000a87c0d00c805000000000000007f0d00c90500000000000058810d00ca05000000000000b0830d00cb0500000000000001860d00cc0500000000000023880d00cd05000000000000398a0d00ce05000000000000578c0d00cf05000000000000778e0d00d00500000000000099900d00d105000000000000b3920d00d205000000000000cf940d00d305000000000000fb960d00d4050000000000001d990d00d505000000000000309b0d00d605000000000000529d0d00d705000000000000689f0d00d8050000000000008ca10d00d905000000000000b9a30d00da05000000000000dfa50d00db05000000000000f5a70d00dc0500000000000010aa0d00dd050000000000002fac0d00de0500000000000045ae0d00df0500000000000062b00d00e0050000000000007eb20d00e1050000000000009db40d00e205000000000000beb60d00e305000000000000e1b80d00e4050000000000000dbb0d00e50500000000000044bd0d00e60500000000000071bf0d00e7050000000000008fc10d00e805000000000000bcc30d00e905000000000000dbc50d00ea0500000000000005c80d00eb0500000000000025ca0d00ec050000000000004ecc0d00ed050000000000008fce0d00ee05000000000000e3d00d00ef050000000000003ad30d00f0050000000000008fd50d00f105000000000000e4d70d00f2050000000000003cda0d00f30500000000000094dc0d00f405000000000000ecde0d00f50500000000000042e10d00f6050000000000009ae30d00f705000000000000f2e50d00f8050000000000004ae80d00f905000000000000a2ea0d00fa05000000000000faec0d00fb0500000000000051ef0d00fc05000000000000a8f10d00fd0500000000000000f40d00fe0500000000000057f60d00ff05000000000000aff80d00000600000000000007fb0d0001060000000000005efd0d000206000000000000b3ff0d0003060000000000000a020e00040600000000000062040e000506000000000000b9060e00060600000000000011090e0007060000000000005d0b0e000806000000000000930d0e000906000000000000c80f0e000a06000000000000f5110e000b060000000000004d140e000c06000000000000a5160e000d06000000000000fd180e000e06000000000000551b0e000f06000000000000ad1d0e00100600000000000005200e0011060000000000005d220e001206000000000000b5240e0013060000000000000d270e00140600000000000065290e001506000000000000bd2b0e001606000000000000142e0e0017060000000000006b300e001806000000000000c3320e0019060000000000001a350e001a0600000000000072370e001b06000000000000ca390e001c06000000000000ec3b0e001d06000000000000063e0e001e0600000000000015400e001f060000000000006d420e002006000000000000c3440e0021060000000000001a470e00220600000000000070490e002306000000000000c84b0e002406000000000000204e0e00250600000000000078500e002606000000000000d0520e00270600000000000028550e00280600000000000080570e002906000000000000d8590e002a060000000000002f5c0e002b06000000000000875e0e002c06000000000000df600e002d0600000000000036630e002e060000000000008e650e002f06000000000000e6670e0030060000000000000f6a0e003106000000000000346c0e0032060000000000006b6e0e003306000000000000c3700e0034060000000000001b730e00350600000000000072750e003606000000000000ca770e003706000000000000227a0e003806000000000000797c0e003906000000000000d07e0e003a0600000000000028810e003b060000000000007f830e003c06000000000000d7850e003d060000000000002f880e003e06000000000000878a0e003f06000000000000df8c0e004006000000000000378f0e0041060000000000008d910e004206000000000000e5930e0043060000000000003d960e00440600000000000095980e004506000000000000ed9a0e004606000000000000459d0e0047060000000000009d9f0e004806000000000000f5a10e0049060000000000004ca40e004a06000000000000a3a60e004b06000000000000fba80e004c0600000000000052ab0e004d06000000000000aaad0e004e0600000000000002b00e004f060000000000005ab20e005006000000000000aeb40e00510600000000000005b70e0052060000000000005db90e005306000000000000b4bb0e00540600000000000008be0e0055060000000000005dc00e005606000000000000b4c20e00570600000000000009c50e0058060000000000005ec70e005906000000000000b6c90e005a060000000000000ecc0e005b0600000000000066ce0e005c06000000000000bed00e005d0600000000000014d30e005e060000000000006cd50e005f06000000000000c3d70e0060060000000000001bda0e00610600000000000073dc0e006206000000000000cbde0e00630600000000000023e10e0064060000000000007be30e006506000000000000d3e50e0066060000000000002be80e00670600000000000083ea0e006806000000000000dbec0e00690600000000000032ef0e006a060000000000008af10e006b06000000000000e2f30e006c060000000000003af60e006d0600000000000091f80e006e06000000000000e9fa0e006f0600000000000041fd0e00700600000000000099ff0e007106000000000000f1010f00720600000000000049040f007306000000000000a0060f007406000000000000f8080f0075060000000000004d0b0f007606000000000000a50d0f007706000000000000fd0f0f00780600000000000055120f007906000000000000ab140f007a0600000000000003170f007b060000000000005b190f007c06000000000000b31b0f007d060000000000000a1e0f007e060000000000005e200f007f06000000000000b6220f0080060000000000000e250f00810600000000000066270f008206000000000000bc290f008306000000000000142c0f008406000000000000662e0f008506000000000000be300f00860600000000000016330f0087060000000000006e350f008806000000000000c5370f0089060000000000001b3a0f008a06000000000000433c0f008b06000000000000943e0f008c06000000000000eb400f008d0600000000000043430f008e060000000000009b450f008f06000000000000f3470f009006000000000000484a0f0091060000000000009f4c0f009206000000000000f74e0f0093060000000000004e510f009406000000000000a3530f009506000000000000f7550f0096060000000000004f580f009706000000000000a75a0f009806000000000000ff5c0f009906000000000000575f0f009a06000000000000af610f009b0600000000000006640f009c060000000000005d660f009d06000000000000b5680f009e060000000000000d6b0f009f06000000000000656d0f00a006000000000000bd6f0f00a10600000000000014720f00a2060000000000006c740f00a306000000000000c3760f00a4060000000000001b790f00a506000000000000737b0f00a606000000000000cb7d0f00a70600000000000023800f00a80600000000000079820f00a906000000000000d0840f00aa0600000000000026870f00ab060000000000007e890f00ac06000000000000d68b0f00ad060000000000002e8e0f00ae0600000000000084900f00af06000000000000dc920f00b00600000000000034950f00b1060000000000008c970f00b206000000000000e4990f00b3060000000000003c9c0f00b406000000000000939e0f00b506000000000000eba00f00b60600000000000043a30f00b7060000000000009ba50f00b806000000000000f3a70f00b9060000000000004baa0f00ba06000000000000a2ac0f00bb06000000000000f9ae0f00bc0600000000000051b10f00bd06000000000000a9b30f00be0600000000000001b60f00bf0600000000000057b80f00c006000000000000afba0f00c10600000000000007bd0f00c2060000000000005fbf0f00c3060000000000009ac10f00c406000000000000b2c30f00c506000000000000d1c50f00c606000000000000fcc70f00c70600000000000054ca0f00c806000000000000accc0f00c90600000000000004cf0f00ca060000000000005cd10f00cb06000000000000b4d30f00cc060000000000000cd60f00cd0600000000000064d80f00ce06000000000000bcda0f00cf0600000000000014dd0f00d0060000000000006cdf0f00d106000000000000c4e10f00d2060000000000001ce40f00d30600000000000074e60f00d406000000000000cce80f00d50600000000000023eb0f00d6060000000000007bed0f00d706000000000000d3ef0f00d8060000000000002bf20f00d90600000000000083f40f00da06000000000000dbf60f00db0600000000000033f90f00dc060000000000008bfb0f00dd06000000000000e3fd0f00de060000000000003b001000df0600000000000093021000e006000000000000eb041000e10600000000000043071000e2060000000000009b091000e306000000000000f30b1000e4060000000000004b0e1000e506000000000000a3101000e606000000000000fb121000e70600000000000053151000e806000000000000ab171000e906000000000000031a1000ea060000000000002f1c1000eb06000000000000491e1000ec060000000000006d201000ed06000000000000c5221000ee060000000000001d251000ef0600000000000075271000f006000000000000cd291000f106000000000000252c1000f2060000000000007d2e1000f306000000000000d4301000f4060000000000002c331000f50600000000000083351000f606000000000000db371000f706000000000000333a1000f8060000000000008b3c1000f906000000000000e23e1000fa060000000000003a411000fb0600000000000090431000fc06000000000000e7451000fd060000000000003e481000fe06000000000000954a1000ff06000000000000ec4c10000007000000000000444f100001070000000000009c5110000207000000000000f453100003070000000000004c5610000407000000000000a35810000507000000000000fb5a10000607000000000000535d10000707000000000000ab5f100008070000000000000362100009070000000000005b6410000a07000000000000b16610000b07000000000000096910000c07000000000000606b10000d07000000000000b86d10000e07000000000000107010000f07000000000000687210001007000000000000c07410001107000000000000187710001207000000000000707910001307000000000000c87b10001407000000000000207e10001507000000000000788010001607000000000000d08210001707000000000000288510001807000000000000808710001907000000000000d78910001a070000000000002f8c10001b07000000000000878e10001c07000000000000de9010001d07000000000000359310001e070000000000008d9510001f07000000000000e597100020070000000000003d9a10002107000000000000959c10002207000000000000eb9e100023070000000000000ba11000240700000000000048a31000250700000000000070a510002607000000000000a3a710002707000000000000cba910002807000000000000f1ab1000290700000000000013ae10002a0700000000000039b010002b0700000000000076b210002c07000000000000ceb410002d0700000000000026b710002e070000000000007eb910002f07000000000000d6bb100030070000000000002ebe1000310700000000000086c010003207000000000000dec21000330700000000000036c5100034070000000000008ec710003507000000000000e6c9100036070000000000003ecc1000370700000000000096ce10003807000000000000ebd01000390700000000000042d310003a0700000000000099d510003b07000000000000f1d710003c0700000000000048da10003d070000000000009fdc10003e07000000000000f6de10003f070000000000004ee110004007000000000000a6e310004107000000000000fee51000420700000000000055e810004307000000000000abea1000440700000000000001ed1000450700000000000059ef10004607000000000000b1f11000470700000000000009f41000480700000000000061f610004907000000000000b9f810004a0700000000000010fb10004b0700000000000068fd10004c07000000000000c0ff10004d07000000000000180211004e07000000000000700411004f07000000000000c706110050070000000000001f0911005107000000000000740b11005207000000000000cc0d110053070000000000002410110054070000000000007c1211005507000000000000d21411005607000000000000271711005707000000000000631911005807000000000000951b11005907000000000000c31d11005a07000000000000f31f11005b070000000000004b2211005c07000000000000a32411005d07000000000000fb2611005e07000000000000252911005f070000000000004c2b110060070000000000006d2d11006107000000000000882f11006207000000000000e03111006307000000000000383411006407000000000000903611006507000000000000e83811006607000000000000403b11006707000000000000983d11006807000000000000f03f11006907000000000000484211006a07000000000000a04411006b07000000000000f84611006c07000000000000504911006d07000000000000a84b11006e07000000000000004e11006f07000000000000585011007007000000000000b052110071070000000000000855110072070000000000004857110073070000000000007459110074070000000000009e5b11007507000000000000ca5d11007607000000000000f55f110077070000000000002362110078070000000000004f6411007907000000000000766611007a070000000000009a6811007b07000000000000c26a11007c07000000000000f66c11007d07000000000000246f11007e070000000000003c7111007f07000000000000577311008007000000000000827511008107000000000000ca7711008207000000000000157a110083070000000000004c7c11008407000000000000947e11008507000000000000dc80110086070000000000001d83110087070000000000005e8511008807000000000000858711008907000000000000b68911008a07000000000000e68b11008b070000000000000b8e11008c07000000000000359011008d07000000000000579211008e07000000000000839411008f07000000000000b09611009007000000000000d99811009107000000000000fd9a110092070000000000001f9d11009307000000000000429f110094070000000000005fa11100950700000000000083a311009607000000000000a2a511009707000000000000cba711009807000000000000f7a9110099070000000000002cac11009a070000000000005fae11009b0700000000000081b011009c07000000000000a1b211009d07000000000000cbb411009e07000000000000ebb611009f070000000000000eb91100a00700000000000022bb1100a10700000000000047bd1100a20700000000000062bf1100a30700000000000085c11100a407000000000000acc31100a507000000000000c2c51100a607000000000000e7c71100a70700000000000009ca1100a80700000000000036cc1100a9070000000000005bce1100aa070000000000007cd01100ab07000000000000a5d21100ac07000000000000d3d41100ad07000000000000fbd61100ae0700000000000024d91100af070000000000004adb1100b00700000000000073dd1100b1070000000000009edf1100b207000000000000c6e11100b307000000000000fae31100b4070000000000001ee61100b5070000000000004de81100b60700000000000075ea1100b7070000000000009eec1100b807000000000000b0ee1100b907000000000000a0f01100ba070000000000008bf21100bb0700000000000088f41100bc070000000000009cf61100bd07000000000000c2f81100be07000000000000e0fa1100bf0700000000000003fd1100c00700000000000024ff1100c10700000000000044011200c20700000000000062031200c30700000000000080051200c407000000000000a0071200c507000000000000ca091200c607000000000000ee0b1200c707000000000000180e1200c8070000000000003d101200c90700000000000066121200ca070000000000008e141200cb07000000000000b0161200cc07000000000000d3181200cd07000000000000f41a1200ce07000000000000131d1200cf07000000000000311f1200d00700000000000054211200d1070000000000006d231200d20700000000000095251200d307000000000000b8271200d407000000000000e8291200d507000000000000092c1200d6070000000000002f2e1200d7070000000000005d301200d80700000000000082321200d907000000000000a4341200da07000000000000c8361200db07000000000000f2381200dc07000000000000063b1200dd07000000000000333d1200de070000000000004b3f1200df070000000000006a411200e00700000000000097431200e107000000000000bf451200e207000000000000e3471200e307000000000000014a1200e407000000000000234c1200e507000000000000434e1200e6070000000000006a501200e7070000000000009c521200e807000000000000bb541200e907000000000000da561200ea07000000000000fc581200eb070000000000001f5b1200ec07000000000000425d1200ed07000000000000675f1200ee070000000000005d611200ef0700000000000045631200f00700000000000023651200f1070000000000000a671200f207000000000000f1681200f307000000000000db6a1200f407000000000000cb6c1200f507000000000000c66e1200f607000000000000b5701200f707000000000000ac721200f8070000000000008d741200f9070000000000006e761200fa0700000000000067781200fb070000000000005d7a1200fc07000000000000387c1200fd07000000000000217e1200fe0700000000000013801200ff07000000000000f58112000008000000000000d38312000108000000000000c08512000208000000000000b08712000308000000000000a789120004080000000000009d8b120005080000000000008e8d120006080000000000004c8f12000708000000000000ff9012000808000000000000c392120009080000000000007f9412000a080000000000006c9612000b08000000000000579812000c080000000000004c9a12000d080000000000004d9c12000e08000000000000279e12000f08000000000000e49f120010080000000000009ca11200110800000000000042a312001208000000000000f5a412001308000000000000c4a612001408000000000000afa8120015080000000000009aaa1200160800000000000087ac1200170800000000000060ae1200180800000000000046b0120019080000000000001fb212001a0800000000000000b412001b08000000000000deb512001c08000000000000cdb712001d08000000000000b5b912001e0800000000000093bb12001f0800000000000071bd1200200800000000000048bf1200210800000000000031c11200220800000000000008c312002308000000000000ecc412002408000000000000b8c612002508000000000000a1c81200260800000000000081ca1200270800000000000062cc120028080000000000003fce120029080000000000001dd012002a08000000000000ffd112002b08000000000000eed312002c08000000000000e4d512002d08000000000000cad712002e08000000000000bed912002f08000000000000aedb1200300800000000000088dd120031080000000000008ddf1200320800000000000081e1120033080000000000006ee31200340800000000000054e51200350800000000000035e7120036080000000000002ee91200370800000000000022eb120038080000000000000eed12003908000000000000faee12003a08000000000000dff012003b08000000000000cdf212003c08000000000000b1f412003d08000000000000a0f612003e0800000000000089f812003f080000000000007bfa1200400800000000000077fc1200410800000000000064fe120042080000000000004700130043080000000000003702130044080000000000001b0413004508000000000000fa0513004608000000000000e50713004708000000000000c30913004808000000000000aa0b130049080000000000009a0d13004a08000000000000840f13004b08000000000000631113004c08000000000000441313004d08000000000000391513004e08000000000000e31613004f08000000000000a418130050080000000000006d1a13005108000000000000601c13005208000000000000501e130053080000000000003920130054080000000000001e2213005508000000000000042413005608000000000000d52513005708000000000000c62713005808000000000000ce2913005908000000000000bf2b13005a08000000000000a22d13005b08000000000000a52f13005c08000000000000a23113005d08000000000000943313005e080000000000008d3513005f08000000000000973713006008000000000000973913006108000000000000883b13006208000000000000883d130063080000000000007c3f130064080000000000007641130065080000000000005d43130066080000000000003e4513006708000000000000f94613006808000000000000b248130069080000000000006c4a13006a08000000000000344c13006b08000000000000fe4d13006c08000000000000ce4f13006d08000000000000865113006e08000000000000485313006f08000000000000135513007008000000000000da5613007108000000000000ab5813007208000000000000735a13007308000000000000425c130074080000000000000a5e13007508000000000000e55f13007608000000000000c06113007708000000000000836313007808000000000000596513007908000000000000326713007a08000000000000fc6813007b08000000000000a76a13007c080000000000003e6c13007d08000000000000026e13007e08000000000000b06f13007f080000000000008b71130080080000000000006273130081080000000000001e7513008208000000000000e57613008308000000000000ac78130084080000000000006a7a13008508000000000000347c13008608000000000000177e13008708000000000000fb7f13008808000000000000df8113008908000000000000d28313008a08000000000000a28513008b08000000000000798713008c080000000000003e8913008d08000000000000098b13008e08000000000000e98c13008f08000000000000d48e13009008000000000000a690130091080000000000008992130092080000000000006f94130093080000000000005896130094080000000000003798130095080000000000001e9a13009608000000000000cc9b13009708000000000000a19d13009808000000000000909f1300990800000000000076a113009a0800000000000060a313009b0800000000000038a513009c0800000000000000a713009d08000000000000d7a813009e08000000000000bcaa13009f080000000000009cac1300a00800000000000064ae1300a1080000000000004ab01300a2080000000000002db21300a308000000000000e2b31300a40800000000000096b51300a5080000000000004eb71300a6080000000000000db91300a708000000000000d3ba1300a808000000000000f7bc1300a90800000000000049bf1300aa080000000000009bc11300ab08000000000000f0c31300ac0800000000000042c61300ad0800000000000093c81300ae08000000000000c4ca1300af0800000000000013cd1300b00800000000000067cf1300b108000000000000bad11300b2080000000000000fd41300b30800000000000061d61300b408000000000000aed81300b50800000000000002db1300b60800000000000056dd1300b708000000000000a6df1300b808000000000000f4e11300b90800000000000043e41300ba080000000000008de61300bb08000000000000d5e81300bc0800000000000020eb1300bd080000000000006aed1300be08000000000000afef1300bf08000000000000ecf11300c00800000000000033f41300c1080000000000006ef61300c208000000000000a8f81300c308000000000000defa1300c4080000000000000bfd1300c5080000000000002bff1300c60800000000000029011400c7080000000000002e031400c80800000000000055051400c90800000000000087071400ca08000000000000b1091400cb08000000000000cf0b1400cc08000000000000f30d1400cd0800000000000019101400ce080000000000003c121400cf0800000000000051141400d00800000000000068161400d10800000000000082181400d2080000000000008d1a1400d308000000000000931c1400d408000000000000a41e1400d508000000000000ae201400d6080000000000009f221400d7080000000000008b241400d80800000000000073261400d90800000000000052281400da080000000000004f2a1400db080000000000005b2c1400dc080000000000005d2e1400dd0800000000000052301400de0800000000000053321400df080000000000004a341400e00800000000000057361400e10800000000000046381400e2080000000000004e3a1400e3080000000000005a3c1400e408000000000000593e1400e5080000000000005c401400e60800000000000082421400e708000000000000aa441400e808000000000000cf461400e90800000000000003491400ea08000000000000284b1400eb08000000000000524d1400ec08000000000000604f1400ed0800000000000084511400ee08000000000000a3531400ef08000000000000af551400f008000000000000b1571400f108000000000000a1591400f208000000000000935b1400f308000000000000975d1400f4080000000000009b5f1400f50800000000000094611400f6080000000000008f631400f7080000000000007e651400f80800000000000083671400f90800000000000093691400fa080000000000007c6b1400fb08000000000000556d1400fc08000000000000306f1400fd080000000000002f711400fe080000000000005c731400ff08000000000000827514000009000000000000a37714000109000000000000d47914000209000000000000087c14000309000000000000347e140004090000000000005580140005090000000000005682140006090000000000005584140007090000000000004f8614000809000000000000878814000909000000000000b28a14000a09000000000000e18c14000b09000000000000008f14000c09000000000000259114000d09000000000000419314000e090000000000004d9514000f090000000000007a9714001009000000000000a39914001109000000000000cd9b14001209000000000000f69d1400130900000000000027a01400140900000000000053a2140015090000000000008aa414001609000000000000b6a614001709000000000000e1a8140018090000000000000aab140019090000000000003aad14001a090000000000005eaf14001b0900000000000089b114001c09000000000000bab314001d09000000000000edb514001e090000000000000eb814001f0900000000000013ba140020090000000000000fbc140021090000000000000dbe14002209000000000000ecbf14002309000000000000efc114002409000000000000fdc314002509000000000000ebc514002609000000000000e8c714002709000000000000e9c914002809000000000000edcb14002909000000000000e5cd14002a09000000000000ebcf14002b09000000000000efd114002c09000000000000e2d314002d09000000000000e9d514002e09000000000000ced714002f09000000000000b5d91400300900000000000095db1400310900000000000052dd1400320900000000000026df1400330900000000000010e114003409000000000000eae214003509000000000000d8e414003609000000000000aee61400370900000000000089e81400380900000000000073ea140039090000000000006bec14003a0900000000000056ee14003b090000000000003ef014003c0900000000000013f214003d09000000000000c3f314003e090000000000009af514003f0900000000000080f7140040090000000000006ef91400410900000000000044fb1400420900000000000021fd1400430900000000000000ff14004409000000000000dc0015004509000000000000b802150046090000000000009504150047090000000000007b06150048090000000000006b0815004909000000000000700a15004a09000000000000710c15004b09000000000000750e15004c09000000000000731015004d09000000000000711215004e09000000000000761415004f090000000000006016150050090000000000005e1815005109000000000000631a150052090000000000006e1c15005309000000000000691e15005409000000000000692015005509000000000000672215005609000000000000622415005709000000000000602615005809000000000000322815005909000000000000232a15005a09000000000000202c15005b090000000000001b2e15005c09000000000000083015005d09000000000000f43115005e09000000000000e73315005f09000000000000dd3515006009000000000000e93715006109000000000000083a15006209000000000000333c150063090000000000006d3e15006409000000000000a64015006509000000000000e442150066090000000000002345150067090000000000005d47150068090000000000008b4915006909000000000000b04b15006a09000000000000e44d15006b090000000000000e5015006c09000000000000245215006d09000000000000465415006e09000000000000725615006f09000000000000a75815007009000000000000d25a15007109000000000000fb5c15007209000000000000305f15007309000000000000626115007409000000000000916315007509000000000000c86515007609000000000000ef6715007709000000000000136a150078090000000000003d6c150079090000000000006e6e15007a09000000000000977015007b09000000000000bd7215007c09000000000000e37415007d09000000000000157715007e09000000000000337915007f09000000000000537b15008009000000000000747d15008109000000000000a47f15008209000000000000ce8115008309000000000000e78315008409000000000000fb8515008509000000000000168815008609000000000000538a15008709000000000000a48c15008809000000000000f88e15008909000000000000489115008a09000000000000959315008b09000000000000e39515008c09000000000000349815008d09000000000000809a15008e09000000000000af9c15008f09000000000000c59e15009009000000000000c59e15009109000000000000f3c41600920900000000000003d31600930900000000000013e11600940900000000000023ef1600950900000000000033fd16009609000000000000430b17009709000000000000531917009809000000000000622717009909000000000000723517009a09000000000000824317009b09000000000000925117009c09000000000000a15f17009d09000000000000b16d17009e09000000000000c17b17009f09000000000000d1891700a009000000000000e1971700a109000000000000f1a51700a20900000000000001b41700a30900000000000011c21700a40900000000000021d01700a50900000000000030de1700a6090000000000003bec1700a70900000000000042fa1700a80900000000000049081800a90900000000000050161800aa0900000000000054241800ab090000000000005f321800ac0900000000000063401800ad090000000000006a4e1800ae09000000000000595c1800af09000000000000546a1800b0090000000000004a781800b10900000000000046861800b2090000000000003d941800b30900000000000038a21800b40900000000000028b01800b50900000000000022be1800b6090000000000001ccc1800b7090000000000000cda1800b80900000000000007e81800b9090000000000000af61800ba0900000000000000041900bb09000000000000ec111900bc09000000000000e51f1900bd09000000000000e02d1900be09000000000000d93b1900bf09000000000000db491900c009000000000000d6571900c109000000000000db651900c209000000000000e1731900c309000000000000eb811900c409000000000000f28f1900c509000000000000e69c1900c609000000000000cba91900c709000000000000d2b71900c809000000000000dac51900c909000000000000dfd31900ca09000000000000e6e11900cb09000000000000eeef1900cc09000000000000f7fd1900cd09000000000000030c1a00ce09000000000000091a1a00cf090000000000000f281a00d00900000000000016361a00d10900000000000019441a00d20900000000000021521a00d3090000000000002b601a00d409000000000000286e1a00d509000000000000307c1a00d609000000000000358a1a00d7090000000000003c981a00d8090000000000003fa61a00d90900000000000043b41a00da0900000000000048c21a00db0900000000000056d01a00dc0900000000000062de1a00dd090000000000006bec1a00de0900000000000072fa1a00df090000000000005d081b00e0090000000000003c161b00e10900000000000069231b00e2090000000000006a311b00e3090000000000006e3f1b00e409000000000000674d1b00e5090000000000006b5b1b00e60900000000000065681b00e7090000000000003a751b00e8090000000000001f821b00e909000000000000068f1b00ea09000000000000f39b1b00eb09000000000000c7a81b00ec09000000000000a5b51b00ed0900000000000090c21b00ee0900000000000068cf1b00ef0900000000000078dc1b00f00900000000000074ea1b00f10900000000000073f81b00f20900000000000071061c00f30900000000000071141c00f40900000000000071221c00f5090000000000006f301c00f6090000000000006c3e1c00f709000000000000684c1c00f809000000000000665a1c00f9090000000000006d681c00fa090000000000006f761c00fb0900000000000073841c00fc0900000000000071921c00fd090000000000006fa01c00fe0900000000000061ae1c00ff0900000000000063bc1c00000a00000000000064ca1c00010a00000000000068d81c00020a0000000000006ce61c00030a0000000000006af41c00040a0000000000006d021d00050a00000000000071101d00060a0000000000006c1e1d00070a0000000000006e2c1d00080a000000000000773a1d00090a00000000000077481d000a0a00000000000072561d000b0a0000000000006d641d000c0a00000000000069721d000d0a00000000000069801d000e0a0000000000006b8e1d000f0a000000000000709c1d00100a00000000000070aa1d00110a0000000000006eb81d00120a0000000000006ec61d00130a00000000000075d41d00140a0000000000007ce21d00150a00000000000080f01d00160a00000000000081fe1d00170a0000000000008a0c1e00180a000000000000891a1e00190a0000000000008b281e001a0a0000000000008e361e001b0a00000000000097441e001c0a0000000000009b521e001d0a0000000000009e601e001e0a000000000000a36e1e001f0a000000000000ad7c1e00200a000000000000aa8a1e00210a000000000000ae981e00220a000000000000b1a61e00230a000000000000b8b41e00240a000000000000b5c21e00250a000000000000b3d01e00260a000000000000b3de1e00270a000000000000baec1e00280a000000000000b9fa1e00290a000000000000bf081f002a0a000000000000c1161f002b0a000000000000c6241f002c0a000000000000c8321f002d0a000000000000cd401f002e0a000000000000cf4e1f002f0a000000000000cf5c1f00300a000000000000d46a1f00310a000000000000d6781f00320a000000000000df861f00330a000000000000e1941f00340a000000000000e2a21f00350a000000000000e1b01f00360a000000000000eabe1f00370a000000000000f0cc1f00380a000000000000f4da1f00390a000000000000f1e81f003a0a000000000000f8f61f003b0a000000000000f70420003c0a000000000000f91220003d0a000000000000c52020003e0a000000000000662420003f0a0000000000006a262000400a00000000000059302000410a000000000000573d2000420a000000000000ed482000430a000000000000f7552000440a000000000000df632000450a000000000000be712000460a000000000000627f2000470a000000000000ce8c2000480a000000000000a69a2000490a00000000000077a820004a0a000000000000e4b520004b0a000000000000a4c320004c0a00000000000079d120004d0a00000000000003df20004e0a000000000000f9ec20004f0a00000000000027fa2000500a0000000000008b062100510a00000000000037142100520a0000000000001f222100530a00000000000016302100540a000000000000113e2100550a000000000000874b2100560a0000000000007b592100570a00000000000077672100580a00000000000071752100590a0000000000006f8321005a0a000000000000639121005b0a000000000000569f21005c0a00000000000016ad21005d0a000000000000adba21005e0a000000000000b9c721005f0a000000000000dfd42100600a00000000000089e12100610a00000000000084e72100620a000000000000c8ed2100630a0000000000001afa2100640a0000000000008f062200650a000000000000db122200660a000000000000991e2200670a000000000000772a2200680a00000000000035302200690a000000000000143622006a0a000000000000564322006b0a000000000000d24f22006c0a000000000000275822006d0a000000000000145c22006e0a000000000000366922006f0a00000000000078762200700a00000000000032842200710a0000000000003c922200720a00000000000042a02200730a00000000000040ae2200740a000000000000f4bb2200750a000000000000d0c92200760a00000000000079d72200770a000000000000d6e42200780a00000000000031f22200790a00000000000071ff22007a0a0000000000009f0c23007b0a000000000000ce1923007c0a000000000000ce1923007d0a000000000000a56a23007e0a0000000000001f7723007f0a00000000000041832300800a000000000000d78e2300810a0000000000005f9a2300820a00000000000065a52300830a0000000000005db02300840a0000000000002cbb2300850a000000000000e0c62300860a00000000000074d32300870a000000000000fedf2300880a000000000000aeec2300890a00000000000014fa23008a0a000000000000700724008b0a000000000000c11424008c0a0000000000000f2224008d0a0000000000005a2f24008e0a000000000000a23c24008f0a000000000000ea492400900a0000000000001e572400910a00000000000062642400920a000000000000a5712400930a000000000000ef7e2400940a0000000000007c8b2400950a00000000000071982400960a000000000000bda52400970a000000000000cfb02400980a00000000000027b32400990a00000000000032c124009a0a0000000000003ccf24009b0a00000000000046dd24009c0a0000000000004feb24009d0a00000000000047f924009e0a000000000000460725009f0a00000000000046152500a00a00000000000030232500a10a00000000000032312500a20a00000000000032312500a30a000000000000683e2500a40a000000000000694c2500a50a0000000000006c5a2500a60a00000000000064682500a70a00000000000063762500a80a00000000000062842500a90a00000000000064922500aa0a0000000000006aa02500ab0a0000000000006cae2500ac0a0000000000006fbc2500ad0a00000000000073ca2500ae0a00000000000070d82500af0a00000000000073e62500b00a0000000000007af42500b10a0000000000007b022600b20a0000000000007b102600b30a000000000000851e2600b40a000000000000832c2600b50a000000000000863a2600b60a00000000000082482600b70a00000000000089562600b80a00000000000088642600b90a00000000000090722600ba0a0000000000008e802600bb0a0000000000008c8e2600bc0a0000000000008b9c2600bd0a00000000000087aa2600be0a00000000000081b82600bf0a0000000000007fc62600c00a00000000000076d42600c10a00000000000073e22600c20a0000000000004aef2600c30a00000000000098fc2600c40a000000000000e1092700c50a00000000000021172700c60a0000000000005b242700c70a00000000000086312700c80a000000000000cc3e2700c90a0000000000001c4c2700ca0a00000000000068592700cb0a000000000000ad662700cc0a000000000000f5732700cd0a00000000000044812700ce0a000000000000888e2700cf0a000000000000c59b2700d00a0000000000001fa92700d10a00000000000052b62700d20a000000000000a1c32700d30a000000000000d8d02700d40a0000000000002cde2700d50a0000000000007aeb2700d60a000000000000c9f82700d70a000000000000c0062800d80a000000000000b6142800d90a000000000000b9222800da0a000000000000b8302800db0a000000000000b63e2800dc0a000000000000b24c2800dd0a000000000000b35a2800de0a000000000000ac682800df0a000000000000a6762800e00a000000000000a5842800e10a000000000000a5922800e20a000000000000a1a02800e30a0000000000009cae2800e40a0000000000009bbc2800e50a0000000000008cca2800e60a0000000000008ed82800e70a0000000000008be62800e80a00000000000089f42800e90a00000000000081022900ea0a0000000000007f102900eb0a000000000000801e2900ec0a000000000000792c2900ed0a000000000000813a2900ee0a00000000000075482900ef0a00000000000077562900f00a00000000000077642900f10a0000000000007a722900f20a00000000000078802900f30a0000000000007c8e2900f40a0000000000007c9c2900f50a00000000000078aa2900f60a00000000000079b82900f70a00000000000079c62900f80a00000000000079d42900f90a00000000000073e22900fa0a00000000000075f02900fb0a0000000000006ffe2900fc0a000000000000780c2a00fd0a000000000000761a2a00fe0a0000000000007a282a00ff0a0000000000007b362a00000b0000000000007e442a00010b0000000000008a522a00020b0000000000008f602a00030b0000000000008d6e2a00040b000000000000987c2a00050b0000000000009c8a2a00060b00000000000066982a00070b000000000000bda52a00080b000000000000c2b32a00090b000000000000c7c12a000a0b000000000000cfcf2a000b0b000000000000c9dd2a000c0b000000000000c3eb2a000d0b000000000000c6f92a000e0b000000000000c9072b000f0b000000000000c6152b00100b000000000000c3232b00110b000000000000c2312b00120b000000000000c63f2b00130b000000000000c94d2b00140b000000000000ca5b2b00150b000000000000cd692b00160b000000000000cb772b00170b000000000000d2852b00180b000000000000d9932b00190b000000000000d1a12b001a0b000000000000d8af2b001b0b000000000000dcbd2b001c0b000000000000d9cb2b001d0b000000000000d7d92b001e0b000000000000d5e72b001f0b000000000000d6f52b00200b000000000000db032c00210b000000000000db112c00220b000000000000e41f2c00230b000000000000e22d2c00240b000000000000e03b2c00250b000000000000e3492c00260b000000000000e5572c00270b000000000000e7652c00280b000000000000e1732c00290b000000000000dc812c002a0b000000000000d78f2c002b0b000000000000de9d2c002c0b000000000000deab2c002d0b000000000000dbb92c002e0b000000000000dbc72c002f0b000000000000d2d52c00300b000000000000cee32c00310b000000000000c8f12c00320b000000000000caff2c00330b000000000000cd0d2d00340b000000000000d61b2d00350b000000000000d8292d00360b000000000000dd372d00370b000000000000e2452d00380b000000000000e3532d00390b000000000000e1612d003a0b000000000000e56f2d003b0b000000000000e77d2d003c0b000000000000e98b2d003d0b000000000000e1992d003e0b00000000000029a72d003f0b0000000000002bb52d00400b00000000000030c32d00410b00000000000032d12d00420b00000000000033df2d00430b00000000000033ed2d00440b00000000000037fb2d00450b0000000000003b092e00460b0000000000003f172e00470b00000000000044252e00480b0000000000004a332e00490b0000000000004d412e004a0b0000000000004f4f2e004b0b000000000000565d2e004c0b000000000000586b2e004d0b0000000000005f792e004e0b00000000000063872e004f0b00000000000067952e00500b00000000000069a32e00510b00000000000072b12e00520b00000000000076bf2e00530b0000000000007bcd2e00540b0000000000007ddb2e00550b0000000000007ee92e00560b00000000000080f72e00570b00000000000082052f00580b00000000000080132f00590b0000000000007e212f005a0b000000000000882f2f005b0b0000000000008b3d2f005c0b000000000000914b2f005d0b0000000000009a592f005e0b00000000000096672f005f0b00000000000099752f00600b0000000000009e832f00610b000000000000a1912f00620b0000000000009d9f2f00630b0000000000009bad2f00640b000000000000a8bb2f00650b000000000000b8c92f00660b000000000000c7d72f00670b000000000000d7e52f00680b000000000000e6f32f00690b000000000000f60130006a0b000000000000051030006b0b000000000000ee1630006c0b000000000000f61d30006d0b000000000000062c30006e0b000000000000163a30006f0b00000000000026483000700b00000000000036563000710b00000000000045643000720b00000000000054723000730b00000000000064803000740b0000000000001c8c3000750b000000000000748e3000760b000000000000789c3000770b0000000000007faa3000780b00000000000087b83000790b00000000000091c630007a0b000000000000a1d430007b0b000000000000afe230007c0b000000000000bcf030007d0b000000000000cafe30007e0b000000000000d80c31007f0b000000000000e71a3100800b000000000000d2283100810b000000000000e2363100820b000000000000f2443100830b000000000000fd523100840b0000000000000d613100850b0000000000001c6f3100860b0000000000002b7d3100870b000000000000358b3100880b00000000000044993100890b00000000000054a731008a0b00000000000062b531008b0b00000000000072c331008c0b0000000000007fd131008d0b0000000000008ddf31008e0b0000000000003de431008f0b0000000000009ded3100900b000000000000abfb3100910b000000000000bb093200920b000000000000cb173200930b000000000000da253200940b000000000000ea333200950b000000000000f2413200960b000000000000df4f3200970b000000000000d95d3200980b000000000000e96b3200990b000000000000f97932009a0b000000000000098832009b0b000000000000199632009c0b00000000000029a432009d0b0000000000002fb232009e0b0000000000003ac032009f0b00000000000049ce3200a00b00000000000074db3200a10b00000000000070dd3200a20b00000000000042e93200a30b000000000000e4f53200a40b00000000000094023300a50b000000000000a4103300a60b000000000000b41e3300a70b000000000000c42c3300a80b000000000000d33a3300a90b000000000000e3483300aa0b000000000000f3563300ab0b00000000000003653300ac0b00000000000012733300ad0b00000000000022813300ae0b000000000000278f3300af0b000000000000379d3300b00b00000000000047ab3300b10b00000000000057b93300b20b00000000000060c73300b30b00000000000070d53300b40b000000000000bde23300b50b00000000000044f03300b60b00000000000054fe3300b70b000000000000640c3400b80b000000000000711a3400b90b00000000000081283400ba0b00000000000091363400bb0b000000000000a1443400bc0b000000000000b1523400bd0b000000000000c1603400be0b000000000000d16e3400bf0b000000000000e17c3400c00b000000000000f18a3400c10b00000000000001993400c20b0000000000000fa73400c30b0000000000001eb53400c40b0000000000002ec33400c50b0000000000003ad13400c60b0000000000004adf3400c70b0000000000005aed3400c80b0000000000006afb3400c90b0000000000007a093500ca0b0000000000008a173500cb0b0000000000009a253500cc0b000000000000a9333500cd0b000000000000b7413500ce0b000000000000c74f3500cf0b000000000000d45d3500d00b000000000000e46b3500d10b000000000000f4793500d20b00000000000004883500d30b00000000000013963500d40b00000000000022a43500d50b00000000000032b23500d60b00000000000042c03500d70b00000000000051ce3500d80b0000000000005fdc3500d90b0000000000006fea3500da0b0000000000007ff83500db0b0000000000008f063600dc0b0000000000009e143600dd0b000000000000ae223600de0b000000000000bd303600df0b000000000000cd3e3600e00b000000000000dd4c3600e10b000000000000ed5a3600e20b000000000000fb683600e30b0000000000000b773600e40b0000000000001a853600e50b0000000000002a933600e60b00000000000036a13600e70b00000000000043af3600e80b00000000000053bd3600e90b00000000000062cb3600ea0b00000000000071d93600eb0b00000000000081e73600ec0b00000000000091f53600ed0b000000000000a1033700ee0b000000000000b1113700ef0b000000000000c01f3700f00b000000000000cf2d3700f10b000000000000df3b3700f20b000000000000ef493700f30b000000000000fc573700f40b0000000000000c663700f50b0000000000001b743700f60b0000000000002a823700f70b0000000000003a903700f80b0000000000004a9e3700f90b00000000000059ac3700fa0b00000000000069ba3700fb0b00000000000079c83700fc0b00000000000088d63700fd0b00000000000098e43700fe0b000000000000a8f23700ff0b000000000000b8003800000c000000000000c80e3800010c000000000000d81c3800020c000000000000e82a3800030c000000000000f7383800040c00000000000007473800050c00000000000017553800060c00000000000027633800070c0000000000002d713800080c0000000000003d7f3800090c0000000000004d8d38000a0c0000000000005d9b38000b0c0000000000006da938000c0c0000000000007bb738000d0c0000000000008bc538000e0c0000000000009ad338000f0c000000000000a9e13800100c000000000000b9ef3800110c000000000000c9fd3800120c000000000000d70b3900130c000000000000e7193900140c000000000000f5273900150c00000000000005363900160c00000000000015443900170c00000000000025523900180c00000000000034603900190c000000000000446e39001a0c000000000000547c39001b0c000000000000638a39001c0c000000000000729839001d0c00000000000082a639001e0c00000000000090b439001f0c0000000000009fc23900200c000000000000aed03900210c000000000000bdde3900220c000000000000ccec3900230c000000000000dcfa3900240c000000000000eb083a00250c000000000000fa163a00260c0000000000000a253a00270c0000000000001a333a00280c0000000000002a413a00290c0000000000003a4f3a002a0c0000000000004a5d3a002b0c000000000000596b3a002c0c000000000000cd783a002d0c0000000000004e863a002e0c00000000000036943a002f0c00000000000045a23a00300c00000000000055b03a00310c00000000000065be3a00320c00000000000075cc3a00330c00000000000084da3a00340c00000000000093e83a00350c000000000000a2f63a00360c000000000000ab043b00370c000000000000bb123b00380c000000000000cb203b00390c000000000000db2e3b003a0c000000000000eb3c3b003b0c000000000000fb4a3b003c0c0000000000000b593b003d0c0000000000001b673b003e0c0000000000002b753b003f0c0000000000003b833b00400c0000000000004b913b00410c0000000000005b9f3b00420c00000000000063ad3b00430c00000000000072bb3b00440c00000000000081c93b00450c00000000000090d73b00460c0000000000009ee53b00470c000000000000adf33b00480c000000000000bd013c00490c000000000000cc0f3c004a0c000000000000db1d3c004b0c000000000000ea2b3c004c0c000000000000f9393c004d0c00000000000009483c004e0c00000000000018563c004f0c00000000000028643c00500c00000000000038723c00510c00000000000048803c00520c000000000000568e3c00530c000000000000669c3c00540c00000000000076aa3c00550c00000000000086b83c00560c00000000000096c63c00570c00000000000097d43c00580c000000000000a6e23c00590c000000000000b6f03c005a0c000000000000c6fe3c005b0c000000000000d60c3d005c0c000000000000e61a3d005d0c000000000000f5283d005e0c00000000000005373d005f0c00000000000014453d00600c00000000000024533d00610c00000000000034613d00620c000000000000076f3d00630c000000000000647c3d00640c000000000000748a3d00650c00000000000083983d00660c00000000000092a63d00670c000000000000a2b43d00680c000000000000b1c23d00690c000000000000c1d03d006a0c000000000000c9de3d006b0c000000000000d8ec3d006c0c000000000000e8fa3d006d0c000000000000f8083e006e0c000000000000fa163e006f0c0000000000006a243e00700c000000000000c2313e00710c000000000000313f3e00720c0000000000008e4c3e00730c000000000000db593e00740c00000000000043673e00750c00000000000088743e00760c000000000000d5813e00770c000000000000168f3e00780c000000000000579c3e00790c000000000000a7a93e007a0c000000000000f8b63e007b0c00000000000049c43e007c0c0000000000009dd13e007d0c000000000000f1de3e007e0c0000000000003bec3e007f0c00000000000095f93e00800c000000000000e1063f00810c00000000000033143f00820c00000000000094213f00830c000000000000f92e3f00840c000000000000423c3f00850c000000000000a9493f00860c00000000000001573f00870c00000000000071643f00880c000000000000ca713f00890c000000000000247f3f008a0c000000000000938c3f008b0c000000000000e3993f008c0c00000000000047a73f008d0c00000000000099b43f008e0c000000000000e6c13f008f0c0000000000003ccf3f00900c0000000000009adc3f00910c000000000000d5e93f00920c00000000000029f73f00930c00000000000085044000940c000000000000d2114000950c0000000000001a1f4000960c000000000000832c4000970c000000000000c7394000980c0000000000002c474000990c0000000000008b5440009a0c000000000000755d40009b0c000000000000f56140009c0c0000000000004e6f40009d0c000000000000ac7c40009e0c000000000000168a40009f0c0000000000006b974000a00c000000000000caa44000a10c0000000000000db24000a20c00000000000064bf4000a30c000000000000bbcc4000a40c00000000000024da4000a50c00000000000074e74000a60c000000000000cff44000a70c00000000000020024100a80c000000000000770f4100a90c000000000000c81c4100aa0c000000000000142a4100ab0c00000000000075374100ac0c000000000000b9444100ad0c00000000000000524100ae0c0000000000005d5f4100af0c0000000000009d6c4100b00c000000000000077a4100b10c00000000000070874100b20c000000000000cd944100b30c0000000000001fa24100b40c00000000000062af4100b50c000000000000aabc4100b60c000000000000f9c94100b70c00000000000046d74100b80c000000000000ebdd4100b90c000000000000a2e44100ba0c00000000000007f24100bb0c00000000000075ff4100bc0c000000000000ca0c4200bd0c0000000000003b1a4200be0c000000000000ab274200bf0c000000000000f9344200c00c00000000000043424200c10c000000000000a04f4200c20c000000000000f95c4200c30c0000000000006b614200c40c000000000000cb6a4200c50c000000000000da784200c60c000000000000f9784200c70c000000000000f9784200c80c000000000000208b4200c90c00000000000024984200ca0c00000000000009a54200cb0c0000000000000db24200cc0c00000000000065b44200cd0c000000000000f2bf4200ce0c00000000000001ce4200cf0c000000000000ced94200d00c000000000000dee74200d10c000000000000eef54200d20c000000000000eb024300d30c000000000000fb104300d40c0000000000000b1f4300d50c0000000000001b2d4300d60c000000000000293b4300d70c00000000000036494300d80c0000000000004d564300d90c000000000000a8634300da0c000000000000b8714300db0c000000000000c87f4300dc0c000000000000d88d4300dd0c000000000000e89b4300de0c000000000000f8a94300df0c00000000000007b84300e00c000000000000bec34300e10c00000000000016c64300e20c00000000000026d44300e30c0000000000001be14300e40c0000000000000cee4300e50c000000000000f8fa4300e60c00000000000002084400e70c000000000000f5144400e80c0000000000000e224400e90c000000000000162f4400ea0c000000000000043c4400eb0c000000000000f1484400ec0c0000000000000f564400ed0c000000000000a0624400ee0c0000000000009f6f4400ef0c000000000000347b4400f00c00000000000027884400f10c0000000000002c954400f20c00000000000039a24400f30c0000000000001faf4400f40c0000000000000cbc4400f50c000000000000f2c84400f60c000000000000fbd54400f70c000000000000fce24400f80c000000000000d4ef4400f90c000000000000a7fc4400fa0c0000000000009c094500fb0c0000000000009c174500fc0c000000000000aa254500fd0c000000000000ba334500fe0c000000000000ca414500ff0c000000000000d94f4500000d000000000000e75d4500010d000000000000f56b4500020d000000000000057a4500030d00000000000013884500040d00000000000022964500050d00000000000032a44500060d00000000000042b24500070d00000000000052c04500080d00000000000062ce4500090d00000000000072dc45000a0d00000000000072e945000b0d00000000000079f645000c0d0000000000007f0346000d0d0000000000005a1046000e0d000000000000501d46000f0d000000000000372a4600100d00000000000048374600110d00000000000045444600120d0000000000002a514600130d000000000000385e4600140d000000000000e86b4600150d000000000000f8794600160d00000000000008884600170d00000000000018964600180d00000000000025a44600190d00000000000035b246001a0d00000000000045c046001b0d00000000000055ce46001c0d00000000000065dc46001d0d00000000000075ea46001e0d00000000000085f846001f0d00000000000095064700200d000000000000a5144700210d000000000000b5224700220d000000000000c5304700230d000000000000d53e4700240d000000000000e54c4700250d000000000000f55a4700260d00000000000005694700270d00000000000015774700280d00000000000023854700290d000000000000339347002a0d00000000000043a147002b0d00000000000053af47002c0d00000000000063bd47002d0d00000000000073cb47002e0d00000000000083d947002f0d00000000000093e74700300d000000000000a3f54700310d000000000000b3034800320d000000000000c3114800330d000000000000d31f4800340d000000000000e32d4800350d000000000000ed3b4800360d000000000000fd494800370d0000000000000d584800380d0000000000001d664800390d0000000000002d7448003a0d0000000000003d8248003b0d0000000000004d9048003c0d0000000000005d9e48003d0d0000000000006dac48003e0d0000000000007dba48003f0d0000000000008dc84800400d0000000000009dd64800410d000000000000ade44800420d000000000000bdf24800430d000000000000cd004900440d000000000000dd0e4900450d000000000000ed1c4900460d000000000000fd2a4900470d0000000000000d394900480d0000000000001d474900490d0000000000002d5549004a0d0000000000003d6349004b0d0000000000004d7149004c0d0000000000005d7f49004d0d0000000000006b8d49004e0d000000000000739b49004f0d0000000000006ea94900500d0000000000007eb74900510d0000000000008ec54900520d0000000000009ed34900530d000000000000aee14900540d000000000000beef4900550d000000000000c7fd4900560d000000000000d10b4a00570d00000000000067184a00580d00000000000029264a00590d000000000000e0334a005a0d0000000000008e414a005b0d0000000000003a4f4a005c0d000000000000ee5c4a005d0d0000000000009c6a4a005e0d00000000000040784a005f0d000000000000f7854a00600d000000000000c5934a00610d00000000000087a14a00620d00000000000058af4a00630d0000000000001ebd4a00640d000000000000d3ca4a00650d00000000000089d84a00660d00000000000025e64a00670d000000000000d2f34a00680d00000000000063014b00690d000000000000080f4b006a0d000000000000b71c4b006b0d0000000000005b2a4b006c0d000000000000a42c4b006d0d000000000000ff374b006e0d000000000000b2454b006f0d00000000000053534b00700d00000000000006614b00710d000000000000bc6e4b00720d000000000000597c4b00730d000000000000058a4b00740d000000000000b4974b00750d00000000000063a54b00760d000000000000f6b24b00770d00000000000085c04b00780d0000000000003ece4b00790d000000000000eedb4b007a0d00000000000089e94b007b0d00000000000028f74b007c0d000000000000d6044c007d0d00000000000073124c007e0d000000000000ed1f4c007f0d000000000000512d4c00800d0000000000003e3a4c00810d00000000000050474c00820d000000000000d74b4c00830d000000000000de544c00840d0000000000005e624c00850d000000000000dd6f4c00860d000000000000777d4c00870d0000000000001a8b4c00880d000000000000b5984c00890d0000000000004da64c008a0d0000000000005db44c008b0d000000000000ecc14c008c0d00000000000069cf4c008d0d000000000000f0dc4c008e0d00000000000092ea4c008f0d0000000000001ef84c00900d000000000000a2054d00910d00000000000041134d00920d000000000000c7204d00930d0000000000004c2e4d00940d000000000000ca3b4d00950d00000000000040494d00960d000000000000c4564d00970d00000000000032644d00980d000000000000bb714d00990d000000000000457f4d009a0d000000000000d18c4d009b0d0000000000004f9a4d009c0d000000000000829c4d009d0d000000000000caa74d009e0d00000000000058b54d009f0d000000000000f0c24d00a00d0000000000006dd04d00a10d000000000000eddd4d00a20d00000000000071eb4d00a30d00000000000009f94d00a40d0000000000005e064e00a50d00000000000084134e00a60d000000000000c8204e00a70d000000000000d72e4e00a80d0000000000009a3b4e00a90d000000000000f23d4e00aa0d000000000000aa494e00ab0d000000000000ba574e00ac0d000000000000c9654e00ad0d000000000000d9734e00ae0d000000000000e9814e00af0d000000000000f98f4e00b00d000000000000089e4e00b10d00000000000018ac4e00b20d00000000000026ba4e00b30d00000000000036c84e00b40d00000000000046d64e00b50d00000000000056e44e00b60d00000000000066f24e00b70d00000000000076004f00b80d000000000000860e4f00b90d000000000000961c4f00ba0d000000000000a62a4f00bb0d000000000000b6384f00bc0d000000000000c6464f00bd0d000000000000cf534f00be0d000000000000df614f00bf0d000000000000ee6f4f00c00d000000000000b57c4f00c10d000000000000c58a4f00c20d000000000000d5984f00c30d000000000000e5a64f00c40d000000000000f5b44f00c50d00000000000005c34f00c60d00000000000015d14f00c70d00000000000025df4f00c80d00000000000035ed4f00c90d00000000000045fb4f00ca0d00000000000055095000cb0d00000000000065175000cc0d00000000000075255000cd0d00000000000085335000ce0d00000000000095415000cf0d000000000000a54f5000d00d000000000000b55d5000d10d000000000000c56b5000d20d000000000000d5795000d30d000000000000e5875000d40d000000000000f5955000d50d00000000000005a45000d60d00000000000015b25000d70d00000000000025c05000d80d00000000000035ce5000d90d00000000000038db5000da0d00000000000048e95000db0d00000000000058f75000dc0d0000000000000e035100dd0d00000000000066055100de0d0000000000001d115100df0d0000000000002b1f5100e00d0000000000003b2d5100e10d00000000000041345100e20d000000000000493b5100e30d00000000000059495100e40d00000000000069575100e50d00000000000078655100e60d000000000000806c5100e70d00000000000087735100e80d0000000000009a805100e90d000000000000938d5100ea0d0000000000008e9a5100eb0d00000000000079a75100ec0d00000000000069b45100ed0d00000000000078c15100ee0d00000000000069ce5100ef0d0000000000005cdb5100f00d00000000000066e85100f10d00000000000071f55100f20d0000000000006d025200f30d000000000000610f5200f40d000000000000571c5200f50d00000000000067295200f60d0000000000005d365200f70d0000000000006c445200f80d0000000000007c525200f90d0000000000008b605200fa0d0000000000009b6e5200fb0d000000000000ab7c5200fc0d000000000000bb8a5200fd0d000000000000cb985200fe0d000000000000d9a65200ff0d000000000000e7b45200000e000000000000f6c25200010e00000000000005d15200020e00000000000014df5200030e00000000000023ed5200040e00000000000033fb5200050e00000000000043095300060e00000000000053175300070e00000000000063255300080e00000000000072335300090e000000000000814153000a0e000000000000914f53000b0e000000000000a05d53000c0e000000000000b06b53000d0e000000000000c07953000e0e000000000000cf8753000f0e000000000000de955300100e00000000000097995300110e0000000000008c9a5300120e000000000000d49b5300130e0000000000001b9d5300140e0000000000005e9e5300150e000000000000a59f5300160e000000000000eca05300170e000000000000eca45300180e000000000000f7b25300190e00000000000006c153001a0e00000000000016cf53001b0e00000000000026dd53001c0e00000000000030eb53001d0e00000000000040f953001e0e000000000000500754001f0e0000000000005f155400200e0000000000006f235400210e0000000000007f315400220e0000000000008e3f5400230e0000000000009e4d5400240e000000000000ae5b5400250e000000000000be695400260e000000000000ce775400270e000000000000dc855400280e000000000000eb935400290e000000000000fba154002a0e0000000000000bb054002b0e0000000000001bbe54002c0e0000000000002bcc54002d0e0000000000003bda54002e0e0000000000004be854002f0e00000000000059f65400300e00000000000068045500310e00000000000078125500320e00000000000088205500330e000000000000922e5500340e0000000000009d3c5500350e000000000000ad4a5500360e000000000000bd585500370e000000000000cc665500380e000000000000dc745500390e000000000000ec8255003a0e000000000000fc9055003b0e000000000000059f55003c0e00000000000015ad55003d0e00000000000023bb55003e0e00000000000032c955003f0e0000000000003fd75500400e0000000000004ce55500410e0000000000005cf35500420e0000000000006c015600430e0000000000007c0f5600440e0000000000008c1d5600450e0000000000009b2b5600460e000000000000ab395600470e000000000000ba475600480e000000000000ca555600490e000000000000da6356004a0e000000000000ea7156004b0e000000000000f67f56004c0e000000000000068e56004d0e000000000000159c56004e0e00000000000024aa56004f0e00000000000033b85600500e00000000000043c65600510e00000000000053d45600520e00000000000063e25600530e0000000000006af05600540e0000000000007afe5600550e000000000000890c5700560e000000000000981a5700570e000000000000a4285700580e000000000000b3365700590e000000000000c34457005a0e000000000000d25257005b0e000000000000e06057005c0e000000000000ec6e57005d0e000000000000fb7c57005e0e000000000000088b57005f0e00000000000017995700600e00000000000026a75700610e00000000000034b55700620e00000000000042c35700630e00000000000050d15700640e0000000000005fdf5700650e0000000000006ced5700660e0000000000007afb5700670e0000000000008a095800680e00000000000094175800690e0000000000009f2558006a0e000000000000ae3358006b0e000000000000be4158006c0e000000000000c44f58006d0e000000000000d45d58006e0e000000000000e46b58006f0e000000000000f2795800700e00000000000002885800710e00000000000012965800720e00000000000020a45800730e0000000000002eb25800740e0000000000003cc05800750e0000000000004bce5800760e00000000000059dc5800770e00000000000067ea5800780e00000000000074f85800790e000000000000830659007a0e000000000000911459007b0e000000000000a02259007c0e000000000000ae3059007d0e000000000000be3e59007e0e000000000000cd4c59007f0e000000000000dc5a5900800e000000000000ea685900810e000000000000f6765900820e00000000000005855900830e00000000000014935900840e00000000000023a15900850e00000000000031af5900860e00000000000038bd5900870e00000000000047cb5900880e00000000000057d95900890e00000000000065e759008a0e00000000000074f559008b0e0000000000007c035a008c0e0000000000008c115a008d0e0000000000009c1f5a008e0e000000000000ac2d5a008f0e000000000000ba3b5a00900e000000000000c8495a00910e000000000000d6575a00920e000000000000e2655a00930e000000000000f2735a00940e00000000000001825a00950e00000000000010905a00960e000000000000209e5a00970e0000000000002fac5a00980e0000000000003eba5a00990e0000000000004dc85a009a0e0000000000005cd65a009b0e0000000000006be45a009c0e0000000000007af25a009d0e00000000000089005b009e0e000000000000990e5b009f0e000000000000a81c5b00a00e000000000000b82a5b00a10e000000000000c7385b00a20e000000000000d4465b00a30e000000000000e1545b00a40e000000000000f0625b00a50e000000000000ff705b00a60e0000000000000d7f5b00a70e0000000000001b8d5b00a80e0000000000002a9b5b00a90e00000000000037a95b00aa0e00000000000046b75b00ab0e00000000000052c55b00ac0e00000000000062d35b00ad0e00000000000072e15b00ae0e0000000000007fef5b00af0e00000000000089fd5b00b00e000000000000970b5c00b10e000000000000a7195c00b20e000000000000b3275c00b30e000000000000c2355c00b40e000000000000d1435c00b50e000000000000e0515c00b60e000000000000ef5f5c00b70e000000000000fc6d5c00b80e0000000000000b7c5c00b90e0000000000001a8a5c00ba0e00000000000027985c00bb0e00000000000037a65c00bc0e00000000000046b45c00bd0e00000000000055c25c00be0e00000000000064d05c00bf0e00000000000073de5c00c00e0000000000007fec5c00c10e0000000000008ffa5c00c20e0000000000009e085d00c30e000000000000ac165d00c40e000000000000bb245d00c50e000000000000c7325d00c60e000000000000d5405d00c70e000000000000e14e5d00c80e0000000000007d5c5d00c90e000000000000b2675d00ca0e000000000000ea725d00cb0e000000000000407e5d00cc0e00000000000088895d00cd0e000000000000bf945d00ce0e00000000000017a05d00cf0e00000000000096ad5d00d00e000000000000a6bb5d00d10e000000000000b6c95d00d20e000000000000c6d75d00d30e00000000000096e55d00d40e0000000000000ff35d00d50e0000000000001e015e00d60e0000000000002c0f5e00d70e0000000000003c1d5e00d80e000000000000422b5e00d90e0000000000004a395e00da0e00000000000044475e00db0e000000000000eb545e00dc0e000000000000f6625e00dd0e000000000000ff705e00de0e000000000000057f5e00df0e00000000000020c55e00e00e000000000000efd25e00e10e000000000000bee05e00e20e0000000000009bee5e00e30e00000000000044fc5e00e40e000000000000310a5f00e50e0000000000003c185f00e60e00000000000044265f00e70e00000000000005345f00e80e000000000000f0415f00e90e000000000000dd4f5f00ea0e000000000000c05d5f00eb0e0000000000005b6b5f00ec0e000000000000b8785f00ed0e000000000000d0855f00ee0e00000000000099935f00ef0e0000000000009ea15f00f00e00000000000073af5f00f10e0000000000004fbd5f00f20e00000000000004cb5f00f30e000000000000e6d85f00f40e000000000000ace65f00f50e00000000000069f45f00f60e0000000000003f026000f70e00000000000038106000f80e000000000000bc1d6000f90e0000000000005d2b6000fa0e00000000000054396000fb0e00000000000027476000fc0e00000000000022546000fd0e00000000000067616000fe0e0000000000004d6f6000ff0e0000000000002a7d6000000f000000000000088b6000010f000000000000e4986000020f000000000000cfa66000030f000000000000d4b46000040f000000000000dbc26000050f000000000000e9d06000060f000000000000d0de6000070f000000000000c7ec6000080f000000000000c3fa6000090f000000000000a80861000a0f000000000000611661000b0f000000000000592361000c0f0000000000008a2f61000d0f0000000000005b3b61000e0f0000000000004d4761000f0f00000000000004546100100f00000000000051606100110f0000000000000d6d6100120f000000000000a0796100130f00000000000039866100140f00000000000006936100150f00000000000011a16100160f0000000000001faf6100170f0000000000002bbd6100180f000000000000b4c16100190f00000000000012cb61001a0f00000000000020d961001b0f0000000000002fe761001c0f0000000000003bf561001d0f000000000000460362001e0f000000000000501162001f0f000000000000591f6200200f000000000000672d6200210f0000000000006f3b6200220f0000000000007d496200230f00000000000085576200240f000000000000dd596200250f0000000000008d656200260f0000000000009a736200270f000000000000aa816200280f000000000000b98f6200290f000000000000c89d62002a0f000000000000d1ab62002b0f0000000000009bb862002c0f000000000000abc662002d0f000000000000bad462002e0f000000000000cae262002f0f000000000000daf06200300f000000000000eafe6200310f000000000000fa0c6300320f000000000000e01a6300330f000000000000f0286300340f000000000000d6366300350f000000000000b5436300360f000000000000be516300370f000000000000cd5f6300380f000000000000dc6d6300390f000000000000ec7b63003a0f000000000000fb8963003b0f0000000000000a9863003c0f00000000000019a663003d0f00000000000027b463003e0f00000000000036c263003f0f00000000000046d06300400f00000000000055de6300410f00000000000065ec6300420f00000000000074fa6300430f00000000000083086400440f00000000000092166400450f000000000000a2246400460f000000000000b0326400470f000000000000bf406400480f000000000000cd4e6400490f000000000000dc5c64004a0f000000000000ec6a64004b0f000000000000fb7864004c0f000000000000098764004d0f000000000000199564004e0f00000000000029a364004f0f00000000000038b16400500f00000000000047bf6400510f00000000000056cd6400520f000000000000c0da6400530f00000000000024e86400540f00000000000089f56400550f00000000000097036500560f000000000000a6116500570f000000000000b41f6500580f000000000000c22d6500590f000000000000d03b65005a0f000000000000df4965005b0f000000000000ee5765005c0f000000000000fd6565005d0f0000000000000c7465005e0f0000000000001b8265005f0f0000000000002a906500600f00000000000032976500610f000000000000399e6500620f0000000000003fac6500630f0000000000004aba6500640f00000000000057c86500650f00000000000066d66500660f00000000000075e46500670f00000000000083f26500680f00000000000092006600690f000000000000a10e66006a0f000000000000b01c66006b0f000000000000bf2a66006c0f000000000000ce3866006d0f000000000000dd4666006e0f000000000000ec5466006f0f000000000000fb626600700f00000000000009716600710f000000000000187f6600720f000000000000268d6600730f000000000000369b6600740f00000000000044a96600750f00000000000053b76600760f00000000000062c56600770f00000000000072d36600780f00000000000082e16600790f00000000000092ef66007a0f000000000000a1fd66007b0f000000000000b00b67007c0f000000000000be1967007d0f000000000000cd2767007e0f000000000000dc3567007f0f000000000000ea436700800f000000000000f9516700810f00000000000008606700820f000000000000176e6700830f000000000000257c6700840f000000000000348a6700850f00000000000041986700860f00000000000050a66700870f0000000000005fb46700880f0000000000006ec26700890f0000000000007dd067008a0f0000000000008cde67008b0f0000000000009aec67008c0f000000000000a8fa67008d0f000000000000b70868008e0f000000000000c61668008f0f000000000000d4246800900f000000000000e3326800910f000000000000f1406800920f000000000000ff4e6800930f0000000000000d5d6800940f0000000000001b6b6800950f00000000000027796800960f00000000000035876800970f00000000000044956800980f000000000000bca26800990f00000000000025b068009a0f00000000000034be68009b0f00000000000042cc68009c0f000000000000c4d968009d0f000000000000d1e768009e0f000000000000dff568009f0f000000000000ee036900a00f000000000000fe116900a10f0000000000000c206900a20f000000000000752d6900a30f000000000000cb3a6900a40f00000000000027486900a50f00000000000087556900a60f000000000000695c6900a70f0000000000006f636900a80f0000000000007f716900a90f0000000000008e7f6900aa0f0000000000009d8d6900ab0f000000000000ac9b6900ac0f000000000000bba96900ad0f000000000000c8b76900ae0f000000000000d7c56900af0f000000000000e6d36900b00f000000000000f5e16900b10f00000000000003f06900b20f00000000000010fe6900b30f0000000000001f0c6a00b40f0000000000002e1a6a00b50f0000000000003e286a00b60f0000000000004b366a00b70f00000000000058446a00b80f00000000000068526a00b90f00000000000076606a00ba0f000000000000866e6a00bb0f000000000000967c6a00bc0f000000000000998a6a00bd0f000000000000a8986a00be0f000000000000b7a66a00bf0f000000000000c6b46a00c00f000000000000d5c26a00c10f000000000000e4d06a00c20f000000000000f4de6a00c30f00000000000003ed6a00c40f00000000000013fb6a00c50f00000000000020096b00c60f00000000000030176b00c70f0000000000003e256b00c80f0000000000004b336b00c90f0000000000005b416b00ca0f0000000000006b4f6b00cb0f0000000000007a5d6b00cc0f000000000000896b6b00cd0f00000000000098796b00ce0f000000000000a7876b00cf0f000000000000b6956b00d00f000000000000c5a36b00d10f000000000000d3b16b00d20f000000000000e3bf6b00d30f000000000000f2cd6b00d40f00000000000001dc6b00d50f00000000000010ea6b00d60f0000000000001ef86b00d70f0000000000002d066c00d80f0000000000003d146c00d90f0000000000004c226c00da0f00000000000057306c00db0f000000000000643e6c00dc0f000000000000724c6c00dd0f000000000000805a6c00de0f0000000000008f686c00df0f0000000000009e766c00e00f000000000000a8846c00e10f000000000000b5926c00e20f000000000000c4a06c00e30f000000000000d3ae6c00e40f000000000000e1bc6c00e50f000000000000efca6c00e60f000000000000fcd86c00e70f0000000000000be76c00e80f00000000000018f56c00e90f00000000000024036d00ea0f00000000000034116d00eb0f000000000000431f6d00ec0f000000000000522d6d00ed0f000000000000613b6d00ee0f00000000000070496d00ef0f00000000000080576d00f00f0000000000008f656d00f10f0000000000009b736d00f20f000000000000aa816d00f30f000000000000b88f6d00f40f000000000000c79d6d00f50f000000000000d6ab6d00f60f000000000000e6b96d00f70f000000000000f3c76d00f80f00000000000001d66d00f90f00000000000011e46d00fa0f00000000000021f26d00fb0f00000000000031006e00fc0f0000000000003f0e6e00fd0f0000000000004f1c6e00fe0f0000000000005d2a6e00ff0f0000000000006b386e0000100000000000007b466e0001100000000000008a546e00021000000000000097626e000310000000000000a5706e000410000000000000b37e6e000510000000000000c28c6e000610000000000000d09a6e000710000000000000dfa86e000810000000000000eeb66e000910000000000000fec46e000a100000000000000ed36e000b100000000000001ce16e000c100000000000002aef6e000d1000000000000039fd6e000e10000000000000490b6f000f100000000000004b196f0010100000000000005b276f0011100000000000006a356f00121000000000000079436f00131000000000000088516f001410000000000000985f6f001510000000000000a76d6f001610000000000000b77b6f001710000000000000c7896f001810000000000000d7976f001910000000000000e5a56f001a10000000000000f3b36f001b1000000000000002c26f001c1000000000000011d06f001d100000000000001ede6f001e100000000000002eec6f001f100000000000003dfa6f0020100000000000004c08700021100000000000005b16700022100000000000006a24700023100000000000007a3270002410000000000000894070002510000000000000984e70002610000000000000a75c70002710000000000000b76a70002810000000000000c57870002910000000000000c48670002a10000000000000239470002b1000000000000094a170002c10000000000000f2ae70002d100000000000005abc70002e10000000000000bac970002f10000000000000b9d770003010000000000000c8e570003110000000000000d6f370003210000000000000e60171003310000000000000f50f71003410000000000000021e71003510000000000000102c710036100000000000001f3a710037100000000000002b48710038100000000000003a5671003910000000000000456471003a10000000000000537271003b10000000000000628071003c10000000000000708e71003d10000000000000809c71003e100000000000008baa71003f100000000000009ab871004010000000000000a8c671004110000000000000b7d471004210000000000000c4e271004310000000000000d4f071004410000000000000e1fe71004510000000000000f00c72004610000000000000ff1a720047100000000000000d2972004810000000000000183772004910000000000000244572004a10000000000000345372004b10000000000000436172004c10000000000000526f72004d10000000000000607d72004e10000000000000dd8a72004f10000000000000eb9872005010000000000000faa6720051100000000000004eb4720052100000000000005cc27200531000000000000067d07200541000000000000076de7200551000000000000084ec7200561000000000000092fa72005710000000000000a10873005810000000000000ae1673005910000000000000bc2473005a10000000000000ca3273005b10000000000000d74073005c10000000000000df4e73005d10000000000000ef5c73005e10000000000000fd6a73005f100000000000000c79730060100000000000000686730061100000000000006e9373006210000000000000cba0730063100000000000002dae730064100000000000003cbc730065100000000000004aca7300661000000000000059d873006710000000000000b5e573006810000000000000c2f373006910000000000000d20174006a10000000000000e10f74006b10000000000000f11d74006c10000000000000ff2b74006d100000000000000f3a74006e100000000000001d4874006f100000000000002a5674007010000000000000396474007110000000000000477274007210000000000000568074007310000000000000668e74007410000000000000769c7400751000000000000085aa7400761000000000000095b874007710000000000000a4c674007810000000000000add474007910000000000000bde274007a10000000000000c9f074007b10000000000000d7fe74007c10000000000000e70c75007d10000000000000f71a75007e10000000000000072975007f10000000000000163775008010000000000000254575008110000000000000355375008210000000000000426175008310000000000000516f75008410000000000000607d750085100000000000006d8b750086100000000000007899750087100000000000007fa7750088100000000000008db5750089100000000000009bc375008a10000000000000a8d175008b10000000000000b2df75008c10000000000000c1ed75008d10000000000000d1fb75008e10000000000000e00976008f10000000000000ee1776009010000000000000fe25760091100000000000000b34760092100000000000001842760093100000000000001e50760094100000000000002c5e76009510000000000000e86a76009610000000000000f7787600971000000000000056867600981000000000000065947600991000000000000073a276009a1000000000000082b076009b1000000000000092be76009c10000000000000a2cc76009d10000000000000b0da76009e10000000000000bfe876009f10000000000000cdf67600a010000000000000da047700a110000000000000e7127700a210000000000000f5207700a310000000000000042f7700a410000000000000123d7700a510000000000000204b7700a6100000000000002d597700a7100000000000003c677700a8100000000000004a757700a91000000000000058837700aa1000000000000064917700ab10000000000000719f7700ac100000000000007dad7700ad100000000000008bbb7700ae1000000000000097c97700af1000000000000024d77700b01000000000000030e57700b1100000000000003cf37700b2100000000000004a017800b310000000000000590f7800b410000000000000671d7800b510000000000000752b7800b61000000000000084397800b71000000000000092477800b8100000000000009f557800b910000000000000ae637800ba10000000000000bd717800bb10000000000000ca7f7800bc10000000000000d38d7800bd10000000000000e09b7800be10000000000000eea97800bf10000000000000f9b77800c01000000000000002c67800c1100000000000000dd47800c21000000000000018e27800c3100000000000001ef07800c41000000000000028fe7800c5100000000000002e0c7900c610000000000000381a7900c71000000000000041287900c81000000000000050367900c9100000000000005e447900ca1000000000000065527900cb1000000000000075607900cc10000000000000826e7900cd100000000000008b7c7900ce10000000000000968a7900cf100000000000000b987900d01000000000000013a67900d11000000000000021b47900d21000000000000031c27900d31000000000000037d07900d41000000000000044de7900d5100000000000004dec7900d61000000000000057fa7900d71000000000000060087a00d81000000000000066167a00d91000000000000070247a00da100000000000007f327a00db1000000000000089407a00dc10000000000000954e7a00dd10000000000000a15c7a00de10000000000000af6a7a00df10000000000000bb787a00e010000000000000ca867a00e110000000000000d8947a00e210000000000000e6a27a00e310000000000000f3b07a00e41000000000000001bf7a00e5100000000000000fcd7a00e6100000000000001ddb7a00e7100000000000002be97a00e81000000000000039f77a00e91000000000000045057b00ea1000000000000053137b00eb100000000000005f217b00ec100000000000006b2f7b00ed10000000000000743d7b00ee100000000000007f4b7b00ef100000000000008e597b00f01000000000000090677b00f1100000000000009c757b00f210000000000000a5837b00f310000000000000b3917b00f410000000000000be9f7b00f510000000000000ccad7b00f610000000000000dabb7b00f710000000000000e6c97b00f810000000000000f1d77b00f910000000000000fce57b00fa100000000000000af47b00fb1000000000000008027c00fc1000000000000011107c00fd10000000000000211e7c00fe100000000000002b2c7c00ff10000000000000383a7c00001100000000000045487c00011100000000000054567c00021100000000000060647c0003110000000000006f727c0004110000000000007c807c0005110000000000008b8e7c000611000000000000979c7c000711000000000000a6aa7c000811000000000000b6b87c000911000000000000c4c67c000a11000000000000d2d47c000b11000000000000e1e27c000c11000000000000f0f07c000d11000000000000fffe7c000e110000000000000d0d7d000f110000000000001c1b7d0010110000000000002a297d00111100000000000039377d00121100000000000048457d00131100000000000051537d00141100000000000060617d0015110000000000006e6f7d0016110000000000007d7d7d001711000000000000898b7d00181100000000000098997d001911000000000000a7a77d001a11000000000000b6b57d001b11000000000000c3c37d001c11000000000000ccd17d001d11000000000000d7df7d001e11000000000000e7ed7d001f11000000000000f2fb7d002011000000000000fb097e0021110000000000000b187e00221100000000000019267e00231100000000000023347e0024110000000000002f427e0025110000000000003c507e002611000000000000485e7e0027110000000000004e6c7e002811000000000000557a7e00291100000000000061887e002a1100000000000068967e002b1100000000000074a47e002c110000000000007db27e002d110000000000008cc07e002e1100000000000097ce7e002f11000000000000a4dc7e003011000000000000b3ea7e003111000000000000c2f87e003211000000000000d1067f003311000000000000df147f003411000000000000eb227f003511000000000000f7307f003611000000000000073f7f003711000000000000134d7f003811000000000000225b7f00391100000000000031697f003a110000000000003f777f003b110000000000003e857f003c110000000000003f937f003d110000000000004ba17f003e1100000000000054af7f003f1100000000000055bd7f0040110000000000005ccb7f00411100000000000067d97f00421100000000000076e77f00431100000000000085f57f0044110000000000008c0380004511000000000000951180004611000000000000a31f80004711000000000000af2d80004811000000000000b63b80004911000000000000c34980004a11000000000000cc5780004b11000000000000bb6580004c11000000000000c27380004d11000000000000d08180004e11000000000000e08f80004f11000000000000f09d80005011000000000000f9ab8000511100000000000008ba8000521100000000000014c88000531100000000000023d68000541100000000000030e4800055110000000000003ef2800056110000000000004c00810057110000000000005b0e81005811000000000000611c810059110000000000006f2a81005a110000000000007e3881005b110000000000008d4681005c110000000000009a5481005d11000000000000a86281005e11000000000000b47081005f11000000000000bd7e81006011000000000000c28c81006111000000000000d19a81006211000000000000e0a881006311000000000000f0b68100641100000000000061c48100651100000000000071d2810066110000000000007de08100671100000000000075ee8100681100000000000085fc81006911000000000000950a82006a11000000000000a51882006b11000000000000f52582006c11000000000000053482006d11000000000000154282006e11000000000000e74e82006f11000000000000e25c82007011000000000000235f82007111000000000000d96a820072110000000000004a78820073110000000000004f86820074110000000000005e94820075110000000000006ea2820076110000000000007eb0820077110000000000008bbe820078110000000000009bcc82007911000000000000abda82007a11000000000000bbe882007b11000000000000cbf682007c11000000000000db0483007d11000000000000eb1283007e11000000000000fb2083007f110000000000000b2f830080110000000000001b3d830081110000000000002b4b830082110000000000003a5983008311000000000000466783008411000000000000567583008511000000000000668383008611000000000000769183008711000000000000859f8300881100000000000094ad83008911000000000000a4bb83008a11000000000000b4c983008b11000000000000c0d783008c11000000000000d0e583008d11000000000000dff383008e11000000000000ef0184008f11000000000000ff0f840090110000000000000f1e840091110000000000001f2c840092110000000000002f3a840093110000000000003f48840094110000000000004f56840095110000000000005f64840096110000000000006f72840097110000000000007f80840098110000000000007f8e840099110000000000008f9c84009a110000000000009eaa84009b11000000000000adb884009c11000000000000bdc684009d11000000000000ccd484009e11000000000000dce284009f11000000000000ecf08400a011000000000000fcfe8400a1110000000000000b0d8500a2110000000000001b1b8500a3110000000000002a298500a41100000000000039378500a51100000000000048458500a61100000000000058538500a71100000000000068618500a811000000000000786f8500a911000000000000887d8500aa11000000000000988b8500ab11000000000000a8998500ac11000000000000b8a78500ad11000000000000c7b58500ae11000000000000d7c38500af11000000000000e7d18500b011000000000000f7df8500b11100000000000007ee8500b21100000000000017fc8500b311000000000000270a8600b41100000000000037188600b51100000000000047268600b61100000000000057348600b71100000000000067428600b81100000000000077508600b911000000000000875e8600ba11000000000000966c8600bb11000000000000a67a8600bc11000000000000b6888600bd11000000000000c5968600be11000000000000d5a48600bf11000000000000e5b28600c011000000000000f4c08600c11100000000000004cf8600c21100000000000014dd8600c31100000000000024eb8600c41100000000000034f98600c51100000000000044078700c61100000000000054158700c71100000000000064238700c81100000000000074318700c911000000000000843f8700ca11000000000000944d8700cb11000000000000a45b8700cc11000000000000b3698700cd11000000000000c3778700ce11000000000000d3858700cf11000000000000e3938700d011000000000000f3a18700d11100000000000003b08700d21100000000000013be8700d31100000000000023cc8700d41100000000000032da8700d51100000000000042e88700d61100000000000052f68700d71100000000000062048800d81100000000000070128800d9110000000000007f208800da110000000000008f2e8800db110000000000009e3c8800dc11000000000000ae4a8800dd11000000000000bd588800de11000000000000cd668800df11000000000000dd748800e011000000000000eb828800e111000000000000fb908800e2110000000000000b9f8800e3110000000000001bad8800e4110000000000002bbb8800e5110000000000003bc98800e6110000000000004bd78800e7110000000000005be58800e8110000000000006bf38800e9110000000000007b018900ea110000000000008b0f8900eb110000000000009b1d8900ec11000000000000ab2b8900ed11000000000000bb398900ee11000000000000cb478900ef11000000000000db558900f011000000000000eb638900f111000000000000fb718900f2110000000000000b808900f3110000000000001b8e8900f4110000000000002b9c8900f5110000000000003baa8900f6110000000000004bb88900f7110000000000005ac68900f8110000000000006ad48900f9110000000000007ae28900fa110000000000008af08900fb110000000000009afe8900fc11000000000000a90c8a00fd11000000000000b81a8a00fe11000000000000c8288a00ff11000000000000c9368a00001200000000000075448a00011200000000000084528a00021200000000000094608a000312000000000000a46e8a000412000000000000b47c8a000512000000000000c48a8a000612000000000000d4988a000712000000000000e4a68a000812000000000000efb48a000912000000000000fec28a000a120000000000000ed18a000b120000000000001edf8a000c120000000000002ded8a000d120000000000003dfb8a000e120000000000004c098b000f120000000000005c178b00101200000000000069258b00111200000000000076338b00121200000000000086418b001312000000000000964f8b001412000000000000a65d8b001512000000000000b66b8b001612000000000000c6798b001712000000000000d6878b001812000000000000e6958b001912000000000000f6a38b001a1200000000000006b28b001b1200000000000016c08b001c1200000000000026ce8b001d1200000000000036dc8b001e1200000000000045ea8b001f1200000000000054f88b00201200000000000063068c00211200000000000073148c00221200000000000083228c00231200000000000093308c002412000000000000a33e8c002512000000000000b24c8c002612000000000000c25a8c002712000000000000d2688c002812000000000000dc768c002912000000000000ec848c002a12000000000000fc928c002b120000000000000ca18c002c1200000000000019af8c002d1200000000000026bd8c002e1200000000000036cb8c002f1200000000000046d98c00301200000000000056e78c00311200000000000066f58c00321200000000000076038d00331200000000000085118d003412000000000000951f8d003512000000000000a52d8d003612000000000000b53b8d003712000000000000c5498d003812000000000000d5578d003912000000000000e5658d003a12000000000000f5738d003b1200000000000005828d003c1200000000000014908d003d12000000000000249e8d003e1200000000000034ac8d003f1200000000000044ba8d00401200000000000054c88d00411200000000000064d68d00421200000000000074e48d00431200000000000084f28d00441200000000000094008e004512000000000000a40e8e004612000000000000b41c8e004712000000000000c42a8e004812000000000000d4388e004912000000000000e4468e004a12000000000000f4548e004b1200000000000004638e004c1200000000000014718e004d12000000000000247f8e004e12000000000000348d8e004f12000000000000449b8e00501200000000000054a98e00511200000000000064b78e00521200000000000074c58e00531200000000000080d38e00541200000000000090e18e005512000000000000a0ef8e005612000000000000b0fd8e005712000000000000c00b8f005812000000000000d0198f005912000000000000df278f005a12000000000000ef358f005b12000000000000ff438f005c120000000000000c528f005d120000000000001c608f005e120000000000002c6e8f005f120000000000003c7c8f00601200000000000044838f00611200000000000054898f006212000000000000ee948f0063120000000000009ea08f00641200000000000047ac8f00651200000000000033b88f006612000000000000f5c38f006712000000000000b6cf8f006812000000000000fbdc8f006912000000000000caea8f006a12000000000000daf88f006b12000000000000ea0690006c12000000000000fa1490006d120000000000000a2390006e120000000000001a3190006f120000000000002a3f900070120000000000003a4d90007112000000000000455b9000721200000000000055699000731200000000000065779000741200000000000075859000751200000000000085939000761200000000000095a190007712000000000000a4af90007812000000000000b4bd90007912000000000000c4cb90007a12000000000000d4d990007b12000000000000e4e790007c12000000000000f4f590007d12000000000000040491007e12000000000000141291007f12000000000000242091008012000000000000342e91008112000000000000443c91008212000000000000544a91008312000000000000645891008412000000000000746691008512000000000000847491008612000000000000948291008712000000000000a49091008812000000000000b49e91008912000000000000c4ac91008a12000000000000d4ba91008b12000000000000e4c891008c12000000000000f4d691008d1200000000000004e591008e1200000000000014f391008f12000000000000240192009012000000000000340f92009112000000000000441d92009212000000000000542b92009312000000000000643992009412000000000000744792009512000000000000845592009612000000000000946392009712000000000000a47192009812000000000000b47f92009912000000000000c48d92009a12000000000000cb9b92009b12000000000000dba992009c12000000000000ebb792009d12000000000000fbc592009e120000000000000bd492009f120000000000001be29200a0120000000000002bf09200a1120000000000003bfe9200a2120000000000004b0c9300a3120000000000005b1a9300a4120000000000006b289300a5120000000000007b369300a6120000000000008b449300a7120000000000009b529300a812000000000000ab609300a912000000000000bb6e9300aa12000000000000cb7c9300ab12000000000000db8a9300ac12000000000000eb989300ad12000000000000fba69300ae120000000000000bb59300af120000000000001bc39300b0120000000000002bd19300b1120000000000003bdf9300b2120000000000004bed9300b3120000000000005bfb9300b4120000000000006b099400b5120000000000007b179400b6120000000000008b259400b7120000000000009b339400b812000000000000ab419400b912000000000000bb4f9400ba12000000000000cb5d9400bb12000000000000db6b9400bc12000000000000eb799400bd12000000000000fb879400be120000000000000b969400bf120000000000001ba49400c0120000000000002bb29400c11200000000000038c09400c21200000000000048ce9400c31200000000000058dc9400c41200000000000068ea9400c5120000000000006bf89400c6120000000000007a069500c7120000000000008a149500c8120000000000009a229500c912000000000000aa309500ca12000000000000ba3e9500cb12000000000000ca4c9500cc12000000000000da5a9500cd12000000000000ea689500ce12000000000000fa769500cf120000000000000a859500d0120000000000001a939500d1120000000000002aa19500d2120000000000003aaf9500d3120000000000004abd9500d4120000000000005acb9500d5120000000000006ad99500d6120000000000007ae79500d7120000000000008af59500d8120000000000009a039600d912000000000000aa119600da12000000000000ba1f9600db12000000000000ca2d9600dc12000000000000da3b9600dd12000000000000ea499600de12000000000000fa579600df120000000000000a669600e0120000000000001a749600e1120000000000002a829600e2120000000000003a909600e3120000000000004a9e9600e4120000000000005aac9600e5120000000000006aba9600e6120000000000007ac89600e7120000000000008ad69600e8120000000000009ae49600e912000000000000aaf29600ea12000000000000ba009700eb12000000000000ca0e9700ec12000000000000da1c9700ed12000000000000ea2a9700ee12000000000000fa389700ef120000000000000a479700f0120000000000001a559700f11200000000000028639700f21200000000000038719700f312000000000000487f9700f412000000000000588d9700f512000000000000689b9700f61200000000000078a99700f71200000000000088b79700f81200000000000098c59700f912000000000000a8d39700fa12000000000000b8e19700fb12000000000000c8ef9700fc12000000000000d8fd9700fd12000000000000e80b9800fe12000000000000f8199800ff12000000000000082898000013000000000000183698000113000000000000284498000213000000000000385298000313000000000000486098000413000000000000586e98000513000000000000687c98000613000000000000788a9800071300000000000088989800081300000000000098a698000913000000000000a2b498000a13000000000000b2c298000b13000000000000c2d098000c13000000000000d2de98000d13000000000000e2ec98000e13000000000000f2fa98000f13000000000000020999001013000000000000121799001113000000000000222599001213000000000000323399001313000000000000424199001413000000000000524f99001513000000000000625d99001613000000000000726b99001713000000000000827999001813000000000000928799001913000000000000a29599001a13000000000000b2a399001b13000000000000c2b199001c13000000000000d1bf99001d13000000000000d7cd99001e13000000000000e7db99001f13000000000000f7e99900201300000000000007f89900211300000000000017069a00221300000000000027149a00231300000000000037229a00241300000000000047309a002513000000000000573e9a002613000000000000674c9a002713000000000000775a9a00281300000000000087689a00291300000000000097769a002a13000000000000ff839a002b130000000000000f929a002c130000000000001da09a002d1300000000000029ae9a002e1300000000000039bc9a002f1300000000000049ca9a00301300000000000059d89a00311300000000000069e69a00321300000000000079f49a00331300000000000089029b00341300000000000099109b003513000000000000a91e9b003613000000000000952c9b00371300000000000058399b00381300000000000068479b00391300000000000078559b003a1300000000000088639b003b1300000000000098719b003c13000000000000a87f9b003d13000000000000b78d9b003e13000000000000c79b9b003f13000000000000d7a99b004013000000000000e7b79b004113000000000000f7c59b00421300000000000007d49b00431300000000000017e29b00441300000000000027f09b00451300000000000037fe9b004613000000000000470c9c004713000000000000571a9c00481300000000000067289c00491300000000000077369c004a1300000000000087449c004b1300000000000097529c004c13000000000000a7609c004d13000000000000b76e9c004e13000000000000c77c9c004f13000000000000d78a9c005013000000000000e7989c005113000000000000f7a69c00521300000000000007b59c00531300000000000017c39c00541300000000000027d19c00551300000000000037df9c00561300000000000047ed9c00571300000000000057fb9c00581300000000000067099d00591300000000000077179d005a1300000000000087259d005b1300000000000097339d005c13000000000000a7419d005d13000000000000b74f9d005e13000000000000c75d9d005f13000000000000d76b9d006013000000000000e7799d006113000000000000f7879d00621300000000000007969d00631300000000000017a49d00641300000000000027b29d00651300000000000037c09d00661300000000000047ce9d00671300000000000057dc9d00681300000000000067ea9d00691300000000000077f89d006a1300000000000087069e006b1300000000000097149e006c13000000000000a7229e006d13000000000000b7309e006e13000000000000c73e9e006f13000000000000d74c9e007013000000000000e75a9e007113000000000000f7689e00721300000000000007779e00731300000000000017859e00741300000000000027939e00751300000000000037a19e00761300000000000047af9e00771300000000000057bd9e00781300000000000067cb9e00791300000000000077d99e007a1300000000000087e79e007b1300000000000097f59e007c13000000000000a7039f007d13000000000000b7119f007e13000000000000c71f9f007f13000000000000d72d9f008013000000000000e73b9f008113000000000000f7499f00821300000000000007589f00831300000000000017669f00841300000000000027749f00851300000000000037829f00861300000000000047909f008713000000000000579e9f00881300000000000067ac9f00891300000000000077ba9f008a1300000000000087c89f008b1300000000000097d69f008c13000000000000a7e49f008d13000000000000b2f29f008e13000000000000c200a0008f13000000000000d20ea0009013000000000000e21ca0009113000000000000ec2aa0009213000000000000fc38a00093130000000000000c47a00094130000000000001755a0009513000000000000ee61a00096130000000000005a6fa00097130000000000000e7ca00098130000000000007689a0009913000000000000d096a0009a13000000000000e0a4a0009b13000000000000f0b2a0009c1300000000000052c0a0009d1300000000000062cea0009e13000000000000cbdba0009f13000000000000dbe9a000a01300000000000038f7a000a1130000000000009c04a100a213000000000000ac12a100a313000000000000bc20a100a413000000000000cc2ea100a513000000000000da3ca100a613000000000000e14aa100a713000000000000f158a100a8130000000000000167a100a9130000000000000f75a100aa130000000000001f83a100ab130000000000002f91a100ac130000000000003f9fa100ad130000000000004fada100ae130000000000005fbba100af130000000000006fc9a100b0130000000000007fd7a100b1130000000000008fe5a100b2130000000000009ff3a100b313000000000000af01a200b413000000000000bf0fa200b513000000000000cf1da200b613000000000000df2ba200b713000000000000ef39a200b813000000000000ff47a200b9130000000000000f56a200ba130000000000001f64a200bb130000000000002f72a200bc130000000000003f80a200bd130000000000004f8ea200be130000000000005f9ca200bf130000000000006faaa200c0130000000000007fb8a200c1130000000000008fc6a200c2130000000000009fd4a200c313000000000000afe2a200c413000000000000bff0a200c513000000000000c8fea200c613000000000000d80ca300c713000000000000e51aa300c813000000000000f528a300c9130000000000000537a300ca130000000000001545a300cb130000000000002553a300cc130000000000003561a300cd13000000000000456fa300ce13000000000000557da300cf13000000000000658ba300d0130000000000007599a300d11300000000000085a7a300d21300000000000095b5a300d313000000000000a5c3a300d413000000000000b5d1a300d513000000000000c5dfa300d613000000000000d5eda300d713000000000000e5fba300d813000000000000f509a400d9130000000000000518a400da130000000000001526a400db130000000000002534a400dc130000000000003342a400dd130000000000004350a400de13000000000000535ea400df13000000000000636ca400e013000000000000737aa400e1130000000000008288a400e2130000000000009296a400e313000000000000a2a4a400e413000000000000b2b2a400e513000000000000c2c0a400e613000000000000d2cea400e713000000000000dedca400e813000000000000eeeaa400e913000000000000fef8a400ea13000000000000cc08a600eb130000000000007f22a600ec13000000000000234ca600ed13000000000000325aa600ee130000000000004268a600ef130000000000005276a600f0130000000000006284a600f1130000000000007292a600f21300000000000082a0a600f31300000000000092aea600f413000000000000a2bca600f513000000000000b2caa600f613000000000000c2d8a600f713000000000000d2e6a600f813000000000000e2f4a600f913000000000000f202a700fa130000000000000211a700fb13000000000000121fa700fc13000000000000222da700fd13000000000000323ba700fe130000000000004249a700ff130000000000005257a70000140000000000001165a70001140000000000008072a7000214000000000000ce7fa7000314000000000000de8da7000414000000000000ee9ba7000514000000000000fea9a70006140000000000000eb8a70007140000000000001ec6a70008140000000000002ed4a70009140000000000003ee2a7000a140000000000004ef0a7000b140000000000005efea7000c140000000000006e0ca8000d140000000000007e1aa8000e140000000000008e28a8000f140000000000009e36a8001014000000000000ae44a8001114000000000000be52a8001214000000000000ce60a8001314000000000000de6ea8001414000000000000ee7ca8001514000000000000fe8aa80016140000000000000e99a80017140000000000001ea7a80018140000000000002eb5a80019140000000000003ec3a8001a140000000000004ed1a8001b140000000000005edfa8001c140000000000006eeda8001d140000000000007dfba8001e140000000000008d09a9001f140000000000009d17a9002014000000000000a725a9002114000000000000b733a9002214000000000000c741a9002314000000000000d74fa9002414000000000000df5da9002514000000000000ef6ba9002614000000000000ff79a90027140000000000000f88a90028140000000000001f96a90029140000000000002fa4a9002a140000000000003fb2a9002b140000000000004fc0a9002c140000000000005fcea9002d1400000000000064dca9002e1400000000000074eaa9002f1400000000000084f8a90030140000000000009406aa003114000000000000a414aa003214000000000000b422aa003314000000000000c430aa003414000000000000d43eaa003514000000000000e44caa003614000000000000f45aaa0037140000000000000469aa0038140000000000001477aa0039140000000000002485aa003a140000000000003493aa003b1400000000000044a1aa003c1400000000000050afaa003d1400000000000060bdaa003e1400000000000070cbaa003f1400000000000080d9aa00401400000000000090e7aa004114000000000000a0f5aa004214000000000000b003ab004314000000000000c011ab004414000000000000d01fab004514000000000000e02dab004614000000000000f03bab004714000000000000004aab0048140000000000001058ab0049140000000000002066ab004a140000000000003074ab004b140000000000004082ab004c140000000000005090ab004d14000000000000609eab004e1400000000000070acab004f1400000000000080baab00501400000000000090c8ab005114000000000000a0d6ab005214000000000000b0e4ab005314000000000000c0f2ab005414000000000000d000ac005514000000000000e00eac005614000000000000f01cac005714000000000000002bac0058140000000000001039ac0059140000000000002047ac005a140000000000003055ac005b140000000000004063ac005c140000000000005071ac005d14000000000000607fac005e14000000000000708dac005f14000000000000809bac00601400000000000090a9ac006114000000000000a0b7ac006214000000000000b0c5ac006314000000000000bfd3ac006414000000000000cfe1ac006514000000000000dfefac006614000000000000effdac006714000000000000ff0bad0068140000000000000f1aad0069140000000000001f28ad006a140000000000002f36ad006b140000000000003f44ad006c140000000000004f52ad006d140000000000005f60ad006e140000000000006f6ead006f140000000000007f7cad0070140000000000008f8aad0071140000000000009f98ad007214000000000000afa6ad007314000000000000bfb4ad007414000000000000cfc2ad007514000000000000dfd0ad007614000000000000efdead007714000000000000dbecad007814000000000000e7faad007914000000000000f708ae007a140000000000000717ae007b140000000000001725ae007c140000000000002733ae007d140000000000003741ae007e14000000000000474fae007f14000000000000575dae008014000000000000676bae0081140000000000007779ae0082140000000000008787ae0083140000000000009795ae008414000000000000a7a3ae008514000000000000b7b1ae008614000000000000c7bfae008714000000000000d7cdae008814000000000000e7dbae008914000000000000f7e9ae008a1400000000000007f8ae008b140000000000001706af008c140000000000002614af008d140000000000003622af008e140000000000004630af008f14000000000000563eaf009014000000000000664caf009114000000000000765aaf0092140000000000008668af0093140000000000009676af009414000000000000a684af009514000000000000b692af009614000000000000c6a0af009714000000000000d6aeaf009814000000000000e6bcaf009914000000000000f6caaf009a1400000000000006d9af009b1400000000000016e7af009c1400000000000026f5af009d140000000000003603b0009e140000000000004611b0009f14000000000000561fb000a014000000000000662db000a114000000000000763bb000a2140000000000008649b000a3140000000000009657b000a414000000000000a665b000a514000000000000b673b000a614000000000000c581b000a714000000000000d58fb000a814000000000000e59db000a914000000000000f5abb000aa1400000000000005bab000ab1400000000000015c8b000ac1400000000000025d6b000ad1400000000000035e4b000ae1400000000000045f2b000af140000000000005500b100b014000000000000640eb100b114000000000000721cb100b214000000000000822ab100b3140000000000009238b100b414000000000000a246b100b514000000000000b254b100b614000000000000c262b100b714000000000000d270b100b814000000000000e27eb100b914000000000000f28cb100ba14000000000000029bb100bb1400000000000012a9b100bc1400000000000022b7b100bd1400000000000032c5b100be1400000000000042d3b100bf1400000000000052e1b100c01400000000000062efb100c11400000000000072fdb100c214000000000000820bb200c3140000000000009019b200c414000000000000a027b200c514000000000000b035b200c614000000000000c043b200c714000000000000d051b200c814000000000000e05fb200c914000000000000f06db200ca14000000000000007cb200cb14000000000000108ab200cc140000000000001f98b200cd140000000000002fa6b200ce140000000000003fb4b200cf140000000000004fc2b200d0140000000000005fd0b200d1140000000000006fdeb200d2140000000000007fecb200d3140000000000008efab200d4140000000000009c08b300d514000000000000ac16b300d614000000000000bc24b300d714000000000000cc32b300d814000000000000dc40b300d914000000000000ec4eb300da14000000000000fc5cb300db140000000000000c6bb300dc140000000000001c79b300dd140000000000002c87b300de140000000000003c95b300df140000000000004ca3b300e0140000000000005cb1b300e1140000000000006cbfb300e2140000000000007ccdb300e3140000000000008cdbb300e4140000000000009ce9b300e514000000000000acf7b300e614000000000000bc05b400e714000000000000cc13b400e814000000000000dc21b400e914000000000000ec2fb400ea14000000000000fc3db400eb140000000000000c4cb400ec140000000000001c5ab400ed140000000000002c68b400ee140000000000003c76b400ef140000000000004c84b400f0140000000000005c92b400f1140000000000006ca0b400f2140000000000007caeb400f3140000000000008cbcb400f4140000000000009ccab400f514000000000000acd8b400f614000000000000bce6b400f714000000000000ccf4b400f814000000000000dc02b500f914000000000000ec10b500fa14000000000000fc1eb500fb140000000000000c2db500fc140000000000001b3bb500fd140000000000002b49b500fe140000000000003b57b500ff140000000000004b65b50000150000000000005873b50001150000000000006781b5000215000000000000778fb5000315000000000000879db500041500000000000097abb5000515000000000000a7b9b5000615000000000000b7c7b5000715000000000000c5d5b5000815000000000000d5e3b5000915000000000000e5f1b5000a15000000000000f5ffb5000b15000000000000050eb6000c15000000000000151cb6000d15000000000000252ab6000e150000000000003538b6000f150000000000004546b60010150000000000005554b60011150000000000006562b60012150000000000007570b6001315000000000000857eb6001415000000000000958cb6001515000000000000a59ab6001615000000000000b5a8b6001715000000000000c5b6b6001815000000000000d5c4b6001915000000000000e5d2b6001a15000000000000f5e0b6001b1500000000000004efb6001c1500000000000014fdb6001d15000000000000240bb7001e150000000000003419b7001f150000000000004427b70020150000000000005435b70021150000000000006443b70022150000000000007451b7002315000000000000845fb7002415000000000000946db7002515000000000000a47bb7002615000000000000b489b7002715000000000000bf97b7002815000000000000cea5b7002915000000000000deb3b7002a15000000000000eec1b7002b15000000000000fecfb7002c150000000000000edeb7002d150000000000001eecb7002e150000000000002efab7002f150000000000003e08b80030150000000000004e16b80031150000000000005e24b80032150000000000006e32b80033150000000000007e40b80034150000000000008e4eb80035150000000000009e5cb8003615000000000000ae6ab8003715000000000000be78b8003815000000000000ce86b8003915000000000000de94b8003a15000000000000eea2b8003b15000000000000feb0b8003c150000000000000ebfb8003d150000000000001ecdb8003e150000000000002edbb8003f150000000000003ee9b80040150000000000004ef7b80041150000000000005e05b90042150000000000006e13b90043150000000000007e21b90044150000000000008e2fb90045150000000000009e3db9004615000000000000ae4bb9004715000000000000be59b9004815000000000000ce67b9004915000000000000de75b9004a150000000000006e83b9004b15000000000000c790b9004c150000000000002a9eb9004d1500000000000096abb9004e15000000000000ffb8b9004f1500000000000061c6b9005015000000000000c3d3b900511500000000000019e1b900521500000000000097eeb9005315000000000000a7fcb9005415000000000000b70aba005515000000000000c718ba005615000000000000d726ba005715000000000000e734ba005815000000000000f742ba0059150000000000000751ba005a15000000000000175fba005b15000000000000276dba005c15000000000000377bba005d150000000000004789ba005e150000000000005797ba005f1500000000000067a5ba00601500000000000076b3ba00611500000000000086c1ba00621500000000000096cfba006315000000000000a6ddba006415000000000000b6ebba006515000000000000c6f9ba006615000000000000d607bb006715000000000000e615bb006815000000000000f623bb0069150000000000000032bb006a150000000000001040bb006b15000000000000204ebb006c15000000000000b55bbb006d15000000000000c569bb006e15000000000000d577bb006f15000000000000e585bb007015000000000000f593bb00711500000000000005a2bb00721500000000000015b0bb00731500000000000025bebb00741500000000000035ccbb00751500000000000045dabb00761500000000000055e8bb00771500000000000065f6bb0078150000000000007504bc0079150000000000008412bc007a150000000000009420bc007b15000000000000a32ebc007c15000000000000b33cbc007d15000000000000c34abc007e15000000000000d358bc007f15000000000000e366bc008015000000000000f374bc0081150000000000000383bc0082150000000000001391bc008315000000000000239fbc00841500000000000033adbc00851500000000000043bbbc00861500000000000053c9bc00871500000000000063d7bc00881500000000000073e5bc00891500000000000083f3bc008a150000000000009301bd008b15000000000000a30fbd008c15000000000000b31dbd008d15000000000000c32bbd008e15000000000000d339bd008f15000000000000e347bd009015000000000000f355bd0091150000000000000364bd0092150000000000001372bd0093150000000000002380bd009415000000000000338ebd009515000000000000439cbd00961500000000000053aabd00971500000000000063b8bd00981500000000000073c6bd00991500000000000083d4bd009a1500000000000093e2bd009b15000000000000a3f0bd009c15000000000000b3febd009d15000000000000c30cbe009e15000000000000d31abe009f15000000000000e328be00a015000000000000f336be00a1150000000000000345be00a2150000000000001353be00a3150000000000002361be00a415000000000000336fbe00a515000000000000437dbe00a615000000000000538bbe00a7150000000000006399be00a81500000000000073a7be00a91500000000000083b5be00aa1500000000000093c3be00ab15000000000000a3d1be00ac15000000000000b3dfbe00ad15000000000000c3edbe00ae15000000000000d3fbbe00af15000000000000e309bf00b015000000000000de17bf00b115000000000000ee25bf00b215000000000000fe33bf00b3150000000000000e42bf00b4150000000000001e50bf00b5150000000000002e5ebf00b6150000000000003e6cbf00b7150000000000004e7abf00b8150000000000005e88bf00b9150000000000006e96bf00ba150000000000007ea4bf00bb150000000000008eb2bf00bc150000000000009ec0bf00bd15000000000000aecebf00be15000000000000bedcbf00bf15000000000000ceeabf00c0150000000000008ff8bf00c115000000000000e705c000c215000000000000f713c000c3150000000000000322c000c4150000000000001230c000c515000000000000213ec000c615000000000000314cc000c715000000000000415ac000c8150000000000005168c000c9150000000000006176c000ca150000000000007184c000cb150000000000008192c000cc1500000000000091a0c000cd15000000000000a1aec000ce15000000000000b1bcc000cf15000000000000c1cac000d015000000000000d1d8c000d115000000000000e1e6c000d215000000000000f0f4c000d315000000000000ff02c100d4150000000000000f11c100d5150000000000001f1fc100d6150000000000002e2dc100d7150000000000003e3bc100d8150000000000004e49c100d9150000000000005e57c100da150000000000006e65c100db150000000000007e73c100dc15000000000000d675c100dd15000000000000867ac100de15000000000000de7cc100df150000000000008e81c100e0150000000000009e8fc100e115000000000000ae9dc100e215000000000000b8a8c100e3150000000000006da9c100e41500000000000077abc100e515000000000000afabc100e61500000000000088c2c100e71500000000000098d0c100e815000000000000a6dec100e915000000000000b6ecc100ea1500000000000019fac100eb150000000000000512c200ec150000000000000512c200ed15000000000000ea4fc200ee15000000000000eb4fc200ef150000000000004750c200f0150000000000004750c200f1150000000000009053c200f215000000000000d361c200f315000000000000e26fc200f4150000000000005f7dc200f515000000000000c38ac200f6150000000000002298c200f715000000000000aaa5c200f815000000000000bab3c200f915000000000000c9c1c200fa15000000000000d9cfc200fb15000000000000e7ddc200fc15000000000000f3ebc200fd1500000000000002fac200fe150000000000001208c300ff150000000000002016c3000016000000000000a823c3000116000000000000b731c3000216000000000000c73fc3000316000000000000d64dc3000416000000000000e55bc3000516000000000000f569c30006160000000000000578c30007160000000000001586c30008160000000000002594c300091600000000000034a2c3000a1600000000000043b0c3000b1600000000000036bec3000c160000000000003cccc3000d160000000000004bdac3000e160000000000005ae8c3000f1600000000000032f6c3001016000000000000da03c4001116000000000000e911c4001216000000000000f91fc4001316000000000000092ec40014160000000000006937c4001516000000000000183cc4001616000000000000264ac40017160000000000003458c40018160000000000004366c40019160000000000005274c4001a160000000000006082c4001b160000000000007090c4001c160000000000007f9ec4001d160000000000008eacc4001e160000000000009cbac4001f16000000000000aac8c4002016000000000000b8d6c4002116000000000000c7e4c4002216000000000000d7f2c4002316000000000000e600c5002416000000000000f50ec5002516000000000000041dc5002616000000000000142bc50027160000000000002439c50028160000000000000241c50029160000000000002e41c5002a16000000000000b040c5002b160000000000000b42c5002c16000000000000b44bc5002d16000000000000c459c5002e16000000000000d467c5002f16000000000000e475c5003016000000000000c683c5003116000000000000d691c5003216000000000000e59fc5003316000000000000f5adc5003416000000000000bdb3c5003516000000000000a9c1c5003616000000000000b9cfc5003716000000000000c9ddc5003816000000000000d9ebc5003916000000000000e9f9c5003a16000000000000f907c6003b160000000000000916c6003c160000000000001924c6003d160000000000002932c6003e160000000000003940c6003f16000000000000494ec6004016000000000000595cc6004116000000000000696ac60042160000000000007978c60043160000000000008986c60044160000000000009894c6004516000000000000a8a2c6004616000000000000b7b0c6004716000000000000c7bec6004816000000000000d7ccc6004916000000000000e6dac6004a16000000000000f5e8c6004b1600000000000005f7c6004c160000000000001505c7004d160000000000002513c7004e160000000000003521c7004f16000000000000452fc7005016000000000000553dc7005116000000000000654bc70052160000000000007559c70053160000000000008567c70054160000000000009575c7005516000000000000a583c7005616000000000000b591c7005716000000000000c59fc7005816000000000000d4adc7005916000000000000e4bbc7005a16000000000000f4c9c7005b1600000000000003d8c7005c1600000000000013e6c7005d1600000000000023f4c7005e160000000000003302c8005f160000000000004310c8006016000000000000531ec8006116000000000000632cc8006216000000000000733ac80063160000000000008348c80064160000000000009156c8006516000000000000a164c8006616000000000000b072c8006716000000000000bf80c8006816000000000000cf8ec8006916000000000000df9cc8006a16000000000000efaac8006b16000000000000ffb8c8006c160000000000000fc7c8006d160000000000001fd5c8006e160000000000002ee3c8006f160000000000003cf1c80070160000000000004cffc80071160000000000005c0dc90072160000000000006b1bc90073160000000000007829c90074160000000000008737c90075160000000000009745c9007616000000000000a753c9007716000000000000b761c9007816000000000000c56fc9007916000000000000d47dc9007a16000000000000e48bc9007b16000000000000f499c9007c1600000000000004a8c9007d1600000000000014b6c9007e1600000000000024c4c9007f1600000000000032d2c900801600000000000016e0c900811600000000000025eec900821600000000000034fcc9008316000000000000420aca0084160000000000005218ca0085160000000000006226ca0086160000000000007234ca0087160000000000008242ca0088160000000000009250ca008916000000000000a05eca008a16000000000000ae6cca008b16000000000000ba7aca008c16000000000000c888ca008d16000000000000d796ca008e16000000000000e7a4ca008f16000000000000f6b2ca00901600000000000005c1ca00911600000000000014cfca00921600000000000024ddca00931600000000000034ebca00941600000000000043f9ca0095160000000000005207cb0096160000000000006115cb0097160000000000007023cb0098160000000000007f31cb0099160000000000008f3fcb009a160000000000009e4dcb009b16000000000000ad5bcb009c16000000000000bd69cb009d16000000000000cd77cb009e16000000000000dc85cb009f16000000000000ea93cb00a016000000000000faa1cb00a11600000000000008b0cb00a21600000000000018becb00a31600000000000028cccb00a41600000000000037dacb00a51600000000000045e8cb00a61600000000000054f6cb00a7160000000000006404cc00a8160000000000007412cc00a9160000000000008320cc00aa16000000000000922ecc00ab16000000000000a23ccc00ac16000000000000b14acc00ad16000000000000c158cc00ae16000000000000cf66cc00af16000000000000df74cc00b016000000000000ef82cc00b116000000000000ff90cc00b2160000000000000f9fcc00b3160000000000001eadcc00b4160000000000002ebbcc00b5160000000000003dc9cc00b6160000000000004dd7cc00b7160000000000005ce5cc00b8160000000000006af3cc00b9160000000000007901cd00ba16000000000000890fcd00bb16000000000000991dcd00bc16000000000000a92bcd00bd16000000000000b739cd00be16000000000000c647cd00bf16000000000000d655cd00c016000000000000e563cd00c116000000000000f271cd00c2160000000000000180cd00c316000000000000118ecd00c416000000000000209ccd00c516000000000000bea9cd00c616000000000000ceb7cd00c716000000000000dac5cd00c816000000000000e9d3cd00c916000000000000f8e1cd00ca1600000000000007f0cd00cb1600000000000015fecd00cc16000000000000240cce00cd16000000000000341ace00ce160000000000004428ce00cf160000000000005436ce00d0160000000000006244ce00d1160000000000007052ce00d2160000000000008060ce00d316000000000000906ece00d4160000000000009f7cce00d516000000000000ad8ace00d616000000000000bb98ce00d716000000000000cba6ce00d816000000000000dab4ce00d916000000000000e9c2ce00da16000000000000f8d0ce00db1600000000000008dfce00dc1600000000000017edce00dd1600000000000027fbce00de160000000000003709cf00df160000000000004717cf00e0160000000000005325cf00e1160000000000006333cf00e2160000000000007341cf00e316000000000000814fcf00e416000000000000915dcf00e516000000000000a06bcf00e616000000000000b079cf00e716000000000000c087cf00e816000000000000d095cf00e916000000000000e0a3cf00ea16000000000000efb1cf00eb16000000000000ffbfcf00ec160000000000000fcecf00ed160000000000001ddccf00ee160000000000002ceacf00ef160000000000003cf8cf00f0160000000000004b06d000f1160000000000005b14d000f2160000000000006922d000f3160000000000007930d000f4160000000000006c3ed000f516000000000000784cd000f616000000000000885ad000f7160000000000009768d000f816000000000000a676d000f916000000000000b684d000fa16000000000000c592d000fb16000000000000d5a0d000fc16000000000000e3aed000fd16000000000000f2bcd000fe1600000000000002cbd000ff1600000000000011d9d000001700000000000021e7d000011700000000000031f5d00002170000000000004003d10003170000000000005011d1000417000000000000601fd1000517000000000000702dd10006170000000000007e3bd10007170000000000008d49d10008170000000000009d57d1000917000000000000ad65d1000a17000000000000bb73d1000b17000000000000ca81d1000c17000000000000d98fd1000d17000000000000e99dd1000e17000000000000f9abd1000f1700000000000008bad100101700000000000018c8d100111700000000000028d6d100121700000000000038e4d100131700000000000048f2d10014170000000000005700d2001517000000000000670ed2001617000000000000771cd2001717000000000000872ad20018170000000000009738d2001917000000000000a746d2001a17000000000000b754d2001b17000000000000b962d2001c170000000000005569d2001d170000000000005d70d2001e170000000000006d7ed2001f170000000000007d8cd20020170000000000008d9ad20021170000000000009da8d2002217000000000000adb6d2002317000000000000bdc4d2002417000000000000cdd2d2002517000000000000dde0d2002617000000000000edeed2002717000000000000fdfcd20028170000000000000d0bd30029170000000000001d19d3002a170000000000002d27d3002b170000000000003d35d3002c170000000000004d43d3002d170000000000005851d3002e17000000000000685fd3002f17000000000000786dd3003017000000000000887bd30031170000000000009889d3003217000000000000a897d3003317000000000000b8a5d3003417000000000000c8b3d3003517000000000000d8c1d3003617000000000000e8cfd3003717000000000000f8ddd300381700000000000008ecd300391700000000000018fad3003a170000000000002808d4003b170000000000003816d4003c170000000000004824d4003d170000000000005832d4003e170000000000006840d4003f17000000000000784ed4004017000000000000885cd4004117000000000000986ad4004217000000000000a878d4004317000000000000b886d4004417000000000000c894d4004517000000000000d8a2d4004617000000000000e8b0d4004717000000000000f8bed400481700000000000008cdd400491700000000000018dbd4004a1700000000000028e9d4004b1700000000000038f7d4004c170000000000004805d5004d170000000000005813d5004e170000000000006821d5004f17000000000000782fd5005017000000000000883dd5005117000000000000984bd5005217000000000000a859d5005317000000000000b867d5005417000000000000c875d5005517000000000000d883d5005617000000000000e891d5005717000000000000f89fd500581700000000000008aed500591700000000000018bcd5005a1700000000000028cad5005b1700000000000038d8d5005c1700000000000048e6d5005d1700000000000058f4d5005e170000000000006802d6005f170000000000007810d6006017000000000000881ed6006117000000000000982cd6006217000000000000a83ad6006317000000000000b848d6006417000000000000c856d6006517000000000000d864d6006617000000000000e872d6006717000000000000f880d6006817000000000000088fd6006917000000000000189dd6006a1700000000000028abd6006b1700000000000038b9d6006c1700000000000048c7d6006d1700000000000058d5d6006e1700000000000068e3d6006f1700000000000078f1d600701700000000000088ffd6007117000000000000980dd7007217000000000000a81bd7007317000000000000b829d7007417000000000000c837d7007517000000000000d845d7007617000000000000e853d7007717000000000000f861d70078170000000000000870d7007917000000000000187ed7007a17000000000000288cd7007b17000000000000389ad7007c1700000000000048a8d7007d1700000000000058b6d7007e1700000000000068c4d7007f1700000000000078d2d700801700000000000088e0d700811700000000000098eed7008217000000000000a8fcd7008317000000000000b80ad8008417000000000000c818d8008517000000000000d826d8008617000000000000e834d8008717000000000000f842d80088170000000000000851d8008917000000000000185fd8008a17000000000000286dd8008b17000000000000387bd8008c170000000000004889d8008d170000000000004592d8008e1700000000000055a0d8008f1700000000000065aed800901700000000000075bcd800911700000000000085cad800921700000000000095d8d8009317000000000000a5e6d8009417000000000000b5f4d8009517000000000000c502d9009617000000000000d510d9009717000000000000e51ed9009817000000000000f52cd9009917000000000000053bd9009a170000000000005d48d9009b17000000000000c355d9009c170000000000003863d9009d17000000000000af70d9009e17000000000000107ed9009f17000000000000888bd900a017000000000000f298d900a11700000000000059a6d900a217000000000000ceb3d900a31700000000000031c1d900a4170000000000009fcdd900a517000000000000afdbd900a617000000000000bfe9d900a717000000000000cff7d900a817000000000000df05da00a917000000000000ef13da00aa17000000000000ff21da00ab170000000000000f30da00ac170000000000001f3eda00ad170000000000002f4cda00ae170000000000003f5ada00af170000000000004f68da00b0170000000000005f76da00b1170000000000006f84da00b2170000000000007f92da00b3170000000000008fa0da00b4170000000000009faeda00b517000000000000afbcda00b617000000000000bfcada00b717000000000000cfd8da00b817000000000000dfe6da00b917000000000000eff4da00ba17000000000000ff02db00bb170000000000000f11db00bc170000000000001f1fdb00bd170000000000002f2ddb00be170000000000003f3bdb00bf170000000000004f49db00c0170000000000005f57db00c1170000000000006f65db00c2170000000000007f73db00c3170000000000008f81db00c4170000000000009f8fdb00c517000000000000af9ddb00c617000000000000bfabdb00c717000000000000cfb9db00c817000000000000dfc7db00c917000000000000efd5db00ca17000000000000ffe3db00cb170000000000000ff2db00cc170000000000001f00dc00cd170000000000002f0edc00ce170000000000003f1cdc00cf170000000000004f2adc00d0170000000000005f38dc00d1170000000000006f46dc00d2170000000000007f54dc00d3170000000000008f62dc00d4170000000000009f70dc00d517000000000000af7edc00d617000000000000bf8cdc00d717000000000000cf9adc00d817000000000000dfa8dc00d917000000000000efb6dc00da17000000000000ffc4dc00db170000000000000fd3dc00dc170000000000001fe1dc00dd170000000000002fefdc00de170000000000003ffddc00df170000000000004f0bdd00e0170000000000005f19dd00e1170000000000006f27dd00e2170000000000007f35dd00e3170000000000008f43dd00e4170000000000009f51dd00e517000000000000af5fdd00e617000000000000bf6ddd00e717000000000000cf7bdd00e817000000000000df89dd00e917000000000000ef97dd00ea17000000000000ffa5dd00eb170000000000000fb4dd00ec170000000000001fc2dd00ed170000000000002fd0dd00ee170000000000003fdedd00ef170000000000004cecdd00f0170000000000005cfadd00f1170000000000006c08de00f2170000000000007c16de00f3170000000000008c24de00f4170000000000009c32de00f517000000000000ac40de00f617000000000000bc4ede00f717000000000000cc5cde00f817000000000000dc6ade00f917000000000000eb78de00fa17000000000000fb86de00fb170000000000000b95de00fc170000000000001ba3de00fd170000000000001eb1de00fe170000000000005bb4de00ff17000000000000b1bcde000018000000000000cec7de00011800000000000004d3de00021800000000000053dede00031800000000000063e9de00041800000000000090f4de000518000000000000caffde000618000000000000fc0adf0007180000000000003616df0008180000000000008121df000918000000000000ec2edf000a180000000000004f3cdf000b18000000000000a449df000c180000000000009257df000d18000000000000a265df000e18000000000000b273df000f18000000000000c281df001018000000000000d28fdf001118000000000000e29ddf001218000000000000f2abdf00131800000000000002badf00141800000000000012c8df00151800000000000022d6df00161800000000000032e4df00171800000000000042f2df0018180000000000005200e0001918000000000000620ee0001a18000000000000721ce0001b18000000000000822ae0001c180000000000009238e0001d18000000000000a246e0001e18000000000000b254e0001f18000000000000c262e0002018000000000000d270e0002118000000000000e27ee0002218000000000000f28ce0002318000000000000029be000241800000000000012a9e0002518000000000000a8b6e0002618000000000000bcc3e00027180000000000002bd1e000281800000000000099dee0002918000000000000fbebe0002a1800000000000051f9e0002b180000000000009f06e1002c180000000000001014e1002d180000000000005021e1002e18000000000000b62ee1002f180000000000002a3ce1003018000000000000a049e10031180000000000000157e10032180000000000005a64e1003318000000000000b571e10034180000000000002f7fe1003518000000000000838ce1003618000000000000e099e100371800000000000041a7e10038180000000000009cb4e1003918000000000000f2c1e1003a1800000000000069cfe1003b18000000000000dddce1003c180000000000003eeae1003d18000000000000a9f7e1003e180000000000002205e2003f180000000000008712e2004018000000000000d41fe2004118000000000000492de2004218000000000000a73ae20043180000000000001348e20044180000000000007b55e2004518000000000000f062e20046180000000000004770e2004718000000000000b47de2004818000000000000218be20049180000000000008998e2004a18000000000000ffa5e2004b180000000000005fb3e2004c18000000000000bac0e2004d1800000000000027cee2004e1800000000000079dbe2004f18000000000000d8e8e200501800000000000040f6e2005118000000000000b803e30052180000000000002b11e3005318000000000000a51ee3005418000000000000192ce30055180000000000007d39e3005618000000000000d346e30057180000000000003e54e3005818000000000000b261e3005918000000000000106fe3005a180000000000007e7ce3005b18000000000000f589e3005c180000000000006a97e3005d18000000000000c9a4e3005e180000000000003bb2e3005f18000000000000b7bfe300601800000000000005cde300611800000000000066dae3006218000000000000c3e7e30063180000000000001af5e30064180000000000008f02e4006518000000000000f50fe40066180000000000004b1de4006718000000000000af2ae40068180000000000000d38e40069180000000000007a45e4006a18000000000000cf52e4006b180000000000003560e4006c180000000000001f6ee4006d180000000000002f7ce4006e180000000000003f8ae4006f180000000000004f98e40070180000000000005fa6e40071180000000000006fb4e40072180000000000007fc2e40073180000000000008fd0e40074180000000000009fdee4007518000000000000afece4007618000000000000bffae4007718000000000000cf08e5007818000000000000df16e5007918000000000000ef24e5007a18000000000000ff32e5007b180000000000000f41e5007c180000000000001f4fe5007d180000000000002f5de5007e180000000000003f6be5007f180000000000004f79e50080180000000000005f87e50081180000000000006f95e50082180000000000007fa3e50083180000000000008fb1e50084180000000000009fbfe5008518000000000000afcde5008618000000000000bfdbe5008718000000000000cfe9e5008818000000000000dff7e5008918000000000000ef05e6008a18000000000000ff13e6008b180000000000000f22e6008c180000000000001f30e6008d180000000000002f3ee6008e180000000000003f4ce6008f180000000000004f5ae60090180000000000005f68e60091180000000000006f76e60092180000000000007f84e60093180000000000008f92e60094180000000000009fa0e6009518000000000000afaee6009618000000000000bfbce6009718000000000000cfcae6009818000000000000dfd8e6009918000000000000efe6e6009a18000000000000fff4e6009b180000000000000f03e7009c180000000000001f11e7009d180000000000002f1fe7009e180000000000003f2de7009f180000000000004f3be700a0180000000000005e49e700a1180000000000006e57e700a2180000000000007e65e700a3180000000000008e73e700a4180000000000009e81e700a518000000000000ac8fe700a618000000000000239de700a718000000000000a7aae700a81800000000000025b8e700a918000000000000b3c5e700aa1800000000000032d3e700ab18000000000000c8e0e700ac1800000000000058eee700ad18000000000000d0fbe700ae18000000000000ac09e800af18000000000000a417e800b0180000000000008125e800b1180000000000007b33e800b2180000000000008741e800b318000000000000914fe800b4180000000000009e5de800b518000000000000a86be800b618000000000000b379e800b718000000000000b687e800b818000000000000bb95e800b918000000000000c4a3e800ba18000000000000d1b1e800bb18000000000000d7bfe800bc18000000000000e5cde800bd18000000000000dddbe800be18000000000000e6e9e800bf18000000000000f1f7e800c018000000000000f305e900c118000000000000f813e900c218000000000000fb21e900c3180000000000000a30e900c4180000000000001a3ee900c518000000000000d34be900c618000000000000e159e900c718000000000000e867e900c818000000000000f875e900c918000000000000ff83e900ca18000000000000d991e900cb18000000000000e49fe900cc18000000000000d3ade900cd18000000000000dfbbe900ce18000000000000dfc9e900cf18000000000000dcd7e900d018000000000000e3e5e900d118000000000000e6f3e900d2180000000000006101ea00d318000000000000d40eea00d418000000000000d51cea00d518000000000000291fea00d618000000000000cd23ea00d718000000000000d02aea00d818000000000000d938ea00d918000000000000d946ea00da18000000000000bd54ea00db18000000000000c562ea00dc18000000000000cd70ea00dd18000000000000d07eea00de180000000000008e8cea00df18000000000000599aea00e0180000000000005da8ea00e11800000000000063b6ea00e21800000000000057c4ea00e3180000000000003dd2ea00e41800000000000024e0ea00e518000000000000f3edea00e618000000000000f0fbea00e718000000000000c209eb00e818000000000000b817eb00e918000000000000b925eb00ea18000000000000bf33eb00eb18000000000000c141eb00ec18000000000000c74feb00ed18000000000000ac5deb00ee18000000000000ac6beb00ef18000000000000b379eb00f018000000000000a987eb00f1180000000000001d95eb00f218000000000000bca2eb00f318000000000000bfb0eb00f418000000000000cebeeb00f518000000000000d9cceb00f618000000000000d2daeb00f718000000000000dde8eb00f818000000000000e9f6eb00f918000000000000f204ec00fa180000000000000113ec00fb180000000000000421ec00fc180000000000000f2fec00fd18000000000000183dec00fe18000000000000244bec00ff180000000000002859ec0000190000000000002f67ec0001190000000000003475ec0002190000000000004283ec0003190000000000004e91ec0004190000000000004f9fec0005190000000000005fadec0006190000000000006dbbec0007190000000000007ac9ec0008190000000000007fd7ec0009190000000000008be5ec000a190000000000008ff3ec000b190000000000002f01ed000c190000000000006404ed000d190000000000006404ed000e19000000000000aa75ef000f19000000000000b983ef001019000000000000c791ef001119000000000000d19fef001219000000000000dbadef001319000000000000e0bbef001419000000000000c7c9ef0015190000000000003bd7ef0016190000000000003fdeef0017190000000000003fe5ef00181900000000000049f3ef001919000000000000fefeef001a190000000000005601f0001b19000000000000630ff0001c19000000000000691df0001d19000000000000772bf0001e190000000000008239f0001f190000000000009047f00020190000000000009e55f0002119000000000000a963f0002219000000000000b771f0002319000000000000be7ff0002419000000000000cb8df0002519000000000000d29bf0002619000000000000d3a9f0002719000000000000deb7f0002819000000000000e5c5f0002919000000000000f3d3f0002a19000000000000ffe1f0002b190000000000000cf0f0002c1900000000000011fef0002d190000000000001d0cf1002e19000000000000261af1002f190000000000002e28f10030190000000000003b36f10031190000000000004944f10032190000000000005652f10033190000000000006160f10034190000000000006d6ef1003519000000000000787cf1003619000000000000848af10037190000000000009298f10038190000000000009da6f1003919000000000000aab4f1003a19000000000000bac2f1003b19000000000000c2d0f1003c19000000000000d2def1003d19000000000000e1ecf1003e19000000000000e7faf1003f19000000000000f308f20040190000000000000317f20041190000000000000f25f20042190000000000001f33f20043190000000000002f41f20044190000000000003d4ff20045190000000000004c5df2004619000000000000576bf20047190000000000006379f2004819000000000000e486f20049190000000000003894f2004a1900000000000098a1f2004b19000000000000f7aef2004c190000000000004fbcf2004d19000000000000bfc9f2004e1900000000000031d7f2004f1900000000000098e4f2005019000000000000f0f1f20051190000000000004bfff2005219000000000000b90cf30053190000000000001f1af30054190000000000008a27f30055190000000000009435f30056190000000000009f43f3005719000000000000ab51f3005819000000000000b05ff3005919000000000000bb6df3005a19000000000000a57bf3005b19000000000000a489f3005c19000000000000ad97f3005d19000000000000b8a5f3005e19000000000000c2b3f3005f19000000000000cac1f3006019000000000000d8cff3006119000000000000e3ddf3006219000000000000eeebf3006319000000000000fdf9f30064190000000000000b08f40065190000000000001516f40066190000000000002324f40067190000000000002e32f40068190000000000003640f4006919000000000000424ef4006a19000000000000505cf4006b190000000000005e6af4006c190000000000006978f4006d190000000000007486f4006e190000000000007e94f4006f190000000000008ba2f40070190000000000008db0f40071190000000000009bbef4007219000000000000a7ccf4007319000000000000b1daf4007419000000000000abe8f4007519000000000000b3f6f4007619000000000000b904f5007719000000000000c712f5007819000000000000d320f5007919000000000000e02ef5007a19000000000000ed3cf5007b19000000000000f94af5007c190000000000000359f5007d190000000000000e67f5007e190000000000001675f5007f190000000000002283f50080190000000000002d91f5008119000000000000399ff50082190000000000002fadf500831900000000000039bbf50084190000000000002ec9f500851900000000000037d7f500861900000000000044e5f500871900000000000052f3f50088190000000000005d01f6008919000000000000690ff6008a19000000000000751df6008b19000000000000822bf6008c190000000000008739f6008d190000000000009447f6008e190000000000009d55f6008f19000000000000a563f6009019000000000000b071f6009119000000000000bc7ff6009219000000000000c88df6009319000000000000b29bf6009419000000000000b4e7f60095190000000000004767f80096190000000000005675f80097190000000000005f83f80098190000000000006791f80099190000000000006a9ff8009a190000000000006aadf8009b1900000000000048bbf8009c1900000000000048c9f8009d1900000000000049d7f8009e1900000000000053e5f8009f190000000000004df3f800a0190000000000005b01f900a119000000000000490ff900a219000000000000571df900a319000000000000642bf900a4190000000000007339f900a5190000000000007c47f900a6190000000000008a55f900a7190000000000008463f900a8190000000000008f71f900a9190000000000009c7ff900aa19000000000000aa8df900ab19000000000000b89bf900ac19000000000000c4a9f900ad19000000000000d1b7f900ae19000000000000dec5f900af19000000000000ebd3f900b019000000000000fae1f900b11900000000000008f0f900b21900000000000018fef900b319000000000000280cfa00b419000000000000381afa00b5190000000000004828fa00b6190000000000005836fa00b7190000000000006744fa00b8190000000000007752fa00b9190000000000008560fa00ba19000000000000946efa00bb19000000000000a37cfa00bc19000000000000b18afa00bd19000000000000c198fa00be19000000000000d0a6fa00bf19000000000000deb4fa00c019000000000000eac2fa00c119000000000000f9d0fa00c21900000000000003dffa00c3190000000000000dedfa00c4190000000000001dfbfa00c5190000000000002b09fb00c6190000000000002b17fb00c7190000000000003925fb00c8190000000000004533fb00c9190000000000005041fb00ca19000000000000f64efb00cb19000000000000675cfb00cc19000000000000d569fb00cd190000000000005177fb00ce19000000000000b184fb00cf190000000000001492fb00d0190000000000007b9ffb00d119000000000000d8acfb00d21900000000000042bafb00d319000000000000c0c7fb00d41900000000000035d5fb00d51900000000000036e3fb00d61900000000000011f1fb00d719000000000000eefefb00d819000000000000680cfc00d919000000000000cf19fc00da190000000000004b27fc00db19000000000000da34fc00dc190000000000002e42fc00dd19000000000000954ffc00de19000000000000065dfc00df190000000000005f6afc00e019000000000000be77fc00e1190000000000009585fc00e2190000000000009b93fc00e319000000000000a8a1fc00e419000000000000adaffc00e519000000000000b5bdfc00e619000000000000b9cbfc00e719000000000000c0d9fc00e819000000000000c7e7fc00e919000000000000d1f5fc00ea19000000000000e103fd00eb19000000000000ec11fd00ec19000000000000e01ffd00ed19000000000000e72dfd00ee19000000000000e23bfd00ef19000000000000c249fd00f019000000000000b657fd00f119000000000000b465fd00f219000000000000c073fd00f319000000000000d081fd00f419000000000000de8ffd00f519000000000000ed9dfd00f619000000000000fdabfd00f7190000000000000cbafd00f8190000000000001cc8fd00f9190000000000002bd6fd00fa190000000000003be4fd00fb190000000000004bf2fd00fc190000000000005800fe00fd19000000000000680efe00fe19000000000000781cfe00ff19000000000000872afe00001a0000000000009638fe00011a0000000000001d46fe00021a000000000000964dfe00031a000000000000a65bfe00041a000000000000b469fe00051a000000000000c477fe00061a000000000000d385fe00071a000000000000e293fe00081a000000000000f1a1fe00091a00000000000000b0fe000a1a00000000000010befe000b1a0000000000001fccfe000c1a0000000000002fdafe000d1a0000000000003ae8fe000e1a00000000000049f6fe000f1a0000000000005804ff00101a0000000000006812ff00111a0000000000007720ff00121a000000000000862eff00131a000000000000963cff00141a000000000000a64aff00151a000000000000b658ff00161a000000000000c666ff00171a000000000000d674ff00181a000000000000e682ff00191a000000000000f690ff001a1a000000000000069fff001b1a00000000000016adff001c1a000000000000d7baff001d1a00000000000051c8ff001e1a0000000000003dd6ff001f1a0000000000004de4ff00201a0000000000005df2ff00211a0000000000006c000001221a0000000000007b0e0001231a0000000000008a1c0001241a0000000000009a2a0001251a000000000000a5380001261a00000000000084460001271a00000000000083540001281a00000000000082620001291a000000000000827000012a1a0000000000008c7e00012b1a000000000000988c00012c1a000000000000a39a00012d1a00000000000090a800012e1a00000000000076b600012f1a00000000000083c40001301a00000000000091d20001311a00000000000071e00001321a0000000000007bee0001331a0000000000006efc0001341a000000000000790a0101351a00000000000085180101361a000000000000d1250101371a0000000000003b330101381a000000000000a5400101391a000000000000064e01013a1a000000000000735b01013b1a000000000000ee6801013c1a0000000000004a7601013d1a0000000000005d8301013e1a000000000000cf9001013f1a0000000000003a9e0101401a000000000000b1ab0101411a00000000000022b90101421a00000000000079c60101431a000000000000f4d30101441a0000000000005fe10101451a000000000000d3ee0101461a0000000000003bfc0101471a000000000000b1090201481a00000000000018170201491a000000000000602402014a1a000000000000ca3102014b1a000000000000373f02014c1a000000000000924c02014d1a000000000000fc5902014e1a0000000000007e6702014f1a000000000000eb740201501a00000000000052820201511a000000000000c28f0201521a000000000000349d0201531a0000000000008eaa0201541a000000000000e2b70201551a0000000000003dc50201561a000000000000b6d20201571a0000000000002ce00201581a00000000000098ed0201591a00000000000018fb02015a1a0000000000007e0803015b1a000000000000f21503015c1a000000000000642303015d1a000000000000dc3003015e1a0000000000004a3e03015f1a000000000000a54b0301601a0000000000000a590301611a0000000000006f660301621a000000000000d5730301631a00000000000038810301641a000000000000a68e0301651a000000000000039c0301661a00000000000055a90301671a000000000000bdb60301681a000000000000ffc30301691a00000000000067d103016a1a000000000000bfde03016b1a0000000000002aec03016c1a000000000000aaf903016d1a000000000000f70604016e1a000000000000f01404016f1a000000000000fd220401701a00000000000009310401711a000000000000143f0401721a000000000000224d0401731a0000000000002f5b0401741a00000000000032690401751a0000000000003e770401761a00000000000048850401771a00000000000054930401781a00000000000062a10401791a00000000000041af04017a1a000000000000bcbc04017b1a0000000000001aca04017c1a00000000000097d704017d1a00000000000007e504017e1a000000000000def104017f1a0000000000000cff0401801a000000000000680c0501811a000000000000d2190501821a00000000000042270501831a000000000000a2340501841a00000000000007420501851a000000000000654f0501861a000000000000a55c0501871a000000000000fe690501881a00000000000029770501891a000000000000578405018a1a000000000000c29105018b1a000000000000c69e05018c1a00000000000024ac05018d1a00000000000044b905018e1a00000000000068c605018f1a00000000000048d30501901a0000000000000de00501911a000000000000f7ec0501921a00000000000061fa0501931a000000000000c3070601941a0000000000002b150601951a000000000000a3220601961a0000000000000a300601971a000000000000773d0601981a000000000000ea4a0601991a000000000000505806019a1a000000000000ce6506019b1a0000000000003a7306019c1a0000000000008e8006019d1a000000000000a08d06019e1a0000000000000e9b06019f1a00000000000076a80601a01a00000000000000b60601a11a0000000000006bc30601a21a000000000000c2d00601a31a00000000000023de0601a41a00000000000085eb0601a51a000000000000eaf80601a61a00000000000056060701a71a000000000000bc130701a81a0000000000002c210701a91a000000000000a52e0701aa1a000000000000003c0701ab1a00000000000073490701ac1a000000000000cb560701ad1a00000000000024640701ae1a0000000000007e710701af1a000000000000dd7e0701b01a0000000000005d8c0701b11a0000000000008b990701b21a000000000000eea60701b31a00000000000057b40701b41a000000000000a9c10701b51a00000000000006cf0701b61a00000000000081dc0701b71a000000000000e3e90701b81a00000000000054f70701b91a000000000000ce040801ba1a000000000000a7110801bb1a0000000000006d1e0801bc1a0000000000000b2b0801bd1a000000000000ca370801be1a000000000000df440801bf1a0000000000003e520801c01a000000000000b15f0801c11a0000000000000a6d0801c21a000000000000657a0801c31a000000000000b1870801c41a0000000000000d950801c51a00000000000075a20801c61a000000000000ddaf0801c71a00000000000049bd0801c81a000000000000c0ca0801c91a00000000000030d80801ca1a00000000000066e50801cb1a0000000000008ef20801cc1a0000000000009fff0801cd1a000000000000e40c0901ce1a0000000000004e1a0901cf1a000000000000c2270901d01a00000000000021350901d11a0000000000009b420901d21a000000000000de4f0901d31a000000000000b15c0901d41a00000000000079690901d51a0000000000004a760901d61a0000000000005e830901d71a000000000000ca900901d81a0000000000000f9e0901d91a00000000000038ab0901da1a0000000000005eb80901db1a00000000000032c50901dc1a00000000000011d20901dd1a000000000000e6de0901de1a000000000000e6eb0901df1a00000000000040f90901e01a000000000000ae060a01e11a00000000000022140a01e21a0000000000008b210a01e31a000000000000552e0a01e41a000000000000643b0a01e51a000000000000c4480a01e61a000000000000fe550a01e71a000000000000ac620a01e81a000000000000696f0a01e91a000000000000b77c0a01ea1a00000000000096890a01eb1a00000000000062960a01ec1a0000000000001ca30a01ed1a000000000000dcaf0a01ee1a000000000000b6bc0a01ef1a00000000000088c90a01f01a00000000000047d60a01f11a00000000000007e30a01f21a000000000000c9ef0a01f31a0000000000009efc0a01f41a00000000000066090b01f51a00000000000026160b01f61a000000000000ee220b01f71a0000000000009c2f0b01f81a0000000000004b3c0b01f91a0000000000001a490b01fa1a000000000000ea550b01fb1a000000000000a5620b01fc1a000000000000636f0b01fd1a000000000000547c0b01fe1a000000000000c7890b01ff1a0000000000003b970b01001b0000000000008ca40b01011b000000000000aab10b01021b0000000000000cbf0b01031b00000000000077cc0b01041b000000000000d2d90b01051b00000000000037e70b01061b00000000000091f40b01071b000000000000e5010c01081b0000000000004d0f0c01091b000000000000ac1c0c010a1b000000000000192a0c010b1b00000000000077370c010c1b000000000000db440c010d1b00000000000035520c010e1b000000000000bf5f0c010f1b000000000000226d0c01101b000000000000917a0c01111b00000000000000880c01121b00000000000063950c01131b000000000000b7a20c01141b0000000000001bb00c01151b0000000000007abd0c01161b000000000000faca0c01171b0000000000004ed80c01181b000000000000b2e50c01191b00000000000021f30c011a1b0000000000007b000d011b1b000000000000ef0d0d011c1b0000000000005b1b0d011d1b000000000000c9280d011e1b00000000000020360d011f1b0000000000008d430d01201b000000000000e6500d01211b000000000000515e0d01221b000000000000b96b0d01231b00000000000020790d01241b00000000000080860d01251b000000000000f9930d01261b00000000000075a10d01271b000000000000dfae0d01281b0000000000004fbc0d01291b000000000000b4c90d012a1b00000000000018d70d012b1b00000000000070e40d012c1b000000000000d2f10d012d1b00000000000046ff0d012e1b000000000000ad0c0e012f1b0000000000000e1a0e01301b0000000000006d270e01311b000000000000d3340e01321b0000000000003c420e01331b0000000000009a4f0e01341b000000000000145d0e01351b0000000000007a6a0e01361b000000000000de770e01371b0000000000003d850e01381b00000000000093920e01391b000000000000ee9f0e013a1b00000000000022ad0e013b1b0000000000002fba0e013c1b000000000000ebc60e013d1b0000000000001fd40e013e1b00000000000076e10e013f1b000000000000b5ee0e01401b000000000000defb0e01411b00000000000030090f01421b00000000000085160f01431b000000000000d5230f01441b0000000000003d310f01451b0000000000008f3e0f01461b000000000000c74b0f01471b0000000000000d590f01481b0000000000006a660f01491b000000000000bd730f014a1b0000000000001d810f014b1b000000000000788e0f014c1b000000000000b29b0f014d1b000000000000d5a80f014e1b0000000000000db60f014f1b00000000000070c30f01501b000000000000a8d00f01511b000000000000f6dd0f01521b0000000000005beb0f01531b000000000000aef80f01541b000000000000e3051001551b00000000000034131001561b00000000000082201001571b000000000000d02d1001581b000000000000293b1001591b0000000000006f4810015a1b000000000000ae5510015b1b0000000000000d6310015c1b000000000000787010015d1b000000000000c87d10015e1b0000000000001a8b10015f1b00000000000075981001601b000000000000dca51001611b00000000000027b31001621b0000000000006bc01001631b000000000000a8cd1001641b000000000000f0da1001651b00000000000050e81001661b00000000000098f51001671b000000000000eb021101681b00000000000054101101691b0000000000009c1d11016a1b000000000000042b11016b1b000000000000843811016c1b000000000000f14511016d1b000000000000615311016e1b000000000000b96011016f1b000000000000f36d1101701b0000000000005d7b1101711b000000000000a2881101721b00000000000090961101731b00000000000088a41101741b00000000000078b21101751b00000000000082c01101761b00000000000086ce1101771b00000000000086dc1101781b00000000000089ea1101791b00000000000089f811017a1b0000000000007b0012017b1b000000000000870e12017c1b000000000000911c12017d1b000000000000862a12017e1b0000000000008f3812017f1b0000000000000b461201801b00000000000088531201811b000000000000ed601201821b000000000000606e1201831b000000000000d97b1201841b00000000000040891201851b000000000000b3961201861b00000000000071a41201871b00000000000075b21201881b0000000000007cc01201891b00000000000084ce12018a1b0000000000008bdc12018b1b00000000000093ea12018c1b00000000000099f812018d1b000000000000a20613018e1b000000000000af1413018f1b000000000000be221301901b000000000000ce301301911b000000000000db3e1301921b000000000000e94c1301931b000000000000f75a1301941b00000000000005691301951b00000000000015771301961b00000000000023851301971b00000000000031931301981b00000000000041a11301991b00000000000050af13019a1b0000000000005ebd13019b1b0000000000006ecb13019c1b0000000000007ed913019d1b0000000000008ce713019e1b0000000000009cf513019f1b000000000000a9031401a01b00000000000021111401a11b000000000000081f1401a21b000000000000182d1401a31b000000000000273b1401a41b00000000000036491401a51b00000000000046571401a61b0000000000004d5d1401a71b00000000000086691401a81b00000000000095771401a91b000000000000a4851401aa1b000000000000b4931401ab1b000000000000c4a11401ac1b000000000000d4af1401ad1b000000000000e1bd1401ae1b000000000000f0cb1401af1b00000000000000da1401b01b00000000000010e81401b11b00000000000020f61401b21b0000000000002f041501b31b0000000000003f121501b41b0000000000004f201501b51b0000000000005f2e1501b61b0000000000006f3c1501b71b0000000000007f4a1501b81b0000000000008f581501b91b0000000000009f661501ba1b000000000000af741501bb1b000000000000bf821501bc1b000000000000cf901501bd1b000000000000df9e1501be1b000000000000efac1501bf1b000000000000ffba1501c01b0000000000000fc91501c11b0000000000001bd71501c21b00000000000028e51501c31b00000000000038f31501c41b00000000000048011601c51b000000000000580f1601c61b000000000000681d1601c71b000000000000772b1601c81b00000000000087391601c91b00000000000097471601ca1b000000000000a7551601cb1b000000000000b7631601cc1b000000000000c7711601cd1b000000000000d77f1601ce1b000000000000e78d1601cf1b000000000000f79b1601d01b00000000000006aa1601d11b00000000000016b81601d21b00000000000026c61601d31b00000000000036d41601d41b00000000000046e21601d51b00000000000055f01601d61b00000000000065fe1601d71b000000000000750c1701d81b000000000000851a1701d91b0000000000008a261701da1b000000000000db261701db1b0000000000000b271701dc1b00000000000030271701dd1b000000000000dc7e1801de1b00000000000034811801df1b000000000000a4981801e01b000000000000b1a61801e11b000000000000a9b41801e21b000000000000b2c21801e31b000000000000bcd01801e41b000000000000ccde1801e51b000000000000dcec1801e61b000000000000dffa1801e71b000000000000ee081901e81b000000000000fe161901e91b0000000000000e251901ea1b0000000000001d331901eb1b0000000000002c411901ec1b0000000000003c4f1901ed1b0000000000004c5d1901ee1b0000000000005b6b1901ef1b0000000000006a791901f01b0000000000007a871901f11b000000000000f78e1901f21b000000000000129c1901f31b000000000000f4a91901f41b00000000000003b81901f51b00000000000012c61901f61b00000000000020d41901f71b0000000000002ce21901f81b00000000000032f01901f91b0000000000002afe1901fa1b000000000000200c1a01fb1b0000000000001b1a1a01fc1b0000000000002a281a01fd1b0000000000003a361a01fe1b0000000000004a441a01ff1b0000000000005a521a01001c00000000000068601a01011c000000000000786e1a01021c000000000000867c1a01031c000000000000958a1a01041c000000000000a5981a01051c000000000000b5a61a01061c000000000000c5b41a01071c000000000000d4c21a01081c000000000000e4d01a01091c000000000000f3de1a010a1c00000000000003ed1a010b1c00000000000013fb1a010c1c00000000000021091b010d1c00000000000031171b010e1c000000000000391e1b010f1c00000000000041251b01101c00000000000050331b01111c0000000000005d411b01121c0000000000006b4f1b01131c000000000000785d1b01141c000000000000846b1b01151c0000000000008d791b01161c00000000000097871b01171c000000000000a5951b01181c000000000000b2a31b01191c000000000000c0b11b011a1c000000000000ccbf1b011b1c000000000000dacd1b011c1c000000000000e8db1b011d1c000000000000ede91b011e1c000000000000fbf71b011f1c00000000000004061c01201c00000000000011141c01211c0000000000001c221c01221c00000000000028301c01231c000000000000353e1c01241c000000000000434c1c01251c0000000000004d5a1c01261c00000000000051681c01271c0000000000005e761c01281c0000000000006c841c01291c0000000000007c921c012a1c0000000000008aa01c012b1c00000000000096ae1c012c1c000000000000a5bc1c012d1c000000000000b1ca1c012e1c000000000000bdd81c012f1c000000000000cbe61c01301c000000000000d5f41c01311c000000000000e2021d01321c000000000000e9101d01331c000000000000f51e1d01341c000000000000002d1d01351c000000000000083b1d01361c00000000000018491d01371c00000000000022571d01381c0000000000002c651d01391c00000000000036731d013a1c00000000000042811d013b1c000000000000508f1d013c1c0000000000005a9d1d013d1c00000000000065ab1d013e1c0000000000006db91d013f1c00000000000072c71d01401c0000000000007fd51d01411c0000000000008de31d01421c00000000000097f11d01431c000000000000a1ff1d01441c000000000000b00d1e01451c000000000000b51b1e01461c000000000000be291e01471c000000000000cc371e01481c000000000000d7451e01491c000000000000dd531e014a1c000000000000eb611e014b1c000000000000f46f1e014c1c000000000000ff7d1e014d1c000000000000098c1e014e1c000000000000169a1e014f1c0000000000001ca81e01501c00000000000022b61e01511c0000000000002ec41e01521c0000000000003cd21e01531c00000000000040e01e01541c0000000000004bee1e01551c00000000000059fc1e01561c000000000000600a1f01571c0000000000006b181f01581c00000000000075261f01591c0000000000007b341f015a1c00000000000086421f015b1c0000000000008e501f015c1c000000000000955e1f015d1c000000000000a36c1f015e1c000000000000a97a1f015f1c000000000000b0881f01601c000000000000bd961f01611c000000000000c7a41f01621c000000000000cfb21f01631c000000000000d9c01f01641c000000000000e6ce1f01651c000000000000f0dc1f01661c000000000000daea1f01671c000000000000e5f81f01681c000000000000f1062001691c000000000000fb1420016a1c000000000000052320016b1c0000000000000d3120016c1c000000000000163f20016d1c000000000000244d20016e1c000000000000285b20016f1c00000000000035692001701c00000000000041772001711c00000000000049852001721c00000000000054932001731c0000000000005da12001741c00000000000067af2001751c00000000000074bd2001761c00000000000079cb2001771c00000000000083d92001781c0000000000008be72001791c00000000000094f520017a1c000000000000a10321017b1c0000000000008b1121017c1c000000000000951f21017d1c000000000000a12d21017e1c000000000000ac3b21017f1c000000000000b5492101801c000000000000be572101811c000000000000cb652101821c000000000000d4732101831c000000000000df812101841c000000000000eb8f2101851c000000000000fb9d2101861c000000000000ddab2101871c000000000000e0b92101881c000000000000e7c72101891c000000000000f0d521018a1c000000000000f9e321018b1c00000000000004f221018c1c0000000000000f0022018d1c000000000000120e22018e1c0000000000001c1c22018f1c000000000000292a2201901c00000000000032382201911c00000000000040462201921c00000000000048542201931c0000000000004f622201941c00000000000056702201951c000000000000627e2201961c0000000000006b8c2201971c0000000000006c9a2201981c00000000000079a82201991c00000000000086b622019a1c0000000000008cc422019b1c00000000000092d222019c1c0000000000009fe022019d1c000000000000a9ee22019e1c000000000000b4fc22019f1c000000000000bc0a2301a01c000000000000cb182301a11c000000000000d2262301a21c000000000000dd342301a31c000000000000e5422301a41c000000000000f4502301a51c000000000000fb5e2301a61c000000000000076d2301a71c0000000000000e7b2301a81c00000000000012892301a91c00000000000016972301aa1c0000000000001aa52301ab1c00000000000026b32301ac1c00000000000034c12301ad1c0000000000003fcf2301ae1c00000000000048dd2301af1c000000000000f1ea2301b01c00000000000059f82301b11c000000000000c2052401b21c00000000000026132401b31c0000000000008b202401b41c000000000000f32d2401b51c000000000000633b2401b61c0000000000004f412401b71c000000000000c9472401b81c00000000000039552401b91c0000000000009a622401ba1c00000000000002702401bb1c0000000000005e7d2401bc1c000000000000c88a2401bd1c00000000000038982401be1c00000000000047a62401bf1c0000000000004fb42401c01c0000000000005dc22401c11c00000000000064d02401c21c00000000000070de2401c31c0000000000007cec2401c41c00000000000086fa2401c51c00000000000092082501c61c0000000000009c162501c71c000000000000a7242501c81c000000000000b2322501c91c000000000000bf402501ca1c000000000000714e2501cb1c000000000000d15b2501cc1c00000000000041692501cd1c000000000000b2762501ce1c00000000000017842501cf1c00000000000073912501d01c000000000000df9e2501d11c0000000000004eac2501d21c000000000000bcb92501d31c0000000000001dc72501d41c0000000000007ad42501d51c000000000000e5e12501d61c0000000000004eef2501d71c000000000000b2fc2501d81c000000000000180a2601d91c00000000000084172601da1c000000000000f0242601db1c00000000000051322601dc1c000000000000ca3f2601dd1c000000000000314d2601de1c000000000000a15a2601df1c00000000000003682601e01c00000000000071752601e11c000000000000cc822601e21c0000000000002f902601e31c000000000000999d2601e41c000000000000efaa2601e51c00000000000048b82601e61c000000000000b5c52601e71c00000000000025d32601e81c0000000000008ee02601e91c00000000000002ee2601ea1c00000000000074fb2601eb1c0000000000005a092701ec1c00000000000056172701ed1c00000000000025252701ee1c00000000000010332701ef1c00000000000015412701f01c0000000000001e4f2701f11c0000000000002c5d2701f21c000000000000346b2701f31c0000000000003e792701f41c0000000000004a872701f51c00000000000056952701f61c0000000000005da32701f71c00000000000065b12701f81c0000000000006cbf2701f91c00000000000074cd2701fa1c00000000000080db2701fb1c000000000000d1e82701fc1c000000000000ddf62701fd1c000000000000e5042801fe1c000000000000f5122801ff1c00000000000000212801001d000000000000fe2e2801011d000000000000b33c2801021d000000000000624a2801031d000000000000ee572801041d0000000000009a652801051d0000000000004e732801061d00000000000009812801071d000000000000a28e2801081d000000000000529c2801091d00000000000011aa28010a1d000000000000c8b728010b1d0000000000007cc528010c1d0000000000008cd328010d1d00000000000095e128010e1d000000000000a0ef28010f1d000000000000a7fd2801101d000000000000f4072901111d000000000000f9152901121d00000000000003242901131d0000000000000f322901141d00000000000017402901151d000000000000224e2901161d000000000000245c2901171d0000000000002e6a2901181d00000000000033782901191d000000000000358629011a1d000000000000419429011b1d0000000000003fa229011c1d0000000000004ab029011d1d0000000000004fbe29011e1d00000000000059cc29011f1d00000000000066da2901201d00000000000070e82901211d0000000000007bf62901221d0000000000007d042a01231d0000000000002f122a01241d000000000000971f2a01251d000000000000162d2a01261d000000000000f73a2a01271d00000000000005492a01281d0000000000000c572a01291d00000000000015652a012a1d0000000000001f732a012b1d00000000000024812a012c1d000000000000308f2a012d1d0000000000003f9d2a012e1d00000000000049ab2a012f1d00000000000050b92a01301d0000000000005ec72a01311d00000000000068d52a01321d0000000000006fe32a01331d0000000000007bf12a01341d00000000000088ff2a01351d000000000000930d2b01361d0000000000009e1b2b01371d000000000000aa292b01381d000000000000b2372b01391d000000000000b7452b013a1d000000000000c6532b013b1d000000000000cc612b013c1d000000000000cb6f2b013d1d000000000000d57d2b013e1d000000000000de8b2b013f1d000000000000ea992b01401d000000000000eca72b01411d000000000000f9b52b01421d00000000000004c42b01431d0000000000000ed22b01441d00000000000019e02b01451d00000000000024ee2b01461d00000000000032fc2b01471d000000000000250a2c01481d00000000000010182c01491d000000000000f6252c014a1d000000000000b6332c014b1d000000000000bf412c014c1d000000000000ca4f2c014d1d000000000000d75d2c014e1d000000000000e16b2c014f1d000000000000e9792c01501d000000000000f0872c01511d000000000000fb952c01521d00000000000002a42c01531d0000000000000eb22c01541d00000000000017c02c01551d0000000000001cce2c01561d00000000000029dc2c01571d00000000000032ea2c01581d0000000000003df82c01591d00000000000042062d015a1d0000000000004c142d015b1d0000000000005b222d015c1d00000000000065302d015d1d0000000000006a3e2d015e1d000000000000724c2d015f1d000000000000825a2d01601d0000000000008b682d01611d00000000000094762d01621d00000000000090842d01631d0000000000009a922d01641d000000000000a2a02d01651d000000000000a9ae2d01661d000000000000b4bc2d01671d000000000000c0ca2d01681d000000000000cbd82d01691d000000000000d5e62d016a1d000000000000dbf42d016b1d000000000000e8022e016c1d000000000000f2102e016d1d000000000000fd1e2e016e1d000000000000082d2e016f1d0000000000000f3b2e01701d00000000000014492e01711d00000000000022572e01721d00000000000029652e01731d00000000000038732e01741d00000000000044812e01751d0000000000004f8f2e01761d000000000000579d2e01771d00000000000057ab2e01781d00000000000065b92e01791d00000000000071c72e017a1d00000000000080d52e017b1d000000000000c4d92e017c1d00000000000075e42e017d1d00000000000080f22e017e1d0000000000008e002f017f1d0000000000009b0e2f01801d000000000000a91c2f01811d000000000000b52a2f01821d000000000000b2382f01831d000000000000b8462f01841d000000000000c4542f01851d000000000000d1622f01861d000000000000dd702f01871d000000000000e87e2f01881d000000000000e98c2f01891d000000000000f89a2f018a1d00000000000006a92f018b1d00000000000012b72f018c1d0000000000001ec52f018d1d0000000000002dd32f018e1d0000000000003ae12f018f1d0000000000004aef2f01901d00000000000057fd2f01911d000000000000640b3001921d00000000000073193001931d0000000000007d273001941d0000000000008b353001951d00000000000097433001961d000000000000d64b3001971d000000000000db593001981d000000000000e9673001991d000000000000f57530019a1d000000000000ff8330019b1d000000000000c59030019c1d000000000000cd9e30019d1d000000000000d9ac30019e1d000000000000e0ba30019f1d000000000000e7c83001a01d000000000000ead63001a11d000000000000f3e43001a21d00000000000002f33001a31d00000000000007013101a41d000000000000110f3101a51d0000000000001b1d3101a61d000000000000252b3101a71d0000000000002d393101a81d00000000000037473101a91d0000000000003e553101aa1d00000000000044633101ab1d00000000000041713101ac1d000000000000417f3101ad1d0000000000004d8d3101ae1d0000000000004e9b3101af1d00000000000046a93101b01d00000000000051b73101b11d00000000000059c53101b21d00000000000062d33101b31d0000000000006ce13101b41d00000000000078ef3101b51d00000000000084fd3101b61d0000000000008b0b3201b71d000000000000fc183201b81d0000000000005d263201b91d000000000000b7333201ba1d00000000000018413201bb1d000000000000854e3201bc1d000000000000f95b3201bd1d0000000000004f693201be1d000000000000bf763201bf1d0000000000002a843201c01d00000000000073913201c11d000000000000e89e3201c21d0000000000005dac3201c31d000000000000c3b93201c41d00000000000030c73201c51d000000000000add43201c61d0000000000002be23201c71d00000000000035f03201c81d00000000000040fe3201c91d0000000000004b0c3301ca1d0000000000004a1a3301cb1d00000000000058283301cc1d00000000000064363301cd1d00000000000074443301ce1d0000000000007f523301cf1d00000000000088603301d01d000000000000956e3301d11d000000000000a07c3301d21d000000000000aa8a3301d31d000000000000b3983301d41d000000000000c0a63301d51d000000000000c8b43301d61d000000000000cbc23301d71d000000000000d3d03301d81d000000000000dfde3301d91d000000000000e4ec3301da1d000000000000f2fa3301db1d000000000000f8083401dc1d00000000000001173401dd1d00000000000004253401de1d0000000000000e333401df1d0000000000001d413401e01d000000000000234f3401e11d0000000000002b5d3401e21d000000000000b56a3401e31d00000000000087783401e41d000000000000e4853401e51d00000000000061933401e61d000000000000f9a03401e71d0000000000005aae3401e81d000000000000cebb3401e91d00000000000044c93401ea1d000000000000bad63401eb1d00000000000020e43401ec1d00000000000082f13401ed1d000000000000eafe3401ee1d000000000000610c3501ef1d000000000000601a3501f01d0000000000006b283501f11d00000000000072363501f21d0000000000007a443501f31d00000000000084523501f41d00000000000090603501f51d000000000000956e3501f61d000000000000a17c3501f71d000000000000ae8a3501f81d000000000000b6983501f91d000000000000bfa63501fa1d000000000000b2b43501fb1d000000000000b9c23501fc1d000000000000bdd03501fd1d000000000000c6de3501fe1d000000000000cbec3501ff1d000000000000cffa3501001e000000000000d7083601011e000000000000e4163601021e000000000000e0243601031e000000000000e6323601041e000000000000f5403601051e000000000000e24e3601061e0000000000009c5c3601071e0000000000005f6a3601081e000000000000e7773601091e0000000000005d8536010a1e000000000000c19236010b1e00000000000023a036010c1e000000000000eaad36010d1e000000000000b5bb36010e1e00000000000054c936010f1e000000000000c6d63601101e0000000000003be43601111e000000000000c9f13601121e0000000000004eff3601131e000000000000bc0c3701141e000000000000331a3701151e000000000000b2273701161e0000000000002e353701171e0000000000009c423701181e00000000000017503701191e000000000000865d37011a1e000000000000dd6a37011b1e000000000000066f37011c1e000000000000687b37011d1e000000000000728937011e1e0000000000007d9737011f1e00000000000085a53701201e00000000000091b33701211e0000000000009dc13701221e000000000000aacf3701231e0000000000004ddc3701241e00000000000059ea3701251e00000000000065f83701261e0000000000006f063801271e0000000000007c143801281e00000000000087223801291e000000000000913038012a1e0000000000009f3e38012b1e000000000000ab4c38012c1e000000000000b65a38012d1e000000000000c36838012e1e000000000000cc7638012f1e000000000000d8843801301e000000000000e3923801311e000000000000eaa03801321e000000000000f9ae3801331e000000000000ffbc3801341e0000000000000acb3801351e00000000000015d93801361e00000000000011e73801371e00000000000018f53801381e00000000000020033901391e000000000000291139013a1e000000000000341f39013b1e0000000000003e2d39013c1e000000000000493b39013d1e000000000000544939013e1e0000000000005a5739013f1e00000000000067653901401e00000000000071733901411e00000000000072813901421e0000000000007d8f3901431e0000000000007f9d3901441e0000000000008cab3901451e00000000000092b93901461e00000000000099c73901471e000000000000a1d53901481e000000000000aee33901491e000000000000bbf139014a1e000000000000c2ff39014b1e000000000000cd0d3a014c1e000000000000d51b3a014d1e000000000000e2293a014e1e000000000000f0373a014f1e000000000000fb453a01501e00000000000005543a01511e0000000000000d623a01521e00000000000017703a01531e0000000000001c7e3a01541e000000000000298c3a01551e000000000000309a3a01561e0000000000003ca83a01571e0000000000003db63a01581e0000000000004bc43a01591e0000000000004fd23a015a1e00000000000056e03a015b1e0000000000005fee3a015c1e0000000000006dfc3a015d1e000000000000710a3b015e1e0000000000004c183b015f1e0000000000001e263b01601e00000000000019343b01611e0000000000001b423b01621e0000000000001a503b01631e000000000000f55d3b01641e000000000000536b3b01651e000000000000c1783b01661e0000000000003b863b01671e000000000000c0933b01681e00000000000078a13b01691e000000000000f2ae3b016a1e00000000000059bc3b016b1e00000000000075c93b016c1e00000000000038d63b016d1e0000000000003be33b016e1e000000000000aef03b016f1e00000000000075fe3b01701e0000000000007d0c3c01711e000000000000861a3c01721e00000000000094283c01731e0000000000009f363c01741e000000000000aa443c01751e000000000000b5523c01761e000000000000bc603c01771e000000000000c96e3c01781e000000000000d17c3c01791e000000000000dd8a3c017a1e000000000000e9983c017b1e000000000000efa63c017c1e000000000000fab43c017d1e00000000000006c33c017e1e0000000000000dd13c017f1e0000000000001adf3c01801e00000000000020ed3c01811e00000000000025fb3c01821e0000000000002e093d01831e00000000000038173d01841e00000000000045253d01851e00000000000054333d01861e0000000000005e413d01871e000000000000674f3d01881e0000000000006a5d3d01891e000000000000726b3d018a1e00000000000081793d018b1e00000000000083873d018c1e0000000000008e953d018d1e0000000000008fa33d018e1e00000000000097b13d018f1e000000000000a4bf3d01901e000000000000accd3d01911e000000000000b4db3d01921e000000000000bee93d01931e000000000000c2f73d01941e000000000000cc053e01951e000000000000d7133e01961e000000000000e1213e01971e000000000000e72f3e01981e000000000000f23d3e01991e000000000000004c3e019a1e0000000000000a5a3e019b1e00000000000009683e019c1e00000000000011763e019d1e00000000000018843e019e1e00000000000025923e019f1e0000000000002ea03e01a01e00000000000032ae3e01a11e00000000000040bc3e01a21e00000000000044ca3e01a31e0000000000004cd83e01a41e0000000000005ae63e01a51e0000000000005ef43e01a61e0000000000006b023f01a71e00000000000073103f01a81e0000000000007f1e3f01a91e0000000000008a2c3f01aa1e000000000000933a3f01ab1e0000000000009d483f01ac1e000000000000a3563f01ad1e000000000000b0643f01ae1e000000000000b7723f01af1e000000000000c3803f01b01e000000000000c88e3f01b11e000000000000cc9c3f01b21e0000000000006fa83f01b31e000000000000c0aa3f01b41e0000000000004eaf3f01b51e000000000000a7b83f01b61e000000000000adc63f01b71e000000000000b8d43f01b81e000000000000bfdb3f01b91e00000000000075e23f01ba1e0000000000007ce93f01bb1e0000000000007ff03f01bc1e00000000000088fe3f01bd1e000000000000900c4001be1e0000000000009b1a4001bf1e000000000000a6284001c01e000000000000b3364001c11e000000000000be444001c21e000000000000ca524001c31e000000000000d0604001c41e000000000000dc6e4001c51e000000000000d97c4001c61e000000000000e38a4001c71e0000000000003b8d4001c81e000000000000a5984001c91e00000000000046a64001ca1e000000000000d5b34001cb1e0000000000005ec14001cc1e000000000000d7ce4001cd1e00000000000046dc4001ce1e000000000000c7e94001cf1e0000000000004af74001d01e000000000000cb044101d11e00000000000038124101d21e0000000000009a1f4101d31e0000000000001e2d4101d41e000000000000f83a4101d51e00000000000002494101d61e0000000000000e574101d71e00000000000017654101d81e0000000000001d734101d91e0000000000002b814101da1e000000000000398f4101db1e000000000000479d4101dc1e00000000000057ab4101dd1e00000000000064b94101de1e00000000000069c74101df1e00000000000072d54101e01e0000000000007de34101e11e00000000000088f14101e21e00000000000094ff4101e31e0000000000009d0d4201e41e0000000000009b1b4201e51e000000000000a4294201e61e000000000000aa374201e71e000000000000b8454201e81e000000000000c0534201e91e000000000000cc614201ea1e000000000000d86f4201eb1e000000000000dc764201ec1e000000000000de7d4201ed1e000000000000bf8b4201ee1e0000000000009e994201ef1e0000000000007ea74201f01e00000000000085b54201f11e00000000000071c34201f21e000000000000d8d04201f31e00000000000059de4201f41e000000000000d0eb4201f51e0000000000002af94201f61e0000000000009d064301f71e00000000000000144301f81e0000000000005a214301f91e000000000000cb2e4301fa1e0000000000004d3c4301fb1e000000000000a7494301fc1e00000000000026574301fd1e0000000000008e644301fe1e000000000000f8714301ff1e0000000000006e7f4301001f000000000000e28c4301011f000000000000549a4301021f000000000000c0a74301031f00000000000040b54301041f00000000000096c24301051f0000000000000fd04301061f0000000000007add4301071f000000000000feea4301081f00000000000066f84301091f000000000000d60544010a1f0000000000004c1344010b1f000000000000a92044010c1f000000000000022e44010d1f000000000000583b44010e1f000000000000ca4844010f1f00000000000034564401101f000000000000ae634401111f0000000000002d714401121f000000000000357f4401131f0000000000003c8d4401141f0000000000003b9b4401151f0000000000003ba94401161f0000000000003cb74401171f00000000000040c54401181f00000000000042d34401191f00000000000043e144011a1f00000000000032ef44011b1f0000000000002cfd44011c1f000000000000190b45011d1f000000000000211945011e1f000000000000252745011f1f0000000000002c354501201f0000000000002c434501211f00000000000033514501221f000000000000385f4501231f0000000000003a6d4501241f000000000000327b4501251f0000000000003d894501261f00000000000043974501271f00000000000049a54501281f00000000000043b34501291f00000000000040c145012a1f00000000000045cf45012b1f00000000000047dd45012c1f0000000000004aeb45012d1f00000000000054f945012e1f000000000000440746012f1f00000000000037154601301f00000000000021234601311f0000000000001b314601321f000000000000153f4601331f000000000000f84c4601341f000000000000de5a4601351f000000000000c5684601361f000000000000b7764601371f000000000000b3844601381f00000000000098924601391f00000000000084a046013a1f0000000000008cae46013b1f00000000000097bc46013c1f00000000000097ca46013d1f0000000000009ed846013e1f000000000000a3e646013f1f000000000000acf44601401f000000000000ac024701411f00000000000092104701421f0000000000009a1e4701431f000000000000972c4701441f000000000000903a4701451f00000000000090484701461f00000000000096564701471f00000000000093644701481f00000000000091724701491f000000000000868047014a1f0000000000008e8e47014b1f000000000000929c47014c1f00000000000097aa47014d1f00000000000096b847014e1f00000000000097c647014f1f00000000000093d44701501f00000000000090e24701511f00000000000093f04701521f0000000000009afe4701531f0000000000009d0c4801541f0000000000009f1a4801551f000000000000a1284801561f000000000000a3364801571f000000000000a4444801581f0000000000009a524801591f0000000000009d6048015a1f0000000000009f6e48015b1f000000000000a37c48015c1f0000000000009f8a48015d1f000000000000a79848015e1f000000000000a9a648015f1f000000000000afb44801601f000000000000a4c24801611f000000000000aad04801621f000000000000eddd4801631f0000000000004deb4801641f000000000000b7f84801651f00000000000015064901661f00000000000078134901671f000000000000d8204901681f000000000000322e4901691f000000000000a73b49016a1f000000000000204949016b1f000000000000755649016c1f000000000000d66349016d1f0000000000004b7149016e1f000000000000be7e49016f1f0000000000001d8c4901701f00000000000077994901711f000000000000d2a64901721f0000000000003fb44901731f000000000000acc14901741f00000000000010cf4901751f00000000000071dc4901761f000000000000cee94901771f00000000000023f74901781f00000000000081044a01791f000000000000db114a017a1f000000000000371f4a017b1f0000000000008a2c4a017c1f000000000000703a4a017d1f00000000000067484a017e1f00000000000063564a017f1f00000000000062644a01801f0000000000005a724a01811f0000000000005e804a01821f000000000000578e4a01831f000000000000529c4a01841f00000000000049aa4a01851f00000000000042b84a01861f0000000000004ec64a01871f00000000000051d44a01881f00000000000058e24a01891f0000000000005df04a018a1f0000000000005efe4a018b1f000000000000540c4b018c1f0000000000004a1a4b018d1f00000000000047284b018e1f00000000000047364b018f1f00000000000042444b01901f000000000000fb514b01911f000000000000c65f4b01921f000000000000ce6d4b01931f000000000000da7b4b01941f000000000000dd894b01951f000000000000df974b01961f000000000000e1a54b01971f000000000000e4b34b01981f00000000000098c14b01991f0000000000009acf4b019a1f000000000000a6dd4b019b1f000000000000aaeb4b019c1f000000000000b1f94b019d1f000000000000b8074c019e1f000000000000c1154c019f1f000000000000c6234c01a01f000000000000c6314c01a11f000000000000c73f4c01a21f000000000000ca4d4c01a31f000000000000d55b4c01a41f000000000000d8694c01a51f000000000000da774c01a61f000000000000e0854c01a71f000000000000e9934c01a81f000000000000899f4c01a91f000000000000e1a14c01aa1f000000000000d3af4c01ab1f000000000000e0bd4c01ac1f000000000000e5cb4c01ad1f000000000000f3d94c01ae1f000000000000fde74c01af1f000000000000fcf54c01b01f00000000000004044d01b11f00000000000008124d01b21f0000000000000a204d01b31f0000000000000b2e4d01b41f000000000000123c4d01b51f0000000000001f4a4d01b61f0000000000001e584d01b71f00000000000025664d01b81f0000000000002e744d01b91f00000000000017824d01ba1f00000000000003904d01bb1f0000000000000c9e4d01bc1f00000000000017ac4d01bd1f00000000000014ba4d01be1f0000000000001ac84d01bf1f00000000000024d64d01c01f0000000000002ae44d01c11f00000000000033f24d01c21f0000000000003b004e01c31f000000000000480e4e01c41f0000000000004f1c4e01c51f000000000000542a4e01c61f0000000000004d384e01c71f0000000000004f464e01c81f0000000000004e544e01c91f0000000000004f624e01ca1f00000000000054704e01cb1f0000000000005b7e4e01cc1f000000000000608c4e01cd1f000000000000559a4e01ce1f0000000000005aa84e01cf1f0000000000005db64e01d01f00000000000064c44e01d11f00000000000069d24e01d21f00000000000066e04e01d31f0000000000006cee4e01d41f00000000000075fc4e01d51f0000000000007a0a4f01d61f0000000000007c184f01d71f00000000000080264f01d81f00000000000081344f01d91f00000000000087424f01da1f00000000000083504f01db1f000000000000845e4f01dc1f000000000000856c4f01dd1f000000000000867a4f01de1f00000000000084884f01df1f0000000000008c964f01e01f00000000000092a44f01e11f0000000000008fb24f01e21f0000000000008fc04f01e31f0000000000009ace4f01e41f000000000000a1dc4f01e51f000000000000a9ea4f01e61f000000000000aff84f01e71f000000000000b8065001e81f000000000000bb145001e91f000000000000c8225001ea1f000000000000ca305001eb1f000000000000d63e5001ec1f000000000000df4c5001ed1f000000000000bd5a5001ee1f000000000000c4685001ef1f000000000000d0765001f01f000000000000da845001f11f000000000000a5925001f21f000000000000b1a05001f31f000000000000b2ae5001f41f000000000000bbbc5001f51f000000000000c4ca5001f61f000000000000cfd85001f71f000000000000cae65001f81f000000000000d3f45001f91f000000000000d4025101fa1f000000000000dd105101fb1f000000000000e41e5101fc1f000000000000e62c5101fd1f000000000000eb3a5101fe1f000000000000f5485101ff1f000000000000f75651010020000000000000036551010120000000000000037351010220000000000000fd8051010320000000000000f98e51010420000000000000f69c51010520000000000000feaa5101062000000000000001b9510107200000000000000cc75101082000000000000015d5510109200000000000001be351010a200000000000001ef151010b200000000000001eff51010c20000000000000290d52010d20000000000000321b52010e200000000000003e2952010f20000000000000433752011020000000000000434552011120000000000000485352011220000000000000546152011320000000000000576f52011420000000000000627d520115200000000000006d8b520116200000000000007499520117200000000000007aa75201182000000000000081b55201192000000000000088c352011a2000000000000093d152011b200000000000009fdf52011c20000000000000a6ed52011d20000000000000acfb52011e20000000000000b00953011f20000000000000b61753012020000000000000be2553012120000000000000c53353012220000000000000c24153012320000000000000c64f53012420000000000000cd5d53012520000000000000cf6b53012620000000000000c97953012720000000000000cf8753012820000000000000d69553012920000000000000d9a353012a20000000000000deb153012b20000000000000e1bf53012c20000000000000e1cd53012d20000000000000ebdb53012e20000000000000eee953012f20000000000000f4f753013020000000000000f50554013120000000000000fd1354013220000000000000ff2154013320000000000000fb2f54013420000000000000e13d540135200000000000007b4954013620000000000000d34b54013720000000000000bf5954013820000000000000a06754013920000000000000967554013a20000000000000818354013b20000000000000849154013c20000000000000869f54013d2000000000000093ad54013e200000000000008ebb54013f2000000000000091c95401402000000000000099d754014120000000000000a4e554014220000000000000b0f354014320000000000000bd0155014420000000000000c80f55014520000000000000d51d55014620000000000000d72b55014720000000000000cf3955014820000000000000d24755014920000000000000d45555014a20000000000000d36355014b20000000000000d17155014c20000000000000de7f55014d20000000000000e78d55014e20000000000000eb9b55014f20000000000000f1a955015020000000000000f5b755015120000000000000fcc55501522000000000000001d455015320000000000000f4e15501542000000000000002f0550155200000000000000afe55015620000000000000150c56015720000000000000751956015820000000000000ec2656015920000000000000583456015a20000000000000c03856015b20000000000000194256015c20000000000000464b56015d20000000000000bc4f56015e200000000000002d5d56015f200000000000008d6a56016020000000000000d777560161200000000000001f7a56016220000000000000cb8556016320000000000000ca9356016420000000000000cda156016520000000000000d2af56016620000000000000d9bd56016720000000000000decb56016820000000000000e0d956016920000000000000eae756016a20000000000000f0f556016b20000000000000fb0357016c20000000000000fa1157016d20000000000000022057016e20000000000000072e57016f200000000000000a3c570170200000000000000f4a570171200000000000000f58570172200000000000000c66570173200000000000001974570174200000000000001082570175200000000000000a9057017620000000000000089e5701772000000000000017ac5701782000000000000018ba570179200000000000001dc857017a2000000000000022d657017b2000000000000028e457017c2000000000000034f257017d20000000000000240058017e20000000000000290e58017f200000000000002c1c58018020000000000000342a580181200000000000003838580182200000000000000346580183200000000000000e5458018420000000000000136258018520000000000000107058018620000000000000127e580187200000000000001c8c58018820000000000000269a580189200000000000002aa858018a2000000000000036b658018b2000000000000042c458018c2000000000000045d258018d2000000000000047e058018e2000000000000050ee58018f200000000000005bfc58019020000000000000600a59019120000000000000651859019220000000000000942559019320000000000000a03359019420000000000000a54159019520000000000000a64f59019620000000000000ae5d59019720000000000000b76b59019820000000000000b47959019920000000000000b68759019a20000000000000c09559019b20000000000000cca359019c20000000000000d3b159019d20000000000000dcbf59019e20000000000000e3cd59019f20000000000000f3db5901a020000000000000fae95901a12000000000000002f85901a2200000000000000b065a01a3200000000000000f145a01a42000000000000017225a01a52000000000000021305a01a620000000000000283e5a01a720000000000000314c5a01a820000000000000395a5a01a9200000000000003b685a01aa200000000000003f765a01ab200000000000004a845a01ac2000000000000051925a01ad200000000000004aa05a01ae200000000000004eae5a01af2000000000000059bc5a01b0200000000000005fca5a01b12000000000000062d85a01b22000000000000066e65a01b3200000000000006ff45a01b42000000000000075025b01b52000000000000078105b01b620000000000000791e5b01b720000000000000842c5b01b820000000000000883a5b01b9200000000000008e485b01ba2000000000000087565b01bb2000000000000094645b01bc2000000000000099725b01bd200000000000009f805b01be20000000000000a98e5b01bf20000000000000b39c5b01c020000000000000b6aa5b01c120000000000000bab85b01c220000000000000bfc65b01c320000000000000c4d45b01c420000000000000cbe25b01c520000000000000d1f05b01c620000000000000d7fe5b01c720000000000000d30c5c01c820000000000000dd1a5c01c920000000000000d5285c01ca20000000000000d8365c01cb20000000000000dd445c01cc20000000000000e6525c01cd20000000000000ea605c01ce20000000000000eb6e5c01cf20000000000000f17c5c01d020000000000000f78a5c01d120000000000000cb985c01d220000000000000d5a65c01d320000000000000dbb45c01d420000000000000e1c25c01d520000000000000e5d05c01d620000000000000edde5c01d720000000000000f0ec5c01d820000000000000f7fa5c01d920000000000000ff085d01da2000000000000007175d01db200000000000000f255d01dc2000000000000018335d01dd2000000000000023415d01de20000000000000274f5d01df20000000000000305d5d01e020000000000000346b5d01e1200000000000003f795d01e22000000000000048875d01e32000000000000051955d01e4200000000000005aa35d01e5200000000000005fb15d01e62000000000000063bf5d01e72000000000000065cd5d01e8200000000000006fdb5d01e92000000000000071e95d01ea2000000000000078f75d01eb200000000000007c055e01ec2000000000000088135e01ed200000000000008e215e01ee20000000000000912f5e01ef200000000000009a3d5e01f020000000000000a24b5e01f120000000000000a6595e01f220000000000000a9675e01f320000000000000b2755e01f420000000000000bc835e01f520000000000000c2915e01f620000000000000c19f5e01f720000000000000cbad5e01f820000000000000d0bb5e01f920000000000000b2c95e01fa2000000000000017d75e01fb200000000000008ee45e01fc200000000000000ef25e01fd200000000000006eff5e01fe20000000000000e40c5f01ff200000000000005a1a5f010021000000000000cf275f0101210000000000000a2a5f010221000000000000b6355f010321000000000000b2435f010421000000000000c1515f010521000000000000be5f5f010621000000000000ad6d5f010721000000000000b17b5f010821000000000000c0895f010921000000000000cb975f010a21000000000000daa55f010b21000000000000d4b35f010c21000000000000dcc15f010d21000000000000e8cf5f010e21000000000000e0dd5f010f21000000000000e4eb5f011021000000000000ecf95f011121000000000000ef0760011221000000000000f71560011321000000000000f32360011421000000000000fc3160011521000000000000084060011621000000000000134e600117210000000000001c5c60011821000000000000276a60011921000000000000317860011a21000000000000388660011b21000000000000349460011c2100000000000030a260011d2100000000000029b060011e2100000000000021be60011f2100000000000026cc6001202100000000000029da6001212100000000000034e86001222100000000000031f6600123210000000000003c0461012421000000000000431261012521000000000000462061012621000000000000442e61012721000000000000443c610128210000000000003d4a610129210000000000004a5861012a21000000000000446661012b21000000000000417461012c21000000000000468261012d210000000000004f9061012e21000000000000459e61012f210000000000003fac6101302100000000000049ba6101312100000000000054c8610132210000000000005cd6610133210000000000005be46101342100000000000060f2610135210000000000006d0062013621000000000000240e62013721000000000000141c620138210000000000001c2a62013921000000000000233862013a21000000000000194662013b21000000000000115462013c21000000000000176262013d210000000000001f6962013e21000000000000227062013f21000000000000197e620140210000000000001a8c620141210000000000001b9a6201422100000000000027a8620143210000000000001ab66201442100000000000016c46201452100000000000016d26201462100000000000015e062014721000000000000fced6201482100000000000028f06201492100000000000053fb62014a21000000000000a60863014b210000000000000e1663014c21000000000000b81c63014d21000000000000b92363014e21000000000000be3163014f21000000000000b63f63015021000000000000b84d63015121000000000000c55b63015221000000000000216563015321000000000000cc6963015421000000000000d57763015521000000000000dd85630156210000000000004c936301572100000000000053a16301582100000000000058af6301592100000000000021bd63015a2100000000000019cb63015b2100000000000021d963015c210000000000001ce763015d210000000000001ef563015e21000000000000fc0264015f21000000000000de1064016021000000000000e11e64016121000000000000d22c64016221000000000000cf3a64016321000000000000c34864016421000000000000c15664016521000000000000c66464016621000000000000bb7264016721000000000000c18064016821000000000000c68e64016921000000000000c89c64016a21000000000000caaa64016b21000000000000c6b864016c21000000000000d0c664016d21000000000000ced464016e21000000000000c7e264016f21000000000000bcf064017021000000000000c1fe64017121000000000000c20c65017221000000000000c11a65017321000000000000ba2865017421000000000000c23665017521000000000000c74465017621000000000000b65265017721000000000000b06065017821000000000000aa6e65017921000000000000b07c65017a21000000000000b48a65017b21000000000000a69865017c21000000000000a9a665017d21000000000000a3b465017e21000000000000a2c265017f21000000000000f9c4650180210000000000005dd06501812100000000000056de65018221000000000000f6eb65018321000000000000e5f9650184210000000000002e0066018521000000000000de0666018621000000000000a01466018721000000000000952266018821000000000000643066018921000000000000673e66018a210000000000006a4c66018b210000000000006f5a66018c210000000000006e6866018d210000000000006b7666018e210000000000005f8466018f2100000000000065926601902100000000000058a0660191210000000000004eae660192210000000000004ebc6601932100000000000058ca660194210000000000004fd86601952100000000000054e66601962100000000000046f4660197210000000000004b02670198210000000000003d1067019921000000000000401e67019a21000000000000362c67019b210000000000003f3a67019c21000000000000304867019d210000000000003d5667019e210000000000003a6467019f2100000000000037726701a02100000000000039806701a121000000000000398e6701a221000000000000429c6701a3210000000000003eaa6701a42100000000000044b86701a5210000000000004dc66701a62100000000000055d46701a72100000000000057e26701a82100000000000059f06701a92100000000000058fe6701aa21000000000000640c6801ab21000000000000671a6801ac210000000000006b286801ad2100000000000071366801ae210000000000007b446801af2100000000000085526801b02100000000000084606801b121000000000000896e6801b2210000000000008b7c6801b321000000000000928a6801b4210000000000008e986801b52100000000000097a66801b62100000000000099b46801b7210000000000009cc26801b82100000000000098d06801b9210000000000009ade6801ba2100000000000099ec6801bb210000000000008ffa6801bc2100000000000091086901bd2100000000000099166901be210000000000008a246901bf210000000000008c326901c0210000000000007b406901c121000000000000804e6901c221000000000000805c6901c321000000000000836a6901c42100000000000086786901c52100000000000087866901c6210000000000008b946901c72100000000000091a26901c82100000000000089b06901c92100000000000084be6901ca210000000000008ccc6901cb2100000000000093da6901cc2100000000000094e86901cd2100000000000088f66901ce2100000000000073046a01cf210000000000006c126a01d02100000000000067206a01d1210000000000000a2e6a01d221000000000000723b6a01d321000000000000e9486a01d4210000000000005a566a01d521000000000000b7636a01d621000000000000ed656a01d72100000000000064716a01d821000000000000147f6a01d921000000000000e3856a01da21000000000000dd8c6a01db21000000000000dd9a6a01dc21000000000000d2a86a01dd21000000000000d3b66a01de21000000000000d0c46a01df21000000000000d7d26a01e021000000000000d5e06a01e121000000000000d9ee6a01e221000000000000d8fc6a01e321000000000000d70a6b01e421000000000000da186b01e521000000000000de266b01e621000000000000dd346b01e721000000000000da426b01e821000000000000d7506b01e921000000000000da5e6b01ea21000000000000cf6c6b01eb21000000000000da7a6b01ec21000000000000d5886b01ed21000000000000cd966b01ee210000000000006ba26b01ef21000000000000b9a46b01f02100000000000010a76b01f12100000000000066b26b01f22100000000000075c06b01f321000000000000c4c96b01f42100000000000066ce6b01f521000000000000bed06b01f62100000000000025dc6b01f72100000000000018ea6b01f82100000000000018f86b01f92100000000000017066c01fa21000000000000c2116c01fb210000000000000b146c01fc210000000000008d216c01fd21000000000000982f6c01fe210000000000009a3d6c01ff21000000000000a34b6c010022000000000000aa596c010122000000000000ae676c010222000000000000a4756c010322000000000000a3836c010422000000000000a6916c010522000000000000aa9f6c010622000000000000b1ad6c010722000000000000b5bb6c0108220000000000005ec96c010922000000000000bed66c010a220000000000007ee46c010b220000000000007cf26c010c220000000000003f006d010d220000000000003e0e6d010e220000000000002c1c6d010f22000000000000b0296d01102200000000000037376d01112200000000000078396d01122200000000000019446d01132200000000000076516d011422000000000000115f6d011522000000000000596c6d011622000000000000c4796d0117220000000000008f866d011822000000000000868f6d0119220000000000002b946d011a2200000000000074966d011b2200000000000019a26d011c2200000000000014b06d011d2200000000000012be6d011e2200000000000019cc6d011f2200000000000014da6d0120220000000000001be86d01212200000000000018f66d01222200000000000012046e01232200000000000010126e01242200000000000015206e0125220000000000001d2e6e012622000000000000063c6e012722000000000000e2496e012822000000000000ed576e012922000000000000ef656e012a22000000000000e9736e012b22000000000000c9816e012c22000000000000c58f6e012d22000000000000c39d6e012e22000000000000c3ab6e012f22000000000000bfb96e013022000000000000c2c76e013122000000000000bad56e013222000000000000b8e36e013322000000000000b9f16e013422000000000000beff6e0135220000000000008c0c6f01362200000000000043176f013722000000000000411d6f013822000000000000cc236f013922000000000000c0316f013a22000000000000c73f6f013b22000000000000d04d6f013c22000000000000d05b6f013d22000000000000d6696f013e22000000000000dc776f013f22000000000000e7856f014022000000000000e8936f014122000000000000f0a16f014222000000000000f2af6f0143220000000000009bbb6f014422000000000000eebd6f014522000000000000e8cb6f014622000000000000e1d96f014722000000000000e1e76f014822000000000000e3ee6f014922000000000000e4f56f014a22000000000000ea0370014b22000000000000f41170014c22000000000000f81f70014d22000000000000ff2d70014e22000000000000fd3b70014f22000000000000fe49700150220000000000000058700151220000000000000566700152220000000000000b74700153220000000000001382700154220000000000001790700155220000000000001c9e7001562200000000000022a57001572200000000000022ac7001582200000000000022ba7001592200000000000024c870015a220000000000002ad670015b22000000000000cde170015c2200000000000025e470015d2200000000000024f270015e220000000000002d0071015f22000000000000340e710160220000000000002c1c71016122000000000000332a710162220000000000003e38710163220000000000003e46710164220000000000004554710165220000000000004862710166220000000000004c7071016722000000000000537e71016822000000000000558c710169220000000000005b9a71016a2200000000000060a871016b2200000000000063b671016c2200000000000068c471016d2200000000000067d271016e220000000000006fe071016f2200000000000070ee710170220000000000006bf5710171220000000000006cfc710172220000000000006e0a72017322000000000000661872017422000000000000b81a72017522000000000000692672017622000000000000102b720177220000000000006434720178220000000000006d42720179220000000000006f5072017a22000000000000725e72017b22000000000000776c72017c22000000000000847a72017d22000000000000618872017e220000000000006d9672017f220000000000006ba47201802200000000000064b2720181220000000000005ec07201822200000000000061c7720183220000000000000ecc7201842200000000000057ce7201852200000000000055dc720186220000000000005eea7201872200000000000067f8720188220000000000005e0673018922000000000000581473018a220000000000005b2273018b220000000000004e3073018c22000000000000563e73018d22000000000000db4b73018e22000000000000405973018f220000000000003c67730190220000000000002e7573019122000000000000268373019222000000000000219173019322000000000000149f7301942200000000000010ad7301952200000000000007bb7301962200000000000008c97301972200000000000009d77301982200000000000006e573019922000000000000faf273019a22000000000000fc0074019b22000000000000010f74019c22000000000000011d74019d22000000000000052b74019e22000000000000fc3874019f2200000000000000477401a02200000000000001557401a12200000000000000637401a2220000000000000d717401a322000000000000097f7401a422000000000000fb8c7401a522000000000000ee9a7401a622000000000000eda87401a722000000000000eeb67401a822000000000000f4c47401a922000000000000e8d27401aa22000000000000f6e07401ab22000000000000f7ee7401ac22000000000000f4fc7401ad22000000000000f50a7501ae22000000000000fa187501af22000000000000fa267501b022000000000000ff347501b122000000000000f2427501b222000000000000f0507501b322000000000000f75e7501b422000000000000ea6c7501b522000000000000f47a7501b622000000000000f9887501b722000000000000fc967501b822000000000000f8a47501b922000000000000feb27501ba2200000000000003c17501bb22000000000000fece7501bc22000000000000fedc7501bd22000000000000f4ea7501be22000000000000fcf87501bf22000000000000f7067601c022000000000000f6147601c122000000000000f8227601c222000000000000ff307601c322000000000000043f7601c422000000000000074d7601c522000000000000fe5a7601c6220000000000000a697601c72200000000000001777601c82200000000000006857601c92200000000000006937601ca2200000000000010a17601cb220000000000001baf7601cc2200000000000025bd7601cd220000000000002ccb7601ce2200000000000037d97601cf2200000000000038e77601d02200000000000039f57601d12200000000000041037701d22200000000000047117701d322000000000000441f7701d422000000000000442d7701d522000000000000483b7701d62200000000000050497701d72200000000000057577701d82200000000000046657701d9220000000000003f737701da2200000000000047817701db220000000000004f8f7701dc22000000000000549d7701dd2200000000000056ab7701de2200000000000059b97701df220000000000005dc77701e02200000000000062d57701e12200000000000062e37701e22200000000000062f17701e3220000000000006bff7701e422000000000000c4087801e522000000000000540d7801e622000000000000ab1a7801e722000000000000eb1c7801e82200000000000039287801e922000000000000b0357801ea2200000000000014417801eb2200000000000061437801ec2200000000000063517801ed22000000000000695f7801ee22000000000000706d7801ef220000000000007a7b7801f02200000000000086897801f1220000000000008b977801f22200000000000096a57801f32200000000000099b37801f4220000000000009dc17801f522000000000000a5cf7801f622000000000000aedd7801f72200000000000052e27801f822000000000000a0eb7801f922000000000000a4f97801fa22000000000000ac077901fb22000000000000b6157901fc22000000000000c2237901fd22000000000000c8317901fe22000000000000d53f7901ff22000000000000de4d790100230000000000008e5279010123000000000000e95b790102230000000000003d5e79010323000000000000456579010423000000000000ec6979010523000000000000f9777901062300000000000008867901072300000000000017947901082300000000000027a27901092300000000000034b079010a2300000000000042be79010b2300000000000051cc79010c2300000000000061da79010d2300000000000070e879010e230000000000007ef679010f230000000000008e047a0110230000000000009c127a011123000000000000aa207a011223000000000000b92e7a011323000000000000823c7a011423000000000000ed497a01152300000000000060577a011623000000000000c7647a01172300000000000048727a011823000000000000d57f7a011923000000000000458d7a011a23000000000000ce9a7a011b2300000000000045a87a011c23000000000000cab57a011d2300000000000050c37a011e23000000000000c7d07a011f2300000000000047de7a012023000000000000c2eb7a01212300000000000030f97a012223000000000000b1067b01232300000000000018147b01242300000000000091217b012523000000000000f92e7b0126230000000000005c3c7b012723000000000000ed497b012823000000000000fd577b0129230000000000000c667b012a2300000000000019747b012b2300000000000024827b012c2300000000000032907b012d23000000000000429e7b012e230000000000004dac7b012f230000000000005bba7b0130230000000000006ac87b0131230000000000007ad67b01322300000000000086e47b01332300000000000095f27b013423000000000000a1007c013523000000000000ae0e7c013623000000000000b91c7c013723000000000000bc2a7c013823000000000000c8387c013923000000000000d6467c013a23000000000000e4547c013b23000000000000f1627c013c2300000000000000717c013d230000000000000c7f7c013e230000000000001c8d7c013f230000000000002a9b7c01402300000000000037a97c01412300000000000047b77c01422300000000000056c57c01432300000000000066d37c01442300000000000075e17c01452300000000000083ef7c01462300000000000090fd7c014723000000000000990b7d014823000000000000a6197d014923000000000000b4277d014a23000000000000c4357d014b2300000000000014437d014c2300000000000088507d014d23000000000000fd5d7d014e23000000000000756b7d014f23000000000000f3787d0150230000000000005f867d015123000000000000cd937d0152230000000000003ea17d01532300000000000034af7d01542300000000000043bd7d01552300000000000051cb7d01562300000000000060d97d0157230000000000006ee77d0158230000000000007df57d0159230000000000008b037e015a2300000000000099117e015b23000000000000a81f7e015c23000000000000b72d7e015d23000000000000c53b7e015e23000000000000d3497e015f23000000000000e2577e016023000000000000ef657e016123000000000000fb737e01622300000000000009827e01632300000000000016907e016423000000000000d59d7e01652300000000000041ab7e016623000000000000b8b87e01672300000000000039c67e01682300000000000099d37e0169230000000000001ae17e016a2300000000000091ee7e016b230000000000000afc7e016c2300000000000090097f016d2300000000000093177f016e230000000000009b257f016f230000000000006e337f01702300000000000076417f017123000000000000804f7f017223000000000000875d7f017323000000000000826b7f01742300000000000085797f01752300000000000089877f01762300000000000090957f01772300000000000099a37f01782300000000000097b17f0179230000000000009ebf7f017a23000000000000a1cd7f017b2300000000000039d97f017c2300000000000080db7f017d230000000000001ce97f017e2300000000000089f67f017f230000000000000804800180230000000000007f11800181230000000000003f1f800182230000000000004a2d80018323000000000000463b800184230000000000004249800185230000000000002e57800186230000000000003465800187230000000000001e7380018823000000000000068180018923000000000000e48e80018a23000000000000669c80018b23000000000000e6a980018c230000000000006cb780018d23000000000000d4c480018e2300000000000047d280018f23000000000000d7df80019023000000000000dbed8001912300000000000086fb8001922300000000000019098101932300000000000087168101\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-O3YJ5EQO.mjs.map","// src/specs/westend2_asset_hub.ts\nvar chainSpec = `{\n  \"name\": \"Westend Asset Hub\",\n  \"id\": \"asset-hub-westend\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/westend-asset-hub-bootnode-0.polkadot.io/tcp/30333/p2p/12D3KooWJaAfPyiye7ZQBuHengTJJoMrcaz7Jj1UzHiKdNxA1Nkd\",\n    \"/dns/westend-asset-hub-bootnode-1.polkadot.io/tcp/30333/p2p/12D3KooWGL3hpWycWyeqyL9gHNnmmsL474WkPZdqraBHu4L6fQrW\",\n    \"/dns/westend-asset-hub-bootnode-0.polkadot.io/tcp/30335/ws/p2p/12D3KooWJaAfPyiye7ZQBuHengTJJoMrcaz7Jj1UzHiKdNxA1Nkd\",\n    \"/dns/westend-asset-hub-bootnode-1.polkadot.io/tcp/30335/ws/p2p/12D3KooWGL3hpWycWyeqyL9gHNnmmsL474WkPZdqraBHu4L6fQrW\",\n    \"/dns/westend-asset-hub-connect-0.polkadot.io/tcp/443/wss/p2p/12D3KooWJaAfPyiye7ZQBuHengTJJoMrcaz7Jj1UzHiKdNxA1Nkd\",\n    \"/dns/westend-asset-hub-connect-1.polkadot.io/tcp/443/wss/p2p/12D3KooWGL3hpWycWyeqyL9gHNnmmsL474WkPZdqraBHu4L6fQrW\",\n    \"/dns/asset-hub-westend.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWG4YUe7AfSxVwyLQBRRMU99krssmGAUghqUFoVY1iPkQs\",\n    \"/dns/asset-hub-westend.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWFLR2UN6PMAUwNAjiWBAiEDoYcWRrtjDrUfRkdUssge4v\",\n    \"/dns/boot.metaspan.io/tcp/36052/p2p/12D3KooWBCqfNb6Y39DXTr4UBWXyjuS3hcZM1qTbHhDXxF6HkAJJ\",\n    \"/dns/boot.metaspan.io/tcp/36056/wss/p2p/12D3KooWBCqfNb6Y39DXTr4UBWXyjuS3hcZM1qTbHhDXxF6HkAJJ\",\n    \"/dns/boot.gatotech.network/tcp/33310/p2p/12D3KooWMSW6hr8KcNBhGFN1bg8kYC76o67PnuDEbxRhxacW6dui\",\n    \"/dns/boot.gatotech.network/tcp/35310/wss/p2p/12D3KooWMSW6hr8KcNBhGFN1bg8kYC76o67PnuDEbxRhxacW6dui\",\n    \"/dns/westmint-bootnode.turboflakes.io/tcp/30325/p2p/12D3KooWHU4qqSyqKdbXdrCTMXUJxxueaZjqpqSaQqYiFPw6XqEx\",\n    \"/dns/westmint-bootnode.turboflakes.io/tcp/30425/wss/p2p/12D3KooWHU4qqSyqKdbXdrCTMXUJxxueaZjqpqSaQqYiFPw6XqEx\",\n    \"/dns/boot-node.helikon.io/tcp/10200/p2p/12D3KooWMRY8wb7rMT81LLuivvsy6ahUxKHQgYJw4zm1hC1uYLxb\",\n    \"/dns/boot-node.helikon.io/tcp/10202/wss/p2p/12D3KooWMRY8wb7rMT81LLuivvsy6ahUxKHQgYJw4zm1hC1uYLxb\",\n    \"/dns/asset-hub-westend.bootnode.amforc.com/tcp/30004/p2p/12D3KooWDfepM7kqUHMXdGqJw3ZmtvAcE2CjPcnYjT2tTfAw3ZBd\",\n    \"/dns/asset-hub-westend.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWDfepM7kqUHMXdGqJw3ZmtvAcE2CjPcnYjT2tTfAw3ZBd\",\n    \"/dns/westmint-boot-ng.dwellir.com/tcp/30345/p2p/12D3KooWFZ9xqApB1wnFYkbe1qJ5Jqwxe2f3i8W25F3tKNXy59ux\",\n    \"/dns/westmint-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWFZ9xqApB1wnFYkbe1qJ5Jqwxe2f3i8W25F3tKNXy59ux\",\n    \"/dns/westmint-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWDoq4PVdWm5nzRSvEz3DSSKjVgRhWVUaKyi5JMKwJKYbk\",\n    \"/dns/westmint-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWDoq4PVdWm5nzRSvEz3DSSKjVgRhWVUaKyi5JMKwJKYbk\",\n    \"/dns/wmint14.rotko.net/tcp/33534/p2p/12D3KooWE4UDXqgtTcMCyUQ8S4uvaT8VMzzTBA6NWmKuYwTacWuN\",\n    \"/dns/wmint14.rotko.net/tcp/34534/ws/p2p/12D3KooWE4UDXqgtTcMCyUQ8S4uvaT8VMzzTBA6NWmKuYwTacWuN\",\n    \"/dns/wmint14.rotko.net/tcp/35534/wss/p2p/12D3KooWE4UDXqgtTcMCyUQ8S4uvaT8VMzzTBA6NWmKuYwTacWuN\",\n    \"/dns/asset-hub-westend.bootnodes.polkadotters.com/tcp/30514/p2p/12D3KooWNFYysCqmojxqjjaTfD2VkWBNngfyUKWjcR4WFixfHNTk\",\n    \"/dns/asset-hub-westend.bootnodes.polkadotters.com/tcp/30516/wss/p2p/12D3KooWNFYysCqmojxqjjaTfD2VkWBNngfyUKWjcR4WFixfHNTk\"\n  ],\n  \"relay_chain\": \"westend2\",\n  \"properties\": {\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"WND\"\n  },\n  \"para_id\": 1000,\n  \"consensusEngine\": null,\n  \"genesis\": {\n    \"stateRootHash\": \"0x1d0ce8ef6a9eef1685c4715925cf91ed1af635a752eac4f9945b1a1a4e2b6e51\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-TNXLGJUM.mjs.map","// src/specs/westend2_bridge_hub.ts\nvar chainSpec = `{\n  \"name\": \"Westend BridgeHub\",\n  \"id\": \"bridge-hub-westend\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/westend-bridge-hub-collator-node-0.parity-testnet.parity.io/tcp/30333/p2p/12D3KooWKyEuqkkWvFSrwZWKWBAsHgLV3HGfHj7yH3LNJLAVhmxY\",\n    \"/dns/westend-bridge-hub-collator-node-1.parity-testnet.parity.io/tcp/30333/p2p/12D3KooWBpvudthz61XC4oP2YYFFJdhWohBeQ1ffn1BMSGWhapjd\",\n    \"/dns/westend-bridge-hub-collator-node-0.parity-testnet.parity.io/tcp/30335/ws/p2p/12D3KooWKyEuqkkWvFSrwZWKWBAsHgLV3HGfHj7yH3LNJLAVhmxY\",\n    \"/dns/westend-bridge-hub-collator-node-1.parity-testnet.parity.io/tcp/30335/ws/p2p/12D3KooWBpvudthz61XC4oP2YYFFJdhWohBeQ1ffn1BMSGWhapjd\",\n    \"/dns/westend-bridge-hub-collator-node-0.parity-testnet.parity.io/tcp/443/wss/p2p/12D3KooWKyEuqkkWvFSrwZWKWBAsHgLV3HGfHj7yH3LNJLAVhmxY\",\n    \"/dns/westend-bridge-hub-collator-node-1.parity-testnet.parity.io/tcp/443/wss/p2p/12D3KooWBpvudthz61XC4oP2YYFFJdhWohBeQ1ffn1BMSGWhapjd\",\n    \"/dns/westend-bridge-hub-boot-ng.dwellir.com/tcp/30338/p2p/12D3KooWJWWRYTAwBLqYkh7iMBGDr5ouJ3MHj7M3fZ7zWS4zEk6F\",\n    \"/dns/westend-bridge-hub-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWJWWRYTAwBLqYkh7iMBGDr5ouJ3MHj7M3fZ7zWS4zEk6F\",\n    \"/dns/bridge-hub-westend.boot.stake.plus/tcp/30332/wss/p2p/12D3KooW9rqdajWEpC3i65zaTVR1ER2RmY6e26vndPsKhBB6WJ1k\",\n    \"/dns/bridge-hub-westend.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWN55mz6EQb5nrCgTiNL6nroVrRXygCiFDvHpeKk97Jqqc\",\n    \"/dns/boot.gatotech.network/tcp/33330/p2p/12D3KooWJHG6qznPzTSEbuujHNcvyzBZcR9zNRPFcXWUaoVWZBEw\",\n    \"/dns/boot.gatotech.network/tcp/35330/wss/p2p/12D3KooWJHG6qznPzTSEbuujHNcvyzBZcR9zNRPFcXWUaoVWZBEw\",\n    \"/dns/bridge-hub-westend-bootnode.turboflakes.io/tcp/30620/p2p/12D3KooWLeExhPWCDUjcxCdzxTP5TpPbNBVG5t9MPvk1dZUM5naU\",\n    \"/dns/bridge-hub-westend-bootnode.turboflakes.io/tcp/30720/wss/p2p/12D3KooWLeExhPWCDUjcxCdzxTP5TpPbNBVG5t9MPvk1dZUM5naU\",\n    \"/dns/boot.metaspan.io/tcp/36032/p2p/12D3KooWPaLsu3buByBnGFQnp5UP4q1S652dGVft92TFeChizFir\",\n    \"/dns/boot.metaspan.io/tcp/36036/wss/p2p/12D3KooWPaLsu3buByBnGFQnp5UP4q1S652dGVft92TFeChizFir\",\n    \"/dns/boot-node.helikon.io/tcp/9220/p2p/12D3KooWK3K1Mu5Jjg96Lt9DUzg84KsWnZo44V4KB7mvhGqi6xnp\",\n    \"/dns/boot-node.helikon.io/tcp/9222/wss/p2p/12D3KooWK3K1Mu5Jjg96Lt9DUzg84KsWnZo44V4KB7mvhGqi6xnp\",\n    \"/dns/bridgehub-westend-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWBsBArCMxmQyo3feCEqMWuwyhb2LTRK8hmCCJxgrNeMke\",\n    \"/dns/bridgehub-westend-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWBsBArCMxmQyo3feCEqMWuwyhb2LTRK8hmCCJxgrNeMke\",\n    \"/dns/wbr13.rotko.net/tcp/33563/p2p/12D3KooWJyeRHpxZZbfBCNEgeUFzmRC5AMSAs2tJhjJS1k5hULkD\",\n    \"/dns/wbr13.rotko.net/tcp/34563/ws/p2p/12D3KooWJyeRHpxZZbfBCNEgeUFzmRC5AMSAs2tJhjJS1k5hULkD\",\n    \"/dns/wbr13.rotko.net/tcp/35563/wss/p2p/12D3KooWJyeRHpxZZbfBCNEgeUFzmRC5AMSAs2tJhjJS1k5hULkD\",\n    \"/dns/bridge-hub-westend.bootnodes.polkadotters.com/tcp/30523/p2p/12D3KooWPkwgJofp4GeeRwNgXqkp2aFwdLkCWv3qodpBJLwK43Jj\",\n    \"/dns/bridge-hub-westend.bootnodes.polkadotters.com/tcp/30525/wss/p2p/12D3KooWPkwgJofp4GeeRwNgXqkp2aFwdLkCWv3qodpBJLwK43Jj\",\n    \"/dns/bridge-hub-westend.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWDSWod2gMtHxunXot538oEMw9p42pnPrpRELdsfYyT8R6\",\n    \"/dns/bridge-hub-westend.bootnode.amforc.com/tcp/30007/p2p/12D3KooWDSWod2gMtHxunXot538oEMw9p42pnPrpRELdsfYyT8R6\"\n  ],\n  \"properties\": {\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"WND\"\n  },\n  \"relay_chain\": \"westend2\",\n  \"para_id\": 1002,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0x8d1c5237a15a5e8c04497bf67eaa40c5b660ee75d82b0f1622c68158b7dc719e\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-ZIBWTERM.mjs.map","// src/specs/westend2_collectives.ts\nvar chainSpec = `{\n  \"name\": \"Westend Collectives\",\n  \"id\": \"collectives_westend\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/westend-collectives-collator-node-0.parity-testnet.parity.io/tcp/30334/p2p/12D3KooWBMAuyzQu3yAf8YXyoyxsSzSsgoaqAepgnNyQcPaPjPXe\",\n    \"/dns/westend-collectives-collator-node-1.parity-testnet.parity.io/tcp/30334/p2p/12D3KooWAujYtHbCs4MiDD57JNTntTJnYnikfnaPa7JdnMyAUrHB\",\n    \"/dns/westend-collectives-collator-node-0.parity-testnet.parity.io/tcp/30335/ws/p2p/12D3KooWBMAuyzQu3yAf8YXyoyxsSzSsgoaqAepgnNyQcPaPjPXe\",\n    \"/dns/westend-collectives-collator-node-1.parity-testnet.parity.io/tcp/30335/ws/p2p/12D3KooWAujYtHbCs4MiDD57JNTntTJnYnikfnaPa7JdnMyAUrHB\",\n    \"/dns/westend-collectives-collator-0.polkadot.io/tcp/443/wss/p2p/12D3KooWBMAuyzQu3yAf8YXyoyxsSzSsgoaqAepgnNyQcPaPjPXe\",\n    \"/dns/westend-collectives-collator-1.polkadot.io/tcp/443/wss/p2p/12D3KooWAujYtHbCs4MiDD57JNTntTJnYnikfnaPa7JdnMyAUrHB\",\n    \"/dns/collectives-westend.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWH4MtT6T9BE1nm2TL9ABmY3mSr61mZcge37pEch7Qw15S\",\n    \"/dns/collectives-westend.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWBMRn31J3wJh3eu96XFUiAmgP3eKUxyNCv7249NXrAarZ\",\n    \"/dns/boot.metaspan.io/tcp/36072/p2p/12D3KooWEf2QXWq5pAbFJLfbnexA7KYtRRDSPkqTP64n1KtdsdV2\",\n    \"/dns/boot.metaspan.io/tcp/36076/wss/p2p/12D3KooWEf2QXWq5pAbFJLfbnexA7KYtRRDSPkqTP64n1KtdsdV2\",\n    \"/dns/boot.gatotech.network/tcp/33320/p2p/12D3KooWMedtdBGiSn7HLZusHwafXkZAdmWD18ciGQBfS4X1fv9K\",\n    \"/dns/boot.gatotech.network/tcp/35320/wss/p2p/12D3KooWMedtdBGiSn7HLZusHwafXkZAdmWD18ciGQBfS4X1fv9K\",\n    \"/dns/collectives-westend-bootnode.turboflakes.io/tcp/30600/p2p/12D3KooWAe9CFXp6je3TAPQJE135KRemTLSqEqQBZMFwJontrThZ\",\n    \"/dns/collectives-westend-bootnode.turboflakes.io/tcp/30700/wss/p2p/12D3KooWAe9CFXp6je3TAPQJE135KRemTLSqEqQBZMFwJontrThZ\",\n    \"/dns/boot-node.helikon.io/tcp/10260/p2p/12D3KooWMzfnt29VAmrJHQcJU6Vfn4RsMbqPqgyWHqt9VTTAbSrL\",\n    \"/dns/boot-node.helikon.io/tcp/10262/wss/p2p/12D3KooWMzfnt29VAmrJHQcJU6Vfn4RsMbqPqgyWHqt9VTTAbSrL\",\n    \"/dns/collectives-westend.bootnode.amforc.com/tcp/30010/p2p/12D3KooWRfefWRo1AAB8LCJhVr8DDe9CvBmmKUzJpjd2RGk82pnL\",\n    \"/dns/collectives-westend.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWRfefWRo1AAB8LCJhVr8DDe9CvBmmKUzJpjd2RGk82pnL\",\n    \"/dns/collectives-westend-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWMAgVm1PnsLVfxoDLCbYv1DgnN6tjcRQbrq8xhbwo4whE\",\n    \"/dns/collectives-westend-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWMAgVm1PnsLVfxoDLCbYv1DgnN6tjcRQbrq8xhbwo4whE\",\n    \"/dns/westend-collectives-boot-ng.dwellir.com/tcp/30340/p2p/12D3KooWPFM93jgm4pgxx8PM8WJKAJF49qia8jRB95uciUQwYh7m\",\n    \"/dns/westend-collectives-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWPFM93jgm4pgxx8PM8WJKAJF49qia8jRB95uciUQwYh7m\",\n    \"/dns/wch13.rotko.net/tcp/33593/p2p/12D3KooWPG85zhuSRoyptjLkFD4iJFistjiBmc15JgQ96B4fdXYr\",\n    \"/dns/wch13.rotko.net/tcp/34593/ws/p2p/12D3KooWPG85zhuSRoyptjLkFD4iJFistjiBmc15JgQ96B4fdXYr\",\n    \"/dns/wch13.rotko.net/tcp/35593/wss/p2p/12D3KooWPG85zhuSRoyptjLkFD4iJFistjiBmc15JgQ96B4fdXYr\",\n    \"/dns/collectives-westend.bootnodes.polkadotters.com/tcp/30529/p2p/12D3KooWAFkXNSBfyPduZVgfS7pj5NuVpbU8Ee5gHeF8wvos7Yqn\",\n    \"/dns/collectives-westend.bootnodes.polkadotters.com/tcp/30531/wss/p2p/12D3KooWAFkXNSBfyPduZVgfS7pj5NuVpbU8Ee5gHeF8wvos7Yqn\"\n  ],\n  \"properties\": {\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"WND\"\n  },\n  \"relay_chain\": \"westend2\",\n  \"para_id\": 1001,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0x16c6c9fee1e2f89e117f917cb0e25a6cb4ed7fd395e7b6c24cb061b137692599\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-YMWTNFEZ.mjs.map","// src/specs/westend2_people.ts\nvar chainSpec = `{\n  \"name\": \"Westend People\",\n  \"id\": \"people-westend\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/westend-people-collator-node-0.parity-testnet.parity.io/tcp/30333/p2p/12D3KooWDcLjDLTu9fNhmas9DTWtqdv8eUbFMWQzVwvXRK7QcjHD\",\n    \"/dns/westend-people-collator-node-1.parity-testnet.parity.io/tcp/30333/p2p/12D3KooWM56JbKWAXsDyWh313z73aKYVMp1Hj2nSnAKY3q6MnoC9\",\n    \"/dns/westend-people-collator-node-0.parity-testnet.parity.io/tcp/30335/ws/p2p/12D3KooWDcLjDLTu9fNhmas9DTWtqdv8eUbFMWQzVwvXRK7QcjHD\",\n    \"/dns/westend-people-collator-node-1.parity-testnet.parity.io/tcp/30335/ws/p2p/12D3KooWM56JbKWAXsDyWh313z73aKYVMp1Hj2nSnAKY3q6MnoC9\",\n    \"/dns/westend-people-collator-node-0.parity-testnet.parity.io/tcp/443/wss/p2p/12D3KooWDcLjDLTu9fNhmas9DTWtqdv8eUbFMWQzVwvXRK7QcjHD\",\n    \"/dns/westend-people-collator-node-1.parity-testnet.parity.io/tcp/443/wss/p2p/12D3KooWM56JbKWAXsDyWh313z73aKYVMp1Hj2nSnAKY3q6MnoC9\",\n    \"/dns/identity-westend.bootnodes.polkadotters.com/tcp/30532/p2p/12D3KooWKr9San6KTM7REJ95cBaDoiciGcWnW8TTftEJgxGF5Ehb\",\n    \"/dns/identity-westend.bootnodes.polkadotters.com/tcp/30534/wss/p2p/12D3KooWKr9San6KTM7REJ95cBaDoiciGcWnW8TTftEJgxGF5Ehb\",\n    \"/dns/people-westend-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWHb7bp7fvxCwR1i6m8xn4j1ZSVZ6a49TVYbrWSC2sJhn4\",\n    \"/dns/people-westend-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWHb7bp7fvxCwR1i6m8xn4j1ZSVZ6a49TVYbrWSC2sJhn4\",\n    \"/dns/boot-node.helikon.io/tcp/9520/p2p/12D3KooWHhZk21Wzvsd3Un1Cp63diXqr6idbG1MEiUWaitUZuX4c\",\n    \"/dns/boot-node.helikon.io/tcp/9522/wss/p2p/12D3KooWHhZk21Wzvsd3Un1Cp63diXqr6idbG1MEiUWaitUZuX4c\",\n    \"/dns/boot.metaspan.io/tcp/35068/p2p/12D3KooWAtw8ybFXNmNdTUsvt2gfKwtuea9wDQT2b8FpbVNKYGwc\",\n    \"/dns/boot.metaspan.io/tcp/35069/wss/p2p/12D3KooWAtw8ybFXNmNdTUsvt2gfKwtuea9wDQT2b8FpbVNKYGwc\",\n    \"/dns/people-westend.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWD5T1YN8oZUEsRXWod69kYH67jrSXHm6tSvs7RvH4Cb3p\",\n    \"/dns/people-westend.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWSByQrekhxx7pyDMTZcnnWBBFdj2LtqN9QtTCBDckc2zi\",\n    \"/dns/boot.gatotech.network/tcp/33340/p2p/12D3KooWHwURYtEHpexfrZa8k8hVgVi5FTFr4N8HBnn9kPDsWfgA\",\n    \"/dns/boot.gatotech.network/tcp/35340/wss/p2p/12D3KooWHwURYtEHpexfrZa8k8hVgVi5FTFr4N8HBnn9kPDsWfgA\",\n    \"/dns/people-westend.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWE1btdwDhNpApg8BEe2QwJxdVDtz6a6BRhgTeUh9HMhWs\",\n    \"/dns/people-westend.bootnode.amforc.com/tcp/30016/p2p/12D3KooWE1btdwDhNpApg8BEe2QwJxdVDtz6a6BRhgTeUh9HMhWs\",\n    \"/dns/people-westend-bootnode.turboflakes.io/tcp/30650/p2p/12D3KooWQEhmZg3uMkuxVUx3jbsD84zEX4dUKtvHfmCoBWMhybKW\",\n    \"/dns/people-westend-bootnode.turboflakes.io/tcp/30750/wss/p2p/12D3KooWQEhmZg3uMkuxVUx3jbsD84zEX4dUKtvHfmCoBWMhybKW\",\n    \"/dns/wppl16.rotko.net/tcp/33766/p2p/12D3KooWHwUXBUo2WRMUBwPLC2ttVbnEk1KvDyESYAeKcNoCn7WS\",\n    \"/dns/wppl16.rotko.net/tcp/35766/wss/p2p/12D3KooWHwUXBUo2WRMUBwPLC2ttVbnEk1KvDyESYAeKcNoCn7WS\",\n    \"/dns/people-westend-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWBdCpCabhgBpLn67LWcXE2JJCCTMhuJHrfDNiTiCCr3KX\",\n    \"/dns/people-westend-boot-ng.dwellir.com/tcp/30355/p2p/12D3KooWBdCpCabhgBpLn67LWcXE2JJCCTMhuJHrfDNiTiCCr3KX\"\n  ],\n  \"telemetryEndpoints\": null,\n  \"protocolId\": null,\n  \"properties\": {\n    \"ss58Format\": 42,\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"WND\"\n  },\n  \"relay_chain\": \"westend2\",\n  \"para_id\": 1004,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0xec27848f8a0ece913132d150b34739e3412dbd10fd869ac8cbeda765c399d973\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-QZBWUVER.mjs.map","// src/specs/polkadot.ts\nvar chainSpec = `{\n  \"name\": \"Polkadot\",\n  \"id\": \"polkadot\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/polkadot-bootnode-0.polkadot.io/tcp/30333/p2p/12D3KooWSz8r2WyCdsfWHgPyvD8GKQdJ1UAiRmrcrs8sQB3fe2KU\",\n    \"/dns/polkadot-bootnode-0.polkadot.io/tcp/30334/ws/p2p/12D3KooWSz8r2WyCdsfWHgPyvD8GKQdJ1UAiRmrcrs8sQB3fe2KU\",\n    \"/dns/polkadot-bootnode-0.polkadot.io/tcp/443/wss/p2p/12D3KooWSz8r2WyCdsfWHgPyvD8GKQdJ1UAiRmrcrs8sQB3fe2KU\",\n    \"/dns/polkadot-bootnode-1.polkadot.io/tcp/30333/p2p/12D3KooWFN2mhgpkJsDBuNuE5427AcDrsib8EoqGMZmkxWwx3Md4\",\n    \"/dns/polkadot-bootnode-1.polkadot.io/tcp/30334/ws/p2p/12D3KooWFN2mhgpkJsDBuNuE5427AcDrsib8EoqGMZmkxWwx3Md4\",\n    \"/dns/polkadot-bootnode-1.polkadot.io/tcp/443/wss/p2p/12D3KooWFN2mhgpkJsDBuNuE5427AcDrsib8EoqGMZmkxWwx3Md4\",\n    \"/dns/polkadot-boot.dwellir.com/tcp/30334/ws/p2p/12D3KooWKvdDyRKqUfSAaUCbYiLwKY8uK3wDWpCuy2FiDLbkPTDJ\",\n    \"/dns/polkadot-boot.dwellir.com/tcp/443/wss/p2p/12D3KooWKvdDyRKqUfSAaUCbYiLwKY8uK3wDWpCuy2FiDLbkPTDJ\",\n    \"/dns/polkadot.boot.stake.plus/tcp/30334/wss/p2p/12D3KooWCZKEvAMJRk9nwTHJcTjgVw6bDEqryQ3B7n7scNtfNqPB\",\n    \"/dns/polkadot.boot.stake.plus/tcp/31334/wss/p2p/12D3KooWMFwJV935CyJXE8twfkKxRDnNWeEFd8jZWaoWZF22Hv8S\",\n    \"/dns/boot-node.helikon.io/tcp/7070/p2p/12D3KooWS9ZcvRxyzrSf6p63QfTCWs12nLoNKhGux865crgxVA4H\",\n    \"/dns/boot-node.helikon.io/tcp/7072/wss/p2p/12D3KooWS9ZcvRxyzrSf6p63QfTCWs12nLoNKhGux865crgxVA4H\",\n    \"/dns/polkadot.bootnode.amforc.com/tcp/30001/p2p/12D3KooWT2HyZx5C6BBeLbCKhYG2SqJYuiu7sLMxGzUcQBko3BMr\",\n    \"/dns/polkadot.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWT2HyZx5C6BBeLbCKhYG2SqJYuiu7sLMxGzUcQBko3BMr\",\n    \"/dns/polkadot.bootnodes.polkadotters.com/tcp/30314/p2p/12D3KooWPAVUgBaBk6n8SztLrMk8ESByncbAfRKUdxY1nygb9zG3\",\n    \"/dns/polkadot.bootnodes.polkadotters.com/tcp/30316/wss/p2p/12D3KooWPAVUgBaBk6n8SztLrMk8ESByncbAfRKUdxY1nygb9zG3\",\n    \"/dns/boot.gatotech.network/tcp/33100/p2p/12D3KooWK4E16jKk9nRhvC4RfrDVgcZzExg8Q3Q2G7ABUUitks1w\",\n    \"/dns/boot.gatotech.network/tcp/35100/wss/p2p/12D3KooWK4E16jKk9nRhvC4RfrDVgcZzExg8Q3Q2G7ABUUitks1w\",\n    \"/dns/boot.metaspan.io/tcp/13012/p2p/12D3KooWRjHFApinuqSBjoaDjQHvxwubQSpEVy5hrgC9Smvh92WF\",\n    \"/dns/boot.metaspan.io/tcp/13015/ws/p2p/12D3KooWRjHFApinuqSBjoaDjQHvxwubQSpEVy5hrgC9Smvh92WF\",\n    \"/dns/boot.metaspan.io/tcp/13016/wss/p2p/12D3KooWRjHFApinuqSBjoaDjQHvxwubQSpEVy5hrgC9Smvh92WF\",\n    \"/dns/polkadot-bootnode.turboflakes.io/tcp/30300/p2p/12D3KooWHJBMZgt7ymAdTRtadPcGXpJw79vBGe8z53r9JMkZW7Ha\",\n    \"/dns/polkadot-bootnode.turboflakes.io/tcp/30400/wss/p2p/12D3KooWHJBMZgt7ymAdTRtadPcGXpJw79vBGe8z53r9JMkZW7Ha\",\n    \"/dns/polkadot-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWFFqjBKoSdQniRpw1Y8W6kkV7takWv1DU2ZMkaA81PYVq\",\n    \"/dns/polkadot-boot-ng.dwellir.com/tcp/30336/p2p/12D3KooWFFqjBKoSdQniRpw1Y8W6kkV7takWv1DU2ZMkaA81PYVq\",\n    \"/dns/polkadot-bootnode.radiumblock.com/tcp/30335/wss/p2p/12D3KooWNwWNRrPrTk4qMah1YszudMjxNw2qag7Kunhw3Ghs9ea5\",\n    \"/dns/polkadot-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWNwWNRrPrTk4qMah1YszudMjxNw2qag7Kunhw3Ghs9ea5\",\n    \"/dns/dot-bootnode.stakeworld.io/tcp/30310/p2p/12D3KooWAb5MyC1UJiEQJk4Hg4B2Vi3AJdqSUhTGYUqSnEqCFMFg\",\n    \"/dns/dot-bootnode.stakeworld.io/tcp/30311/ws/p2p/12D3KooWAb5MyC1UJiEQJk4Hg4B2Vi3AJdqSUhTGYUqSnEqCFMFg\",\n    \"/dns/dot-bootnode.stakeworld.io/tcp/30312/wss/p2p/12D3KooWAb5MyC1UJiEQJk4Hg4B2Vi3AJdqSUhTGYUqSnEqCFMFg\",\n    \"/dns/dot14.rotko.net/tcp/35214/wss/p2p/12D3KooWPyEvPEXghnMC67Gff6PuZiSvfx3fmziKiPZcGStZ5xff\",\n    \"/dns/dot14.rotko.net/tcp/33214/p2p/12D3KooWPyEvPEXghnMC67Gff6PuZiSvfx3fmziKiPZcGStZ5xff\",\n    \"/dns/ibp-boot-polkadot.luckyfriday.io/tcp/30333/p2p/12D3KooWEjk6QXrZJ26fLpaajisJGHiz6WiQsR8k7mkM9GmWKnRZ\",\n    \"/dns/ibp-boot-polkadot.luckyfriday.io/tcp/30334/wss/p2p/12D3KooWEjk6QXrZJ26fLpaajisJGHiz6WiQsR8k7mkM9GmWKnRZ\",\n    \"/dns/boot-polkadot.luckyfriday.io/tcp/443/wss/p2p/12D3KooWAdyiVAaeGdtBt6vn5zVetwA4z4qfm9Fi2QCSykN1wTBJ\",\n    \"/dns4/polkadot-0.boot.onfinality.io/tcp/24446/ws/p2p/12D3KooWT1PWaNdAwYrSr89dvStnoGdH3t4LNRbcVNN4JCtsotkR\",\n    \"/dns/polkadot.bootnode.stkd.io/tcp/30633/wss/p2p/12D3KooWEymrFRHz6c17YP3FAyd8kXS5gMRLgkW4U77ZJD2ZNCLZ\"\n  ],\n  \"properties\": {\n    \"ss58Format\": 0,\n    \"tokenDecimals\": 10,\n    \"tokenSymbol\": \"DOT\"\n  },\n  \"forkBlocks\": null,\n  \"badBlocks\": null,\n  \"consensusEngine\": null,\n  \"genesis\": {\n    \"stateRootHash\": \"0x29d0d972cd27cbc511e9589fcb7a4506d5eb6a9e8df205f00472e5ab354a4e17\"\n  },\n  \"lightSyncState\": {\n    \"babeEpochChanges\": \"0x040b338fd6078282d02f72d3f9971b5766826f225fd3824a2354ded9aa33266b2bd6a680010133424f1100000000934b4f110000000004741947c54c1306796884262da207453a85cfe5858b5b76a22ec41763cef4324425b0800101934b4f1100000000f3544f110000000004e223d8e6c581c8af7d9867902b3ac7e877b2bf4fa81d3db512f41646d984e0e374b9800101f3544f1100000000535e4f110000000000000c0b338fd6078282d02f72d3f9971b5766826f225fd3824a2354ded9aa33266b2bd6a6800101372900000000000033424f110000000060090000000000005d0976441c448aefcf40a72128edc9b44a4f7ef9c267c503e98f5f9c72d5e9e92f00010000000000000012549e625056f554578ab32d29cbfccc5529e404db8234af00a0856923f6e3030100000000000000d0e8ddfdeacd8e163b01ca4da1a4e856312b0de412b492247070f2721f7d80380100000000000000ae5797a6246fc7f96394d09712e9abdfb1ca3e7793c3f093aae6c126024ab72e01000000000000006c9c53f3824abe976dedc2792e1c6b8cc55c317eed2f30916c3229b60e579206010000000000000080f20c794a97e6080e7b81854feb03a4924ee28b33bb2269cae8fa582dfedf2e0100000000000000ec8fcbae6ca9d402b51bb0bde913f0c29769d8d1b9653f4933db117890fe38720100000000000000c29a52b01236996d090dc112e63aca2ec383da79f89c5db420319c7a7ec9645a0100000000000000cad93fbaf78ceb031a3677b27a9e579688602099c97258c746b080422c34bc4d0100000000000000f69a39a051376ea1dbb2a00c3e18369664beb746ca10453dad7db5f9341fde7e0100000000000000669980c5e00b5dfa8c6006e58475c4f0971f22a1a317428ca585afb06a570c1801000000000000002a7c2591d7e46c931a3430a059b2b05be4b4871540a837037c1c4fc7d352ce460100000000000000e81d0d57bfad740cb4d3cb5e4a37fc80687f9d0d0eb3ac83883bcf8b77bb937e0100000000000000927ee7f0822e513b33a24900122754dee60a1898d90781dafdad6697fd2182070100000000000000906ec0a56171d27f65c29683a31c71a87a4e32b273596a0a704ff07ba344d0660100000000000000e03e8b838de23dc7dbe96982a43cb33b406d6f9978132eac11ae555efa8d226b0100000000000000ba395fcb33327501109ed40712c7a372d25bf3339edfabe2a1964fb7b5d4d82401000000000000003a36963a41de2036872df1c499f45acc0e7179457316ec2d99a6018e078f6a050100000000000000da9bf8b51b8396da87113ba296940b23a9fb3cfe7c3fd0b3d541331121b8f57c01000000000000003c2943d6777720179fafe62691d06390210dfb03a1f4c77150cd7e708b86be1e0100000000000000f63eafe185aeaf7071501cebcc6e0f1d1ed4a21a7994a64ae7e51f98c23218500100000000000000c0ff0ad7de8b9403d14459655c0ec4107f119e74406be3161faf15b5ddf1395001000000000000004c9886e2e62ee92a6778d6a7928052732044b64fa61969cd8e37f3f7e3406f720100000000000000baedcd27682fb5289898711ed238fa3fb93b4cb4f4068e0e2b359d91dc726c550100000000000000a23237719086db4a3c6e4ec298be9fbd400f80f44b694f69cc1dd1cd84ecfe1d01000000000000006a84d16e0196639a917baad78fb5e3b716d7ffd6c447ccadeedead0882482e6e010000000000000058cc4e48b26665ec1d6c2a128f0f5b70434ab4a771743429058b963257e6563d01000000000000007a42c87630d09e4d4b041cee10fe20840cc0ae2089514c51e248e137c6d5ab0a0100000000000000c80f32768e5bcf83095be0dc3db1f59f43650d58aebe4ca599dc02de3bbede120100000000000000228dfe58ff0326d8c8e0c51476692d0610424b01244c52c561f02dd133e83e0a01000000000000001e8d73bf05780fababa732bf11ea5251ca67db705955f2936fdbf2f1f1c8f13601000000000000001c0856b04c28ed8bdee95096f95646efc095737d4482b475053245db424e022901000000000000005237e4509f24bc9e8bf9bfd78b594219d86853ae16601f692f10c9b16b88f83b01000000000000002cbd43e95a827c6a62a0621b1297f0328c5919029173b2b4fabea89fa65848380100000000000000a0511c06f6fc317bbc43df8b47b7c36ca7e3ad43010607e88f21cccb32ecbd5b0100000000000000c87bf24eebac187534f689c35ab23038e0a49f890fabfc10613ed78dba1f67170100000000000000362701313409bc9d55aee9cb57aaa8d97bea27bcb918c08b99e8cff3930193650100000000000000e2b359b93abf559cd326ef07a6a46784b945518e1f1a4c04ebe42390f2574c590100000000000000b88e803bf4241f6465c0393416858ce6a0ac3c350be41cf0434a3566eeb79c4701000000000000008084d934bf7a7ad960de3b325ad5109d10eef00e90d6ab776240b7bbeb6a6a7e0100000000000000c66476c56a07a8e1a9e57bec84efe2817bddb252ddae336d0e64ae2905397e0d010000000000000028187c06cc7e198c70651d2e147597c299c3953f11113715847b419d39e41a7c01000000000000009ce7136b5fb85ba83e153c64a212fca1eee9c3ee42fd010fb27f2d55695b2964010000000000000006d2846642c835b0fb1ff1ef908449376aa8e7c0f3352e55da9a1e97e9528b230100000000000000d4be6f891156ecfd5f9ff661f780884578ac18dcc999b7f574510196c5243c220100000000000000ca29cefbde4a2167c5b0b4900dd25b7dd6877111ce52029ee334f02aa9a05459010000000000000076fc5ac3dc0ccd5aee50f0a686a0cb5ceb87bb037034dfc5e050cc477a327f15010000000000000090ec82f5e06c40da655eeb675214dfdb8f9b9a798c5e78e08508fbba7265802c0100000000000000f8a681118ea0bb9dfde2813ce5144eeb5cee881c27883de1c0c759255ec32654010000000000000016e3f8f5ce2e2b22b816bed27dc767115513198ec47d2795ba9edcccdde2d1580100000000000000b43a022b3cf70d5c2f080a2759d1778cc246f6f817df139391b9e7a952fdb14a010000000000000000345471200425fecce5c32680fa8c00141ab3ba13dc931f753ee13ae522816801000000000000005a7b37e2ebee5d486f6303cfd40b06c0632ef4fd77f4a002e9129b390c1fc0030100000000000000c08c91ecf8879f5042960c3d61c0e74f125463ca2726e6655fb922af5cdcb8510100000000000000e23173bf099d870567cbac0e94678e62cb1a554f4bf92c14ec2d46d9dbd8570101000000000000002ea26372b229d0438f7fa19e9c80f90fce3fb41024c48475938d6501ddd8547f01000000000000002c637ca0ccfc4fcf709987ab93933fde929687f615951f4db7ada7cba981e53e0100000000000000e67c524e443cda4cd27dfcce70488a5d23a93c8c46a5e83ef5a69eff3a02fa5a0100000000000000a42289d68c963358f3c450a850242bb53121e73e17f0e2ea2b93327446bea33c0100000000000000caa53cf3e8ff5604d82bac45868bf3e25115f7e8f4d1cdfada68f8487d03e91b0100000000000000a263f3bcd4a33da0112d793dd5f5beeb40eacfa37e3775e2493fa502b7215b5401000000000000005a22cbf55ee96a7afcbaca5ea1aca08d0eb0f2eaead1f43633ead6ad4c30c2390100000000000000a8e470f2339e3ed0da456780dd9207e9c6a02459238ec3057a6ade01fd6cd60a010000000000000002a65bcaa7e35aa60238c784f04cb771829d09bb4e0f7c1c14f4e0b4c0a6391e0100000000000000987b7ecf8720281e4a19c9c5ec6c62be561b6c2e341d5236a6ec0ada32f3e15201000000000000001892bc64859d3f7b26ea46d591a09bb55a80bcb9f2624c61d2ae145e01f56f530100000000000000da2ae63c251f8974aca311e38f118bc404fa9492c08576a3863d2944f979010501000000000000005c7f05d77f853f3eb8d4989fce36d0808b6d2b881e26f13c01e939b5d489a57d01000000000000004e505749e5bbc4d469c2640820ce1f61e6062bc979e258d26e2c1a52b820b47e01000000000000001abb26ba0076d5e001abdcf18d4454fe25c5076bc5ceb1b8f35d6041670c265f0100000000000000b4ffe3c5959ff37c11c6f19d91926cb97aa4bf0f604919e1753bb55664d061680100000000000000bc4c9b5425f9a2aa09e3239332c702dedbfffa2b9f4cc1b978b307fc1fa1337c010000000000000082adf4dd2acaba7512ff01a3134c63e3491c88a10ca13ceb92b60d34b6750b76010000000000000092bafded3ba1164305a4cf1c91ceb1b6a59f469d54ecc206bdacdcda49c3317e0100000000000000b0d4319a2ca1e335440462c6b9c80cefdbfc9aa735d84301a618ca480b56033001000000000000001ee57665488b5ad6f7358157b73009a4ec4b14b4a03c976487e188f54bff7d6401000000000000007022686a613aa1387ea688fdd9a23170bf587f7f1dbaf7b8b022f120f3a4560d0100000000000000ecc606e7ba3eed5d7f6bfd00bf679f03078761d1cb50904d1caa1080431d4c340100000000000000dc387c0249b862faa91a5fd30d1c2b86dbc741b2feac242f274bed763d647b6c0100000000000000b8a8e69633fa379fe4352c821dd604a972b4ab8a5160a23bd182708c7499a25b0100000000000000e208256605f8c064a2ea00f8503293d0dc4aeaacffe021a328cd164c22b623370100000000000000c47bd7af17b6ad4f01e2880542c8596f5a800a20eeebcb37756ffca94a6b98100100000000000000d8632901dcd20c3415349407ec167034633de91f3aa55f64c8bb35882c1b0c190100000000000000dca99b59a15cd12f53c2e069f1cc440c0d73b7f0f027e3d5c759ad5af7b32f4b0100000000000000a0c43d97dab42fbb65ba08c2960f8ad589ba74ce07bb67026b0e8579c3cbfc2301000000000000000052e7df40b49fce61ac4b3099dd48d9bd647d7bdd7dbc9e9f487e2301dc3b070100000000000000ea0749561740bb5b862e9fcc46276fda111ee7e17daeb5477db453b72912103d0100000000000000c8871294c3dbdab785b4e8ad9604d5f49db8260dcd8980275c980222e6eb2616010000000000000072a85a9dcc0af833b5a21a51ecbc4a9855c2bef8848e080ed70ac48cd1efdd5f010000000000000022be2f3730ae90e20d6e0f1f76fceedd68c124fd811c18482937756127ce86260100000000000000c49cfd152ce3ac1fa142b3b6e720cb173eb7f43c82f021418253a070036f870c01000000000000000ee4b76ec5fabf011e00bc27b36039f3d397e021e8bcacf9532c90fc419fca0a01000000000000003e79c115c01b959b324017f0e1120c76d87b9a734354fde75efcd05401ad173301000000000000009a0b42e88688d547c31a1bb811fdd062908e88a115e1aae39f7bdcd95b927d530100000000000000e2d8807911771f762fef5e4fc3b9685517fe91c48292ec59b4ce13f95bc8ee5d010000000000000028bc76450afad8c197d1fe5ab3055c8635a370d4adfa17c898b3df93a50b00300100000000000000ecce43c0be3c9134a0d62a0b6463edfdbfce1b2b1bf5bac37fbd1cca48e67e7f0100000000000000887fb18ae45feaa3e449cd0b529bcf06a9795b3cf50425c79e1fe94c1db2ce7d01000000000000008ef93e538ce16500f27b4c9a10ef7b02a46d8a9624778d0f83b9f7d8b560466501000000000000006a1274b6748bf822ba80c9a9416abd3cf591b7aee6adabb8359b7dbed8ebb3770100000000000000c6cfae23e776800744036a6881d20a0476c1852cea187fbf9db79c936c51db0d0100000000000000a893d2350e59c1937884d11aa7b680ceb7a49e7dba5a43c67bc7c20bf347c60c01000000000000003001ce583fa1f84555808f8d46c3242ce898060693aa0573f54d139263c178390100000000000000ee664cd198f60d2b4001685a624bbdb21ddcd881138a5d61bd450f298fc5833a010000000000000068f87aa7b88463d824f528b27648d786a8d3ec27e76fb920bc1294ef9432b60b01000000000000000662540f9c0bfc8a506a5aac301c968d56fb0e34fc6c05dfdd84e42369982066010000000000000090708d1a49ef0acfea32147a109d08d9aa15ee975b5237d56ca9b8e324108d0f010000000000000010bfe5eb616325eacbdad84fbf5ecc1f78d087aa73c1fc98e11bdd6a4251616a0100000000000000f69224d54ca679f9ec7e439aba674a55db13ce25326d47db8cdcf3af867a55180100000000000000487c6aad1cc26893dc7e498916a4c23d303f098c04b0a8b0c8242fbb7e73a16e01000000000000006a2524121efd4ac63c3bd00c6de3b84e23ad19fc60f886737e660d8fc6496a57010000000000000040aacd312f15eb011e69b5dbd8fe8b59637e06259954e6e3d8f940e4dfbe2071010000000000000088f9a16886165d00612032cb1b36669ad62b7325536f499191e711134c71b60701000000000000005e6d779219b00ae1d5e6320faff3b6eb963d3acf7705672ff56d2cb46ac44e5b0100000000000000d6152835cb59040a40a5a4ee3a4d481937b7ee9d4a5649abeac6c535d9e177080100000000000000bc4b95226de4e10f91e0254cfe4541232252deaa347f567df124aba81bac4d3f0100000000000000246615914ed30f855044df3bd63491ca8af4af5614e2a19d5c9fcf8950d13d2a01000000000000001eb833e31087d6baffee4e7f1d9a8e3b7013ea392c81f74313a354ba82e92f6b01000000000000009c8c7c8c91df0ed53864f69017d530b5ebda3ab4bde3c67027e70893213d533a010000000000000018ec239eec5457ba11a41518e7c5f98266d1bdbd67602641d04706f95dba5c56010000000000000024efac2829d615703c5375dae24d394207fdd26d9522bad7af6bac64ede127020100000000000000b640f3f59d687a3a2608d96c86ae380ac41d9dc8b175480a8830e27fc046590c01000000000000004ce4e086b9782dfddcb793a3efd7cf37db624c0f8274b1fc36f0802d5455386d0100000000000000aa7e2ba0ac23106e76a0efad2d34747769f669773802cc4de44aacd6bd3e3b780100000000000000f80643f72c8dc15503957f39e6d9ac6ef062c43c516a1693e87d2a3d26e9db440100000000000000e487051ee8f32b1f8d0af5e897b49730512303471416e689ccfd0bc3f726f447010000000000000028a027ca1c0bdeebfc8fce85ac4bac48cc072523d9c4a86b4f2594f9142e7e3b010000000000000042e4c41a899dfb238649e5b17dc232c2699353635d60e6a3bdcd71f9b82cda300100000000000000ce4bfd8c5611b1637066ef9e579c85efadfc9513b882184e00b75871ef7f5a2d01000000000000006c0da9efeafc98d2d9d0e21c83e6e937f417ad40f2aa3a21ccf818dd5af7b21401000000000000008e2eaf4ac96e0c79da47d2b76956b3578b39ee4979826d5344254fc37d508c04010000000000000028558e46037c51ece4d39a8a4d34688662e629413c221d6226afe454240e702101000000000000006a4284a9ea438f75390f6547faad885b235c208634da73a79e2e61c51a7cb410010000000000000098da9bbd7e6841370bac817945d087a30acbbf47f7c0243d6588ed32f7c6f15a0100000000000000a8660bbc474f75581461f56345e963a788f3c33621bd0c1eb9834dae39719d6e01000000000000004a2073ae31b3df10d285eae6a5befe069183c4c6a6ffa1b2bf432011d0d475200100000000000000bad91c9aefe173441dae1f273e55090706d412b0723d39bd6c3af053feb1832001000000000000003cd9f863ad569b4f0123525a9307dff13dd75a81afe7b790d4d8ff418d97d9110100000000000000c6debd3b107fbd0382b1ccbcd0063aea1f8e27536561fe7f3c6ceb77b219753a0100000000000000be03fe6bc03a7884524047567a8ccf43b3c988bf3b447ca9e1520d1c1f83c53901000000000000005461977495f9c407a8d951e860a1cb2087592103229bdbd879629cc538a4182b0100000000000000b05ad6cde0dfc019d740c3f50b8aac16550ff4c197da19cf23b9293f0c5c3907010000000000000034caede521bed7f19b2a5577234751925041209dec1c5b5771d8ccf33ebd49340100000000000000bc56c07cea21bcbbe058aedd2ced9fb4757caead55f96bda9bed1c9669c32b640100000000000000900dc8c915b18e03f8f76a9b3b22a54093107754f41838668c8036e7f8b1104a01000000000000002a01b311e75c72271b3638f584b85169e1118dc5f850862add04c9a20e33b131010000000000000078e1a4fecbaac940c04e0b591a01ea66a574b5098852ded2810e3a534971111f01000000000000006ccf2ce8e149999a7bb996faa65194e60aeb7bcd1937c787f886fe979fb49e660100000000000000804b093ff2d1b39b5aacc853c80a1b652621a4935e8c8ee53c63605c1afaa92901000000000000002ae95f2c9044d5ac14beb234c93680b9a0591a70b3c8ef971f3a1498b580fb4c010000000000000092bb282d46ed819e46fb3ee929f7662354fd095b67a8ed51326b47e83f86653a010000000000000082b820c5bee8ee77e35203dab387f3434b8502e5f1c35dfb2ad15b5c89d47b3c0100000000000000c8469111a9fb61c9e775d2b006fff88874ca9633fced938b19794026f2e9a03201000000000000001cf3446b4b5116a1784d92cdc5101e55a5fb91ed3d93efccd06b304a94362d0a010000000000000092c983ba8716f18073d703e7c8556e65e2565ec377f0f9a587d7aa8b5ec4d8500100000000000000583ecb6dde18a2984d5af56152b337cc90422fd6e937b5e06c1c6caf50be212a01000000000000009201460331a900504240f5a2b781820c82762b95f9f2f5993caed8913d8be96b01000000000000004a539d3b629768bcd3530b7aa14c53fc84252c8258e610f57ea5730466e0d02b01000000000000007203b3dc19c8ff42aa0c90d10328d49e6aae97e4d93d91f33e584fd16073f27f010000000000000052d58f50e6ad841adfe6c77ff332933380712c236fb0bf00565d58b3b4e41d78010000000000000018d99932bbe04bdd1da315bf0c31ad9ce555b84955db60ce36bb73aec0d8a61c0100000000000000e26019435e06e3807360b546063269ab645e6fb3db5c99a573d0fec63e2d537101000000000000000e1b958cae4235db85f6494d1d9af4d435450f10e39485735d7ebe0b6454933b010000000000000006379582a73f65db4e43d5bb5d73209c970b2a4c903b3dbfee465eaf7b89336d010000000000000024030139ec9ee0e2d96a22a3fa6b3c3e3bfe7fbf57bf55e9efc4586a103447200100000000000000e286e0fc739361f9e413d23c3faf924082604a390f3e81821e257c4eea5ce33701000000000000003873ac08836bf81aa2077f9e50a55b47e02697ad9fa6704c7044fca0c93b8243010000000000000014310c77d75c16c2c8d1191a58d4fc682c4e6e5e8f9c1e90eb15dadb13d26a1501000000000000008e0fdb9c1c1175d91743756935f6860d7b29cbce467275b8de3e6425717f6b02010000000000000040a2527ffa7d30d788eca127d435c8b5aa48972cda538b9a1627a57e85c8fa1901000000000000005673f82330a1ee6e6889f745fe15c353f5f8989e4a281e8aa53e38ce1e74556d01000000000000002254fb9324a6a9af450ce3a4f5ab25f55deb22161e520b2308b8aaff42e3aa740100000000000000a64dd29103d43e3e898a41f3630ff88b2420953febb931c70ff543673efa251b0100000000000000e8f048309f03e3d9a329dc04bc48c8d1befee7928d14509121dd06e76cec0d2f010000000000000028e972febaf463f22d1108053e7c26ccde1e6018d7c302985bc227557e0a663b01000000000000004e524be219d0f11a7489c27d0e01cb5430bc9f58f75a66ea464b717dc25c9a6b01000000000000009e02cba73dcf1d6eec957735bb3363e66c2633173f821d0edd97e9fc3fa1242c0100000000000000ae46c529ba59b0317f6aa431f79802e087355cc32d78258809da6a9b04b8f2600100000000000000ccf230623370ef275ca417c85fbc6e913e3f5fc8f51e67f54beb8686593ec8540100000000000000fced8f1dff4f6c6852b0d643e26ee532086e72be7aecee28d94d1d59b5f9986701000000000000004a905d0574cebf6e8d00d382b104fc8ee1c008f1b9ffa6fa5c3b67ff29719c0d010000000000000002ecd96c1f4fe196d53f262e75770f1a81c80b5764b01383fb77e20684f2096d0100000000000000fcccf8e328b4cc968af52a23f6c960b5e34241047b630c19a0661ace6b9c273b0100000000000000ac09c48f5dfccc02362c489ff2522fdad54d1f37e6b47729411a93227f602b780100000000000000be6106f9217a1847af66de9510fdfb40514409556506ddc1c1a897818434125b010000000000000016f2e4835ecdec4c373e17f48c95cb119263cbd229f7e32c0e2185f7003d7d030100000000000000f0eaddce7b63e666eece637b1128a3e4f54178df87a9b032fa3312f68fbd961f010000000000000004d74e03b4e2cdd0109cc8efc5bbdf36b7b5d89c17d4a56cfdb23b0b2b77e10101000000000000009818995c97cbaa84126b0c0a8c4c26fb202e4b255811ca5627600c11c19242760100000000000000e09b8828dd7af7ab17cb00b73845871b69d925dcc38d6d29f79197f5c87bd8460100000000000000b2518044cc31062ee50fa81cb6983f314291a0300865fa5cfe149829c5050d240100000000000000483121b03dee3c339898579611a968f6382ac2a0acf3da8b9e428b2817c8de380100000000000000d2c97828a993b57a79d8e70e9b6cd9e90f01d1bbd934641509aeebbc625b9f7e010000000000000050f3e6382021e3c7ee097307d03933571ad45bd056c0eacc86b9ed5174dbd52e01000000000000002eab7eb696d4c3dcef6c5f74cd704eed76fb51790875d8ddbbda133ae7a42f7601000000000000006cb2f0f0e5fe70eb547a0814ca5346f59f7f2ca74c00714aad555157cd5a29490100000000000000042e7c894dd88fb2b0c7dc7a56b44269e0ee606c73d5a297cb459dbfc7649a17010000000000000022c2c3039397556619d3fe4568b5141ef07d326918616d32c6b0287535850f0d01000000000000004ad8fedb395dc0ed63e0edbdbd2d20555b61a46aa7cd751e4308335c277cbd6a010000000000000054a4e00f3df9f09e23118cce02f804d36c4968894a621305a0e8150a2910dc6a01000000000000002a6290670f4302bcbbf2cb0d1cac7390ced076334d3d614b604d734a1ce1217101000000000000004c5e6997b6f186855b1f4c9f8ab2d6cea3da2e86445605ab89e5b5821e05bd3d0100000000000000269e8d252b8a4e91c2ebdb7f4b07bfa9201b88bd436e6c4044e70364c746614e010000000000000022e3fb29cbec5255c5057fa8c32ed053a15c71ea65c3594a5831d2c1671f36650100000000000000b6a7cbce4a2c96b0f290ced2c10278ccffd1c2922f1126cda8227d35f1ad98150100000000000000fca3b0bf7a3b4ee818a50f86de0be2f976621c6f5a3e768448732252e099cc1e010000000000000018820322d29e40465465fc5f0b488431e710db471615f780451342f5690e20350100000000000000407d69fc26f00269186d96a26e6fa3537160898d761d6a785cb7dba141f87a7a0100000000000000d632182c133a20838afa52678dd1b9b5055571c637f1ed1a1746490f3fa02a030100000000000000e0f95e266ead280e08189a21e7c6b32444e5c02abe73a57751637a8fa1a3d92f010000000000000074f02ed037d28c883df643034a596e4d2a97a23782ee8483c9ae3429ede7e70901000000000000008e3728649624aa32d3f1d71d0d57fb42a9ea9d3155a2679b02f2330e4c7cda26010000000000000098d620b6375ee5f969bc894b1beb51d2b22132a8c1b469afc7796e23c530ff3a01000000000000009493e6de34e09c9679b6dca602e38d8c07abb77b3cc487ae3a80661968caa37f01000000000000002a8e4336c0fa5db2307feb0bcaae257f0265ade08adeaadfabb50b9838d9663201000000000000007acafc914dcd1ac429f85e4a1c89580c0bb58b8c67b3cb6924643eca63ce306c0100000000000000ba78c26db96a9ce3ccc2980dfef7346042ade9769f95afaea559f784af167a5d01000000000000001af6a72b08fb5b53139d4aff42564c9e3057a7d5f3e6e4391f3ce9c9d07709390100000000000000c2dcde1e4a7ff6f8406b59a7896bce7c2b69bcd12a5a1908493b7beeb97c7f3c0100000000000000582030a59816ace3ab2c2b8c66ca50a69991899df57096da6f6ca8a49b16550f0100000000000000840290d318350bff32db3dcf6138b822cb2adf1dedf5bad8729471988955915c01000000000000008c6dc982725d0f925557f77e1844d64ebbd5e01b7ba9466e0c1f1ce8bb757f3901000000000000006601e1af585ce0bb093a81463302caa6f02919efa89aeed138d25264b32f3d4201000000000000001ec005e9ca3c15b2994641dd22efcbb20032f10894f76f57296d219dc149817b010000000000000054a7be1f3969266e7b653b0712fcf4d237fd6a673ee6eacef2cd4fdb5e5536350100000000000000bec3821f0ead5fcccc95e22def052a2995ea23ebe898344d6f7ee8bd0bae0f58010000000000000084aa90e8351d5be6633866f18d2285e5938577ecd2dbf46ea9233203400c43050100000000000000d4ccf5e2a8acb9cfed3eadff326730c60d23683a044d59b26e53a4e1abfc895b010000000000000046543a6ba7d90d6f10febc8b628775c1dc08b55cb93c04e09f0a072f264907360100000000000000620708ccbc822d0be9a49eb46e73955d4cdd8735a5f2cfed44bb656a71501a750100000000000000d8faee17dcc461acb22ca1720b86385414ea8810ba31509fbd8da8733029eb190100000000000000105aab27f211e6df23599236853b58c04654709d9c7d0d5c27145369450f324301000000000000008e703730fd72822a067f724f3efa6bbbc82d5c064d3560c5833bf49edc21061a0100000000000000847f4b6d72993380e0e76fe2d885e429796335dc10f470005e9a268880c6fa1b0100000000000000c80a16a172ea19de337c120de8ba72df1b81efb23ff74e0ee7cbf36e666ede1f0100000000000000f820a8ed2c97f639fea2892d0a89ae98ffc4c0054f948f9a0108e4d99f89994c0100000000000000fcd5f4c4fe11f20ad99dc8345b7dc5600caba5d5b7d3f499c3253c095152d454010000000000000002f1dc39de14fda36e8968e3ba568ced1203a9efddcfeff0b8f0f4c5ce8755560100000000000000b66836e9d42ceff254416bfd6cd80592da3a276bfbef6018540bb0c93a5c44410100000000000000ce8df132517fec1b06b9b7ad5a9e18f861df5bf14dd32b0c7dc3f03be447b2730100000000000000566779977b35c81ab477958e39cc697ffce60fe1aa31f8121da08329b25f4e0501000000000000001644ac70036fc8b19ec0e580bfb10d272798d8c7aa3dccd00d5ceb639fbde603010000000000000008a2c8bc8457a382313d040c40f3f0c02eed0e5357910b19ae4f0c9360e4dd1b0100000000000000a8bbf134d2c82050f455ad50876ce102de5e63600d2226ae2d6cf3f52ad6eb240100000000000000480defe8739c9518d5507480bb9c68ec408a60b944824521f1184b74bc47f2170100000000000000780e4353aca40b0f2b2403c862cb33032d49a820244bdc2853ce158d48c4f6100100000000000000046e9ea6faab3f6ea31d95f9b4339bc5622323907570fc9c788dbf46a13bb92201000000000000003ae7d174f16f034ff7816b8d9ef1b4b2b15ac5a16eefe819253b03d958babc110100000000000000b2f392bf1ee5258bb5cd29a4b800747a419f4df00c61acacf46dfbbab8094a7e01000000000000003cd825436dadf293b1f5c315d478b960b1e6f141e3244f2f0c892f42c0b159040100000000000000ac7c9bb11bbd24b64b4611071ac5ebc4c83e94d38abc3df541eb9dd04b726659010000000000000068f3e478d28f00ce97dcbcce5e9cff5674f6b3d8b06f7dd8be7b5f3b6f1b555d0100000000000000da7bfba48819dcd92eeb75e2435784132a257ce38ca01a6eb3fb66bed9422b240100000000000000ccc5a764f42aa0da463245aad924f65618099b1605ef6e3cf7efddaf791cf34c010000000000000056da6e5ada211131376b8d0571118b69fe57fae1393d23572b484f394857904801000000000000008c3fa761a684f89c63b5014e6a934f763345f91c5829d88cdaf28abe75c0823101000000000000000ee6df339af6749cf9b9fdabafc0cdc59ba35a1244fa56b0adf6bcf7cd3333000100000000000000c081b6f9b341d1355ff2caa0bb297d9cfa88dc9db48eab74f1c004c189513e4f0100000000000000009463e59f6b021a1dbdbf65e56f568ac5736baf96470440d7123605a4bcd93f0100000000000000742f5991a21e102707bc1df8a9565fbfbbf705884fdabd13ec223783f96d3f620100000000000000667f7af26c8dd32504777bb2a259a26757808ead5155f3f098558a70d90c575b010000000000000006f8df3b49930c691067ddce8889df6179b8ac05a3e9a96d0a7e98904c969b14010000000000000092ee092cd2215c7c1628086c08be10a3cb969f6b276f600422f3526f303bd87801000000000000009aeda969400e2e21c35ef284458dbc898f277a49da9dbcd675eefcf265f6d4450100000000000000020d34131c7a0ab6d104839ed8b9e0cdf075b80409a36fbe94d0cf83f7ea1f1e0100000000000000b484046e76bdb203eca3e22bcc5525f7973cfc70ab7eec3f568fccbbac6ba140010000000000000060722aa6239a4b5f138bc30c5b3ebb5cf0c53b901f71076f213b72d073d2cf3601000000000000001098c3193759138d2ce96e47b00dbff13b7542669fec49b78355e10e68f6e4330100000000000000269d2ef380d1b161d3479448fad38c3f1328dfd8a134d5c40399f3692cd7545901000000000000005093664828343ccc86b8a41b0638b5f38c8e5995d2cd01267d49d2651d5898650100000000000000b27ccb4edaf0edc92ce1f35b0950251d38af8cea2dd129a8ff5e6c946ed6546b010000000000000070e31469f5d889be009fb327129c841179474ad84a5c3c732d5260f65f8a3767010000000000000014e5caa5709b3d5a8e50aaaa9ceba368e2d66f964e598f861938f093dadac32b010000000000000040dc7c3e4af430f523ce1ceb5de4c836056a079da82caf752cceab452743695a010000000000000060fcb17029130258a1ecc087eb771769f87865a8133cde58106aa9fb58b4e4350100000000000000ea0853b1a9c0bacbc2c57c8233940af4bc51b0734b721f75b8ab5f74d66c0a230100000000000000f44b3ec5c7b2188f208d60d159d1f5b0914a51a0632eacea6b88ec7b26d6673d010000000000000046c5d9750776edafdced20206ffe4b799489f6de9e0983eeb3a9fb6485c7e22201000000000000007e2f54190ec59a98cc3930dcd41c7113812c0596c9537277ca93038a9e57976b010000000000000054ecb1c6cdd76e77a694ad7d62b50187c0de759e60b46c82ce70e62a9a328e3a010000000000000006451fa7b2d831264e40a3e5b8452ede10164b7162a0e93bb9789a102c3010420100000000000000829f64b96b37d0aa283fe99a6d2150069bcbb6be61d076f23b3992b6c1fe6756010000000000000052d36d934905359a84c6ab4d2e4aa7db403f77fa694cb05c70d5477f7079595f010000000000000078044b468a3e1a848ba57d04ab36ed1653fd9d59294edcaaed0dcb945d9088770100000000000000e4947905b57f3ad54e47523b00a529c3f7524cf13ae76fe3a8928ed5276bf05e0100000000000000f259a1355699c7b5ef71820c5e04d9e6436dd8844d347ddf84f7325dd93a6059010000000000000052b41700df65ea66ffc6cbae47c04a2f20618f5d62ce1ac9304313373d39fe440100000000000000c4b17e92b7a096e359c764d3f9cbf2bad06f50f8341128f642739248a38cfa030100000000000000ee5a96cb89aa5c8f6824d3806a83a6cefa9cf01842abde63b7bb04561553c45b0100000000000000a065f45a353f24ba187248aacd9c64d5c3a92ddf92b4a5c33994f56a07cea8400100000000000000584cc334d89181207fad8289d1e89a85848439b16d4bae59f1004188e8e26e500100000000000000a6d498495e591b3b16dc6388c4cf43edf35e263d80d743aa827951f22e0ac91901000000000000009821465bd76d11b25f1384d98901fed08727f3cff92131d817a987333cfc5b65010000000000000032dc47873d3d298c15ac984bf66ef0610883d7bbd2fac924d1b37db68da109070100000000000000b0200adae0feaeea78d77e0de3b4a63c7d44544dd0082beaa93a293abbb06e490100000000000000742a6a8943509da1d899f82879b8965a928dc3db99996a7ef65dab90c22c990901000000000000007c3648dd735ac746fcc422ccc414f6a1e41d1308f944573fbd11119bbbd87527010000000000000074e859fd23da9f3b5c0b554492134ec981deca6fc0d8e4fc6e33ca517a0ce26a010000000000000022b634563bc2b885326ed31f52644cef011566a890a26192a8b5435b19fb6e42010000000000000010f6d73ff674b4168adce9e291ae84b250293e48eb40839ea8ffea9c057c83090100000000000000464cb5dfedc6938caef6caaf5a58f4925a295f24a4f37337033dafa0cc733e660100000000000000ca377174a1aacc948264510f8fb2f4264475ed6acf4402110d99aac6813a990b01000000000000000cee7204e361a4c8d648f92b4bc058f517a5ebe90bf75f34116934631c610b0c0100000000000000d460e8effd89689383e396bda01d4fb48658d1b2be0f3497a635d92a00783e4301000000000000002a98fbaf7ec22832522e3f96821711ef684283911a524960efb14953255baa2b01000000000000006cd1066d5ccff0f29049137b42feedf12c3a4e91f37170a20e87a84bd6aa1d2a01000000000000002076bc34bf8c9ba9c0922f484f04637c02b4a44e5dd7ec861f1ca8b6cf84c8400100000000000000f8d7cac8239edc444da065c812e4fb38f7b0d928f963388f951e2b0115077a7c01000000000000000469ef46bfe2de21a792a23490ee7791b7115c35c71805dd6fc133f6ddb22d270100000000000000d285950cb237602bee1798bcd24418a2a562b549fdd8e5ef2d1f74101358a04601000000000000009a9797e1f4d665685c0eb08f8a954cad7c6453fd190ad1a104b54d5bab360e42010000000000000096f9ec98d4cfa00b9ff41b5962d3c68f12201556d80bcde84cd85251252b822401000000000000009eb1b5beb8b5ca4613c17e6d41996337b26e0ca7289d2f52df05997020eddc5001000000000000002a89ca2ad62c6b326ac778f63292142fcaf4d9721b13d9994ba4abd46152f30b010000000000000078294f515c659b94bfce9674db37a3cf2f32d89ce1758ca53d1860037cf1d42a0100000000000000a22326a6062c74e63c452da2d03f4a43a012c79e30cb3dea0a212cc476c72a4b0100000000000000047e42afb61bd0d49aeed1975a96c8398a0ec4643fcf5625cac5b22c097a02590100000000000000bc4529c25a2a01667d6e451ab753e1713be0835456e6fbd29854cfbd45dd2e3c01000000000000007efe2d823470c2d98b6a020e469747a7a03429abe579202b97b2a5be6c2092770100000000000000f4ccdf83d734edcc568462572abaf32d22ac7faf8000195e02273d1c96654308010000000000000004efb918028f583768356118e9457c36583319eca6d53536596714e782f1596d010000000000000048ce0aba6f1554e139568b4d2358d6cca9bc291d3600787cc3e732291002ca220100000000000000babd6c9cb58a2635db60d13014684aee881af96c78af8c8b9b31073069167e440100000000000000a0a1cc9172a71b134162a60272739d19b59162748f9e1c4adf86d3a10834c72d0100000000000000a8731d355eefdfbdb7fb12cfa5a280c0b1e408aca264ef585d42bf97fcfba1160100000000000000f038e6d72ac8c9b9d165e9154b1f7978dc906e6bbb501ffb8e3e9a739a89cf5701000000000000003ce775a4a6215dbfbdc2b0a8a8b71936abd61642b5fd1a0c1d06ba548ad3025e010000000000000058e2aec55f89eaee0f634fb10c0ca50dc4e699a8aa61e503672039a14dacd8460100000000000000fe24bd4f4b0e75ff21dcf16a3ccba49556cfa9586348a8f939df8def8a214c0d010000000000000086ff7f9b2eaec6638f33502e74c216fa4d15f774b35c318fea091669cb5544190100000000000000eedea8652413b5a97c1eda13e1e050b777bd0a8ca31dafd63aeab576a68fb75e01000000000000001836b6f7bcdf39ec4f786ee982799a549605b62f384a74981bf9de018c26fd430100000000000000685506af78bd0b16513f09395368600e5b6fcde0f89d280c6446b1613844351c01000000000000009cc697b491304d797292fd5f14284c376a0adb2d420add197617126cd258f62c0100000000000000ec25078562fb511f0945c3af78d77c8e02f570c647957c0932475aac3ce72f6a0100000000000000dc4ae9ca42fe496af7a466de59735813691d9c050f3256c3d4a96664cb6f9f670100000000000000028393ee5fcd06734e381651c82cb89b08bdcd64d1aecb4727fef82ae5c44b4501000000000000001e7b8aa5fe2aaae1d5e3c8b1e38818114e83d9bdcc95629ed834aab37e2b8975010000000000000022ef710c68c0f81819abb592b9cf94964552ed9b941aafae770896cd1d5fb16d0100000000000000c220d72d1562268f43bfa2a12f4b516f060e696091b122eb2e3fe93faccbd67b0100000000000000c63e31fd558807e07f9c7dc51f8fa8110679bb1b1cf5585e56d0b6164179b979010000000000000064eda01bc8dd522756c6728f9b030c1b1f605ed89e91233199476e5b0e96ba2c0100000000000000eed7e8e8a64dfa89c548a31c1b9fec7af5aef4dbbdb26997b2ddca72d4f8790c01000000000000008c53786209d22e7605c5ac59b155f2ec9bf5d088d77abd8930fbe65463cd8d6101000000000000001e534cbbe982369a968006efa465cf2a16807a88a5c877d45f090192ea619c6001000000000000009c4a01b4b6e187c0c98931ed673f6c02ead7030a0f6a967185d7823a30d1796901000000000000006e8af7492bafe8cc6e8113ed4d36dd0d0f28f42b381238da06e4aebc48cd656c0100000000000000a8799cec2aeeea9f33bafbcd60c947d0bcf3b1c9be450c43f63004e16a857e72010000000000000078cf1debe3fc0da2ed2473d1e1835a478cc3e7008e0cf42043f287bc36804b710100000000000000b8f696197dfc324b72f06560c38ac6635d1bfe5ea4cf59c133c36234a0a012540100000000000000266f93d04b5ea1ae454eaa25946da19eb9f1ebd3a6408d8d1ac4a373305fc9230100000000000000fcf8c8db78fab04b332758bb6edb9fde68e74ee228c1eac78812cd80adce1273010000000000000032e2c97e308c84afea4b37d7dd8f62e67763126c357c9e6e49b27f54c3702b730100000000000000c64c595519886ef38c2fa837c795ee92f6fe003037c9ded2c1282a939408513d0100000000000000a0c28669f01d5b4decdab2abfd9d14b989c1d4b32323f264b24a788de0b9d2430100000000000000843778dfeddea10578fab2773f2827c62fe0efe374d9a01eb370bd8f1427e76301000000000000002425e806f3e7378d8974b7cf541d0e4cc4773dd59cdc705e006bcdc83610b20c0100000000000000b67d043a780b897a23192cba22595b758d2a5db517d50951c99d5acdadf3210701000000000000009829a89b84bf8a0c76dad25d99c2e4476e51bff2ee9e917a65edd1b4175cf5400100000000000000b67a042a5fc9668101e9aad4a291ea2aeafe50eae796865cb201201a6dc691530100000000000000080527decdf951ba9bd3ed9acb5e1454d07c661cd84833a455a2d239c18d42140100000000000000847f948b67d6f455e2f2923f366dfe3c0a3925b451210a46cd36fafb8cd8290601000000000000001e6d57d7109cc6dc573360e5f2192578e3324f2a8dcbd823483b82d725a9771701000000000000007cb1f225b90c00f426c33ac4338eeb2dae6467b8a9da5c1556e6588c12ca977b0100000000000000b261a66b9bae17b65e7f6a88d65efb4519925d6c418c9e2ba17bfdbf684b77630100000000000000c4046e6cf48c9913b2af1dd8caa4f7ffd03a01255af691cc1b70f142b97d2a150100000000000000560c91919fc22867159ed77bee1b3e70d2e222a5fe6e830fceb13b58b0daa5290100000000000000b6068f3b8a0ef7a3f7916e5559eea8158d5f5b09d9db89e40dfc5bab0549911a01000000000000003680cf4852c43b2a708608cd7e09b531e7748e4d7e9d65904676f53ca7565352010000000000000010381a1fde26d95804978d4ccaa1d6e634efe2ac922f7dae4da3cf3a64568a4e01000000000000003227028def74f8ea7bede3e112e4ce09d8fb823790ed599f2259019945f2690a0100000000000000d28eb111cd786c6f09c003d958c4a26cfd7a33f9e8bf6db02795f12afc7a1e0e01000000000000004ca838afa9f12e88436eacb5024f3f94c95a66c32e114f65f3136176e426c75501000000000000000ea6f5d4087d599603b0c39fbd588c198b9d9bec85a77a5579ff68fad12fc20c0100000000000000fc5b39a7b7d737c7d1dee9dbaa77969b95a7edd3926c538d8dbb854d53cb3c1101000000000000008868524e56bed527bb3039e7d01a84af44e8e62ed00b1f44098c47789e4b201001000000000000000c60356c02d5d99293952c478fd07b2cff982dbad863ebdadf25c9e69206f14901000000000000003a8b589c8222ede45b3d95c8d9176543ffa9a29cbfa0ba2af60fc412e732d75e01000000000000000c6cc2bc932adace83516fe99076d532e6197ae08d66610988288044c6bdbf3601000000000000008c7e4271cb1d28f71abac3f793ef73f2261851662e11cf165e5d7b0f40a0804001000000000000008e67bbfe6269ba4ea2b216e7cc21a54ab882859d65a691ff2eec486f66a9035f0100000000000000103680fee8923b681b7721ef2bdfaac20a99bae45e643b42a228be43b3d211660100000000000000603fef5a531a03b8e83a8b66f583edf78706b93a11eff454f5a56093a6434a3a01000000000000001e724d980809bc793ae72d15a9b33cbf93b4cc17875a4259970548c5137c6b4d01000000000000005edd53eab09b1834ec2435a78a19daee1acefe1e84de77bf788740d9bf6938360100000000000000981f14da22574782d35643e2fdf2c514245b6d7475048becf8143136acabb00c010000000000000090b7aa9d2cd7f44f20fdf30f34ccb9d34c943c1e5c3d4553c6c43049dd8ddf1d01000000000000004651d1aaef0625ec4a153357d541e4ef7f3e15866b1613bcd4ea96f8ba0c3c6901000000000000002aa57ae83dbf829a794b555b8acddc97657b2178d0722c6263c8ddd19ffd474901000000000000009664e4e01c42d9a22435a39dfb1daa6cf043abbd01c1b081c28ee271988b415b0100000000000000381a3708c945f1d295122322f3b3b7e161a4f2556d6f8d8ebfe052377ed37b700100000000000000e09ecf865113ac4f2520de61ba8b8fa5480534d41145d1ff3db5c8ea3f3c9a100100000000000000ecf0297bddebd3d766ea7def2bac79ad6eb650fabdcd029b99cb1649ff7dc815010000000000000090b46ba005eb064c8ea5ebec94a5facfe2ad0c0050dee0f51026f0d1603911170100000000000000f6ccffc523461e1cad22a66b2a4637ad254d1b96d244411e0eedd5d89febd50d0100000000000000509f915fe6f099fb5807c03be526a055dbb7565c35831a7dd76d6e506d493c460100000000000000042cc9a90ee7801f29bde1f77ebc42e68fc8432df113d23b82201d1a10e33d0a01000000000000001a47252288a7ce1b8f8892ca42e0f279967de49258218eaea8bfd94ae117b77401000000000000003c2f81db928e84552574a761e6bf8991a337ef5907a5ad26d8d21385da1b7e3201000000000000001e63ed13cb9b8d544a73307d348a241d87d3d1063715d686572e705b37b7483e0100000000000000bc633ce058ec703568a94b656988f1b4036cd9f74aabe8a7b47e7338833686540100000000000000183e5f34c7c987bb4f165e2b737a9300495ecc1b7f9681c5c748bffea19bdd650100000000000000a0935670e98d2bf4800f84af8a051ce9d600d2f515cc2de17a9e354d3488db460100000000000000e84ad35c6913d9fb006b3d64760b959edf736c080c8fdd58af24ba8e6a6fd47b0100000000000000e8b7e227a0ca7c64a4099a3fbb509620d4b8e1dd91e1ca32a5bda49d4aebb31f0100000000000000ea3c4034fa89a8744f7c8a55560418d7298cccf97fdba7cfc0a9c83701dd680c010000000000000006adb1e6e78084fd5e5df37fafc180d1ed84377ca41de3b5ca43b764f0cb1909010000000000000008bb4e156026608c59c8b2b6f8068e7398c30278a90b8f478724fd04456a673001000000000000002488a8bee91b989dff6adff396074f3300e7938a962ea3728943f37a23a7763e01000000000000004e466f6a4930d856a1f53f21c1a44451ead20c8c71319f6a685f0e254d24c32101000000000000004c1af564e989c30c6e5ae1b8035ced5f59653b40cbc2d78fe17336468c8f441b01000000000000002037d70f4c244c81422409ad01d28d72a30d26e595fbcc791daeb57f78a8567001000000000000002e885398b2f8018002abd2595f86a4168d37c1dc2e189108a02c520f17225b7b01000000000000000e24cf7b53e505317f1217deaf5b08a4ed466926bf13be4b15d0732132df435901000000000000003ac231bc9a6e280f3d1ae2020b2e56c5888098427a186d35c052ffd6e42f264301000000000000009647f0ba124d459f0633dfd82a3c3a0010124072d4e274742c7c17a536eba91401000000000000000eabd85c2d5a1631f4b14cab1afb71b4c8b9543b3c93ed53b5a557513bd8394e010000000000000024706d6d41dbaf2bac8cf1c4375d87c3a5b84b8bde07036968aebe8390661045010000000000000088fa8bb07ebce99964718c65d0d6f1b091ef2f4d4cdf7b94a22c42c007ecd706010000000000000048f68e4cd520fc8d0d253c8b5816082302690cdef1ed1cd2e4f76215243e72380100000000000000882807165bba4bc625e328801dc1325db2a4a133f1ce9ff2de36f2d018aadc3a010000000000000000f79cec5a6b6b70f768ed05e94d2cfd70b13bc58fa16e62d742ee49aabe967e0100000000000000d8bb28523be3666290cf2748c87eef425e0d92cfc359de1d74004354cb583c4e010000000000000052ac28ba2601723d23a086b5d775f19319f110ba5e9292f2af461e71903b5b5001000000000000004cb3593968c0254cadc7f1a2270f9a89e0909e12a6eb5ceb7f723ab6ee9b7275010000000000000066367dc21d99167386ed0d0018a18b23a1f7531aba9f6e1d299a43446c86201f010000000000000060f640b7d3d4e9316603270a4e5771ff2d9e48927a6210a67eab2a25149f17740100000000000000d2179a30faa13f5b821213d4e45bafebfe069746e5afe09254f80fa301ae093a010000000000000092e5bb9d0906f768dbdde0696b78e493cc78dc1f68789575b24f0b962799b51e01000000000000009295a1f023157921d346b73484b120d46048382107015aa9ed998f1fae95970e01000000000000003e652d1f8e78c4011cc9b19a2fbe253a6c8708a30e94b549550f11f17d9b3f700100000000000000d2c456a3002282450e0419b0aa5293b85a9e6f5e9d181652a494a2e613f12a11010000000000000046920ef4915f3036b0686792a741f2d04698b23c5e6b8338d03a7e935d6134300100000000000000aa97c0ca75c01bc86b7aa14f50b3732717e4238a8d542f40601cc57fda04486001000000000000006cb96487d8bb7c4ba7726a623709a27687866740b7a400b9c5322e806711aa0501000000000000008a061720463abda562f0802f43ff556ef8382f737ec6370150396ec14dec820901000000000000004a512ac212da2c96d7bc8590865ce627e6b60246700595bb100b240e80a3f0760100000000000000be2ee8034bdda18863bca0a0af63015a85ee2551b62e0b1c732417ed06ea39540100000000000000d65ce90b9f6560a41d71a5a53303b2e9fe2fa2c7b5aa7b8d77f7c0ed4473993001000000000000005a15fb3423d8efc0d616665530a6d478b661c324eb30a42f72b828f5ea99421e0100000000000000c6fbf5153c7b8dd896e8daab854560e2ab669890479fed689ca39f210fe88008010000000000000086f750fd8e37cabe5049c7336bc317cb011c62d1e0dbb59a68706c366de0c2610100000000000000f41b3b9205a9f79b99295979bc938ead443667b58b4201e407a0cbbbf50b930301000000000000000e21a03fbe9885a475c4875f3f912c8703945e99cd2a85f75258fda7b6022b7c010000000000000050bdb39b713a707658b538834d6998c3311127488c62fefb86be2876011899380100000000000000f2482ae122cad07e9aba73acdda2f47ee8dbdbe85f6921c1f1ba968852c5df310100000000000000d8de542a748c14224ee7faa16157727c852ce502a45b408de0975c88a39c690f0100000000000000ea88c9aa1e449f4c62b86af5da1abda7479f9be5344eafcaca482b892601c457010000000000000026538b2b883a97c4e4ca0c01a9e136d42832e07156bf9df23bee062df009230501000000000000000cc6b385d54b772686de9137405b523af4bc79c0e2ca6c162163808521ad79570100000000000000bcbd81964eb726de1abd2b7608252278066fa196b100b15ea8d8976a94ac743e0100000000000000b0d9dc44559810ad536b1c9792b5624cb087972bf5fe3ee484f9214497d6f8380100000000000000fad87158d4a6234fd1444bf61c5d4b7e741f31a9e1d49bd5ef1ab21e19143e530100000000000000eae34c5f0c88e2cefa9ef36ea262faf41315a0de4074c6f3b3696c153f8f023c0100000000000000b600ec4f4068eff1e9d03edd1eb00e4bb2795eb1029348825e604ed28829bb6b0100000000000000d23c53a531e356646133db73065cd83999693a5bdfc05931238434f5b031522f01000000000000003c1e9d7b3b0e26fdec44e026880a9614ef2d80a096e4f721a3bbf5688fccf07a010000000000000094d28205c958a5d713fe7dec4dac2cb85cce31872e3faf9eb9487e8fcabbac6001000000000000008af88ab005ea3b1a0b3412054c721e574c4b4469e231aa487d9132946e42bb690100000000000000aa74176b5870c97b754a157ec0d8032148c2ae717a905e0e5e626048b6f53343010000000000000062d37e495af1a21a15c93556362a0e29726926302d9453bcf2c2f0a7b4001e5a010000000000000032fdd22fdc3662f97008fbb6f52d0fbe7b62c24956849fe04f9b023007a8932301000000000000003e07b075219fc7ace8dc3bf3a06f5dc12aa9c7e45fe30244d2284bcfb1e6ee190100000000000000a4a0bc81aaad1ebce3fdf896a8d6d081ab93efc2de9d5c56f2632edfeaa7ad0f0100000000000000a07fe18d0151b0bbb2a2f9604122716fa2ae881babe7e6d84a22cfabdcd1267a010000000000000042c7ee18833ca3f3a56b91ea1f57f1984a7d127efd57802caadd0a4a7e3d5f480100000000000000f6fabc667ca7e609a18fbc1b44af598f189f769f5e7419d2632a3dbfb46b266101000000000000005ae2495c65862ec124cbc8c9268f7a1fa66a9013b01f10198855149cc549c3710100000000000000465242c8915eea46e25549f2ab97cfe78784f25083e51773e07d5a0cafc2de320100000000000000e886d0c8ecc3af997d07b9426599a43adb274a3b0d5ab3262331a5da13e7555601000000000000009ef8d5705da658687f96fb0a6f937611a3127911a1694a46ec7226741ce43e4f010000000000000018728d9d1125cfc79ab103aff7fecddfb9c6528d3a707e8e088b92c9c7a5d41b01000000000000009875dea5d493af94567673bfcaf096919a921cbb806f55b7488bb0a554fed66c01000000000000009a3b32b7cc94b119b2753d77d4f38b0e63900a5633773105a551de5b22670e7a01000000000000003e8bdbc5feb01e9ed021be11459f89dca00ffefcafefa7d4ea8e654ff724c444010000000000000046ed02242cf70665583c79a324b0e53c1e957c2b6c41371fdfa7c632513a86530100000000000000643589f0627aa555aefb01d2f0a366eacc252af9437ec2a892935da2a1052c170100000000000000241cb8ac6036dff8d9e0f6f092f17932945166e75010dee9adb2e245a4b6e5500100000000000000a877af86b958cb961cc97cc61fc35602350a87cf9cccefb09dd91f9f792919250100000000000000ec1ccac47bdcd80ce07faf39b9b1791033ef5587d0647b9b83ee433fcb8d32170100000000000000288c08430a7e427400dd5b61926b74a82abcbbc91ac739190cc791a581f6836a0100000000000000b40a7dad67fc795dda1dfc1ebc78dbe45a8116888183aadd0cb4698dc4415912010000000000000028052d0b965ed862b7861aa7f3f91fe52ff8b0f795ff476c7e0a7aa42e7993300100000000000000a853037e17e9d4ad15f03f236723506cb78607413d233975c9ef793397de156a0100000000000000b6c42607db8cf37421c805c1c54fcfe85f3d25405ff4c55286501818c9dc58460100000000000000163687f38841bbbd2b93787f7f65cc74a2ab94478888abce52207e1b81f46c4d01000000000000004c877f2d5a9fb22cb8526dda4256da8e575f09cd838d5e15032e8e150ee1ea7f0100000000000000769ea03c7b16ccfa42f5aec6127e19f165bd61e60180299da4145854061e1e180100000000000000c22b3fe29c3b9eef11a6db4c79ebac692efa4e3a9e4a48affdc415275ce387640100000000000000a6f59087f84d39a888e486e82675c77d6dce841a91b35f41e0f6facf6616163701000000000000005e5e810f04267c51befe0fee46e927a979af59db981938c7dbb90537db6eae07010000000000000028a0a3e8d2a6ff3213d142b94caa64965d1c738c4195706f133175065165130801000000000000000c2594861b9f8cae6e52996622e17aa22fff7a2e8ed37b89524e9f3e2640c63301000000000000003622bfbaf9350b5906bdf9ce362e06726224ed141c5d29e8e175e0beedbd3d3d010000000000000070f08007867b02d11f3fa909154b03a7915ae7971e474ae27725fc6b99c8425b01000000000000002c6ef636d3bba8ef79dfc0e6d77bcb38426b54c92b764b29115d25f3af9c87160100000000000000e8b977fa9876c391f9ea7fa563d64da4af9b50fabac9a2425b2f18c7eef2f54c010000000000000086088c15ab94ed86455e4473c198b99730e99585b88d6fa465ce429d268ea27d01000000000000006ed90090a744a0d55adf8f8af5af4d5198bb67220ce33fe71121d7c51f27a41301000000000000000a73873c9828f50900fec8ebe613db998e6fe476142718ce0589822f88dffb3d01000000000000002e1112ae35f007b16eac0058c77a85d3dca8687cf6f1bf231f84d768fb389c040100000000000000809dc13a93316ffb2f1cfecfbce374272a81639b11fdb1836f04d3bac622f24c0100000000000000946218824426fca91a00f856a5a92173c04649a2500adeece86fa30d4c08b4730100000000000000002608aa377726407132cbdfa1118b69a6b9d3fe876452b83a90c59fe51082180100000000000000687cbc1bf231505a492d00bbbbd0f7adc9df484ae46143f1088f469e51f95d740100000000000000e4e005984bbae507a03d158ea8ca3a87505ae3e8723d8f5bfffccb63a23ea61c01000000000000008a40c3acc862dcac958866b738b304be7d84c33d9420b0747eb82aaa21b8c40c01000000000000007a2430a3ba06afdacb8cdd51b95a8f94e97f6f3da16a16db190a83fc8d7f380c010000000000000080d4494d79062c0ed53564e1eaecd593d5d56a5ebb600cad9152bf3187128b36010000000000000030071950e33b60f29acdcaabac9e3f6f1436f337cbd3f123f5aed3f0307ee823010000000000000092439f4dab2f4b2e8d1bd040505ee33fb2c1dd56f3946826cc27288422313b3a0100000000000000aa6e4b27f80410ae5ce7ab8e7bf083f6e6a87f87a784d6aca9e5fd9843176926010000000000000094b4d71ff20170266393c4cb481cbc68d0f04264e067f456dfcbae3ae0af5739010000000000000092c996c1fedd09190bb0fa8cc79e4075ad79eca3d6895d2a99d20e6f89e4182b010000000000000072bb32222caca7113141263e12a4193da7f29806dc93cdd11fa9653464344e32010000000000000000140d4493060751979098f686733955e6e71d01bbaa8a3e6cb297400c5c624f0100000000000000204791fdb49af594e5b04e0f26492e56ad8ef4cc8533245609d10e66c340302e0100000000000000c21f66c32b614761850e5795a3afdaec1461b45184702e3c2cd5ec2df9623c3a01000000000000008ec59e4c60c8e07ea1c5de77d0510924f4d399071cf1f09606e0e58c961c1c020100000000000000941dd915e0ed9ab77c5902ad8840b81dc84402df589ee4d846480c63cc5d9731010000000000000076f132027235278f9c582ad1c52fa62390aa10f04add56321a28b4f22074092d0100000000000000428992924b7c66ae24e3c55a9d85fcd8343ab1bf0089a8e5038313d1f3fcf9700100000000000000f2065428f52da2f7a881f9b94bfd38719bb6e5ff88a6800bbb3aebb1a9ad21020100000000000000ae48bbbfd5aa564f0945a2d79428d0182fe40770999ffcf472944e28bac852790100000000000000664e22b28ad76fa3b6e8ff42b67991593fc2895257515564be879070b9aea4300100000000000000b66b7a405e385945d0a33089561fe85af044aca93522cf44cafad6f22f275055010000000000000094ca8d9a1ac9afe584ea99954a80926de626990ba9087c0a8ac242ab67fcb7780100000000000000fc3fa462e56b8a4aadc369f88cad272f9e52da4a11c4896c30e3e0ee19c4031401000000000000009452d0cd850a8a3fce455d099302e7d641242037956cb39f679f343e2af9601401000000000000004e09267475354ac23e1cc62749139e0dedb5e403013fb807490e37487594707e010000000000000066a0368fe8bcc7798607a04df6579b893434593880ed500cdbfc1922622275510100000000000000bae8e68bc8f1b66fe3229ee72d77137b394c6b7dfbf55e424f9d2c82d5c996000100000000000000183a83cfb0fcd53d29c91527754e3f6e4697fc680d43247d200b39589084f84d0100000000000000deafec3833f9925dbc5d185762c864d1294215c8eeb3f63da6f4cd5fa78eee3b01000000000000005ab909489cd8555eccf9e9d83df8b1d66ba362fda72deb712ec8a2aca224b54a01000000000000002e80afd2cf30e0415e4f442a662a9f7da2d07043f87832ce66f15049c022d4630100000000000000c61cc86697ff08424d72e8fc5032623a861c06ed5093ba94f31e01eb32d4d836010000000000000004c1f0acbfa8d8f1169684bde1c6e3938fe90d54879168a6a4a7fbe99eefb9290100000000000000a60345c5939d4ef77e57e8fea426929956c826524c7df8b5d880d5274d77461d0100000000000000683f0e1d68ab68c7b04bc1928a8b47abff720349ddc36d7073793f43c2afb030010000000000000060b521110672f6f871978fd3ac4a835b5e30c3fa727c04c70dbc543fcad38b0e0100000000000000e047754ec2beaaf49bded84adef9b7cd827641ada004b050b58859ff91abbc5e0100000000000000c40c9ed995aac4b4aeab516c9614b4614616a75eaf2fbe628dde6d3be5bc9b6601000000000000002ab0b5cc358184be4fa29e7a3dc24806a72e55baad40ec9a117324a884242c280100000000000000e05c7c7d82498be85294ee984e1f0caf23c53fa9a64cc7e6c5053304c4bb785101000000000000005afe620da258a48f00c3afbb8a98161e977f076c7e7f8392975a4f0db4b57d610100000000000000a61667ea6442054b56111477f57ecf39b6e90480bfadf54c3e6cb5ac3a3e275801000000000000001ae9aab4a890c558ac8ab90ccbbf193b3841083670ebed278b2161fa2ec7b3040100000000000000c0730aba0523c10c535c2640ec878a0f5d2a240c8d53fc37fd30f5735a38ec4001000000000000004059f5de23fd2e6805528d79475470526ee7e2f17192988e10c681e15672857c01000000000000006029513013f081e5d5d74173847405747513aa814038c25500522e6fe2aaf37901000000000000009e6528fe0232f7e9162c5292621c135c47e949e54e91fe5fd500b8b80632625f01000000000000003c0e8a8f204aa9b2f088877f0e03c6ec1c0552baaff43bdbffe904dac305675b01000000000000004e7a559a6f6f685a8b438db6acc074df322e2a38b9f49b26fb60026b9301f42a01000000000000005a3788f9347ad802a56974dfb4ed19b22fa91c20e5c8dcffaf4208f25471432601000000000000004616ac86f0d45899eed3f1246dc5744858a694a92b0abd9f10e52dfc9c28674601000000000000004c0b37ebd9e67b237a2b3a9545c269bc382735bc3907baf9ee468bae0d8feb2e0100000000000000c65e37495239d0eec6f8ca9000a0e8ad618fbe5c366c25825ca7fb26c7b27a7a0100000000000000a4b31af719e5d9c3b69326ef920736e8b620b329eade475ae23a33fbd445df72010000000000000044752934a6a030f482e9d8fa9e704e7e4ae9c2f8b4eb12faaa31c87c8f12c44c0100000000000000347a2ed2ed3db2d6e3c90f3988349ca56a33021537202d17412e1b1862a8c35101000000000000009281394b5d35827c826e1d7444f346c247b9a004aa0292a9ca2b16e0fb556877010000000000000080a4dd2b8d5f3d3aa4b1d6506be93c75b78f2d45a58e468d0474f20d366d0335010000000000000094be52a3a400ca82f2ad77c8c3c8d572235345249a622ff0588235981c95d7700100000000000000fa5e314cd3d9194cbc652160ac95cb95f50c28b8fac5f4c0e737239e9f8607670100000000000000a2cf2f85a782a37f8635661c3ad7cd4aaffbd35c6658a408c3d31ba489d69d7101000000000000006e5b6b3ed154c062b39552c901772d5cf23eb9e4a629c7689c16f1d827ebec2e01000000000000007e88cd54f47c1f4ddd9d3a198fc689d24a523fe186d526b14e476f14ced7db3c010000000000000072b0bf73acda56ca41cc15348007fb1d05d309dd868b26faf6802377e307a24301000000000000006ac27e3d6423f2d9488d1bf42dd6f2d3eec911c471b51d69cef6371ff242a3750100000000000000ece4c3c5e3b6ac008899adf3458f1f59ae7db2e674bbe80412756963446913030100000000000000881a3f7b045cf93b13e79864a7617ce7f5dba554463e5b00a441d226da016c140100000000000000e63548b7be72f3559c789fc7e7e15e187b44a7217c46848f11ac822741c39c57010000000000000072c2d06efacbb9760446b7f5eeacf6dd626098dfea6ccc1c7574f03fcae4b06801000000000000007c6d7bf7c2dfb84a3f14e25e97676617269616b56c57b59d670b2337bdc51179010000000000000004a37808380c9036316f61060c5040ce2062a54cfdd44a6c5a1b55b4a94fdf350100000000000000aaf44f9d4dca217ceb1de3ee4cd8e5ea99fcadff20c2626a52796567a316ea7e0100000000000000b85b1b7b8ed510a5bc1d0979fdc04ec7b73d84c7d1d767dafb6faccc8dfd402c01000000000000007e8ebb46c80883225df2fc91fe7ede9933dcf073f3d74ea3db0525585984e74c0100000000000000068245d8a483bdbd4e9d88b49e17a651ec168f25e6851fc52c2e36a516031d5e0100000000000000283e38e57cd8630b855b32b734fc426530742419ac407dfd215b3cf46aa8fc4c0100000000000000383d2ea99f1550060500295b8dccd50a9b78e2e868c01f28adf6ef2e8007ac7c010000000000000000a5fc354a5669536eba3ab51a608e9c811214c5b7702b571535d48feeb9742301000000000000003063dc6994f705aafd8f6a9c3252629f17d2bde6ae269ce9d0fa4ab0c8a1ce3a01000000000000008859563f3d771b1ca9e5afb70b9c760158a970bf9767060c34af3eb32354ba5d010000000000000068b2ac21afb21cc0d5a063c77fea17f09885bff57d0200cb83ec85da7eeb614e010000000000000042dbd2d1e0ef786fa0f72e251102e858eefec87aaca722a7de9c9a8be29485360100000000000000bc3cdcf9f41b5f3f073a7f6a29931a6be12fbcdfc1dfe7145c4e0a527e9e243c01000000000000005881fe0c27f70f6c59ce778268ccf888b77bf268c3bdd9ba6ae5a012a870e5480100000000000000da132f2f832c8e2a4e268b4faa923d9449c94ebe66f03fa0ac4303f2ceb1b053010000000000000070eb857f0386996d388029ac2d19c3c31ccb3766a9d118bb5dd36ab331d33b2201000000000000007c4bd3b9b81241ca657d1b461afe675272ad933187ee5855fc71475d1f01812f0100000000000000a8d082a4289fe5ccaada604e70c4b1473d6fae4374663672e61474852c1ebf2a0100000000000000007cffa67942272b1974dd65c87828e1535799e008d9e81b2818f5e308ed4f3901000000000000004a75953fedaf3e983357fdee67ca8174bae4c7c4634e616338bd075aa486564a0100000000000000cc840ae0117378161b86a52baa6decb97ccfc1101325256f178ba8f67761671d010000000000000050deb42e933545c7892d2d25496d9934505fce1d08ad50652a755869c8684309010000000000000096b9efe3e08609cd61aa98f3202618d928074308d9f189d97f7c1e52d2afca1101000000000000009623ad5bd17b75cc58839c76474636ad5675c519e15f090ec008eb626db73b1401000000000000002003eda65c6523e35f047cc5674d57d7802a4ce038ed8ad51a45df4f8d4d9fad0100000000000000040000000000000002741947c54c1306796884262da207453a85cfe5858b5b76a22ec41763cef4324425b08001013829000000000000934b4f110000000060090000000000005d0976441c448aefcf40a72128edc9b44a4f7ef9c267c503e98f5f9c72d5e9e92f00010000000000000012549e625056f554578ab32d29cbfccc5529e404db8234af00a0856923f6e3030100000000000000d0e8ddfdeacd8e163b01ca4da1a4e856312b0de412b492247070f2721f7d80380100000000000000ae5797a6246fc7f96394d09712e9abdfb1ca3e7793c3f093aae6c126024ab72e01000000000000006c9c53f3824abe976dedc2792e1c6b8cc55c317eed2f30916c3229b60e579206010000000000000080f20c794a97e6080e7b81854feb03a4924ee28b33bb2269cae8fa582dfedf2e0100000000000000ec8fcbae6ca9d402b51bb0bde913f0c29769d8d1b9653f4933db117890fe38720100000000000000c29a52b01236996d090dc112e63aca2ec383da79f89c5db420319c7a7ec9645a0100000000000000cad93fbaf78ceb031a3677b27a9e579688602099c97258c746b080422c34bc4d0100000000000000f69a39a051376ea1dbb2a00c3e18369664beb746ca10453dad7db5f9341fde7e0100000000000000669980c5e00b5dfa8c6006e58475c4f0971f22a1a317428ca585afb06a570c1801000000000000002a7c2591d7e46c931a3430a059b2b05be4b4871540a837037c1c4fc7d352ce460100000000000000e81d0d57bfad740cb4d3cb5e4a37fc80687f9d0d0eb3ac83883bcf8b77bb937e0100000000000000927ee7f0822e513b33a24900122754dee60a1898d90781dafdad6697fd2182070100000000000000906ec0a56171d27f65c29683a31c71a87a4e32b273596a0a704ff07ba344d0660100000000000000e03e8b838de23dc7dbe96982a43cb33b406d6f9978132eac11ae555efa8d226b0100000000000000ba395fcb33327501109ed40712c7a372d25bf3339edfabe2a1964fb7b5d4d82401000000000000003a36963a41de2036872df1c499f45acc0e7179457316ec2d99a6018e078f6a050100000000000000da9bf8b51b8396da87113ba296940b23a9fb3cfe7c3fd0b3d541331121b8f57c01000000000000003c2943d6777720179fafe62691d06390210dfb03a1f4c77150cd7e708b86be1e0100000000000000f63eafe185aeaf7071501cebcc6e0f1d1ed4a21a7994a64ae7e51f98c23218500100000000000000c0ff0ad7de8b9403d14459655c0ec4107f119e74406be3161faf15b5ddf1395001000000000000004c9886e2e62ee92a6778d6a7928052732044b64fa61969cd8e37f3f7e3406f720100000000000000baedcd27682fb5289898711ed238fa3fb93b4cb4f4068e0e2b359d91dc726c550100000000000000a23237719086db4a3c6e4ec298be9fbd400f80f44b694f69cc1dd1cd84ecfe1d01000000000000006a84d16e0196639a917baad78fb5e3b716d7ffd6c447ccadeedead0882482e6e010000000000000058cc4e48b26665ec1d6c2a128f0f5b70434ab4a771743429058b963257e6563d01000000000000007a42c87630d09e4d4b041cee10fe20840cc0ae2089514c51e248e137c6d5ab0a0100000000000000c80f32768e5bcf83095be0dc3db1f59f43650d58aebe4ca599dc02de3bbede120100000000000000228dfe58ff0326d8c8e0c51476692d0610424b01244c52c561f02dd133e83e0a01000000000000001e8d73bf05780fababa732bf11ea5251ca67db705955f2936fdbf2f1f1c8f13601000000000000001c0856b04c28ed8bdee95096f95646efc095737d4482b475053245db424e022901000000000000005237e4509f24bc9e8bf9bfd78b594219d86853ae16601f692f10c9b16b88f83b01000000000000002cbd43e95a827c6a62a0621b1297f0328c5919029173b2b4fabea89fa65848380100000000000000a0511c06f6fc317bbc43df8b47b7c36ca7e3ad43010607e88f21cccb32ecbd5b0100000000000000c87bf24eebac187534f689c35ab23038e0a49f890fabfc10613ed78dba1f67170100000000000000362701313409bc9d55aee9cb57aaa8d97bea27bcb918c08b99e8cff3930193650100000000000000e2b359b93abf559cd326ef07a6a46784b945518e1f1a4c04ebe42390f2574c590100000000000000b88e803bf4241f6465c0393416858ce6a0ac3c350be41cf0434a3566eeb79c4701000000000000008084d934bf7a7ad960de3b325ad5109d10eef00e90d6ab776240b7bbeb6a6a7e0100000000000000c66476c56a07a8e1a9e57bec84efe2817bddb252ddae336d0e64ae2905397e0d010000000000000028187c06cc7e198c70651d2e147597c299c3953f11113715847b419d39e41a7c01000000000000009ce7136b5fb85ba83e153c64a212fca1eee9c3ee42fd010fb27f2d55695b2964010000000000000006d2846642c835b0fb1ff1ef908449376aa8e7c0f3352e55da9a1e97e9528b230100000000000000d4be6f891156ecfd5f9ff661f780884578ac18dcc999b7f574510196c5243c220100000000000000ca29cefbde4a2167c5b0b4900dd25b7dd6877111ce52029ee334f02aa9a05459010000000000000076fc5ac3dc0ccd5aee50f0a686a0cb5ceb87bb037034dfc5e050cc477a327f15010000000000000090ec82f5e06c40da655eeb675214dfdb8f9b9a798c5e78e08508fbba7265802c0100000000000000f8a681118ea0bb9dfde2813ce5144eeb5cee881c27883de1c0c759255ec32654010000000000000016e3f8f5ce2e2b22b816bed27dc767115513198ec47d2795ba9edcccdde2d1580100000000000000b43a022b3cf70d5c2f080a2759d1778cc246f6f817df139391b9e7a952fdb14a010000000000000000345471200425fecce5c32680fa8c00141ab3ba13dc931f753ee13ae522816801000000000000005a7b37e2ebee5d486f6303cfd40b06c0632ef4fd77f4a002e9129b390c1fc0030100000000000000c08c91ecf8879f5042960c3d61c0e74f125463ca2726e6655fb922af5cdcb8510100000000000000e23173bf099d870567cbac0e94678e62cb1a554f4bf92c14ec2d46d9dbd8570101000000000000002ea26372b229d0438f7fa19e9c80f90fce3fb41024c48475938d6501ddd8547f01000000000000002c637ca0ccfc4fcf709987ab93933fde929687f615951f4db7ada7cba981e53e0100000000000000e67c524e443cda4cd27dfcce70488a5d23a93c8c46a5e83ef5a69eff3a02fa5a0100000000000000a42289d68c963358f3c450a850242bb53121e73e17f0e2ea2b93327446bea33c0100000000000000caa53cf3e8ff5604d82bac45868bf3e25115f7e8f4d1cdfada68f8487d03e91b0100000000000000a263f3bcd4a33da0112d793dd5f5beeb40eacfa37e3775e2493fa502b7215b5401000000000000005a22cbf55ee96a7afcbaca5ea1aca08d0eb0f2eaead1f43633ead6ad4c30c2390100000000000000a8e470f2339e3ed0da456780dd9207e9c6a02459238ec3057a6ade01fd6cd60a010000000000000002a65bcaa7e35aa60238c784f04cb771829d09bb4e0f7c1c14f4e0b4c0a6391e0100000000000000987b7ecf8720281e4a19c9c5ec6c62be561b6c2e341d5236a6ec0ada32f3e15201000000000000001892bc64859d3f7b26ea46d591a09bb55a80bcb9f2624c61d2ae145e01f56f530100000000000000da2ae63c251f8974aca311e38f118bc404fa9492c08576a3863d2944f979010501000000000000005c7f05d77f853f3eb8d4989fce36d0808b6d2b881e26f13c01e939b5d489a57d01000000000000004e505749e5bbc4d469c2640820ce1f61e6062bc979e258d26e2c1a52b820b47e01000000000000001abb26ba0076d5e001abdcf18d4454fe25c5076bc5ceb1b8f35d6041670c265f0100000000000000b4ffe3c5959ff37c11c6f19d91926cb97aa4bf0f604919e1753bb55664d061680100000000000000bc4c9b5425f9a2aa09e3239332c702dedbfffa2b9f4cc1b978b307fc1fa1337c010000000000000082adf4dd2acaba7512ff01a3134c63e3491c88a10ca13ceb92b60d34b6750b76010000000000000092bafded3ba1164305a4cf1c91ceb1b6a59f469d54ecc206bdacdcda49c3317e0100000000000000b0d4319a2ca1e335440462c6b9c80cefdbfc9aa735d84301a618ca480b56033001000000000000001ee57665488b5ad6f7358157b73009a4ec4b14b4a03c976487e188f54bff7d6401000000000000007022686a613aa1387ea688fdd9a23170bf587f7f1dbaf7b8b022f120f3a4560d0100000000000000ecc606e7ba3eed5d7f6bfd00bf679f03078761d1cb50904d1caa1080431d4c340100000000000000dc387c0249b862faa91a5fd30d1c2b86dbc741b2feac242f274bed763d647b6c0100000000000000b8a8e69633fa379fe4352c821dd604a972b4ab8a5160a23bd182708c7499a25b0100000000000000e208256605f8c064a2ea00f8503293d0dc4aeaacffe021a328cd164c22b623370100000000000000c47bd7af17b6ad4f01e2880542c8596f5a800a20eeebcb37756ffca94a6b98100100000000000000d8632901dcd20c3415349407ec167034633de91f3aa55f64c8bb35882c1b0c190100000000000000dca99b59a15cd12f53c2e069f1cc440c0d73b7f0f027e3d5c759ad5af7b32f4b0100000000000000a0c43d97dab42fbb65ba08c2960f8ad589ba74ce07bb67026b0e8579c3cbfc2301000000000000000052e7df40b49fce61ac4b3099dd48d9bd647d7bdd7dbc9e9f487e2301dc3b070100000000000000ea0749561740bb5b862e9fcc46276fda111ee7e17daeb5477db453b72912103d0100000000000000c8871294c3dbdab785b4e8ad9604d5f49db8260dcd8980275c980222e6eb2616010000000000000072a85a9dcc0af833b5a21a51ecbc4a9855c2bef8848e080ed70ac48cd1efdd5f010000000000000022be2f3730ae90e20d6e0f1f76fceedd68c124fd811c18482937756127ce86260100000000000000c49cfd152ce3ac1fa142b3b6e720cb173eb7f43c82f021418253a070036f870c01000000000000000ee4b76ec5fabf011e00bc27b36039f3d397e021e8bcacf9532c90fc419fca0a01000000000000003e79c115c01b959b324017f0e1120c76d87b9a734354fde75efcd05401ad173301000000000000009a0b42e88688d547c31a1bb811fdd062908e88a115e1aae39f7bdcd95b927d530100000000000000e2d8807911771f762fef5e4fc3b9685517fe91c48292ec59b4ce13f95bc8ee5d010000000000000028bc76450afad8c197d1fe5ab3055c8635a370d4adfa17c898b3df93a50b00300100000000000000ecce43c0be3c9134a0d62a0b6463edfdbfce1b2b1bf5bac37fbd1cca48e67e7f0100000000000000887fb18ae45feaa3e449cd0b529bcf06a9795b3cf50425c79e1fe94c1db2ce7d01000000000000008ef93e538ce16500f27b4c9a10ef7b02a46d8a9624778d0f83b9f7d8b560466501000000000000006a1274b6748bf822ba80c9a9416abd3cf591b7aee6adabb8359b7dbed8ebb3770100000000000000c6cfae23e776800744036a6881d20a0476c1852cea187fbf9db79c936c51db0d0100000000000000a893d2350e59c1937884d11aa7b680ceb7a49e7dba5a43c67bc7c20bf347c60c01000000000000003001ce583fa1f84555808f8d46c3242ce898060693aa0573f54d139263c178390100000000000000ee664cd198f60d2b4001685a624bbdb21ddcd881138a5d61bd450f298fc5833a010000000000000068f87aa7b88463d824f528b27648d786a8d3ec27e76fb920bc1294ef9432b60b01000000000000000662540f9c0bfc8a506a5aac301c968d56fb0e34fc6c05dfdd84e42369982066010000000000000090708d1a49ef0acfea32147a109d08d9aa15ee975b5237d56ca9b8e324108d0f010000000000000010bfe5eb616325eacbdad84fbf5ecc1f78d087aa73c1fc98e11bdd6a4251616a0100000000000000f69224d54ca679f9ec7e439aba674a55db13ce25326d47db8cdcf3af867a55180100000000000000487c6aad1cc26893dc7e498916a4c23d303f098c04b0a8b0c8242fbb7e73a16e01000000000000006a2524121efd4ac63c3bd00c6de3b84e23ad19fc60f886737e660d8fc6496a57010000000000000040aacd312f15eb011e69b5dbd8fe8b59637e06259954e6e3d8f940e4dfbe2071010000000000000088f9a16886165d00612032cb1b36669ad62b7325536f499191e711134c71b60701000000000000005e6d779219b00ae1d5e6320faff3b6eb963d3acf7705672ff56d2cb46ac44e5b0100000000000000d6152835cb59040a40a5a4ee3a4d481937b7ee9d4a5649abeac6c535d9e177080100000000000000bc4b95226de4e10f91e0254cfe4541232252deaa347f567df124aba81bac4d3f0100000000000000246615914ed30f855044df3bd63491ca8af4af5614e2a19d5c9fcf8950d13d2a01000000000000001eb833e31087d6baffee4e7f1d9a8e3b7013ea392c81f74313a354ba82e92f6b01000000000000009c8c7c8c91df0ed53864f69017d530b5ebda3ab4bde3c67027e70893213d533a010000000000000018ec239eec5457ba11a41518e7c5f98266d1bdbd67602641d04706f95dba5c56010000000000000024efac2829d615703c5375dae24d394207fdd26d9522bad7af6bac64ede127020100000000000000b640f3f59d687a3a2608d96c86ae380ac41d9dc8b175480a8830e27fc046590c01000000000000004ce4e086b9782dfddcb793a3efd7cf37db624c0f8274b1fc36f0802d5455386d0100000000000000aa7e2ba0ac23106e76a0efad2d34747769f669773802cc4de44aacd6bd3e3b780100000000000000f80643f72c8dc15503957f39e6d9ac6ef062c43c516a1693e87d2a3d26e9db440100000000000000e487051ee8f32b1f8d0af5e897b49730512303471416e689ccfd0bc3f726f447010000000000000028a027ca1c0bdeebfc8fce85ac4bac48cc072523d9c4a86b4f2594f9142e7e3b010000000000000042e4c41a899dfb238649e5b17dc232c2699353635d60e6a3bdcd71f9b82cda300100000000000000ce4bfd8c5611b1637066ef9e579c85efadfc9513b882184e00b75871ef7f5a2d01000000000000006c0da9efeafc98d2d9d0e21c83e6e937f417ad40f2aa3a21ccf818dd5af7b21401000000000000008e2eaf4ac96e0c79da47d2b76956b3578b39ee4979826d5344254fc37d508c04010000000000000028558e46037c51ece4d39a8a4d34688662e629413c221d6226afe454240e702101000000000000006a4284a9ea438f75390f6547faad885b235c208634da73a79e2e61c51a7cb410010000000000000098da9bbd7e6841370bac817945d087a30acbbf47f7c0243d6588ed32f7c6f15a0100000000000000a8660bbc474f75581461f56345e963a788f3c33621bd0c1eb9834dae39719d6e01000000000000004a2073ae31b3df10d285eae6a5befe069183c4c6a6ffa1b2bf432011d0d475200100000000000000bad91c9aefe173441dae1f273e55090706d412b0723d39bd6c3af053feb1832001000000000000003cd9f863ad569b4f0123525a9307dff13dd75a81afe7b790d4d8ff418d97d9110100000000000000c6debd3b107fbd0382b1ccbcd0063aea1f8e27536561fe7f3c6ceb77b219753a0100000000000000be03fe6bc03a7884524047567a8ccf43b3c988bf3b447ca9e1520d1c1f83c53901000000000000005461977495f9c407a8d951e860a1cb2087592103229bdbd879629cc538a4182b0100000000000000b05ad6cde0dfc019d740c3f50b8aac16550ff4c197da19cf23b9293f0c5c3907010000000000000034caede521bed7f19b2a5577234751925041209dec1c5b5771d8ccf33ebd49340100000000000000bc56c07cea21bcbbe058aedd2ced9fb4757caead55f96bda9bed1c9669c32b640100000000000000900dc8c915b18e03f8f76a9b3b22a54093107754f41838668c8036e7f8b1104a01000000000000002a01b311e75c72271b3638f584b85169e1118dc5f850862add04c9a20e33b131010000000000000078e1a4fecbaac940c04e0b591a01ea66a574b5098852ded2810e3a534971111f01000000000000006ccf2ce8e149999a7bb996faa65194e60aeb7bcd1937c787f886fe979fb49e660100000000000000804b093ff2d1b39b5aacc853c80a1b652621a4935e8c8ee53c63605c1afaa92901000000000000002ae95f2c9044d5ac14beb234c93680b9a0591a70b3c8ef971f3a1498b580fb4c010000000000000092bb282d46ed819e46fb3ee929f7662354fd095b67a8ed51326b47e83f86653a010000000000000082b820c5bee8ee77e35203dab387f3434b8502e5f1c35dfb2ad15b5c89d47b3c0100000000000000c8469111a9fb61c9e775d2b006fff88874ca9633fced938b19794026f2e9a03201000000000000001cf3446b4b5116a1784d92cdc5101e55a5fb91ed3d93efccd06b304a94362d0a010000000000000092c983ba8716f18073d703e7c8556e65e2565ec377f0f9a587d7aa8b5ec4d8500100000000000000583ecb6dde18a2984d5af56152b337cc90422fd6e937b5e06c1c6caf50be212a01000000000000009201460331a900504240f5a2b781820c82762b95f9f2f5993caed8913d8be96b01000000000000004a539d3b629768bcd3530b7aa14c53fc84252c8258e610f57ea5730466e0d02b01000000000000007203b3dc19c8ff42aa0c90d10328d49e6aae97e4d93d91f33e584fd16073f27f010000000000000052d58f50e6ad841adfe6c77ff332933380712c236fb0bf00565d58b3b4e41d78010000000000000018d99932bbe04bdd1da315bf0c31ad9ce555b84955db60ce36bb73aec0d8a61c0100000000000000e26019435e06e3807360b546063269ab645e6fb3db5c99a573d0fec63e2d537101000000000000000e1b958cae4235db85f6494d1d9af4d435450f10e39485735d7ebe0b6454933b010000000000000006379582a73f65db4e43d5bb5d73209c970b2a4c903b3dbfee465eaf7b89336d010000000000000024030139ec9ee0e2d96a22a3fa6b3c3e3bfe7fbf57bf55e9efc4586a103447200100000000000000e286e0fc739361f9e413d23c3faf924082604a390f3e81821e257c4eea5ce33701000000000000003873ac08836bf81aa2077f9e50a55b47e02697ad9fa6704c7044fca0c93b8243010000000000000014310c77d75c16c2c8d1191a58d4fc682c4e6e5e8f9c1e90eb15dadb13d26a1501000000000000008e0fdb9c1c1175d91743756935f6860d7b29cbce467275b8de3e6425717f6b02010000000000000040a2527ffa7d30d788eca127d435c8b5aa48972cda538b9a1627a57e85c8fa1901000000000000005673f82330a1ee6e6889f745fe15c353f5f8989e4a281e8aa53e38ce1e74556d01000000000000002254fb9324a6a9af450ce3a4f5ab25f55deb22161e520b2308b8aaff42e3aa740100000000000000a64dd29103d43e3e898a41f3630ff88b2420953febb931c70ff543673efa251b0100000000000000e8f048309f03e3d9a329dc04bc48c8d1befee7928d14509121dd06e76cec0d2f010000000000000028e972febaf463f22d1108053e7c26ccde1e6018d7c302985bc227557e0a663b01000000000000004e524be219d0f11a7489c27d0e01cb5430bc9f58f75a66ea464b717dc25c9a6b01000000000000009e02cba73dcf1d6eec957735bb3363e66c2633173f821d0edd97e9fc3fa1242c0100000000000000ae46c529ba59b0317f6aa431f79802e087355cc32d78258809da6a9b04b8f2600100000000000000ccf230623370ef275ca417c85fbc6e913e3f5fc8f51e67f54beb8686593ec8540100000000000000fced8f1dff4f6c6852b0d643e26ee532086e72be7aecee28d94d1d59b5f9986701000000000000004a905d0574cebf6e8d00d382b104fc8ee1c008f1b9ffa6fa5c3b67ff29719c0d010000000000000002ecd96c1f4fe196d53f262e75770f1a81c80b5764b01383fb77e20684f2096d0100000000000000fcccf8e328b4cc968af52a23f6c960b5e34241047b630c19a0661ace6b9c273b0100000000000000ac09c48f5dfccc02362c489ff2522fdad54d1f37e6b47729411a93227f602b780100000000000000be6106f9217a1847af66de9510fdfb40514409556506ddc1c1a897818434125b010000000000000016f2e4835ecdec4c373e17f48c95cb119263cbd229f7e32c0e2185f7003d7d030100000000000000f0eaddce7b63e666eece637b1128a3e4f54178df87a9b032fa3312f68fbd961f010000000000000004d74e03b4e2cdd0109cc8efc5bbdf36b7b5d89c17d4a56cfdb23b0b2b77e10101000000000000009818995c97cbaa84126b0c0a8c4c26fb202e4b255811ca5627600c11c19242760100000000000000e09b8828dd7af7ab17cb00b73845871b69d925dcc38d6d29f79197f5c87bd8460100000000000000b2518044cc31062ee50fa81cb6983f314291a0300865fa5cfe149829c5050d240100000000000000483121b03dee3c339898579611a968f6382ac2a0acf3da8b9e428b2817c8de380100000000000000d2c97828a993b57a79d8e70e9b6cd9e90f01d1bbd934641509aeebbc625b9f7e010000000000000050f3e6382021e3c7ee097307d03933571ad45bd056c0eacc86b9ed5174dbd52e01000000000000002eab7eb696d4c3dcef6c5f74cd704eed76fb51790875d8ddbbda133ae7a42f7601000000000000006cb2f0f0e5fe70eb547a0814ca5346f59f7f2ca74c00714aad555157cd5a29490100000000000000042e7c894dd88fb2b0c7dc7a56b44269e0ee606c73d5a297cb459dbfc7649a17010000000000000022c2c3039397556619d3fe4568b5141ef07d326918616d32c6b0287535850f0d01000000000000004ad8fedb395dc0ed63e0edbdbd2d20555b61a46aa7cd751e4308335c277cbd6a010000000000000054a4e00f3df9f09e23118cce02f804d36c4968894a621305a0e8150a2910dc6a01000000000000002a6290670f4302bcbbf2cb0d1cac7390ced076334d3d614b604d734a1ce1217101000000000000004c5e6997b6f186855b1f4c9f8ab2d6cea3da2e86445605ab89e5b5821e05bd3d0100000000000000269e8d252b8a4e91c2ebdb7f4b07bfa9201b88bd436e6c4044e70364c746614e010000000000000022e3fb29cbec5255c5057fa8c32ed053a15c71ea65c3594a5831d2c1671f36650100000000000000b6a7cbce4a2c96b0f290ced2c10278ccffd1c2922f1126cda8227d35f1ad98150100000000000000fca3b0bf7a3b4ee818a50f86de0be2f976621c6f5a3e768448732252e099cc1e010000000000000018820322d29e40465465fc5f0b488431e710db471615f780451342f5690e20350100000000000000407d69fc26f00269186d96a26e6fa3537160898d761d6a785cb7dba141f87a7a0100000000000000d632182c133a20838afa52678dd1b9b5055571c637f1ed1a1746490f3fa02a030100000000000000e0f95e266ead280e08189a21e7c6b32444e5c02abe73a57751637a8fa1a3d92f010000000000000074f02ed037d28c883df643034a596e4d2a97a23782ee8483c9ae3429ede7e70901000000000000008e3728649624aa32d3f1d71d0d57fb42a9ea9d3155a2679b02f2330e4c7cda26010000000000000098d620b6375ee5f969bc894b1beb51d2b22132a8c1b469afc7796e23c530ff3a01000000000000009493e6de34e09c9679b6dca602e38d8c07abb77b3cc487ae3a80661968caa37f01000000000000002a8e4336c0fa5db2307feb0bcaae257f0265ade08adeaadfabb50b9838d9663201000000000000007acafc914dcd1ac429f85e4a1c89580c0bb58b8c67b3cb6924643eca63ce306c0100000000000000ba78c26db96a9ce3ccc2980dfef7346042ade9769f95afaea559f784af167a5d01000000000000001af6a72b08fb5b53139d4aff42564c9e3057a7d5f3e6e4391f3ce9c9d07709390100000000000000c2dcde1e4a7ff6f8406b59a7896bce7c2b69bcd12a5a1908493b7beeb97c7f3c0100000000000000582030a59816ace3ab2c2b8c66ca50a69991899df57096da6f6ca8a49b16550f0100000000000000840290d318350bff32db3dcf6138b822cb2adf1dedf5bad8729471988955915c01000000000000008c6dc982725d0f925557f77e1844d64ebbd5e01b7ba9466e0c1f1ce8bb757f3901000000000000006601e1af585ce0bb093a81463302caa6f02919efa89aeed138d25264b32f3d4201000000000000001ec005e9ca3c15b2994641dd22efcbb20032f10894f76f57296d219dc149817b010000000000000054a7be1f3969266e7b653b0712fcf4d237fd6a673ee6eacef2cd4fdb5e5536350100000000000000bec3821f0ead5fcccc95e22def052a2995ea23ebe898344d6f7ee8bd0bae0f58010000000000000084aa90e8351d5be6633866f18d2285e5938577ecd2dbf46ea9233203400c43050100000000000000d4ccf5e2a8acb9cfed3eadff326730c60d23683a044d59b26e53a4e1abfc895b010000000000000046543a6ba7d90d6f10febc8b628775c1dc08b55cb93c04e09f0a072f264907360100000000000000620708ccbc822d0be9a49eb46e73955d4cdd8735a5f2cfed44bb656a71501a750100000000000000d8faee17dcc461acb22ca1720b86385414ea8810ba31509fbd8da8733029eb190100000000000000105aab27f211e6df23599236853b58c04654709d9c7d0d5c27145369450f324301000000000000008e703730fd72822a067f724f3efa6bbbc82d5c064d3560c5833bf49edc21061a0100000000000000847f4b6d72993380e0e76fe2d885e429796335dc10f470005e9a268880c6fa1b0100000000000000c80a16a172ea19de337c120de8ba72df1b81efb23ff74e0ee7cbf36e666ede1f0100000000000000f820a8ed2c97f639fea2892d0a89ae98ffc4c0054f948f9a0108e4d99f89994c0100000000000000fcd5f4c4fe11f20ad99dc8345b7dc5600caba5d5b7d3f499c3253c095152d454010000000000000002f1dc39de14fda36e8968e3ba568ced1203a9efddcfeff0b8f0f4c5ce8755560100000000000000b66836e9d42ceff254416bfd6cd80592da3a276bfbef6018540bb0c93a5c44410100000000000000ce8df132517fec1b06b9b7ad5a9e18f861df5bf14dd32b0c7dc3f03be447b2730100000000000000566779977b35c81ab477958e39cc697ffce60fe1aa31f8121da08329b25f4e0501000000000000001644ac70036fc8b19ec0e580bfb10d272798d8c7aa3dccd00d5ceb639fbde603010000000000000008a2c8bc8457a382313d040c40f3f0c02eed0e5357910b19ae4f0c9360e4dd1b0100000000000000a8bbf134d2c82050f455ad50876ce102de5e63600d2226ae2d6cf3f52ad6eb240100000000000000480defe8739c9518d5507480bb9c68ec408a60b944824521f1184b74bc47f2170100000000000000780e4353aca40b0f2b2403c862cb33032d49a820244bdc2853ce158d48c4f6100100000000000000046e9ea6faab3f6ea31d95f9b4339bc5622323907570fc9c788dbf46a13bb92201000000000000003ae7d174f16f034ff7816b8d9ef1b4b2b15ac5a16eefe819253b03d958babc110100000000000000b2f392bf1ee5258bb5cd29a4b800747a419f4df00c61acacf46dfbbab8094a7e01000000000000003cd825436dadf293b1f5c315d478b960b1e6f141e3244f2f0c892f42c0b159040100000000000000ac7c9bb11bbd24b64b4611071ac5ebc4c83e94d38abc3df541eb9dd04b726659010000000000000068f3e478d28f00ce97dcbcce5e9cff5674f6b3d8b06f7dd8be7b5f3b6f1b555d0100000000000000da7bfba48819dcd92eeb75e2435784132a257ce38ca01a6eb3fb66bed9422b240100000000000000ccc5a764f42aa0da463245aad924f65618099b1605ef6e3cf7efddaf791cf34c010000000000000056da6e5ada211131376b8d0571118b69fe57fae1393d23572b484f394857904801000000000000008c3fa761a684f89c63b5014e6a934f763345f91c5829d88cdaf28abe75c0823101000000000000000ee6df339af6749cf9b9fdabafc0cdc59ba35a1244fa56b0adf6bcf7cd3333000100000000000000c081b6f9b341d1355ff2caa0bb297d9cfa88dc9db48eab74f1c004c189513e4f0100000000000000009463e59f6b021a1dbdbf65e56f568ac5736baf96470440d7123605a4bcd93f0100000000000000742f5991a21e102707bc1df8a9565fbfbbf705884fdabd13ec223783f96d3f620100000000000000667f7af26c8dd32504777bb2a259a26757808ead5155f3f098558a70d90c575b010000000000000006f8df3b49930c691067ddce8889df6179b8ac05a3e9a96d0a7e98904c969b14010000000000000092ee092cd2215c7c1628086c08be10a3cb969f6b276f600422f3526f303bd87801000000000000009aeda969400e2e21c35ef284458dbc898f277a49da9dbcd675eefcf265f6d4450100000000000000020d34131c7a0ab6d104839ed8b9e0cdf075b80409a36fbe94d0cf83f7ea1f1e0100000000000000b484046e76bdb203eca3e22bcc5525f7973cfc70ab7eec3f568fccbbac6ba140010000000000000060722aa6239a4b5f138bc30c5b3ebb5cf0c53b901f71076f213b72d073d2cf3601000000000000001098c3193759138d2ce96e47b00dbff13b7542669fec49b78355e10e68f6e4330100000000000000269d2ef380d1b161d3479448fad38c3f1328dfd8a134d5c40399f3692cd7545901000000000000005093664828343ccc86b8a41b0638b5f38c8e5995d2cd01267d49d2651d5898650100000000000000b27ccb4edaf0edc92ce1f35b0950251d38af8cea2dd129a8ff5e6c946ed6546b010000000000000070e31469f5d889be009fb327129c841179474ad84a5c3c732d5260f65f8a3767010000000000000014e5caa5709b3d5a8e50aaaa9ceba368e2d66f964e598f861938f093dadac32b010000000000000040dc7c3e4af430f523ce1ceb5de4c836056a079da82caf752cceab452743695a010000000000000060fcb17029130258a1ecc087eb771769f87865a8133cde58106aa9fb58b4e4350100000000000000ea0853b1a9c0bacbc2c57c8233940af4bc51b0734b721f75b8ab5f74d66c0a230100000000000000f44b3ec5c7b2188f208d60d159d1f5b0914a51a0632eacea6b88ec7b26d6673d010000000000000046c5d9750776edafdced20206ffe4b799489f6de9e0983eeb3a9fb6485c7e22201000000000000007e2f54190ec59a98cc3930dcd41c7113812c0596c9537277ca93038a9e57976b010000000000000054ecb1c6cdd76e77a694ad7d62b50187c0de759e60b46c82ce70e62a9a328e3a010000000000000006451fa7b2d831264e40a3e5b8452ede10164b7162a0e93bb9789a102c3010420100000000000000829f64b96b37d0aa283fe99a6d2150069bcbb6be61d076f23b3992b6c1fe6756010000000000000052d36d934905359a84c6ab4d2e4aa7db403f77fa694cb05c70d5477f7079595f010000000000000078044b468a3e1a848ba57d04ab36ed1653fd9d59294edcaaed0dcb945d9088770100000000000000ca4750f3796fb66fc707269f6c846b0aef6416f03aebcf728018144bbf76a22b0100000000000000f259a1355699c7b5ef71820c5e04d9e6436dd8844d347ddf84f7325dd93a6059010000000000000052b41700df65ea66ffc6cbae47c04a2f20618f5d62ce1ac9304313373d39fe440100000000000000c4b17e92b7a096e359c764d3f9cbf2bad06f50f8341128f642739248a38cfa030100000000000000ee5a96cb89aa5c8f6824d3806a83a6cefa9cf01842abde63b7bb04561553c45b0100000000000000a065f45a353f24ba187248aacd9c64d5c3a92ddf92b4a5c33994f56a07cea8400100000000000000584cc334d89181207fad8289d1e89a85848439b16d4bae59f1004188e8e26e500100000000000000a6d498495e591b3b16dc6388c4cf43edf35e263d80d743aa827951f22e0ac91901000000000000009821465bd76d11b25f1384d98901fed08727f3cff92131d817a987333cfc5b65010000000000000032dc47873d3d298c15ac984bf66ef0610883d7bbd2fac924d1b37db68da109070100000000000000b0200adae0feaeea78d77e0de3b4a63c7d44544dd0082beaa93a293abbb06e490100000000000000742a6a8943509da1d899f82879b8965a928dc3db99996a7ef65dab90c22c990901000000000000007c3648dd735ac746fcc422ccc414f6a1e41d1308f944573fbd11119bbbd87527010000000000000074e859fd23da9f3b5c0b554492134ec981deca6fc0d8e4fc6e33ca517a0ce26a010000000000000022b634563bc2b885326ed31f52644cef011566a890a26192a8b5435b19fb6e42010000000000000010f6d73ff674b4168adce9e291ae84b250293e48eb40839ea8ffea9c057c83090100000000000000464cb5dfedc6938caef6caaf5a58f4925a295f24a4f37337033dafa0cc733e660100000000000000ca377174a1aacc948264510f8fb2f4264475ed6acf4402110d99aac6813a990b01000000000000000cee7204e361a4c8d648f92b4bc058f517a5ebe90bf75f34116934631c610b0c0100000000000000d460e8effd89689383e396bda01d4fb48658d1b2be0f3497a635d92a00783e4301000000000000002a98fbaf7ec22832522e3f96821711ef684283911a524960efb14953255baa2b01000000000000006cd1066d5ccff0f29049137b42feedf12c3a4e91f37170a20e87a84bd6aa1d2a01000000000000002076bc34bf8c9ba9c0922f484f04637c02b4a44e5dd7ec861f1ca8b6cf84c8400100000000000000f8d7cac8239edc444da065c812e4fb38f7b0d928f963388f951e2b0115077a7c01000000000000000469ef46bfe2de21a792a23490ee7791b7115c35c71805dd6fc133f6ddb22d270100000000000000d285950cb237602bee1798bcd24418a2a562b549fdd8e5ef2d1f74101358a04601000000000000009a9797e1f4d665685c0eb08f8a954cad7c6453fd190ad1a104b54d5bab360e42010000000000000096f9ec98d4cfa00b9ff41b5962d3c68f12201556d80bcde84cd85251252b822401000000000000009eb1b5beb8b5ca4613c17e6d41996337b26e0ca7289d2f52df05997020eddc5001000000000000002a89ca2ad62c6b326ac778f63292142fcaf4d9721b13d9994ba4abd46152f30b010000000000000078294f515c659b94bfce9674db37a3cf2f32d89ce1758ca53d1860037cf1d42a0100000000000000a22326a6062c74e63c452da2d03f4a43a012c79e30cb3dea0a212cc476c72a4b0100000000000000047e42afb61bd0d49aeed1975a96c8398a0ec4643fcf5625cac5b22c097a02590100000000000000bc4529c25a2a01667d6e451ab753e1713be0835456e6fbd29854cfbd45dd2e3c01000000000000007efe2d823470c2d98b6a020e469747a7a03429abe579202b97b2a5be6c2092770100000000000000f4ccdf83d734edcc568462572abaf32d22ac7faf8000195e02273d1c96654308010000000000000004efb918028f583768356118e9457c36583319eca6d53536596714e782f1596d010000000000000048ce0aba6f1554e139568b4d2358d6cca9bc291d3600787cc3e732291002ca220100000000000000babd6c9cb58a2635db60d13014684aee881af96c78af8c8b9b31073069167e440100000000000000a0a1cc9172a71b134162a60272739d19b59162748f9e1c4adf86d3a10834c72d0100000000000000a8731d355eefdfbdb7fb12cfa5a280c0b1e408aca264ef585d42bf97fcfba1160100000000000000f038e6d72ac8c9b9d165e9154b1f7978dc906e6bbb501ffb8e3e9a739a89cf5701000000000000003ce775a4a6215dbfbdc2b0a8a8b71936abd61642b5fd1a0c1d06ba548ad3025e010000000000000058e2aec55f89eaee0f634fb10c0ca50dc4e699a8aa61e503672039a14dacd8460100000000000000fe24bd4f4b0e75ff21dcf16a3ccba49556cfa9586348a8f939df8def8a214c0d010000000000000086ff7f9b2eaec6638f33502e74c216fa4d15f774b35c318fea091669cb5544190100000000000000eedea8652413b5a97c1eda13e1e050b777bd0a8ca31dafd63aeab576a68fb75e01000000000000001836b6f7bcdf39ec4f786ee982799a549605b62f384a74981bf9de018c26fd430100000000000000685506af78bd0b16513f09395368600e5b6fcde0f89d280c6446b1613844351c01000000000000009cc697b491304d797292fd5f14284c376a0adb2d420add197617126cd258f62c0100000000000000ec25078562fb511f0945c3af78d77c8e02f570c647957c0932475aac3ce72f6a0100000000000000dc4ae9ca42fe496af7a466de59735813691d9c050f3256c3d4a96664cb6f9f670100000000000000028393ee5fcd06734e381651c82cb89b08bdcd64d1aecb4727fef82ae5c44b4501000000000000001e7b8aa5fe2aaae1d5e3c8b1e38818114e83d9bdcc95629ed834aab37e2b8975010000000000000022ef710c68c0f81819abb592b9cf94964552ed9b941aafae770896cd1d5fb16d0100000000000000c220d72d1562268f43bfa2a12f4b516f060e696091b122eb2e3fe93faccbd67b0100000000000000c63e31fd558807e07f9c7dc51f8fa8110679bb1b1cf5585e56d0b6164179b979010000000000000064eda01bc8dd522756c6728f9b030c1b1f605ed89e91233199476e5b0e96ba2c0100000000000000eed7e8e8a64dfa89c548a31c1b9fec7af5aef4dbbdb26997b2ddca72d4f8790c01000000000000008c53786209d22e7605c5ac59b155f2ec9bf5d088d77abd8930fbe65463cd8d6101000000000000001e534cbbe982369a968006efa465cf2a16807a88a5c877d45f090192ea619c6001000000000000009c4a01b4b6e187c0c98931ed673f6c02ead7030a0f6a967185d7823a30d1796901000000000000006e8af7492bafe8cc6e8113ed4d36dd0d0f28f42b381238da06e4aebc48cd656c0100000000000000a8799cec2aeeea9f33bafbcd60c947d0bcf3b1c9be450c43f63004e16a857e72010000000000000078cf1debe3fc0da2ed2473d1e1835a478cc3e7008e0cf42043f287bc36804b710100000000000000b8f696197dfc324b72f06560c38ac6635d1bfe5ea4cf59c133c36234a0a012540100000000000000266f93d04b5ea1ae454eaa25946da19eb9f1ebd3a6408d8d1ac4a373305fc9230100000000000000fcf8c8db78fab04b332758bb6edb9fde68e74ee228c1eac78812cd80adce1273010000000000000032e2c97e308c84afea4b37d7dd8f62e67763126c357c9e6e49b27f54c3702b730100000000000000c64c595519886ef38c2fa837c795ee92f6fe003037c9ded2c1282a939408513d0100000000000000a0c28669f01d5b4decdab2abfd9d14b989c1d4b32323f264b24a788de0b9d2430100000000000000843778dfeddea10578fab2773f2827c62fe0efe374d9a01eb370bd8f1427e76301000000000000002425e806f3e7378d8974b7cf541d0e4cc4773dd59cdc705e006bcdc83610b20c0100000000000000b67d043a780b897a23192cba22595b758d2a5db517d50951c99d5acdadf3210701000000000000009829a89b84bf8a0c76dad25d99c2e4476e51bff2ee9e917a65edd1b4175cf5400100000000000000b67a042a5fc9668101e9aad4a291ea2aeafe50eae796865cb201201a6dc691530100000000000000080527decdf951ba9bd3ed9acb5e1454d07c661cd84833a455a2d239c18d42140100000000000000847f948b67d6f455e2f2923f366dfe3c0a3925b451210a46cd36fafb8cd8290601000000000000001e6d57d7109cc6dc573360e5f2192578e3324f2a8dcbd823483b82d725a9771701000000000000007cb1f225b90c00f426c33ac4338eeb2dae6467b8a9da5c1556e6588c12ca977b0100000000000000b261a66b9bae17b65e7f6a88d65efb4519925d6c418c9e2ba17bfdbf684b77630100000000000000c4046e6cf48c9913b2af1dd8caa4f7ffd03a01255af691cc1b70f142b97d2a150100000000000000560c91919fc22867159ed77bee1b3e70d2e222a5fe6e830fceb13b58b0daa5290100000000000000b6068f3b8a0ef7a3f7916e5559eea8158d5f5b09d9db89e40dfc5bab0549911a01000000000000003680cf4852c43b2a708608cd7e09b531e7748e4d7e9d65904676f53ca7565352010000000000000010381a1fde26d95804978d4ccaa1d6e634efe2ac922f7dae4da3cf3a64568a4e01000000000000003227028def74f8ea7bede3e112e4ce09d8fb823790ed599f2259019945f2690a0100000000000000d28eb111cd786c6f09c003d958c4a26cfd7a33f9e8bf6db02795f12afc7a1e0e01000000000000004ca838afa9f12e88436eacb5024f3f94c95a66c32e114f65f3136176e426c75501000000000000000ea6f5d4087d599603b0c39fbd588c198b9d9bec85a77a5579ff68fad12fc20c0100000000000000fc5b39a7b7d737c7d1dee9dbaa77969b95a7edd3926c538d8dbb854d53cb3c1101000000000000008868524e56bed527bb3039e7d01a84af44e8e62ed00b1f44098c47789e4b201001000000000000000c60356c02d5d99293952c478fd07b2cff982dbad863ebdadf25c9e69206f14901000000000000003a8b589c8222ede45b3d95c8d9176543ffa9a29cbfa0ba2af60fc412e732d75e01000000000000000c6cc2bc932adace83516fe99076d532e6197ae08d66610988288044c6bdbf3601000000000000008c7e4271cb1d28f71abac3f793ef73f2261851662e11cf165e5d7b0f40a0804001000000000000008e67bbfe6269ba4ea2b216e7cc21a54ab882859d65a691ff2eec486f66a9035f0100000000000000103680fee8923b681b7721ef2bdfaac20a99bae45e643b42a228be43b3d211660100000000000000603fef5a531a03b8e83a8b66f583edf78706b93a11eff454f5a56093a6434a3a01000000000000001e724d980809bc793ae72d15a9b33cbf93b4cc17875a4259970548c5137c6b4d01000000000000005edd53eab09b1834ec2435a78a19daee1acefe1e84de77bf788740d9bf6938360100000000000000981f14da22574782d35643e2fdf2c514245b6d7475048becf8143136acabb00c010000000000000090b7aa9d2cd7f44f20fdf30f34ccb9d34c943c1e5c3d4553c6c43049dd8ddf1d01000000000000004651d1aaef0625ec4a153357d541e4ef7f3e15866b1613bcd4ea96f8ba0c3c6901000000000000002aa57ae83dbf829a794b555b8acddc97657b2178d0722c6263c8ddd19ffd474901000000000000009664e4e01c42d9a22435a39dfb1daa6cf043abbd01c1b081c28ee271988b415b0100000000000000381a3708c945f1d295122322f3b3b7e161a4f2556d6f8d8ebfe052377ed37b700100000000000000e09ecf865113ac4f2520de61ba8b8fa5480534d41145d1ff3db5c8ea3f3c9a100100000000000000ecf0297bddebd3d766ea7def2bac79ad6eb650fabdcd029b99cb1649ff7dc815010000000000000090b46ba005eb064c8ea5ebec94a5facfe2ad0c0050dee0f51026f0d1603911170100000000000000f6ccffc523461e1cad22a66b2a4637ad254d1b96d244411e0eedd5d89febd50d0100000000000000509f915fe6f099fb5807c03be526a055dbb7565c35831a7dd76d6e506d493c460100000000000000042cc9a90ee7801f29bde1f77ebc42e68fc8432df113d23b82201d1a10e33d0a01000000000000001a47252288a7ce1b8f8892ca42e0f279967de49258218eaea8bfd94ae117b77401000000000000003c2f81db928e84552574a761e6bf8991a337ef5907a5ad26d8d21385da1b7e3201000000000000001e63ed13cb9b8d544a73307d348a241d87d3d1063715d686572e705b37b7483e0100000000000000bc633ce058ec703568a94b656988f1b4036cd9f74aabe8a7b47e7338833686540100000000000000183e5f34c7c987bb4f165e2b737a9300495ecc1b7f9681c5c748bffea19bdd650100000000000000a0935670e98d2bf4800f84af8a051ce9d600d2f515cc2de17a9e354d3488db460100000000000000e84ad35c6913d9fb006b3d64760b959edf736c080c8fdd58af24ba8e6a6fd47b0100000000000000e8b7e227a0ca7c64a4099a3fbb509620d4b8e1dd91e1ca32a5bda49d4aebb31f0100000000000000ea3c4034fa89a8744f7c8a55560418d7298cccf97fdba7cfc0a9c83701dd680c010000000000000006adb1e6e78084fd5e5df37fafc180d1ed84377ca41de3b5ca43b764f0cb1909010000000000000008bb4e156026608c59c8b2b6f8068e7398c30278a90b8f478724fd04456a673001000000000000002488a8bee91b989dff6adff396074f3300e7938a962ea3728943f37a23a7763e01000000000000004e466f6a4930d856a1f53f21c1a44451ead20c8c71319f6a685f0e254d24c32101000000000000004c1af564e989c30c6e5ae1b8035ced5f59653b40cbc2d78fe17336468c8f441b01000000000000002037d70f4c244c81422409ad01d28d72a30d26e595fbcc791daeb57f78a8567001000000000000002e885398b2f8018002abd2595f86a4168d37c1dc2e189108a02c520f17225b7b01000000000000000e24cf7b53e505317f1217deaf5b08a4ed466926bf13be4b15d0732132df435901000000000000003ac231bc9a6e280f3d1ae2020b2e56c5888098427a186d35c052ffd6e42f264301000000000000009647f0ba124d459f0633dfd82a3c3a0010124072d4e274742c7c17a536eba91401000000000000000eabd85c2d5a1631f4b14cab1afb71b4c8b9543b3c93ed53b5a557513bd8394e010000000000000024706d6d41dbaf2bac8cf1c4375d87c3a5b84b8bde07036968aebe8390661045010000000000000088fa8bb07ebce99964718c65d0d6f1b091ef2f4d4cdf7b94a22c42c007ecd706010000000000000048f68e4cd520fc8d0d253c8b5816082302690cdef1ed1cd2e4f76215243e72380100000000000000882807165bba4bc625e328801dc1325db2a4a133f1ce9ff2de36f2d018aadc3a010000000000000000f79cec5a6b6b70f768ed05e94d2cfd70b13bc58fa16e62d742ee49aabe967e0100000000000000d8bb28523be3666290cf2748c87eef425e0d92cfc359de1d74004354cb583c4e010000000000000052ac28ba2601723d23a086b5d775f19319f110ba5e9292f2af461e71903b5b5001000000000000004cb3593968c0254cadc7f1a2270f9a89e0909e12a6eb5ceb7f723ab6ee9b7275010000000000000066367dc21d99167386ed0d0018a18b23a1f7531aba9f6e1d299a43446c86201f010000000000000060f640b7d3d4e9316603270a4e5771ff2d9e48927a6210a67eab2a25149f17740100000000000000d2179a30faa13f5b821213d4e45bafebfe069746e5afe09254f80fa301ae093a010000000000000092e5bb9d0906f768dbdde0696b78e493cc78dc1f68789575b24f0b962799b51e01000000000000009295a1f023157921d346b73484b120d46048382107015aa9ed998f1fae95970e01000000000000003e652d1f8e78c4011cc9b19a2fbe253a6c8708a30e94b549550f11f17d9b3f700100000000000000d2c456a3002282450e0419b0aa5293b85a9e6f5e9d181652a494a2e613f12a11010000000000000046920ef4915f3036b0686792a741f2d04698b23c5e6b8338d03a7e935d6134300100000000000000aa97c0ca75c01bc86b7aa14f50b3732717e4238a8d542f40601cc57fda04486001000000000000006cb96487d8bb7c4ba7726a623709a27687866740b7a400b9c5322e806711aa0501000000000000008a061720463abda562f0802f43ff556ef8382f737ec6370150396ec14dec820901000000000000004a512ac212da2c96d7bc8590865ce627e6b60246700595bb100b240e80a3f0760100000000000000be2ee8034bdda18863bca0a0af63015a85ee2551b62e0b1c732417ed06ea39540100000000000000d65ce90b9f6560a41d71a5a53303b2e9fe2fa2c7b5aa7b8d77f7c0ed4473993001000000000000005a15fb3423d8efc0d616665530a6d478b661c324eb30a42f72b828f5ea99421e0100000000000000c6fbf5153c7b8dd896e8daab854560e2ab669890479fed689ca39f210fe88008010000000000000086f750fd8e37cabe5049c7336bc317cb011c62d1e0dbb59a68706c366de0c2610100000000000000f41b3b9205a9f79b99295979bc938ead443667b58b4201e407a0cbbbf50b930301000000000000000e21a03fbe9885a475c4875f3f912c8703945e99cd2a85f75258fda7b6022b7c010000000000000050bdb39b713a707658b538834d6998c3311127488c62fefb86be2876011899380100000000000000f2482ae122cad07e9aba73acdda2f47ee8dbdbe85f6921c1f1ba968852c5df310100000000000000d8de542a748c14224ee7faa16157727c852ce502a45b408de0975c88a39c690f0100000000000000ea88c9aa1e449f4c62b86af5da1abda7479f9be5344eafcaca482b892601c457010000000000000026538b2b883a97c4e4ca0c01a9e136d42832e07156bf9df23bee062df009230501000000000000000cc6b385d54b772686de9137405b523af4bc79c0e2ca6c162163808521ad79570100000000000000bcbd81964eb726de1abd2b7608252278066fa196b100b15ea8d8976a94ac743e0100000000000000b0d9dc44559810ad536b1c9792b5624cb087972bf5fe3ee484f9214497d6f8380100000000000000fad87158d4a6234fd1444bf61c5d4b7e741f31a9e1d49bd5ef1ab21e19143e530100000000000000eae34c5f0c88e2cefa9ef36ea262faf41315a0de4074c6f3b3696c153f8f023c0100000000000000b600ec4f4068eff1e9d03edd1eb00e4bb2795eb1029348825e604ed28829bb6b0100000000000000d23c53a531e356646133db73065cd83999693a5bdfc05931238434f5b031522f01000000000000003c1e9d7b3b0e26fdec44e026880a9614ef2d80a096e4f721a3bbf5688fccf07a010000000000000094d28205c958a5d713fe7dec4dac2cb85cce31872e3faf9eb9487e8fcabbac6001000000000000008af88ab005ea3b1a0b3412054c721e574c4b4469e231aa487d9132946e42bb690100000000000000aa74176b5870c97b754a157ec0d8032148c2ae717a905e0e5e626048b6f53343010000000000000062d37e495af1a21a15c93556362a0e29726926302d9453bcf2c2f0a7b4001e5a010000000000000032fdd22fdc3662f97008fbb6f52d0fbe7b62c24956849fe04f9b023007a8932301000000000000003e07b075219fc7ace8dc3bf3a06f5dc12aa9c7e45fe30244d2284bcfb1e6ee190100000000000000a4a0bc81aaad1ebce3fdf896a8d6d081ab93efc2de9d5c56f2632edfeaa7ad0f0100000000000000a07fe18d0151b0bbb2a2f9604122716fa2ae881babe7e6d84a22cfabdcd1267a010000000000000042c7ee18833ca3f3a56b91ea1f57f1984a7d127efd57802caadd0a4a7e3d5f480100000000000000f6fabc667ca7e609a18fbc1b44af598f189f769f5e7419d2632a3dbfb46b266101000000000000005ae2495c65862ec124cbc8c9268f7a1fa66a9013b01f10198855149cc549c3710100000000000000465242c8915eea46e25549f2ab97cfe78784f25083e51773e07d5a0cafc2de320100000000000000e886d0c8ecc3af997d07b9426599a43adb274a3b0d5ab3262331a5da13e7555601000000000000009ef8d5705da658687f96fb0a6f937611a3127911a1694a46ec7226741ce43e4f010000000000000018728d9d1125cfc79ab103aff7fecddfb9c6528d3a707e8e088b92c9c7a5d41b01000000000000009875dea5d493af94567673bfcaf096919a921cbb806f55b7488bb0a554fed66c01000000000000009a3b32b7cc94b119b2753d77d4f38b0e63900a5633773105a551de5b22670e7a01000000000000003e8bdbc5feb01e9ed021be11459f89dca00ffefcafefa7d4ea8e654ff724c444010000000000000046ed02242cf70665583c79a324b0e53c1e957c2b6c41371fdfa7c632513a86530100000000000000643589f0627aa555aefb01d2f0a366eacc252af9437ec2a892935da2a1052c170100000000000000241cb8ac6036dff8d9e0f6f092f17932945166e75010dee9adb2e245a4b6e5500100000000000000a877af86b958cb961cc97cc61fc35602350a87cf9cccefb09dd91f9f792919250100000000000000ec1ccac47bdcd80ce07faf39b9b1791033ef5587d0647b9b83ee433fcb8d32170100000000000000288c08430a7e427400dd5b61926b74a82abcbbc91ac739190cc791a581f6836a0100000000000000b40a7dad67fc795dda1dfc1ebc78dbe45a8116888183aadd0cb4698dc4415912010000000000000028052d0b965ed862b7861aa7f3f91fe52ff8b0f795ff476c7e0a7aa42e7993300100000000000000a853037e17e9d4ad15f03f236723506cb78607413d233975c9ef793397de156a0100000000000000b6c42607db8cf37421c805c1c54fcfe85f3d25405ff4c55286501818c9dc58460100000000000000163687f38841bbbd2b93787f7f65cc74a2ab94478888abce52207e1b81f46c4d01000000000000004c877f2d5a9fb22cb8526dda4256da8e575f09cd838d5e15032e8e150ee1ea7f0100000000000000769ea03c7b16ccfa42f5aec6127e19f165bd61e60180299da4145854061e1e180100000000000000c22b3fe29c3b9eef11a6db4c79ebac692efa4e3a9e4a48affdc415275ce387640100000000000000a6f59087f84d39a888e486e82675c77d6dce841a91b35f41e0f6facf6616163701000000000000005e5e810f04267c51befe0fee46e927a979af59db981938c7dbb90537db6eae07010000000000000028a0a3e8d2a6ff3213d142b94caa64965d1c738c4195706f133175065165130801000000000000000c2594861b9f8cae6e52996622e17aa22fff7a2e8ed37b89524e9f3e2640c63301000000000000003622bfbaf9350b5906bdf9ce362e06726224ed141c5d29e8e175e0beedbd3d3d010000000000000070f08007867b02d11f3fa909154b03a7915ae7971e474ae27725fc6b99c8425b01000000000000002c6ef636d3bba8ef79dfc0e6d77bcb38426b54c92b764b29115d25f3af9c87160100000000000000e8b977fa9876c391f9ea7fa563d64da4af9b50fabac9a2425b2f18c7eef2f54c010000000000000086088c15ab94ed86455e4473c198b99730e99585b88d6fa465ce429d268ea27d01000000000000006ed90090a744a0d55adf8f8af5af4d5198bb67220ce33fe71121d7c51f27a41301000000000000000a73873c9828f50900fec8ebe613db998e6fe476142718ce0589822f88dffb3d01000000000000002e1112ae35f007b16eac0058c77a85d3dca8687cf6f1bf231f84d768fb389c040100000000000000809dc13a93316ffb2f1cfecfbce374272a81639b11fdb1836f04d3bac622f24c0100000000000000946218824426fca91a00f856a5a92173c04649a2500adeece86fa30d4c08b4730100000000000000002608aa377726407132cbdfa1118b69a6b9d3fe876452b83a90c59fe51082180100000000000000687cbc1bf231505a492d00bbbbd0f7adc9df484ae46143f1088f469e51f95d740100000000000000e4e005984bbae507a03d158ea8ca3a87505ae3e8723d8f5bfffccb63a23ea61c01000000000000008a40c3acc862dcac958866b738b304be7d84c33d9420b0747eb82aaa21b8c40c01000000000000007a2430a3ba06afdacb8cdd51b95a8f94e97f6f3da16a16db190a83fc8d7f380c010000000000000080d4494d79062c0ed53564e1eaecd593d5d56a5ebb600cad9152bf3187128b36010000000000000030071950e33b60f29acdcaabac9e3f6f1436f337cbd3f123f5aed3f0307ee823010000000000000092439f4dab2f4b2e8d1bd040505ee33fb2c1dd56f3946826cc27288422313b3a0100000000000000aa6e4b27f80410ae5ce7ab8e7bf083f6e6a87f87a784d6aca9e5fd9843176926010000000000000094b4d71ff20170266393c4cb481cbc68d0f04264e067f456dfcbae3ae0af5739010000000000000092c996c1fedd09190bb0fa8cc79e4075ad79eca3d6895d2a99d20e6f89e4182b010000000000000072bb32222caca7113141263e12a4193da7f29806dc93cdd11fa9653464344e32010000000000000000140d4493060751979098f686733955e6e71d01bbaa8a3e6cb297400c5c624f0100000000000000204791fdb49af594e5b04e0f26492e56ad8ef4cc8533245609d10e66c340302e0100000000000000c21f66c32b614761850e5795a3afdaec1461b45184702e3c2cd5ec2df9623c3a01000000000000008ec59e4c60c8e07ea1c5de77d0510924f4d399071cf1f09606e0e58c961c1c020100000000000000941dd915e0ed9ab77c5902ad8840b81dc84402df589ee4d846480c63cc5d9731010000000000000076f132027235278f9c582ad1c52fa62390aa10f04add56321a28b4f22074092d0100000000000000428992924b7c66ae24e3c55a9d85fcd8343ab1bf0089a8e5038313d1f3fcf9700100000000000000f2065428f52da2f7a881f9b94bfd38719bb6e5ff88a6800bbb3aebb1a9ad21020100000000000000ae48bbbfd5aa564f0945a2d79428d0182fe40770999ffcf472944e28bac852790100000000000000664e22b28ad76fa3b6e8ff42b67991593fc2895257515564be879070b9aea4300100000000000000b66b7a405e385945d0a33089561fe85af044aca93522cf44cafad6f22f275055010000000000000094ca8d9a1ac9afe584ea99954a80926de626990ba9087c0a8ac242ab67fcb7780100000000000000fc3fa462e56b8a4aadc369f88cad272f9e52da4a11c4896c30e3e0ee19c4031401000000000000009452d0cd850a8a3fce455d099302e7d641242037956cb39f679f343e2af9601401000000000000004e09267475354ac23e1cc62749139e0dedb5e403013fb807490e37487594707e010000000000000066a0368fe8bcc7798607a04df6579b893434593880ed500cdbfc1922622275510100000000000000bae8e68bc8f1b66fe3229ee72d77137b394c6b7dfbf55e424f9d2c82d5c996000100000000000000183a83cfb0fcd53d29c91527754e3f6e4697fc680d43247d200b39589084f84d0100000000000000deafec3833f9925dbc5d185762c864d1294215c8eeb3f63da6f4cd5fa78eee3b01000000000000005ab909489cd8555eccf9e9d83df8b1d66ba362fda72deb712ec8a2aca224b54a01000000000000002e80afd2cf30e0415e4f442a662a9f7da2d07043f87832ce66f15049c022d4630100000000000000c61cc86697ff08424d72e8fc5032623a861c06ed5093ba94f31e01eb32d4d836010000000000000004c1f0acbfa8d8f1169684bde1c6e3938fe90d54879168a6a4a7fbe99eefb9290100000000000000a60345c5939d4ef77e57e8fea426929956c826524c7df8b5d880d5274d77461d0100000000000000683f0e1d68ab68c7b04bc1928a8b47abff720349ddc36d7073793f43c2afb030010000000000000060b521110672f6f871978fd3ac4a835b5e30c3fa727c04c70dbc543fcad38b0e0100000000000000e047754ec2beaaf49bded84adef9b7cd827641ada004b050b58859ff91abbc5e0100000000000000c40c9ed995aac4b4aeab516c9614b4614616a75eaf2fbe628dde6d3be5bc9b6601000000000000002ab0b5cc358184be4fa29e7a3dc24806a72e55baad40ec9a117324a884242c280100000000000000e05c7c7d82498be85294ee984e1f0caf23c53fa9a64cc7e6c5053304c4bb785101000000000000005afe620da258a48f00c3afbb8a98161e977f076c7e7f8392975a4f0db4b57d610100000000000000a61667ea6442054b56111477f57ecf39b6e90480bfadf54c3e6cb5ac3a3e275801000000000000001ae9aab4a890c558ac8ab90ccbbf193b3841083670ebed278b2161fa2ec7b3040100000000000000c0730aba0523c10c535c2640ec878a0f5d2a240c8d53fc37fd30f5735a38ec4001000000000000004059f5de23fd2e6805528d79475470526ee7e2f17192988e10c681e15672857c01000000000000006029513013f081e5d5d74173847405747513aa814038c25500522e6fe2aaf37901000000000000009e6528fe0232f7e9162c5292621c135c47e949e54e91fe5fd500b8b80632625f01000000000000003c0e8a8f204aa9b2f088877f0e03c6ec1c0552baaff43bdbffe904dac305675b01000000000000004e7a559a6f6f685a8b438db6acc074df322e2a38b9f49b26fb60026b9301f42a01000000000000005a3788f9347ad802a56974dfb4ed19b22fa91c20e5c8dcffaf4208f25471432601000000000000004616ac86f0d45899eed3f1246dc5744858a694a92b0abd9f10e52dfc9c28674601000000000000004c0b37ebd9e67b237a2b3a9545c269bc382735bc3907baf9ee468bae0d8feb2e0100000000000000c65e37495239d0eec6f8ca9000a0e8ad618fbe5c366c25825ca7fb26c7b27a7a0100000000000000a4b31af719e5d9c3b69326ef920736e8b620b329eade475ae23a33fbd445df72010000000000000044752934a6a030f482e9d8fa9e704e7e4ae9c2f8b4eb12faaa31c87c8f12c44c0100000000000000347a2ed2ed3db2d6e3c90f3988349ca56a33021537202d17412e1b1862a8c35101000000000000009281394b5d35827c826e1d7444f346c247b9a004aa0292a9ca2b16e0fb556877010000000000000080a4dd2b8d5f3d3aa4b1d6506be93c75b78f2d45a58e468d0474f20d366d0335010000000000000094be52a3a400ca82f2ad77c8c3c8d572235345249a622ff0588235981c95d7700100000000000000fa5e314cd3d9194cbc652160ac95cb95f50c28b8fac5f4c0e737239e9f8607670100000000000000a2cf2f85a782a37f8635661c3ad7cd4aaffbd35c6658a408c3d31ba489d69d7101000000000000006e5b6b3ed154c062b39552c901772d5cf23eb9e4a629c7689c16f1d827ebec2e01000000000000007e88cd54f47c1f4ddd9d3a198fc689d24a523fe186d526b14e476f14ced7db3c010000000000000072b0bf73acda56ca41cc15348007fb1d05d309dd868b26faf6802377e307a24301000000000000006ac27e3d6423f2d9488d1bf42dd6f2d3eec911c471b51d69cef6371ff242a3750100000000000000ece4c3c5e3b6ac008899adf3458f1f59ae7db2e674bbe80412756963446913030100000000000000881a3f7b045cf93b13e79864a7617ce7f5dba554463e5b00a441d226da016c140100000000000000e63548b7be72f3559c789fc7e7e15e187b44a7217c46848f11ac822741c39c57010000000000000072c2d06efacbb9760446b7f5eeacf6dd626098dfea6ccc1c7574f03fcae4b06801000000000000007c6d7bf7c2dfb84a3f14e25e97676617269616b56c57b59d670b2337bdc51179010000000000000004a37808380c9036316f61060c5040ce2062a54cfdd44a6c5a1b55b4a94fdf350100000000000000aaf44f9d4dca217ceb1de3ee4cd8e5ea99fcadff20c2626a52796567a316ea7e0100000000000000b85b1b7b8ed510a5bc1d0979fdc04ec7b73d84c7d1d767dafb6faccc8dfd402c01000000000000007e8ebb46c80883225df2fc91fe7ede9933dcf073f3d74ea3db0525585984e74c0100000000000000068245d8a483bdbd4e9d88b49e17a651ec168f25e6851fc52c2e36a516031d5e0100000000000000283e38e57cd8630b855b32b734fc426530742419ac407dfd215b3cf46aa8fc4c0100000000000000383d2ea99f1550060500295b8dccd50a9b78e2e868c01f28adf6ef2e8007ac7c010000000000000000a5fc354a5669536eba3ab51a608e9c811214c5b7702b571535d48feeb9742301000000000000003063dc6994f705aafd8f6a9c3252629f17d2bde6ae269ce9d0fa4ab0c8a1ce3a01000000000000008859563f3d771b1ca9e5afb70b9c760158a970bf9767060c34af3eb32354ba5d010000000000000068b2ac21afb21cc0d5a063c77fea17f09885bff57d0200cb83ec85da7eeb614e010000000000000042dbd2d1e0ef786fa0f72e251102e858eefec87aaca722a7de9c9a8be29485360100000000000000bc3cdcf9f41b5f3f073a7f6a29931a6be12fbcdfc1dfe7145c4e0a527e9e243c01000000000000005881fe0c27f70f6c59ce778268ccf888b77bf268c3bdd9ba6ae5a012a870e5480100000000000000da132f2f832c8e2a4e268b4faa923d9449c94ebe66f03fa0ac4303f2ceb1b053010000000000000070eb857f0386996d388029ac2d19c3c31ccb3766a9d118bb5dd36ab331d33b2201000000000000007c4bd3b9b81241ca657d1b461afe675272ad933187ee5855fc71475d1f01812f0100000000000000a8d082a4289fe5ccaada604e70c4b1473d6fae4374663672e61474852c1ebf2a0100000000000000007cffa67942272b1974dd65c87828e1535799e008d9e81b2818f5e308ed4f3901000000000000004a75953fedaf3e983357fdee67ca8174bae4c7c4634e616338bd075aa486564a0100000000000000cc840ae0117378161b86a52baa6decb97ccfc1101325256f178ba8f67761671d010000000000000050deb42e933545c7892d2d25496d9934505fce1d08ad50652a755869c8684309010000000000000096b9efe3e08609cd61aa98f3202618d928074308d9f189d97f7c1e52d2afca1101000000000000009623ad5bd17b75cc58839c76474636ad5675c519e15f090ec008eb626db73b140100000000000000f3856368215db5a1b0da9487e762b5b2079a3ccf88548fcebcbcf7429b1131550100000000000000040000000000000002e223d8e6c581c8af7d9867902b3ac7e877b2bf4fa81d3db512f41646d984e0e374b98001013929000000000000f3544f110000000060090000000000005d0976441c448aefcf40a72128edc9b44a4f7ef9c267c503e98f5f9c72d5e9e92f00010000000000000012549e625056f554578ab32d29cbfccc5529e404db8234af00a0856923f6e3030100000000000000d0e8ddfdeacd8e163b01ca4da1a4e856312b0de412b492247070f2721f7d80380100000000000000ae5797a6246fc7f96394d09712e9abdfb1ca3e7793c3f093aae6c126024ab72e01000000000000006c9c53f3824abe976dedc2792e1c6b8cc55c317eed2f30916c3229b60e579206010000000000000080f20c794a97e6080e7b81854feb03a4924ee28b33bb2269cae8fa582dfedf2e0100000000000000ec8fcbae6ca9d402b51bb0bde913f0c29769d8d1b9653f4933db117890fe38720100000000000000c29a52b01236996d090dc112e63aca2ec383da79f89c5db420319c7a7ec9645a0100000000000000cad93fbaf78ceb031a3677b27a9e579688602099c97258c746b080422c34bc4d0100000000000000f69a39a051376ea1dbb2a00c3e18369664beb746ca10453dad7db5f9341fde7e0100000000000000669980c5e00b5dfa8c6006e58475c4f0971f22a1a317428ca585afb06a570c1801000000000000002a7c2591d7e46c931a3430a059b2b05be4b4871540a837037c1c4fc7d352ce460100000000000000e81d0d57bfad740cb4d3cb5e4a37fc80687f9d0d0eb3ac83883bcf8b77bb937e0100000000000000927ee7f0822e513b33a24900122754dee60a1898d90781dafdad6697fd2182070100000000000000906ec0a56171d27f65c29683a31c71a87a4e32b273596a0a704ff07ba344d0660100000000000000e03e8b838de23dc7dbe96982a43cb33b406d6f9978132eac11ae555efa8d226b0100000000000000ba395fcb33327501109ed40712c7a372d25bf3339edfabe2a1964fb7b5d4d82401000000000000003a36963a41de2036872df1c499f45acc0e7179457316ec2d99a6018e078f6a050100000000000000da9bf8b51b8396da87113ba296940b23a9fb3cfe7c3fd0b3d541331121b8f57c01000000000000003c2943d6777720179fafe62691d06390210dfb03a1f4c77150cd7e708b86be1e0100000000000000f63eafe185aeaf7071501cebcc6e0f1d1ed4a21a7994a64ae7e51f98c23218500100000000000000c0ff0ad7de8b9403d14459655c0ec4107f119e74406be3161faf15b5ddf1395001000000000000004c9886e2e62ee92a6778d6a7928052732044b64fa61969cd8e37f3f7e3406f720100000000000000baedcd27682fb5289898711ed238fa3fb93b4cb4f4068e0e2b359d91dc726c550100000000000000a23237719086db4a3c6e4ec298be9fbd400f80f44b694f69cc1dd1cd84ecfe1d01000000000000006a84d16e0196639a917baad78fb5e3b716d7ffd6c447ccadeedead0882482e6e010000000000000058cc4e48b26665ec1d6c2a128f0f5b70434ab4a771743429058b963257e6563d01000000000000007a42c87630d09e4d4b041cee10fe20840cc0ae2089514c51e248e137c6d5ab0a0100000000000000c80f32768e5bcf83095be0dc3db1f59f43650d58aebe4ca599dc02de3bbede120100000000000000228dfe58ff0326d8c8e0c51476692d0610424b01244c52c561f02dd133e83e0a01000000000000001e8d73bf05780fababa732bf11ea5251ca67db705955f2936fdbf2f1f1c8f13601000000000000001c0856b04c28ed8bdee95096f95646efc095737d4482b475053245db424e022901000000000000005237e4509f24bc9e8bf9bfd78b594219d86853ae16601f692f10c9b16b88f83b01000000000000002cbd43e95a827c6a62a0621b1297f0328c5919029173b2b4fabea89fa65848380100000000000000a0511c06f6fc317bbc43df8b47b7c36ca7e3ad43010607e88f21cccb32ecbd5b0100000000000000c87bf24eebac187534f689c35ab23038e0a49f890fabfc10613ed78dba1f67170100000000000000362701313409bc9d55aee9cb57aaa8d97bea27bcb918c08b99e8cff3930193650100000000000000e2b359b93abf559cd326ef07a6a46784b945518e1f1a4c04ebe42390f2574c590100000000000000b88e803bf4241f6465c0393416858ce6a0ac3c350be41cf0434a3566eeb79c4701000000000000008084d934bf7a7ad960de3b325ad5109d10eef00e90d6ab776240b7bbeb6a6a7e0100000000000000c66476c56a07a8e1a9e57bec84efe2817bddb252ddae336d0e64ae2905397e0d010000000000000028187c06cc7e198c70651d2e147597c299c3953f11113715847b419d39e41a7c01000000000000009ce7136b5fb85ba83e153c64a212fca1eee9c3ee42fd010fb27f2d55695b2964010000000000000006d2846642c835b0fb1ff1ef908449376aa8e7c0f3352e55da9a1e97e9528b230100000000000000d4be6f891156ecfd5f9ff661f780884578ac18dcc999b7f574510196c5243c220100000000000000ca29cefbde4a2167c5b0b4900dd25b7dd6877111ce52029ee334f02aa9a05459010000000000000076fc5ac3dc0ccd5aee50f0a686a0cb5ceb87bb037034dfc5e050cc477a327f15010000000000000090ec82f5e06c40da655eeb675214dfdb8f9b9a798c5e78e08508fbba7265802c0100000000000000f8a681118ea0bb9dfde2813ce5144eeb5cee881c27883de1c0c759255ec32654010000000000000016e3f8f5ce2e2b22b816bed27dc767115513198ec47d2795ba9edcccdde2d1580100000000000000b43a022b3cf70d5c2f080a2759d1778cc246f6f817df139391b9e7a952fdb14a010000000000000000345471200425fecce5c32680fa8c00141ab3ba13dc931f753ee13ae522816801000000000000005a7b37e2ebee5d486f6303cfd40b06c0632ef4fd77f4a002e9129b390c1fc0030100000000000000c08c91ecf8879f5042960c3d61c0e74f125463ca2726e6655fb922af5cdcb8510100000000000000e23173bf099d870567cbac0e94678e62cb1a554f4bf92c14ec2d46d9dbd8570101000000000000002ea26372b229d0438f7fa19e9c80f90fce3fb41024c48475938d6501ddd8547f01000000000000002c637ca0ccfc4fcf709987ab93933fde929687f615951f4db7ada7cba981e53e0100000000000000e67c524e443cda4cd27dfcce70488a5d23a93c8c46a5e83ef5a69eff3a02fa5a0100000000000000a42289d68c963358f3c450a850242bb53121e73e17f0e2ea2b93327446bea33c0100000000000000caa53cf3e8ff5604d82bac45868bf3e25115f7e8f4d1cdfada68f8487d03e91b0100000000000000a263f3bcd4a33da0112d793dd5f5beeb40eacfa37e3775e2493fa502b7215b5401000000000000005a22cbf55ee96a7afcbaca5ea1aca08d0eb0f2eaead1f43633ead6ad4c30c2390100000000000000a8e470f2339e3ed0da456780dd9207e9c6a02459238ec3057a6ade01fd6cd60a010000000000000002a65bcaa7e35aa60238c784f04cb771829d09bb4e0f7c1c14f4e0b4c0a6391e0100000000000000987b7ecf8720281e4a19c9c5ec6c62be561b6c2e341d5236a6ec0ada32f3e15201000000000000001892bc64859d3f7b26ea46d591a09bb55a80bcb9f2624c61d2ae145e01f56f530100000000000000da2ae63c251f8974aca311e38f118bc404fa9492c08576a3863d2944f979010501000000000000005c7f05d77f853f3eb8d4989fce36d0808b6d2b881e26f13c01e939b5d489a57d01000000000000004e505749e5bbc4d469c2640820ce1f61e6062bc979e258d26e2c1a52b820b47e01000000000000001abb26ba0076d5e001abdcf18d4454fe25c5076bc5ceb1b8f35d6041670c265f0100000000000000b4ffe3c5959ff37c11c6f19d91926cb97aa4bf0f604919e1753bb55664d061680100000000000000bc4c9b5425f9a2aa09e3239332c702dedbfffa2b9f4cc1b978b307fc1fa1337c010000000000000082adf4dd2acaba7512ff01a3134c63e3491c88a10ca13ceb92b60d34b6750b76010000000000000092bafded3ba1164305a4cf1c91ceb1b6a59f469d54ecc206bdacdcda49c3317e0100000000000000b0d4319a2ca1e335440462c6b9c80cefdbfc9aa735d84301a618ca480b56033001000000000000001ee57665488b5ad6f7358157b73009a4ec4b14b4a03c976487e188f54bff7d6401000000000000007022686a613aa1387ea688fdd9a23170bf587f7f1dbaf7b8b022f120f3a4560d0100000000000000ecc606e7ba3eed5d7f6bfd00bf679f03078761d1cb50904d1caa1080431d4c340100000000000000dc387c0249b862faa91a5fd30d1c2b86dbc741b2feac242f274bed763d647b6c0100000000000000b8a8e69633fa379fe4352c821dd604a972b4ab8a5160a23bd182708c7499a25b0100000000000000e208256605f8c064a2ea00f8503293d0dc4aeaacffe021a328cd164c22b623370100000000000000c47bd7af17b6ad4f01e2880542c8596f5a800a20eeebcb37756ffca94a6b98100100000000000000d8632901dcd20c3415349407ec167034633de91f3aa55f64c8bb35882c1b0c190100000000000000dca99b59a15cd12f53c2e069f1cc440c0d73b7f0f027e3d5c759ad5af7b32f4b0100000000000000a0c43d97dab42fbb65ba08c2960f8ad589ba74ce07bb67026b0e8579c3cbfc2301000000000000000052e7df40b49fce61ac4b3099dd48d9bd647d7bdd7dbc9e9f487e2301dc3b070100000000000000ea0749561740bb5b862e9fcc46276fda111ee7e17daeb5477db453b72912103d0100000000000000c8871294c3dbdab785b4e8ad9604d5f49db8260dcd8980275c980222e6eb2616010000000000000072a85a9dcc0af833b5a21a51ecbc4a9855c2bef8848e080ed70ac48cd1efdd5f010000000000000022be2f3730ae90e20d6e0f1f76fceedd68c124fd811c18482937756127ce86260100000000000000c49cfd152ce3ac1fa142b3b6e720cb173eb7f43c82f021418253a070036f870c01000000000000000ee4b76ec5fabf011e00bc27b36039f3d397e021e8bcacf9532c90fc419fca0a01000000000000003e79c115c01b959b324017f0e1120c76d87b9a734354fde75efcd05401ad173301000000000000009a0b42e88688d547c31a1bb811fdd062908e88a115e1aae39f7bdcd95b927d530100000000000000e2d8807911771f762fef5e4fc3b9685517fe91c48292ec59b4ce13f95bc8ee5d010000000000000028bc76450afad8c197d1fe5ab3055c8635a370d4adfa17c898b3df93a50b00300100000000000000ecce43c0be3c9134a0d62a0b6463edfdbfce1b2b1bf5bac37fbd1cca48e67e7f0100000000000000887fb18ae45feaa3e449cd0b529bcf06a9795b3cf50425c79e1fe94c1db2ce7d01000000000000008ef93e538ce16500f27b4c9a10ef7b02a46d8a9624778d0f83b9f7d8b560466501000000000000006a1274b6748bf822ba80c9a9416abd3cf591b7aee6adabb8359b7dbed8ebb3770100000000000000c6cfae23e776800744036a6881d20a0476c1852cea187fbf9db79c936c51db0d0100000000000000a893d2350e59c1937884d11aa7b680ceb7a49e7dba5a43c67bc7c20bf347c60c01000000000000003001ce583fa1f84555808f8d46c3242ce898060693aa0573f54d139263c178390100000000000000ee664cd198f60d2b4001685a624bbdb21ddcd881138a5d61bd450f298fc5833a010000000000000068f87aa7b88463d824f528b27648d786a8d3ec27e76fb920bc1294ef9432b60b01000000000000000662540f9c0bfc8a506a5aac301c968d56fb0e34fc6c05dfdd84e42369982066010000000000000090708d1a49ef0acfea32147a109d08d9aa15ee975b5237d56ca9b8e324108d0f010000000000000010bfe5eb616325eacbdad84fbf5ecc1f78d087aa73c1fc98e11bdd6a4251616a0100000000000000f69224d54ca679f9ec7e439aba674a55db13ce25326d47db8cdcf3af867a55180100000000000000487c6aad1cc26893dc7e498916a4c23d303f098c04b0a8b0c8242fbb7e73a16e01000000000000006a2524121efd4ac63c3bd00c6de3b84e23ad19fc60f886737e660d8fc6496a57010000000000000040aacd312f15eb011e69b5dbd8fe8b59637e06259954e6e3d8f940e4dfbe2071010000000000000088f9a16886165d00612032cb1b36669ad62b7325536f499191e711134c71b60701000000000000005e6d779219b00ae1d5e6320faff3b6eb963d3acf7705672ff56d2cb46ac44e5b0100000000000000d6152835cb59040a40a5a4ee3a4d481937b7ee9d4a5649abeac6c535d9e177080100000000000000bc4b95226de4e10f91e0254cfe4541232252deaa347f567df124aba81bac4d3f0100000000000000246615914ed30f855044df3bd63491ca8af4af5614e2a19d5c9fcf8950d13d2a01000000000000001eb833e31087d6baffee4e7f1d9a8e3b7013ea392c81f74313a354ba82e92f6b01000000000000009c8c7c8c91df0ed53864f69017d530b5ebda3ab4bde3c67027e70893213d533a010000000000000018ec239eec5457ba11a41518e7c5f98266d1bdbd67602641d04706f95dba5c56010000000000000024efac2829d615703c5375dae24d394207fdd26d9522bad7af6bac64ede127020100000000000000b640f3f59d687a3a2608d96c86ae380ac41d9dc8b175480a8830e27fc046590c01000000000000004ce4e086b9782dfddcb793a3efd7cf37db624c0f8274b1fc36f0802d5455386d0100000000000000aa7e2ba0ac23106e76a0efad2d34747769f669773802cc4de44aacd6bd3e3b780100000000000000f80643f72c8dc15503957f39e6d9ac6ef062c43c516a1693e87d2a3d26e9db440100000000000000e487051ee8f32b1f8d0af5e897b49730512303471416e689ccfd0bc3f726f447010000000000000028a027ca1c0bdeebfc8fce85ac4bac48cc072523d9c4a86b4f2594f9142e7e3b010000000000000042e4c41a899dfb238649e5b17dc232c2699353635d60e6a3bdcd71f9b82cda300100000000000000ce4bfd8c5611b1637066ef9e579c85efadfc9513b882184e00b75871ef7f5a2d01000000000000006c0da9efeafc98d2d9d0e21c83e6e937f417ad40f2aa3a21ccf818dd5af7b21401000000000000008e2eaf4ac96e0c79da47d2b76956b3578b39ee4979826d5344254fc37d508c04010000000000000028558e46037c51ece4d39a8a4d34688662e629413c221d6226afe454240e702101000000000000006a4284a9ea438f75390f6547faad885b235c208634da73a79e2e61c51a7cb410010000000000000098da9bbd7e6841370bac817945d087a30acbbf47f7c0243d6588ed32f7c6f15a0100000000000000a8660bbc474f75581461f56345e963a788f3c33621bd0c1eb9834dae39719d6e01000000000000004a2073ae31b3df10d285eae6a5befe069183c4c6a6ffa1b2bf432011d0d475200100000000000000bad91c9aefe173441dae1f273e55090706d412b0723d39bd6c3af053feb1832001000000000000003cd9f863ad569b4f0123525a9307dff13dd75a81afe7b790d4d8ff418d97d9110100000000000000c6debd3b107fbd0382b1ccbcd0063aea1f8e27536561fe7f3c6ceb77b219753a0100000000000000be03fe6bc03a7884524047567a8ccf43b3c988bf3b447ca9e1520d1c1f83c53901000000000000005461977495f9c407a8d951e860a1cb2087592103229bdbd879629cc538a4182b0100000000000000b05ad6cde0dfc019d740c3f50b8aac16550ff4c197da19cf23b9293f0c5c3907010000000000000034caede521bed7f19b2a5577234751925041209dec1c5b5771d8ccf33ebd49340100000000000000bc56c07cea21bcbbe058aedd2ced9fb4757caead55f96bda9bed1c9669c32b640100000000000000900dc8c915b18e03f8f76a9b3b22a54093107754f41838668c8036e7f8b1104a01000000000000002a01b311e75c72271b3638f584b85169e1118dc5f850862add04c9a20e33b131010000000000000078e1a4fecbaac940c04e0b591a01ea66a574b5098852ded2810e3a534971111f01000000000000006ccf2ce8e149999a7bb996faa65194e60aeb7bcd1937c787f886fe979fb49e660100000000000000804b093ff2d1b39b5aacc853c80a1b652621a4935e8c8ee53c63605c1afaa92901000000000000002ae95f2c9044d5ac14beb234c93680b9a0591a70b3c8ef971f3a1498b580fb4c010000000000000092bb282d46ed819e46fb3ee929f7662354fd095b67a8ed51326b47e83f86653a010000000000000082b820c5bee8ee77e35203dab387f3434b8502e5f1c35dfb2ad15b5c89d47b3c0100000000000000c8469111a9fb61c9e775d2b006fff88874ca9633fced938b19794026f2e9a03201000000000000001cf3446b4b5116a1784d92cdc5101e55a5fb91ed3d93efccd06b304a94362d0a010000000000000092c983ba8716f18073d703e7c8556e65e2565ec377f0f9a587d7aa8b5ec4d8500100000000000000583ecb6dde18a2984d5af56152b337cc90422fd6e937b5e06c1c6caf50be212a01000000000000009201460331a900504240f5a2b781820c82762b95f9f2f5993caed8913d8be96b01000000000000004a539d3b629768bcd3530b7aa14c53fc84252c8258e610f57ea5730466e0d02b01000000000000007203b3dc19c8ff42aa0c90d10328d49e6aae97e4d93d91f33e584fd16073f27f010000000000000052d58f50e6ad841adfe6c77ff332933380712c236fb0bf00565d58b3b4e41d78010000000000000018d99932bbe04bdd1da315bf0c31ad9ce555b84955db60ce36bb73aec0d8a61c0100000000000000e26019435e06e3807360b546063269ab645e6fb3db5c99a573d0fec63e2d537101000000000000000e1b958cae4235db85f6494d1d9af4d435450f10e39485735d7ebe0b6454933b010000000000000006379582a73f65db4e43d5bb5d73209c970b2a4c903b3dbfee465eaf7b89336d010000000000000024030139ec9ee0e2d96a22a3fa6b3c3e3bfe7fbf57bf55e9efc4586a103447200100000000000000e286e0fc739361f9e413d23c3faf924082604a390f3e81821e257c4eea5ce33701000000000000003873ac08836bf81aa2077f9e50a55b47e02697ad9fa6704c7044fca0c93b8243010000000000000014310c77d75c16c2c8d1191a58d4fc682c4e6e5e8f9c1e90eb15dadb13d26a1501000000000000008e0fdb9c1c1175d91743756935f6860d7b29cbce467275b8de3e6425717f6b02010000000000000040a2527ffa7d30d788eca127d435c8b5aa48972cda538b9a1627a57e85c8fa1901000000000000005673f82330a1ee6e6889f745fe15c353f5f8989e4a281e8aa53e38ce1e74556d01000000000000002254fb9324a6a9af450ce3a4f5ab25f55deb22161e520b2308b8aaff42e3aa740100000000000000a64dd29103d43e3e898a41f3630ff88b2420953febb931c70ff543673efa251b0100000000000000e8f048309f03e3d9a329dc04bc48c8d1befee7928d14509121dd06e76cec0d2f010000000000000028e972febaf463f22d1108053e7c26ccde1e6018d7c302985bc227557e0a663b01000000000000004e524be219d0f11a7489c27d0e01cb5430bc9f58f75a66ea464b717dc25c9a6b01000000000000009e02cba73dcf1d6eec957735bb3363e66c2633173f821d0edd97e9fc3fa1242c0100000000000000ae46c529ba59b0317f6aa431f79802e087355cc32d78258809da6a9b04b8f2600100000000000000ccf230623370ef275ca417c85fbc6e913e3f5fc8f51e67f54beb8686593ec8540100000000000000fced8f1dff4f6c6852b0d643e26ee532086e72be7aecee28d94d1d59b5f9986701000000000000004a905d0574cebf6e8d00d382b104fc8ee1c008f1b9ffa6fa5c3b67ff29719c0d010000000000000002ecd96c1f4fe196d53f262e75770f1a81c80b5764b01383fb77e20684f2096d0100000000000000fcccf8e328b4cc968af52a23f6c960b5e34241047b630c19a0661ace6b9c273b0100000000000000ac09c48f5dfccc02362c489ff2522fdad54d1f37e6b47729411a93227f602b780100000000000000be6106f9217a1847af66de9510fdfb40514409556506ddc1c1a897818434125b010000000000000016f2e4835ecdec4c373e17f48c95cb119263cbd229f7e32c0e2185f7003d7d030100000000000000f0eaddce7b63e666eece637b1128a3e4f54178df87a9b032fa3312f68fbd961f010000000000000004d74e03b4e2cdd0109cc8efc5bbdf36b7b5d89c17d4a56cfdb23b0b2b77e10101000000000000009818995c97cbaa84126b0c0a8c4c26fb202e4b255811ca5627600c11c19242760100000000000000e09b8828dd7af7ab17cb00b73845871b69d925dcc38d6d29f79197f5c87bd8460100000000000000b2518044cc31062ee50fa81cb6983f314291a0300865fa5cfe149829c5050d240100000000000000483121b03dee3c339898579611a968f6382ac2a0acf3da8b9e428b2817c8de380100000000000000d2c97828a993b57a79d8e70e9b6cd9e90f01d1bbd934641509aeebbc625b9f7e010000000000000050f3e6382021e3c7ee097307d03933571ad45bd056c0eacc86b9ed5174dbd52e01000000000000002eab7eb696d4c3dcef6c5f74cd704eed76fb51790875d8ddbbda133ae7a42f7601000000000000006cb2f0f0e5fe70eb547a0814ca5346f59f7f2ca74c00714aad555157cd5a29490100000000000000042e7c894dd88fb2b0c7dc7a56b44269e0ee606c73d5a297cb459dbfc7649a17010000000000000022c2c3039397556619d3fe4568b5141ef07d326918616d32c6b0287535850f0d01000000000000004ad8fedb395dc0ed63e0edbdbd2d20555b61a46aa7cd751e4308335c277cbd6a010000000000000054a4e00f3df9f09e23118cce02f804d36c4968894a621305a0e8150a2910dc6a01000000000000002a6290670f4302bcbbf2cb0d1cac7390ced076334d3d614b604d734a1ce1217101000000000000004c5e6997b6f186855b1f4c9f8ab2d6cea3da2e86445605ab89e5b5821e05bd3d0100000000000000269e8d252b8a4e91c2ebdb7f4b07bfa9201b88bd436e6c4044e70364c746614e010000000000000022e3fb29cbec5255c5057fa8c32ed053a15c71ea65c3594a5831d2c1671f36650100000000000000b6a7cbce4a2c96b0f290ced2c10278ccffd1c2922f1126cda8227d35f1ad98150100000000000000fca3b0bf7a3b4ee818a50f86de0be2f976621c6f5a3e768448732252e099cc1e010000000000000018820322d29e40465465fc5f0b488431e710db471615f780451342f5690e20350100000000000000407d69fc26f00269186d96a26e6fa3537160898d761d6a785cb7dba141f87a7a0100000000000000d632182c133a20838afa52678dd1b9b5055571c637f1ed1a1746490f3fa02a030100000000000000e0f95e266ead280e08189a21e7c6b32444e5c02abe73a57751637a8fa1a3d92f010000000000000074f02ed037d28c883df643034a596e4d2a97a23782ee8483c9ae3429ede7e70901000000000000008e3728649624aa32d3f1d71d0d57fb42a9ea9d3155a2679b02f2330e4c7cda26010000000000000098d620b6375ee5f969bc894b1beb51d2b22132a8c1b469afc7796e23c530ff3a01000000000000009493e6de34e09c9679b6dca602e38d8c07abb77b3cc487ae3a80661968caa37f01000000000000002a8e4336c0fa5db2307feb0bcaae257f0265ade08adeaadfabb50b9838d9663201000000000000007acafc914dcd1ac429f85e4a1c89580c0bb58b8c67b3cb6924643eca63ce306c0100000000000000ba78c26db96a9ce3ccc2980dfef7346042ade9769f95afaea559f784af167a5d01000000000000001af6a72b08fb5b53139d4aff42564c9e3057a7d5f3e6e4391f3ce9c9d07709390100000000000000c2dcde1e4a7ff6f8406b59a7896bce7c2b69bcd12a5a1908493b7beeb97c7f3c0100000000000000582030a59816ace3ab2c2b8c66ca50a69991899df57096da6f6ca8a49b16550f0100000000000000840290d318350bff32db3dcf6138b822cb2adf1dedf5bad8729471988955915c01000000000000008c6dc982725d0f925557f77e1844d64ebbd5e01b7ba9466e0c1f1ce8bb757f3901000000000000006601e1af585ce0bb093a81463302caa6f02919efa89aeed138d25264b32f3d4201000000000000001ec005e9ca3c15b2994641dd22efcbb20032f10894f76f57296d219dc149817b010000000000000054a7be1f3969266e7b653b0712fcf4d237fd6a673ee6eacef2cd4fdb5e5536350100000000000000bec3821f0ead5fcccc95e22def052a2995ea23ebe898344d6f7ee8bd0bae0f58010000000000000084aa90e8351d5be6633866f18d2285e5938577ecd2dbf46ea9233203400c43050100000000000000d4ccf5e2a8acb9cfed3eadff326730c60d23683a044d59b26e53a4e1abfc895b010000000000000046543a6ba7d90d6f10febc8b628775c1dc08b55cb93c04e09f0a072f264907360100000000000000620708ccbc822d0be9a49eb46e73955d4cdd8735a5f2cfed44bb656a71501a750100000000000000d8faee17dcc461acb22ca1720b86385414ea8810ba31509fbd8da8733029eb190100000000000000105aab27f211e6df23599236853b58c04654709d9c7d0d5c27145369450f324301000000000000008e703730fd72822a067f724f3efa6bbbc82d5c064d3560c5833bf49edc21061a0100000000000000847f4b6d72993380e0e76fe2d885e429796335dc10f470005e9a268880c6fa1b0100000000000000c80a16a172ea19de337c120de8ba72df1b81efb23ff74e0ee7cbf36e666ede1f0100000000000000f820a8ed2c97f639fea2892d0a89ae98ffc4c0054f948f9a0108e4d99f89994c0100000000000000fcd5f4c4fe11f20ad99dc8345b7dc5600caba5d5b7d3f499c3253c095152d454010000000000000002f1dc39de14fda36e8968e3ba568ced1203a9efddcfeff0b8f0f4c5ce8755560100000000000000b66836e9d42ceff254416bfd6cd80592da3a276bfbef6018540bb0c93a5c44410100000000000000ce8df132517fec1b06b9b7ad5a9e18f861df5bf14dd32b0c7dc3f03be447b2730100000000000000566779977b35c81ab477958e39cc697ffce60fe1aa31f8121da08329b25f4e0501000000000000001644ac70036fc8b19ec0e580bfb10d272798d8c7aa3dccd00d5ceb639fbde603010000000000000008a2c8bc8457a382313d040c40f3f0c02eed0e5357910b19ae4f0c9360e4dd1b0100000000000000a8bbf134d2c82050f455ad50876ce102de5e63600d2226ae2d6cf3f52ad6eb240100000000000000480defe8739c9518d5507480bb9c68ec408a60b944824521f1184b74bc47f2170100000000000000780e4353aca40b0f2b2403c862cb33032d49a820244bdc2853ce158d48c4f6100100000000000000046e9ea6faab3f6ea31d95f9b4339bc5622323907570fc9c788dbf46a13bb92201000000000000003ae7d174f16f034ff7816b8d9ef1b4b2b15ac5a16eefe819253b03d958babc110100000000000000b2f392bf1ee5258bb5cd29a4b800747a419f4df00c61acacf46dfbbab8094a7e01000000000000003cd825436dadf293b1f5c315d478b960b1e6f141e3244f2f0c892f42c0b159040100000000000000ac7c9bb11bbd24b64b4611071ac5ebc4c83e94d38abc3df541eb9dd04b726659010000000000000068f3e478d28f00ce97dcbcce5e9cff5674f6b3d8b06f7dd8be7b5f3b6f1b555d0100000000000000da7bfba48819dcd92eeb75e2435784132a257ce38ca01a6eb3fb66bed9422b240100000000000000ccc5a764f42aa0da463245aad924f65618099b1605ef6e3cf7efddaf791cf34c010000000000000056da6e5ada211131376b8d0571118b69fe57fae1393d23572b484f394857904801000000000000008c3fa761a684f89c63b5014e6a934f763345f91c5829d88cdaf28abe75c0823101000000000000000ee6df339af6749cf9b9fdabafc0cdc59ba35a1244fa56b0adf6bcf7cd3333000100000000000000c081b6f9b341d1355ff2caa0bb297d9cfa88dc9db48eab74f1c004c189513e4f0100000000000000009463e59f6b021a1dbdbf65e56f568ac5736baf96470440d7123605a4bcd93f0100000000000000742f5991a21e102707bc1df8a9565fbfbbf705884fdabd13ec223783f96d3f620100000000000000667f7af26c8dd32504777bb2a259a26757808ead5155f3f098558a70d90c575b010000000000000006f8df3b49930c691067ddce8889df6179b8ac05a3e9a96d0a7e98904c969b14010000000000000092ee092cd2215c7c1628086c08be10a3cb969f6b276f600422f3526f303bd87801000000000000009aeda969400e2e21c35ef284458dbc898f277a49da9dbcd675eefcf265f6d4450100000000000000020d34131c7a0ab6d104839ed8b9e0cdf075b80409a36fbe94d0cf83f7ea1f1e0100000000000000b484046e76bdb203eca3e22bcc5525f7973cfc70ab7eec3f568fccbbac6ba140010000000000000060722aa6239a4b5f138bc30c5b3ebb5cf0c53b901f71076f213b72d073d2cf3601000000000000001098c3193759138d2ce96e47b00dbff13b7542669fec49b78355e10e68f6e4330100000000000000269d2ef380d1b161d3479448fad38c3f1328dfd8a134d5c40399f3692cd7545901000000000000005093664828343ccc86b8a41b0638b5f38c8e5995d2cd01267d49d2651d5898650100000000000000b27ccb4edaf0edc92ce1f35b0950251d38af8cea2dd129a8ff5e6c946ed6546b010000000000000070e31469f5d889be009fb327129c841179474ad84a5c3c732d5260f65f8a3767010000000000000014e5caa5709b3d5a8e50aaaa9ceba368e2d66f964e598f861938f093dadac32b010000000000000040dc7c3e4af430f523ce1ceb5de4c836056a079da82caf752cceab452743695a010000000000000060fcb17029130258a1ecc087eb771769f87865a8133cde58106aa9fb58b4e4350100000000000000ea0853b1a9c0bacbc2c57c8233940af4bc51b0734b721f75b8ab5f74d66c0a230100000000000000f44b3ec5c7b2188f208d60d159d1f5b0914a51a0632eacea6b88ec7b26d6673d010000000000000046c5d9750776edafdced20206ffe4b799489f6de9e0983eeb3a9fb6485c7e22201000000000000007e2f54190ec59a98cc3930dcd41c7113812c0596c9537277ca93038a9e57976b010000000000000054ecb1c6cdd76e77a694ad7d62b50187c0de759e60b46c82ce70e62a9a328e3a010000000000000006451fa7b2d831264e40a3e5b8452ede10164b7162a0e93bb9789a102c3010420100000000000000829f64b96b37d0aa283fe99a6d2150069bcbb6be61d076f23b3992b6c1fe6756010000000000000052d36d934905359a84c6ab4d2e4aa7db403f77fa694cb05c70d5477f7079595f010000000000000078044b468a3e1a848ba57d04ab36ed1653fd9d59294edcaaed0dcb945d9088770100000000000000ca4750f3796fb66fc707269f6c846b0aef6416f03aebcf728018144bbf76a22b0100000000000000f259a1355699c7b5ef71820c5e04d9e6436dd8844d347ddf84f7325dd93a6059010000000000000052b41700df65ea66ffc6cbae47c04a2f20618f5d62ce1ac9304313373d39fe440100000000000000c4b17e92b7a096e359c764d3f9cbf2bad06f50f8341128f642739248a38cfa030100000000000000ee5a96cb89aa5c8f6824d3806a83a6cefa9cf01842abde63b7bb04561553c45b0100000000000000a065f45a353f24ba187248aacd9c64d5c3a92ddf92b4a5c33994f56a07cea8400100000000000000584cc334d89181207fad8289d1e89a85848439b16d4bae59f1004188e8e26e500100000000000000a6d498495e591b3b16dc6388c4cf43edf35e263d80d743aa827951f22e0ac91901000000000000009821465bd76d11b25f1384d98901fed08727f3cff92131d817a987333cfc5b65010000000000000032dc47873d3d298c15ac984bf66ef0610883d7bbd2fac924d1b37db68da109070100000000000000b0200adae0feaeea78d77e0de3b4a63c7d44544dd0082beaa93a293abbb06e490100000000000000742a6a8943509da1d899f82879b8965a928dc3db99996a7ef65dab90c22c990901000000000000007c3648dd735ac746fcc422ccc414f6a1e41d1308f944573fbd11119bbbd87527010000000000000074e859fd23da9f3b5c0b554492134ec981deca6fc0d8e4fc6e33ca517a0ce26a010000000000000022b634563bc2b885326ed31f52644cef011566a890a26192a8b5435b19fb6e42010000000000000010f6d73ff674b4168adce9e291ae84b250293e48eb40839ea8ffea9c057c83090100000000000000464cb5dfedc6938caef6caaf5a58f4925a295f24a4f37337033dafa0cc733e660100000000000000ca377174a1aacc948264510f8fb2f4264475ed6acf4402110d99aac6813a990b01000000000000000cee7204e361a4c8d648f92b4bc058f517a5ebe90bf75f34116934631c610b0c0100000000000000d460e8effd89689383e396bda01d4fb48658d1b2be0f3497a635d92a00783e4301000000000000002a98fbaf7ec22832522e3f96821711ef684283911a524960efb14953255baa2b01000000000000006cd1066d5ccff0f29049137b42feedf12c3a4e91f37170a20e87a84bd6aa1d2a01000000000000002076bc34bf8c9ba9c0922f484f04637c02b4a44e5dd7ec861f1ca8b6cf84c8400100000000000000f8d7cac8239edc444da065c812e4fb38f7b0d928f963388f951e2b0115077a7c01000000000000000469ef46bfe2de21a792a23490ee7791b7115c35c71805dd6fc133f6ddb22d270100000000000000d285950cb237602bee1798bcd24418a2a562b549fdd8e5ef2d1f74101358a04601000000000000009a9797e1f4d665685c0eb08f8a954cad7c6453fd190ad1a104b54d5bab360e42010000000000000096f9ec98d4cfa00b9ff41b5962d3c68f12201556d80bcde84cd85251252b822401000000000000009eb1b5beb8b5ca4613c17e6d41996337b26e0ca7289d2f52df05997020eddc5001000000000000002a89ca2ad62c6b326ac778f63292142fcaf4d9721b13d9994ba4abd46152f30b010000000000000078294f515c659b94bfce9674db37a3cf2f32d89ce1758ca53d1860037cf1d42a0100000000000000a22326a6062c74e63c452da2d03f4a43a012c79e30cb3dea0a212cc476c72a4b0100000000000000047e42afb61bd0d49aeed1975a96c8398a0ec4643fcf5625cac5b22c097a02590100000000000000bc4529c25a2a01667d6e451ab753e1713be0835456e6fbd29854cfbd45dd2e3c01000000000000007efe2d823470c2d98b6a020e469747a7a03429abe579202b97b2a5be6c2092770100000000000000f4ccdf83d734edcc568462572abaf32d22ac7faf8000195e02273d1c96654308010000000000000004efb918028f583768356118e9457c36583319eca6d53536596714e782f1596d010000000000000048ce0aba6f1554e139568b4d2358d6cca9bc291d3600787cc3e732291002ca220100000000000000babd6c9cb58a2635db60d13014684aee881af96c78af8c8b9b31073069167e440100000000000000a0a1cc9172a71b134162a60272739d19b59162748f9e1c4adf86d3a10834c72d0100000000000000a8731d355eefdfbdb7fb12cfa5a280c0b1e408aca264ef585d42bf97fcfba1160100000000000000f038e6d72ac8c9b9d165e9154b1f7978dc906e6bbb501ffb8e3e9a739a89cf5701000000000000003ce775a4a6215dbfbdc2b0a8a8b71936abd61642b5fd1a0c1d06ba548ad3025e010000000000000058e2aec55f89eaee0f634fb10c0ca50dc4e699a8aa61e503672039a14dacd8460100000000000000fe24bd4f4b0e75ff21dcf16a3ccba49556cfa9586348a8f939df8def8a214c0d010000000000000086ff7f9b2eaec6638f33502e74c216fa4d15f774b35c318fea091669cb5544190100000000000000eedea8652413b5a97c1eda13e1e050b777bd0a8ca31dafd63aeab576a68fb75e01000000000000001836b6f7bcdf39ec4f786ee982799a549605b62f384a74981bf9de018c26fd430100000000000000685506af78bd0b16513f09395368600e5b6fcde0f89d280c6446b1613844351c01000000000000009cc697b491304d797292fd5f14284c376a0adb2d420add197617126cd258f62c0100000000000000ec25078562fb511f0945c3af78d77c8e02f570c647957c0932475aac3ce72f6a0100000000000000dc4ae9ca42fe496af7a466de59735813691d9c050f3256c3d4a96664cb6f9f670100000000000000028393ee5fcd06734e381651c82cb89b08bdcd64d1aecb4727fef82ae5c44b4501000000000000001e7b8aa5fe2aaae1d5e3c8b1e38818114e83d9bdcc95629ed834aab37e2b8975010000000000000022ef710c68c0f81819abb592b9cf94964552ed9b941aafae770896cd1d5fb16d0100000000000000c220d72d1562268f43bfa2a12f4b516f060e696091b122eb2e3fe93faccbd67b0100000000000000c63e31fd558807e07f9c7dc51f8fa8110679bb1b1cf5585e56d0b6164179b979010000000000000064eda01bc8dd522756c6728f9b030c1b1f605ed89e91233199476e5b0e96ba2c0100000000000000eed7e8e8a64dfa89c548a31c1b9fec7af5aef4dbbdb26997b2ddca72d4f8790c01000000000000008c53786209d22e7605c5ac59b155f2ec9bf5d088d77abd8930fbe65463cd8d6101000000000000001e534cbbe982369a968006efa465cf2a16807a88a5c877d45f090192ea619c6001000000000000009c4a01b4b6e187c0c98931ed673f6c02ead7030a0f6a967185d7823a30d1796901000000000000006e8af7492bafe8cc6e8113ed4d36dd0d0f28f42b381238da06e4aebc48cd656c0100000000000000a8799cec2aeeea9f33bafbcd60c947d0bcf3b1c9be450c43f63004e16a857e72010000000000000078cf1debe3fc0da2ed2473d1e1835a478cc3e7008e0cf42043f287bc36804b710100000000000000b8f696197dfc324b72f06560c38ac6635d1bfe5ea4cf59c133c36234a0a012540100000000000000266f93d04b5ea1ae454eaa25946da19eb9f1ebd3a6408d8d1ac4a373305fc9230100000000000000fcf8c8db78fab04b332758bb6edb9fde68e74ee228c1eac78812cd80adce1273010000000000000032e2c97e308c84afea4b37d7dd8f62e67763126c357c9e6e49b27f54c3702b730100000000000000c64c595519886ef38c2fa837c795ee92f6fe003037c9ded2c1282a939408513d0100000000000000a0c28669f01d5b4decdab2abfd9d14b989c1d4b32323f264b24a788de0b9d2430100000000000000843778dfeddea10578fab2773f2827c62fe0efe374d9a01eb370bd8f1427e76301000000000000002425e806f3e7378d8974b7cf541d0e4cc4773dd59cdc705e006bcdc83610b20c0100000000000000b67d043a780b897a23192cba22595b758d2a5db517d50951c99d5acdadf3210701000000000000009829a89b84bf8a0c76dad25d99c2e4476e51bff2ee9e917a65edd1b4175cf5400100000000000000b67a042a5fc9668101e9aad4a291ea2aeafe50eae796865cb201201a6dc691530100000000000000080527decdf951ba9bd3ed9acb5e1454d07c661cd84833a455a2d239c18d42140100000000000000847f948b67d6f455e2f2923f366dfe3c0a3925b451210a46cd36fafb8cd8290601000000000000001e6d57d7109cc6dc573360e5f2192578e3324f2a8dcbd823483b82d725a9771701000000000000007cb1f225b90c00f426c33ac4338eeb2dae6467b8a9da5c1556e6588c12ca977b0100000000000000b261a66b9bae17b65e7f6a88d65efb4519925d6c418c9e2ba17bfdbf684b77630100000000000000c4046e6cf48c9913b2af1dd8caa4f7ffd03a01255af691cc1b70f142b97d2a150100000000000000560c91919fc22867159ed77bee1b3e70d2e222a5fe6e830fceb13b58b0daa5290100000000000000b6068f3b8a0ef7a3f7916e5559eea8158d5f5b09d9db89e40dfc5bab0549911a01000000000000003680cf4852c43b2a708608cd7e09b531e7748e4d7e9d65904676f53ca7565352010000000000000010381a1fde26d95804978d4ccaa1d6e634efe2ac922f7dae4da3cf3a64568a4e01000000000000003227028def74f8ea7bede3e112e4ce09d8fb823790ed599f2259019945f2690a0100000000000000d28eb111cd786c6f09c003d958c4a26cfd7a33f9e8bf6db02795f12afc7a1e0e01000000000000004ca838afa9f12e88436eacb5024f3f94c95a66c32e114f65f3136176e426c75501000000000000000ea6f5d4087d599603b0c39fbd588c198b9d9bec85a77a5579ff68fad12fc20c0100000000000000fc5b39a7b7d737c7d1dee9dbaa77969b95a7edd3926c538d8dbb854d53cb3c1101000000000000008868524e56bed527bb3039e7d01a84af44e8e62ed00b1f44098c47789e4b201001000000000000000c60356c02d5d99293952c478fd07b2cff982dbad863ebdadf25c9e69206f14901000000000000003a8b589c8222ede45b3d95c8d9176543ffa9a29cbfa0ba2af60fc412e732d75e01000000000000000c6cc2bc932adace83516fe99076d532e6197ae08d66610988288044c6bdbf3601000000000000008c7e4271cb1d28f71abac3f793ef73f2261851662e11cf165e5d7b0f40a0804001000000000000008e67bbfe6269ba4ea2b216e7cc21a54ab882859d65a691ff2eec486f66a9035f0100000000000000103680fee8923b681b7721ef2bdfaac20a99bae45e643b42a228be43b3d211660100000000000000603fef5a531a03b8e83a8b66f583edf78706b93a11eff454f5a56093a6434a3a01000000000000001e724d980809bc793ae72d15a9b33cbf93b4cc17875a4259970548c5137c6b4d01000000000000005edd53eab09b1834ec2435a78a19daee1acefe1e84de77bf788740d9bf6938360100000000000000981f14da22574782d35643e2fdf2c514245b6d7475048becf8143136acabb00c010000000000000090b7aa9d2cd7f44f20fdf30f34ccb9d34c943c1e5c3d4553c6c43049dd8ddf1d01000000000000004651d1aaef0625ec4a153357d541e4ef7f3e15866b1613bcd4ea96f8ba0c3c6901000000000000002aa57ae83dbf829a794b555b8acddc97657b2178d0722c6263c8ddd19ffd474901000000000000009664e4e01c42d9a22435a39dfb1daa6cf043abbd01c1b081c28ee271988b415b0100000000000000381a3708c945f1d295122322f3b3b7e161a4f2556d6f8d8ebfe052377ed37b700100000000000000e09ecf865113ac4f2520de61ba8b8fa5480534d41145d1ff3db5c8ea3f3c9a100100000000000000ecf0297bddebd3d766ea7def2bac79ad6eb650fabdcd029b99cb1649ff7dc815010000000000000090b46ba005eb064c8ea5ebec94a5facfe2ad0c0050dee0f51026f0d1603911170100000000000000f6ccffc523461e1cad22a66b2a4637ad254d1b96d244411e0eedd5d89febd50d0100000000000000509f915fe6f099fb5807c03be526a055dbb7565c35831a7dd76d6e506d493c460100000000000000042cc9a90ee7801f29bde1f77ebc42e68fc8432df113d23b82201d1a10e33d0a01000000000000001a47252288a7ce1b8f8892ca42e0f279967de49258218eaea8bfd94ae117b77401000000000000003c2f81db928e84552574a761e6bf8991a337ef5907a5ad26d8d21385da1b7e3201000000000000001e63ed13cb9b8d544a73307d348a241d87d3d1063715d686572e705b37b7483e0100000000000000bc633ce058ec703568a94b656988f1b4036cd9f74aabe8a7b47e7338833686540100000000000000183e5f34c7c987bb4f165e2b737a9300495ecc1b7f9681c5c748bffea19bdd650100000000000000a0935670e98d2bf4800f84af8a051ce9d600d2f515cc2de17a9e354d3488db460100000000000000e84ad35c6913d9fb006b3d64760b959edf736c080c8fdd58af24ba8e6a6fd47b0100000000000000e8b7e227a0ca7c64a4099a3fbb509620d4b8e1dd91e1ca32a5bda49d4aebb31f0100000000000000ea3c4034fa89a8744f7c8a55560418d7298cccf97fdba7cfc0a9c83701dd680c010000000000000006adb1e6e78084fd5e5df37fafc180d1ed84377ca41de3b5ca43b764f0cb1909010000000000000008bb4e156026608c59c8b2b6f8068e7398c30278a90b8f478724fd04456a673001000000000000002488a8bee91b989dff6adff396074f3300e7938a962ea3728943f37a23a7763e01000000000000004e466f6a4930d856a1f53f21c1a44451ead20c8c71319f6a685f0e254d24c32101000000000000004c1af564e989c30c6e5ae1b8035ced5f59653b40cbc2d78fe17336468c8f441b01000000000000002037d70f4c244c81422409ad01d28d72a30d26e595fbcc791daeb57f78a8567001000000000000002e885398b2f8018002abd2595f86a4168d37c1dc2e189108a02c520f17225b7b01000000000000000e24cf7b53e505317f1217deaf5b08a4ed466926bf13be4b15d0732132df435901000000000000003ac231bc9a6e280f3d1ae2020b2e56c5888098427a186d35c052ffd6e42f264301000000000000009647f0ba124d459f0633dfd82a3c3a0010124072d4e274742c7c17a536eba91401000000000000000eabd85c2d5a1631f4b14cab1afb71b4c8b9543b3c93ed53b5a557513bd8394e010000000000000024706d6d41dbaf2bac8cf1c4375d87c3a5b84b8bde07036968aebe8390661045010000000000000088fa8bb07ebce99964718c65d0d6f1b091ef2f4d4cdf7b94a22c42c007ecd706010000000000000048f68e4cd520fc8d0d253c8b5816082302690cdef1ed1cd2e4f76215243e72380100000000000000882807165bba4bc625e328801dc1325db2a4a133f1ce9ff2de36f2d018aadc3a010000000000000000f79cec5a6b6b70f768ed05e94d2cfd70b13bc58fa16e62d742ee49aabe967e0100000000000000d8bb28523be3666290cf2748c87eef425e0d92cfc359de1d74004354cb583c4e010000000000000052ac28ba2601723d23a086b5d775f19319f110ba5e9292f2af461e71903b5b5001000000000000004cb3593968c0254cadc7f1a2270f9a89e0909e12a6eb5ceb7f723ab6ee9b7275010000000000000066367dc21d99167386ed0d0018a18b23a1f7531aba9f6e1d299a43446c86201f010000000000000060f640b7d3d4e9316603270a4e5771ff2d9e48927a6210a67eab2a25149f17740100000000000000d2179a30faa13f5b821213d4e45bafebfe069746e5afe09254f80fa301ae093a010000000000000092e5bb9d0906f768dbdde0696b78e493cc78dc1f68789575b24f0b962799b51e01000000000000009295a1f023157921d346b73484b120d46048382107015aa9ed998f1fae95970e01000000000000003e652d1f8e78c4011cc9b19a2fbe253a6c8708a30e94b549550f11f17d9b3f700100000000000000d2c456a3002282450e0419b0aa5293b85a9e6f5e9d181652a494a2e613f12a11010000000000000046920ef4915f3036b0686792a741f2d04698b23c5e6b8338d03a7e935d6134300100000000000000aa97c0ca75c01bc86b7aa14f50b3732717e4238a8d542f40601cc57fda04486001000000000000006cb96487d8bb7c4ba7726a623709a27687866740b7a400b9c5322e806711aa0501000000000000008a061720463abda562f0802f43ff556ef8382f737ec6370150396ec14dec820901000000000000004a512ac212da2c96d7bc8590865ce627e6b60246700595bb100b240e80a3f0760100000000000000be2ee8034bdda18863bca0a0af63015a85ee2551b62e0b1c732417ed06ea39540100000000000000d65ce90b9f6560a41d71a5a53303b2e9fe2fa2c7b5aa7b8d77f7c0ed4473993001000000000000005a15fb3423d8efc0d616665530a6d478b661c324eb30a42f72b828f5ea99421e0100000000000000c6fbf5153c7b8dd896e8daab854560e2ab669890479fed689ca39f210fe88008010000000000000086f750fd8e37cabe5049c7336bc317cb011c62d1e0dbb59a68706c366de0c2610100000000000000f41b3b9205a9f79b99295979bc938ead443667b58b4201e407a0cbbbf50b930301000000000000000e21a03fbe9885a475c4875f3f912c8703945e99cd2a85f75258fda7b6022b7c010000000000000050bdb39b713a707658b538834d6998c3311127488c62fefb86be2876011899380100000000000000f2482ae122cad07e9aba73acdda2f47ee8dbdbe85f6921c1f1ba968852c5df310100000000000000d8de542a748c14224ee7faa16157727c852ce502a45b408de0975c88a39c690f0100000000000000ea88c9aa1e449f4c62b86af5da1abda7479f9be5344eafcaca482b892601c457010000000000000026538b2b883a97c4e4ca0c01a9e136d42832e07156bf9df23bee062df009230501000000000000000cc6b385d54b772686de9137405b523af4bc79c0e2ca6c162163808521ad79570100000000000000bcbd81964eb726de1abd2b7608252278066fa196b100b15ea8d8976a94ac743e0100000000000000b0d9dc44559810ad536b1c9792b5624cb087972bf5fe3ee484f9214497d6f8380100000000000000fad87158d4a6234fd1444bf61c5d4b7e741f31a9e1d49bd5ef1ab21e19143e530100000000000000eae34c5f0c88e2cefa9ef36ea262faf41315a0de4074c6f3b3696c153f8f023c0100000000000000b600ec4f4068eff1e9d03edd1eb00e4bb2795eb1029348825e604ed28829bb6b0100000000000000d23c53a531e356646133db73065cd83999693a5bdfc05931238434f5b031522f01000000000000003c1e9d7b3b0e26fdec44e026880a9614ef2d80a096e4f721a3bbf5688fccf07a010000000000000094d28205c958a5d713fe7dec4dac2cb85cce31872e3faf9eb9487e8fcabbac6001000000000000008af88ab005ea3b1a0b3412054c721e574c4b4469e231aa487d9132946e42bb690100000000000000aa74176b5870c97b754a157ec0d8032148c2ae717a905e0e5e626048b6f53343010000000000000062d37e495af1a21a15c93556362a0e29726926302d9453bcf2c2f0a7b4001e5a010000000000000032fdd22fdc3662f97008fbb6f52d0fbe7b62c24956849fe04f9b023007a8932301000000000000003e07b075219fc7ace8dc3bf3a06f5dc12aa9c7e45fe30244d2284bcfb1e6ee190100000000000000a4a0bc81aaad1ebce3fdf896a8d6d081ab93efc2de9d5c56f2632edfeaa7ad0f0100000000000000a07fe18d0151b0bbb2a2f9604122716fa2ae881babe7e6d84a22cfabdcd1267a010000000000000042c7ee18833ca3f3a56b91ea1f57f1984a7d127efd57802caadd0a4a7e3d5f480100000000000000f6fabc667ca7e609a18fbc1b44af598f189f769f5e7419d2632a3dbfb46b266101000000000000005ae2495c65862ec124cbc8c9268f7a1fa66a9013b01f10198855149cc549c3710100000000000000465242c8915eea46e25549f2ab97cfe78784f25083e51773e07d5a0cafc2de320100000000000000e886d0c8ecc3af997d07b9426599a43adb274a3b0d5ab3262331a5da13e7555601000000000000009ef8d5705da658687f96fb0a6f937611a3127911a1694a46ec7226741ce43e4f010000000000000018728d9d1125cfc79ab103aff7fecddfb9c6528d3a707e8e088b92c9c7a5d41b01000000000000009875dea5d493af94567673bfcaf096919a921cbb806f55b7488bb0a554fed66c01000000000000009a3b32b7cc94b119b2753d77d4f38b0e63900a5633773105a551de5b22670e7a01000000000000003e8bdbc5feb01e9ed021be11459f89dca00ffefcafefa7d4ea8e654ff724c444010000000000000046ed02242cf70665583c79a324b0e53c1e957c2b6c41371fdfa7c632513a86530100000000000000643589f0627aa555aefb01d2f0a366eacc252af9437ec2a892935da2a1052c170100000000000000241cb8ac6036dff8d9e0f6f092f17932945166e75010dee9adb2e245a4b6e5500100000000000000a877af86b958cb961cc97cc61fc35602350a87cf9cccefb09dd91f9f792919250100000000000000ec1ccac47bdcd80ce07faf39b9b1791033ef5587d0647b9b83ee433fcb8d32170100000000000000288c08430a7e427400dd5b61926b74a82abcbbc91ac739190cc791a581f6836a0100000000000000b40a7dad67fc795dda1dfc1ebc78dbe45a8116888183aadd0cb4698dc4415912010000000000000028052d0b965ed862b7861aa7f3f91fe52ff8b0f795ff476c7e0a7aa42e7993300100000000000000a853037e17e9d4ad15f03f236723506cb78607413d233975c9ef793397de156a0100000000000000b6c42607db8cf37421c805c1c54fcfe85f3d25405ff4c55286501818c9dc58460100000000000000163687f38841bbbd2b93787f7f65cc74a2ab94478888abce52207e1b81f46c4d01000000000000004c877f2d5a9fb22cb8526dda4256da8e575f09cd838d5e15032e8e150ee1ea7f0100000000000000769ea03c7b16ccfa42f5aec6127e19f165bd61e60180299da4145854061e1e180100000000000000c22b3fe29c3b9eef11a6db4c79ebac692efa4e3a9e4a48affdc415275ce387640100000000000000a6f59087f84d39a888e486e82675c77d6dce841a91b35f41e0f6facf6616163701000000000000005e5e810f04267c51befe0fee46e927a979af59db981938c7dbb90537db6eae07010000000000000028a0a3e8d2a6ff3213d142b94caa64965d1c738c4195706f133175065165130801000000000000000c2594861b9f8cae6e52996622e17aa22fff7a2e8ed37b89524e9f3e2640c63301000000000000003622bfbaf9350b5906bdf9ce362e06726224ed141c5d29e8e175e0beedbd3d3d010000000000000070f08007867b02d11f3fa909154b03a7915ae7971e474ae27725fc6b99c8425b01000000000000002c6ef636d3bba8ef79dfc0e6d77bcb38426b54c92b764b29115d25f3af9c87160100000000000000e8b977fa9876c391f9ea7fa563d64da4af9b50fabac9a2425b2f18c7eef2f54c010000000000000086088c15ab94ed86455e4473c198b99730e99585b88d6fa465ce429d268ea27d01000000000000006ed90090a744a0d55adf8f8af5af4d5198bb67220ce33fe71121d7c51f27a41301000000000000000a73873c9828f50900fec8ebe613db998e6fe476142718ce0589822f88dffb3d01000000000000002e1112ae35f007b16eac0058c77a85d3dca8687cf6f1bf231f84d768fb389c040100000000000000809dc13a93316ffb2f1cfecfbce374272a81639b11fdb1836f04d3bac622f24c0100000000000000946218824426fca91a00f856a5a92173c04649a2500adeece86fa30d4c08b4730100000000000000002608aa377726407132cbdfa1118b69a6b9d3fe876452b83a90c59fe51082180100000000000000687cbc1bf231505a492d00bbbbd0f7adc9df484ae46143f1088f469e51f95d740100000000000000e4e005984bbae507a03d158ea8ca3a87505ae3e8723d8f5bfffccb63a23ea61c01000000000000008a40c3acc862dcac958866b738b304be7d84c33d9420b0747eb82aaa21b8c40c01000000000000007a2430a3ba06afdacb8cdd51b95a8f94e97f6f3da16a16db190a83fc8d7f380c010000000000000080d4494d79062c0ed53564e1eaecd593d5d56a5ebb600cad9152bf3187128b36010000000000000030071950e33b60f29acdcaabac9e3f6f1436f337cbd3f123f5aed3f0307ee823010000000000000092439f4dab2f4b2e8d1bd040505ee33fb2c1dd56f3946826cc27288422313b3a0100000000000000aa6e4b27f80410ae5ce7ab8e7bf083f6e6a87f87a784d6aca9e5fd9843176926010000000000000094b4d71ff20170266393c4cb481cbc68d0f04264e067f456dfcbae3ae0af5739010000000000000092c996c1fedd09190bb0fa8cc79e4075ad79eca3d6895d2a99d20e6f89e4182b010000000000000072bb32222caca7113141263e12a4193da7f29806dc93cdd11fa9653464344e32010000000000000000140d4493060751979098f686733955e6e71d01bbaa8a3e6cb297400c5c624f0100000000000000204791fdb49af594e5b04e0f26492e56ad8ef4cc8533245609d10e66c340302e0100000000000000c21f66c32b614761850e5795a3afdaec1461b45184702e3c2cd5ec2df9623c3a01000000000000008ec59e4c60c8e07ea1c5de77d0510924f4d399071cf1f09606e0e58c961c1c020100000000000000941dd915e0ed9ab77c5902ad8840b81dc84402df589ee4d846480c63cc5d9731010000000000000076f132027235278f9c582ad1c52fa62390aa10f04add56321a28b4f22074092d0100000000000000428992924b7c66ae24e3c55a9d85fcd8343ab1bf0089a8e5038313d1f3fcf9700100000000000000f2065428f52da2f7a881f9b94bfd38719bb6e5ff88a6800bbb3aebb1a9ad21020100000000000000ae48bbbfd5aa564f0945a2d79428d0182fe40770999ffcf472944e28bac852790100000000000000664e22b28ad76fa3b6e8ff42b67991593fc2895257515564be879070b9aea4300100000000000000b66b7a405e385945d0a33089561fe85af044aca93522cf44cafad6f22f275055010000000000000094ca8d9a1ac9afe584ea99954a80926de626990ba9087c0a8ac242ab67fcb7780100000000000000fc3fa462e56b8a4aadc369f88cad272f9e52da4a11c4896c30e3e0ee19c4031401000000000000009452d0cd850a8a3fce455d099302e7d641242037956cb39f679f343e2af9601401000000000000004e09267475354ac23e1cc62749139e0dedb5e403013fb807490e37487594707e010000000000000066a0368fe8bcc7798607a04df6579b893434593880ed500cdbfc1922622275510100000000000000bae8e68bc8f1b66fe3229ee72d77137b394c6b7dfbf55e424f9d2c82d5c996000100000000000000183a83cfb0fcd53d29c91527754e3f6e4697fc680d43247d200b39589084f84d0100000000000000deafec3833f9925dbc5d185762c864d1294215c8eeb3f63da6f4cd5fa78eee3b01000000000000005ab909489cd8555eccf9e9d83df8b1d66ba362fda72deb712ec8a2aca224b54a01000000000000002e80afd2cf30e0415e4f442a662a9f7da2d07043f87832ce66f15049c022d4630100000000000000c61cc86697ff08424d72e8fc5032623a861c06ed5093ba94f31e01eb32d4d836010000000000000004c1f0acbfa8d8f1169684bde1c6e3938fe90d54879168a6a4a7fbe99eefb9290100000000000000a60345c5939d4ef77e57e8fea426929956c826524c7df8b5d880d5274d77461d0100000000000000683f0e1d68ab68c7b04bc1928a8b47abff720349ddc36d7073793f43c2afb030010000000000000060b521110672f6f871978fd3ac4a835b5e30c3fa727c04c70dbc543fcad38b0e0100000000000000e047754ec2beaaf49bded84adef9b7cd827641ada004b050b58859ff91abbc5e0100000000000000c40c9ed995aac4b4aeab516c9614b4614616a75eaf2fbe628dde6d3be5bc9b6601000000000000002ab0b5cc358184be4fa29e7a3dc24806a72e55baad40ec9a117324a884242c280100000000000000e05c7c7d82498be85294ee984e1f0caf23c53fa9a64cc7e6c5053304c4bb785101000000000000005afe620da258a48f00c3afbb8a98161e977f076c7e7f8392975a4f0db4b57d610100000000000000a61667ea6442054b56111477f57ecf39b6e90480bfadf54c3e6cb5ac3a3e275801000000000000001ae9aab4a890c558ac8ab90ccbbf193b3841083670ebed278b2161fa2ec7b3040100000000000000c0730aba0523c10c535c2640ec878a0f5d2a240c8d53fc37fd30f5735a38ec4001000000000000004059f5de23fd2e6805528d79475470526ee7e2f17192988e10c681e15672857c01000000000000006029513013f081e5d5d74173847405747513aa814038c25500522e6fe2aaf37901000000000000009e6528fe0232f7e9162c5292621c135c47e949e54e91fe5fd500b8b80632625f01000000000000003c0e8a8f204aa9b2f088877f0e03c6ec1c0552baaff43bdbffe904dac305675b01000000000000004e7a559a6f6f685a8b438db6acc074df322e2a38b9f49b26fb60026b9301f42a01000000000000005a3788f9347ad802a56974dfb4ed19b22fa91c20e5c8dcffaf4208f25471432601000000000000004616ac86f0d45899eed3f1246dc5744858a694a92b0abd9f10e52dfc9c28674601000000000000004c0b37ebd9e67b237a2b3a9545c269bc382735bc3907baf9ee468bae0d8feb2e0100000000000000c65e37495239d0eec6f8ca9000a0e8ad618fbe5c366c25825ca7fb26c7b27a7a0100000000000000a4b31af719e5d9c3b69326ef920736e8b620b329eade475ae23a33fbd445df72010000000000000044752934a6a030f482e9d8fa9e704e7e4ae9c2f8b4eb12faaa31c87c8f12c44c0100000000000000347a2ed2ed3db2d6e3c90f3988349ca56a33021537202d17412e1b1862a8c35101000000000000009281394b5d35827c826e1d7444f346c247b9a004aa0292a9ca2b16e0fb556877010000000000000080a4dd2b8d5f3d3aa4b1d6506be93c75b78f2d45a58e468d0474f20d366d0335010000000000000094be52a3a400ca82f2ad77c8c3c8d572235345249a622ff0588235981c95d7700100000000000000fa5e314cd3d9194cbc652160ac95cb95f50c28b8fac5f4c0e737239e9f8607670100000000000000a2cf2f85a782a37f8635661c3ad7cd4aaffbd35c6658a408c3d31ba489d69d7101000000000000006e5b6b3ed154c062b39552c901772d5cf23eb9e4a629c7689c16f1d827ebec2e01000000000000007e88cd54f47c1f4ddd9d3a198fc689d24a523fe186d526b14e476f14ced7db3c010000000000000072b0bf73acda56ca41cc15348007fb1d05d309dd868b26faf6802377e307a24301000000000000006ac27e3d6423f2d9488d1bf42dd6f2d3eec911c471b51d69cef6371ff242a3750100000000000000ece4c3c5e3b6ac008899adf3458f1f59ae7db2e674bbe80412756963446913030100000000000000881a3f7b045cf93b13e79864a7617ce7f5dba554463e5b00a441d226da016c140100000000000000e63548b7be72f3559c789fc7e7e15e187b44a7217c46848f11ac822741c39c57010000000000000072c2d06efacbb9760446b7f5eeacf6dd626098dfea6ccc1c7574f03fcae4b06801000000000000007c6d7bf7c2dfb84a3f14e25e97676617269616b56c57b59d670b2337bdc51179010000000000000004a37808380c9036316f61060c5040ce2062a54cfdd44a6c5a1b55b4a94fdf350100000000000000aaf44f9d4dca217ceb1de3ee4cd8e5ea99fcadff20c2626a52796567a316ea7e0100000000000000b85b1b7b8ed510a5bc1d0979fdc04ec7b73d84c7d1d767dafb6faccc8dfd402c01000000000000007e8ebb46c80883225df2fc91fe7ede9933dcf073f3d74ea3db0525585984e74c0100000000000000068245d8a483bdbd4e9d88b49e17a651ec168f25e6851fc52c2e36a516031d5e0100000000000000283e38e57cd8630b855b32b734fc426530742419ac407dfd215b3cf46aa8fc4c0100000000000000383d2ea99f1550060500295b8dccd50a9b78e2e868c01f28adf6ef2e8007ac7c010000000000000000a5fc354a5669536eba3ab51a608e9c811214c5b7702b571535d48feeb9742301000000000000003063dc6994f705aafd8f6a9c3252629f17d2bde6ae269ce9d0fa4ab0c8a1ce3a01000000000000008859563f3d771b1ca9e5afb70b9c760158a970bf9767060c34af3eb32354ba5d010000000000000068b2ac21afb21cc0d5a063c77fea17f09885bff57d0200cb83ec85da7eeb614e010000000000000042dbd2d1e0ef786fa0f72e251102e858eefec87aaca722a7de9c9a8be29485360100000000000000bc3cdcf9f41b5f3f073a7f6a29931a6be12fbcdfc1dfe7145c4e0a527e9e243c01000000000000005881fe0c27f70f6c59ce778268ccf888b77bf268c3bdd9ba6ae5a012a870e5480100000000000000da132f2f832c8e2a4e268b4faa923d9449c94ebe66f03fa0ac4303f2ceb1b053010000000000000070eb857f0386996d388029ac2d19c3c31ccb3766a9d118bb5dd36ab331d33b2201000000000000007c4bd3b9b81241ca657d1b461afe675272ad933187ee5855fc71475d1f01812f0100000000000000a8d082a4289fe5ccaada604e70c4b1473d6fae4374663672e61474852c1ebf2a0100000000000000007cffa67942272b1974dd65c87828e1535799e008d9e81b2818f5e308ed4f3901000000000000004a75953fedaf3e983357fdee67ca8174bae4c7c4634e616338bd075aa486564a0100000000000000cc840ae0117378161b86a52baa6decb97ccfc1101325256f178ba8f67761671d010000000000000050deb42e933545c7892d2d25496d9934505fce1d08ad50652a755869c8684309010000000000000096b9efe3e08609cd61aa98f3202618d928074308d9f189d97f7c1e52d2afca1101000000000000009623ad5bd17b75cc58839c76474636ad5675c519e15f090ec008eb626db73b140100000000000000c6e6a9ee3e1a22e44abed4c980de8787362c68b9ec4fa9960923708897965f860100000000000000040000000000000002\",\n    \"babeFinalizedBlockWeight\": 6295919,\n    \"finalizedBlockHeader\": \"0x2c6a24081a1224f0a698506577df561d2c910b41440ed776367b67b7137c3749cae90206f7c9e80bd8429a8a488223b22550d96d68e0a0b65eb1fa8fc63a74da76c7241d5d0deb65a2900e46d7e76120f95adab7558353b65e9ec6457614f2d0875d8b7f0c0642414245b5010168000000914c4f1100000000eca7d41beb27f98a343aa59c5bde26ddfca02cc043739c54224b04a8d750505bb4a0cb4b0a83f36977ceebc3fd60f4122bc0fb7ecf2c3c078c9d51aba54053085a68e502396391276230cacbc7914db0bc571187422a92828e3b14e6793fa107044245454684036955063304a63247d7c73dbd7aa22dba21359d73e65785910004f80ac0f116c205424142450101d2eb0d21a4534fb6fe24267dc97dedb681b7cdd0fa974088886426afc54d427532ac720bb18a66c6231660e6e7776837a254ed5a44d3bff69b2a75a836ee9c80\",\n    \"grandpaAuthoritySet\": \"\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-LG5IOLTV.mjs.map","// src/specs/polkadot_asset_hub.ts\nvar chainSpec = `{\n  \"name\": \"Polkadot Asset Hub\",\n  \"id\": \"asset-hub-polkadot\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/polkadot-asset-hub-connect-0.polkadot.io/tcp/30334/p2p/12D3KooWLHqbcQtoBygf7GJgVjVa3TaeLuf7VbicNdooaCmQM2JZ\",\n    \"/dns/polkadot-asset-hub-connect-0.polkadot.io/tcp/443/wss/p2p/12D3KooWLHqbcQtoBygf7GJgVjVa3TaeLuf7VbicNdooaCmQM2JZ\",\n    \"/dns/polkadot-asset-hub-connect-1.polkadot.io/tcp/30334/p2p/12D3KooWNDrKSayoZXGGE2dRSFW2g1iGPq3fTZE2U39ma9yZGKd3\",\n    \"/dns/polkadot-asset-hub-connect-1.polkadot.io/tcp/443/wss/p2p/12D3KooWNDrKSayoZXGGE2dRSFW2g1iGPq3fTZE2U39ma9yZGKd3\",\n    \"/dns/asset-hub-polkadot.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWJzTrFcc11AZKTMUmmLr5XLJ9qKVupZXkwHUMx4ULbwm2\",\n    \"/dns/asset-hub-polkadot.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWNWF2zwxWDuZfXEzL29yeXAAubFy8tCCMjPwWLCZdLRqc\",\n    \"/dns/boot.metaspan.io/tcp/16052/p2p/12D3KooWLwiJuvqQUB4kYaSjLenFKH9dWZhGZ4qi7pSb3sUYU651\",\n    \"/dns/boot.metaspan.io/tcp/16056/wss/p2p/12D3KooWLwiJuvqQUB4kYaSjLenFKH9dWZhGZ4qi7pSb3sUYU651\",\n    \"/dns/boot.gatotech.network/tcp/33110/p2p/12D3KooWKgwQfAeDoJARdtxFNNWfbYmcu6s4yUuSifnNoDgzHZgm\",\n    \"/dns/boot.gatotech.network/tcp/35110/wss/p2p/12D3KooWKgwQfAeDoJARdtxFNNWfbYmcu6s4yUuSifnNoDgzHZgm\",\n    \"/dns/statemint-bootnode.turboflakes.io/tcp/30315/p2p/12D3KooWL8CyLww3m3pRySQGGYGNJhWDMqko3j5xi67ckP7hDUvo\",\n    \"/dns/statemint-bootnode.turboflakes.io/tcp/30415/wss/p2p/12D3KooWL8CyLww3m3pRySQGGYGNJhWDMqko3j5xi67ckP7hDUvo\",\n    \"/dns/boot-node.helikon.io/tcp/10220/p2p/12D3KooW9uybhguhDjVJc3U3kgZC3i8rWmAnSpbnJkmuR7C6ZsRW\",\n    \"/dns/boot-node.helikon.io/tcp/10222/wss/p2p/12D3KooW9uybhguhDjVJc3U3kgZC3i8rWmAnSpbnJkmuR7C6ZsRW\",\n    \"/dns/asset-hub-polkadot.bootnode.amforc.com/tcp/30007/p2p/12D3KooWDLxPXYnSHjNwq9ibqgxuzRni5VViuGNSjNe3ueqVgqE3\",\n    \"/dns/asset-hub-polkadot.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWDLxPXYnSHjNwq9ibqgxuzRni5VViuGNSjNe3ueqVgqE3\",\n    \"/dns/statemint-boot-ng.dwellir.com/tcp/30344/p2p/12D3KooWEFrNuNk8fPdQS2hf34Gmqi6dGSvrETshGJUrqrvfRDZr\",\n    \"/dns/statemint-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWEFrNuNk8fPdQS2hf34Gmqi6dGSvrETshGJUrqrvfRDZr\",\n    \"/dns/statemint-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWLKxHom7f3XawRJqrF8RwiKK5Sj3qZqz5c7hF6eJeXhTx\",\n    \"/dns/statemint-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWLKxHom7f3XawRJqrF8RwiKK5Sj3qZqz5c7hF6eJeXhTx\",\n    \"/dns/mint14.rotko.net/tcp/33514/p2p/12D3KooWKkzLjYF6M5eEs7nYiqEtRqY8SGVouoCwo3nCWsRnThDW\",\n    \"/dns/mint14.rotko.net/tcp/34514/ws/p2p/12D3KooWKkzLjYF6M5eEs7nYiqEtRqY8SGVouoCwo3nCWsRnThDW\",\n    \"/dns/mint14.rotko.net/tcp/35514/wss/p2p/12D3KooWKkzLjYF6M5eEs7nYiqEtRqY8SGVouoCwo3nCWsRnThDW\",\n    \"/dns/asset-hub-polkadot.bootnodes.polkadotters.com/tcp/30508/p2p/12D3KooWKbfY9a9oywxMJKiALmt7yhrdQkjXMtvxhhDDN23vG93R\",\n    \"/dns/asset-hub-polkadot.bootnodes.polkadotters.com/tcp/30510/wss/p2p/12D3KooWKbfY9a9oywxMJKiALmt7yhrdQkjXMtvxhhDDN23vG93R\",\n    \"/dns/boot-polkadot-assethub.luckyfriday.io/tcp/443/wss/p2p/12D3KooWDR9M7CjV1xdjCRbRwkFn1E7sjMaL4oYxGyDWxuLrFc2J\"\n  ],\n  \"properties\": {\n    \"ss58Format\": 0,\n    \"tokenDecimals\": 10,\n    \"tokenSymbol\": \"DOT\"\n  },\n  \"relay_chain\": \"polkadot\",\n  \"para_id\": 1000,\n  \"consensusEngine\": null,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0xc1ef26b567de07159e4ecd415fbbb0340c56a09c4d72c82516d0f3bc2b782c80\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-JXLVOOH5.mjs.map","// src/specs/polkadot_bridge_hub.ts\nvar chainSpec = `{\n  \"name\": \"Polkadot BridgeHub\",\n  \"id\": \"bridge-hub-polkadot\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/polkadot-bridge-hub-connect-a-0.polkadot.io/tcp/30334/p2p/12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy\",\n    \"/dns/polkadot-bridge-hub-connect-a-1.polkadot.io/tcp/30334/p2p/12D3KooWG4ypDHLKGCv4BZ6PuaGUwQHKAH6p2D6arR2uQ1eiR1T3\",\n    \"/dns/polkadot-bridge-hub-connect-a-0.polkadot.io/tcp/443/wss/p2p/12D3KooWAVQMhkXmc5ueSYasdsRWQbKus2YGZ6HDZUB4ViJMCxXy\",\n    \"/dns/polkadot-bridge-hub-connect-a-1.polkadot.io/tcp/443/wss/p2p/12D3KooWG4ypDHLKGCv4BZ6PuaGUwQHKAH6p2D6arR2uQ1eiR1T3\",\n    \"/dns/polkadot-bridge-hub-boot-ng.dwellir.com/tcp/30339/p2p/12D3KooWPZ38PL3PhRVcUVYDNn7nRcZF8MykmWWLBKeDV2yna1vV\",\n    \"/dns/polkadot-bridge-hub-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWPZ38PL3PhRVcUVYDNn7nRcZF8MykmWWLBKeDV2yna1vV\",\n    \"/dns/boot.gatotech.network/tcp/33130/p2p/12D3KooWCnFzfEdd7MwUNrrDv66FuS2DM5MGuiaB4y48XS7qNjF6\",\n    \"/dns/boot.gatotech.network/tcp/35130/wss/p2p/12D3KooWCnFzfEdd7MwUNrrDv66FuS2DM5MGuiaB4y48XS7qNjF6\",\n    \"/dns/bridge-hub-polkadot.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWGqVn69EWriuszxcuBVMgTtpKUHYcULEiuLiqkC3kf35F\",\n    \"/dns/bridge-hub-polkadot.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWMiMJbunJa7ETaeanKB7hgchjQEbmhmtNPRRiHYtZHCTZ\",\n    \"/dns/bridge-hub-polkadot-bootnode.turboflakes.io/tcp/30610/p2p/12D3KooWNEgaQRQHJHvGDh8Rg4RyLmDCCz3yAf2gAdHZZJAUUD8Q\",\n    \"/dns/bridge-hub-polkadot-bootnode.turboflakes.io/tcp/30710/wss/p2p/12D3KooWNEgaQRQHJHvGDh8Rg4RyLmDCCz3yAf2gAdHZZJAUUD8Q\",\n    \"/dns/boot.metaspan.io/tcp/16032/p2p/12D3KooWQTfRnrK3FfbrotpSP5RVJbjBHVBSu8VSzhj9qcvjaqnZ\",\n    \"/dns/boot.metaspan.io/tcp/16036/wss/p2p/12D3KooWQTfRnrK3FfbrotpSP5RVJbjBHVBSu8VSzhj9qcvjaqnZ\",\n    \"/dns/boot-node.helikon.io/tcp/8220/p2p/12D3KooWC38TZJA8ZBXZgAYVrceoJ56jNNLJPdpk3ojeFkTAwZVp\",\n    \"/dns/boot-node.helikon.io/tcp/8222/wss/p2p/12D3KooWC38TZJA8ZBXZgAYVrceoJ56jNNLJPdpk3ojeFkTAwZVp\",\n    \"/dns/bridgehub-polkadot-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWPNZm78tWUmKbta3SXdkqTPsquRc8ekEbJjZsGGi7YiRi\",\n    \"/dns/bridgehub-polkadot-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWPNZm78tWUmKbta3SXdkqTPsquRc8ekEbJjZsGGi7YiRi\",\n    \"/dns/pbr13.rotko.net/tcp/33543/p2p/12D3KooWMxZY7tDc2Rh454VaJJ7RexKAXVS6xSBEvTnXSGCnuGDw\",\n    \"/dns/pbr13.rotko.net/tcp/34543/ws/p2p/12D3KooWMxZY7tDc2Rh454VaJJ7RexKAXVS6xSBEvTnXSGCnuGDw\",\n    \"/dns/pbr13.rotko.net/tcp/35543/wss/p2p/12D3KooWMxZY7tDc2Rh454VaJJ7RexKAXVS6xSBEvTnXSGCnuGDw\",\n    \"/dns/bridge-hub-polkadot.bootnodes.polkadotters.com/tcp/30517/p2p/12D3KooWLUNE3LHPDa1WrrZaYT7ArK66CLM1bPv7kKz74UcLnQRB\",\n    \"/dns/bridge-hub-polkadot.bootnodes.polkadotters.com/tcp/30519/wss/p2p/12D3KooWLUNE3LHPDa1WrrZaYT7ArK66CLM1bPv7kKz74UcLnQRB\",\n    \"/dns/boot-polkadot-bridgehub.luckyfriday.io/tcp/443/wss/p2p/12D3KooWKf3mBXHjLbwtPqv1BdbQuwbFNcQQYxASS7iQ25264AXH\",\n    \"/dns/bridge-hub-polkadot.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWGT5E56rAHfT5dY1pMLTrpAgV72yfDtD1Y5tPCHaTsifp\",\n    \"/dns/bridge-hub-polkadot.bootnode.amforc.com/tcp/30010/p2p/12D3KooWGT5E56rAHfT5dY1pMLTrpAgV72yfDtD1Y5tPCHaTsifp\"\n  ],\n  \"properties\": {\n    \"ss58Format\": 0,\n    \"tokenDecimals\": 10,\n    \"tokenSymbol\": \"DOT\"\n  },\n  \"relay_chain\": \"polkadot\",\n  \"para_id\": 1002,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0x4d33046e761a60b4eb76e14be1fbd9936f40a003bf7eceee4e0874bbcffd1371\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-SOINKWG7.mjs.map","// src/specs/polkadot_collectives.ts\nvar chainSpec = `{\n  \"name\": \"Collectives\",\n  \"id\": \"collectives_polkadot\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/polkadot-collectives-connect-ew6-0.polkadot.io/tcp/30334/p2p/12D3KooWLDZT5gAjMtC8fojiCwiz17SC61oeX2C7GWBCqqf9TwVD\",\n    \"/dns/polkadot-collectives-connect-ew6-1.polkadot.io/tcp/30334/p2p/12D3KooWC9BwKMDyRUTXsE7teSmoKMgbyxqAp3zi2MTGRJR5nhCL\",\n    \"/dns/polkadot-collectives-connect-ew6-0.polkadot.io/tcp/443/wss/p2p/12D3KooWLDZT5gAjMtC8fojiCwiz17SC61oeX2C7GWBCqqf9TwVD\",\n    \"/dns/polkadot-collectives-connect-ew6-1.polkadot.io/tcp/443/wss/p2p/12D3KooWC9BwKMDyRUTXsE7teSmoKMgbyxqAp3zi2MTGRJR5nhCL\",\n    \"/dns/collectives-polkadot.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWKLVfjCpW2syecz39UPe4QkJhwME9HUehBvf8oRcT4kot\",\n    \"/dns/collectives-polkadot.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWBCewTdMPoXNvs1ky1VLidMdS28Jnh8fNbCP81FYiQHn4\",\n    \"/dns/boot.metaspan.io/tcp/16072/p2p/12D3KooWJWTTu2t2yg5bFRH6tjEpfzKwZir5R9JRRjQpgFPXdDfp\",\n    \"/dns/boot.metaspan.io/tcp/16076/wss/p2p/12D3KooWJWTTu2t2yg5bFRH6tjEpfzKwZir5R9JRRjQpgFPXdDfp\",\n    \"/dns/boot.gatotech.network/tcp/33120/p2p/12D3KooWGZsa9tSeLQ1VeC996e1YsCPuyRYMipHQuXikPjcKcpVQ\",\n    \"/dns/boot.gatotech.network/tcp/35120/wss/p2p/12D3KooWGZsa9tSeLQ1VeC996e1YsCPuyRYMipHQuXikPjcKcpVQ\",\n    \"/dns/collectives-polkadot-bootnode.turboflakes.io/tcp/30605/p2p/12D3KooWPyzM7eX64J4aG8uRfSARakDVtiEtthEM8FUjrLWAg2sC\",\n    \"/dns/collectives-polkadot-bootnode.turboflakes.io/tcp/30705/wss/p2p/12D3KooWPyzM7eX64J4aG8uRfSARakDVtiEtthEM8FUjrLWAg2sC\",\n    \"/dns/boot-node.helikon.io/tcp/10230/p2p/12D3KooWS8CBz4P5CBny9aBy2EQUvAExFo9PUVT57X8r3zWMFkXT\",\n    \"/dns/boot-node.helikon.io/tcp/10232/wss/p2p/12D3KooWS8CBz4P5CBny9aBy2EQUvAExFo9PUVT57X8r3zWMFkXT\",\n    \"/dns/collectives-polkadot.bootnode.amforc.com/tcp/30013/p2p/12D3KooWL6v6FHMtCP5VsiDbMHLRFiW6YBtv37BarpW3hLqnDski\",\n    \"/dns/collectives-polkadot.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWL6v6FHMtCP5VsiDbMHLRFiW6YBtv37BarpW3hLqnDski\",\n    \"/dns/polkadot-collectives-boot-ng.dwellir.com/tcp/30341/p2p/12D3KooWDMFYCNRAQcSRNV7xu2xv8319goSEbSHW4TnXRz6EpPKc\",\n    \"/dns/polkadot-collectives-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWDMFYCNRAQcSRNV7xu2xv8319goSEbSHW4TnXRz6EpPKc\",\n    \"/dns/collectives-polkadot-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWDumvnNwPbBg5inBEapgjKU7ECdMHHgwfYeGWUkzYUE1c\",\n    \"/dns/collectives-polkadot-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWDumvnNwPbBg5inBEapgjKU7ECdMHHgwfYeGWUkzYUE1c\",\n    \"/dns/pch16.rotko.net/tcp/33576/p2p/12D3KooWKrm3XmuGzJH17Wcn4HRDGsEjLZGDgN77q3ZhwnnQP7y1\",\n    \"/dns/pch16.rotko.net/tcp/35576/wss/p2p/12D3KooWKrm3XmuGzJH17Wcn4HRDGsEjLZGDgN77q3ZhwnnQP7y1\",\n    \"/dns/collectives-polkadot.bootnodes.polkadotters.com/tcp/30526/p2p/12D3KooWNohUjvJtGKUa8Vhy8C1ZBB5N8JATB6e7rdLVCioeb3ff\",\n    \"/dns/collectives-polkadot.bootnodes.polkadotters.com/tcp/30528/wss/p2p/12D3KooWNohUjvJtGKUa8Vhy8C1ZBB5N8JATB6e7rdLVCioeb3ff\",\n    \"/dns/boot-polkadot-collectives.luckyfriday.io/tcp/443/wss/p2p/12D3KooWCzifnPooTt4kvTnXT7FTKTymVL7xn7DURQLsS2AKpf6w\"\n  ],\n  \"properties\": {\n    \"ss58Format\": 0,\n    \"tokenDecimals\": 10,\n    \"tokenSymbol\": \"DOT\"\n  },\n  \"relay_chain\": \"polkadot\",\n  \"para_id\": 1001,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0x034cb60129ef41b444b28dbd93dcf2a2314b6e84d950358de47e6b7831673ba7\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-AVS4PDRR.mjs.map","// src/specs/polkadot_coretime.ts\nvar chainSpec = `{\n  \"name\": \"Polkadot Coretime\",\n  \"id\": \"coretime-polkadot\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/polkadot-coretime-connect-a-0.polkadot.io/tcp/30334/p2p/12D3KooWKjnixAHbKMsPTJwGx8SrBeGEJLHA8KmKcEDYMp3YmWgR\",\n    \"/dns/polkadot-coretime-connect-a-1.polkadot.io/tcp/30334/p2p/12D3KooWQ7B7p4DFv1jWqaKfhrZBcMmi5g8bWFnmskguLaGEmT6n\",\n    \"/dns/polkadot-coretime-connect-a-0.polkadot.io/tcp/443/wss/p2p/12D3KooWKjnixAHbKMsPTJwGx8SrBeGEJLHA8KmKcEDYMp3YmWgR\",\n    \"/dns/polkadot-coretime-connect-a-1.polkadot.io/tcp/443/wss/p2p/12D3KooWQ7B7p4DFv1jWqaKfhrZBcMmi5g8bWFnmskguLaGEmT6n\",\n    \"/dns4/coretime-polkadot.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWFJ2yBTKFKYwgKUjfY3F7XfaxHV8hY6fbJu5oMkpP7wZ9\",\n    \"/dns4/coretime-polkadot.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWCy5pToLafcQzPHn5kadxAftmF6Eh8ZJGPXhSeXSUDfjv\",\n    \"/dns/coretime-polkadot-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWGpmytHjdthrkKgkXDZyKm9ABtJ2PtGk9NStJDG4pChy9\",\n    \"/dns/coretime-polkadot-boot-ng.dwellir.com/tcp/30361/p2p/12D3KooWGpmytHjdthrkKgkXDZyKm9ABtJ2PtGk9NStJDG4pChy9\",\n    \"/dns/coretime-polkadot-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWFsQphSqvqjVyKcEdR1D7LPcXHqjmy6ASuJrTr5isk9JU\",\n    \"/dns/coretime-polkadot-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWFsQphSqvqjVyKcEdR1D7LPcXHqjmy6ASuJrTr5isk9JU\",\n    \"/dns/coretime-polkadot-01.bootnode.stkd.io/tcp/30633/wss/p2p/12D3KooWFG9WQQTf3MX3YQypZjJtoJM5zCQgJcqYdxxTStsbhZGU\"\n  ],\n  \"properties\": {\n    \"ss58Format\": 0,\n    \"tokenDecimals\": 10,\n    \"tokenSymbol\": \"DOT\"\n  },\n  \"relay_chain\": \"polkadot\",\n  \"para_id\": 1005,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0x6e2af5f681a0f432c7aaf564dbebe4ddade85822605d510ccb78f1d90710947a\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-WPYCR7LE.mjs.map","// src/specs/polkadot_people.ts\nvar chainSpec = `{\n  \"name\": \"Polkadot People\",\n  \"id\": \"people-polkadot\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/polkadot-people-connect-0.polkadot.io/tcp/30334/p2p/12D3KooWP7BoJ7nAF9QnsreN8Eft1yHNUhvhxFiQyKFEUePi9mu3\",\n    \"/dns/polkadot-people-connect-1.polkadot.io/tcp/30334/p2p/12D3KooWSSfWY3fTGJvGkuNUNBSNVCdLLNJnwkZSNQt7GCRYXu4o\",\n    \"/dns/polkadot-people-connect-0.polkadot.io/tcp/443/wss/p2p/12D3KooWP7BoJ7nAF9QnsreN8Eft1yHNUhvhxFiQyKFEUePi9mu3\",\n    \"/dns/polkadot-people-connect-1.polkadot.io/tcp/443/wss/p2p/12D3KooWSSfWY3fTGJvGkuNUNBSNVCdLLNJnwkZSNQt7GCRYXu4o\",\n    \"/dns/people-polkadot-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWKMYu1L28TkDf1ooMW8D8PHcztLnjV3bausH9eiVTRUYN\",\n    \"/dns/people-polkadot-boot-ng.dwellir.com/tcp/30346/p2p/12D3KooWKMYu1L28TkDf1ooMW8D8PHcztLnjV3bausH9eiVTRUYN\"\n  ],\n  \"telemetryEndpoints\": null,\n  \"protocolId\": null,\n  \"properties\": {\n    \"ss58Format\": 0,\n    \"tokenDecimals\": 10,\n    \"tokenSymbol\": \"DOT\"\n  },\n  \"relay_chain\": \"polkadot\",\n  \"para_id\": 1004,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0x7a62a14ebf9b2e86292593414d58818324acc5701ea369734c0074f7c962bc0f\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-V5VATG3Q.mjs.map","// src/specs/ksmcc3.ts\nvar chainSpec = `{\n  \"badBlocks\": null,\n  \"bootNodes\": [\n    \"/dns/kusama-bootnode-0.polkadot.io/tcp/30333/p2p/12D3KooWSueCPH3puP2PcvqPJdNaDNF3jMZjtJtDiSy35pWrbt5h\",\n    \"/dns/kusama-bootnode-0.polkadot.io/tcp/30334/ws/p2p/12D3KooWSueCPH3puP2PcvqPJdNaDNF3jMZjtJtDiSy35pWrbt5h\",\n    \"/dns/kusama-bootnode-0.polkadot.io/tcp/443/wss/p2p/12D3KooWSueCPH3puP2PcvqPJdNaDNF3jMZjtJtDiSy35pWrbt5h\",\n    \"/dns/kusama-bootnode-1.polkadot.io/tcp/30333/p2p/12D3KooWQKqane1SqWJNWMQkbia9qiMWXkcHtAdfW5eVF8hbwEDw\",\n    \"/dns/kusama-bootnode-1.polkadot.io/tcp/30334/ws/p2p/12D3KooWQKqane1SqWJNWMQkbia9qiMWXkcHtAdfW5eVF8hbwEDw\",\n    \"/dns/kusama-bootnode-1.polkadot.io/tcp/443/wss/p2p/12D3KooWQKqane1SqWJNWMQkbia9qiMWXkcHtAdfW5eVF8hbwEDw\",\n    \"/dns/kusama-boot.dwellir.com/tcp/30333/ws/p2p/12D3KooWFj2ndawdYyk2spc42Y2arYwb2TUoHLHFAsKuHRzWXwoJ\",\n    \"/dns/kusama-boot.dwellir.com/tcp/443/wss/p2p/12D3KooWFj2ndawdYyk2spc42Y2arYwb2TUoHLHFAsKuHRzWXwoJ\",\n    \"/dns/kusama.boot.stake.plus/tcp/30334/wss/p2p/12D3KooWDQ28HsssSyDnso7ZRiMXGtCGPRi2en6djKDsMf9f7mqE\",\n    \"/dns/kusama.boot.stake.plus/tcp/31334/wss/p2p/12D3KooWANYqS81DkERRrBW1swoMgqUHK69pJN8XjQCnS6dnUAps\",\n    \"/dns/boot-node.helikon.io/tcp/7060/p2p/12D3KooWL4KPqfAsPE2aY1g5Zo1CxsDwcdJ7mmAghK7cg6M2fdbD\",\n    \"/dns/boot-node.helikon.io/tcp/7062/wss/p2p/12D3KooWL4KPqfAsPE2aY1g5Zo1CxsDwcdJ7mmAghK7cg6M2fdbD\",\n    \"/dns/kusama.bootnode.amforc.com/tcp/30001/p2p/12D3KooWKvYf6qKaAF8UUDw3KsTwjHLnvkED23yxHbH3npMe8w4G\",\n    \"/dns/kusama.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWKvYf6qKaAF8UUDw3KsTwjHLnvkED23yxHbH3npMe8w4G\",\n    \"/dns/kusama.bootnodes.polkadotters.com/tcp/30311/p2p/12D3KooWHB5rTeNkQdXNJ9ynvGz8Lpnmsctt7Tvp7mrYv6bcwbPG\",\n    \"/dns/kusama.bootnodes.polkadotters.com/tcp/30313/wss/p2p/12D3KooWHB5rTeNkQdXNJ9ynvGz8Lpnmsctt7Tvp7mrYv6bcwbPG\",\n    \"/dns/boot.gatotech.network/tcp/33200/p2p/12D3KooWRNZXf99BfzQDE1C8YhuBbuy7Sj18UEf7FNpD8egbURYD\",\n    \"/dns/boot.gatotech.network/tcp/35200/wss/p2p/12D3KooWRNZXf99BfzQDE1C8YhuBbuy7Sj18UEf7FNpD8egbURYD\",\n    \"/dns/boot.metaspan.io/tcp/23012/p2p/12D3KooWE1tq9ZL9AAxMiUBBqy1ENmh5pwfWabnoBPMo8gFPXhn6\",\n    \"/dns/boot.metaspan.io/tcp/23015/ws/p2p/12D3KooWE1tq9ZL9AAxMiUBBqy1ENmh5pwfWabnoBPMo8gFPXhn6\",\n    \"/dns/boot.metaspan.io/tcp/23016/wss/p2p/12D3KooWE1tq9ZL9AAxMiUBBqy1ENmh5pwfWabnoBPMo8gFPXhn6\",\n    \"/dns/kusama-bootnode.turboflakes.io/tcp/30305/p2p/12D3KooWR6cMhCYRhbJdqYZfzWZT6bcck3unpRLk8GBQGmHBgPwu\",\n    \"/dns/kusama-bootnode.turboflakes.io/tcp/30405/wss/p2p/12D3KooWR6cMhCYRhbJdqYZfzWZT6bcck3unpRLk8GBQGmHBgPwu\",\n    \"/dns/kusama-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWLswepVYVdCNduvWRTyNTaDMXEBcmvJdZ9Bhw3u2Jhad2\",\n    \"/dns/kusama-boot-ng.dwellir.com/tcp/30334/p2p/12D3KooWLswepVYVdCNduvWRTyNTaDMXEBcmvJdZ9Bhw3u2Jhad2\",\n    \"/dns/kusama-bootnode.radiumblock.com/tcp/30335/wss/p2p/12D3KooWGzKffWe7JSXeKMQeSQC5xfBafZtgBDCuBVxmwe2TJRuc\",\n    \"/dns/kusama-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWGzKffWe7JSXeKMQeSQC5xfBafZtgBDCuBVxmwe2TJRuc\",\n    \"/dns/ksm-bootnode.stakeworld.io/tcp/30300/p2p/12D3KooWFRin7WWVS6RgUsSpkfUHSv4tfGKnr2zJPmf1pbMv118H\",\n    \"/dns/ksm-bootnode.stakeworld.io/tcp/30301/ws/p2p/12D3KooWFRin7WWVS6RgUsSpkfUHSv4tfGKnr2zJPmf1pbMv118H\",\n    \"/dns/ksm-bootnode.stakeworld.io/tcp/30302/wss/p2p/12D3KooWFRin7WWVS6RgUsSpkfUHSv4tfGKnr2zJPmf1pbMv118H\",\n    \"/dns/ksm14.rotko.net/tcp/35224/wss/p2p/12D3KooWAa5THTw8HPfnhEei23HdL8P9McBXdozG2oTtMMksjZkK\",\n    \"/dns/ksm14.rotko.net/tcp/33224/p2p/12D3KooWAa5THTw8HPfnhEei23HdL8P9McBXdozG2oTtMMksjZkK\",\n    \"/dns/ibp-boot-kusama.luckyfriday.io/tcp/30333/p2p/12D3KooW9vu1GWHBuxyhm7rZgD3fhGZpNajPXFexadvhujWMgwfT\",\n    \"/dns/boot-kusama.luckyfriday.io/tcp/443/wss/p2p/12D3KooWS1Lu6DmK8YHSvkErpxpcXmk14vG6y4KVEFEkd9g62PP8\",\n    \"/dns/ibp-boot-kusama.luckyfriday.io/tcp/30334/wss/p2p/12D3KooW9vu1GWHBuxyhm7rZgD3fhGZpNajPXFexadvhujWMgwfT\",\n    \"/dns4/kusama-0.boot.onfinality.io/tcp/27682/ws/p2p/12D3KooWFrwFo7ry3dEuFwhehGSSN96a5Xdzxot7SWfXeSbhELAe\",\n    \"/dns/kusama.bootnode.stkd.io/tcp/30633/wss/p2p/12D3KooWJHhnF64TXSmyxNkhPkXAHtYNRy86LuvGQu1LTi5vrJCL\"\n  ],\n  \"chainType\": \"Live\",\n  \"codeSubstitutes\": {},\n  \"consensusEngine\": null,\n  \"forkBlocks\": null,\n  \"genesis\": {\n    \"stateRootHash\": \"0xb0006203c3a6e6bd2c6a17b1d4ae8ca49a31da0f4579da950b127774b44aef6b\"\n  },\n  \"id\": \"ksmcc3\",\n  \"lightSyncState\": {\n    \"babeEpochChanges\": \"\",\n    \"babeFinalizedBlockWeight\": 6890961,\n    \"finalizedBlockHeader\": \"0x5b9a65fe80606075fd7d54d2e4f544bacabec14f7ed215baf70e76e8c2fea9d42e8c9206b1a9e57c72cc836a2f4ff56a2be7fb2d54717261239ef5df661bc732f70366299ceed6d5eda430efd726e841258bb28f70fa287ee628319b34bcb12325a13a580c0642414245b501035d020000914c4f1100000000cc54550dd9038d7a8e0062bbc6092fb6f9c03d62c68ca1f823bf8e8dd54da603d450b3dd1314844e504dfc6acfed9dc43cdb01e9b10923088b9a2c26c23c8c0bcc54b88c099310b038b93a0e1d41b5a86bdb87f665ca4731162085b02c6fec0604424545468403e6fd961fa961b2d820b8e151f0bd550e7a8a36eabff527b17f96d997dba6473b05424142450101e4247225840b58d3c01e12394f3b40fcbe1df997d5012a4842e2b51b01b84c278df1bb62c86a2774f6509315972e9a2a7b78820827d103ae89b9e81541883a80\",\n    \"grandpaAuthoritySet\": \"\"\n  },\n  \"name\": \"Kusama\",\n  \"properties\": {\n    \"ss58Format\": 2,\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"KSM\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-5FIWG7XZ.mjs.map","// src/specs/ksmcc3_asset_hub.ts\nvar chainSpec = `{\n  \"name\": \"Kusama Asset Hub\",\n  \"id\": \"asset-hub-kusama\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/kusama-asset-hub-connect-0.polkadot.io/tcp/30334/p2p/12D3KooWMzvdGcUXxacLdMQzRVrsP1mJrZHcrz8LtGbhLzve84Qx\",\n    \"/dns/kusama-asset-hub-connect-0.polkadot.io/tcp/443/wss/p2p/12D3KooWMzvdGcUXxacLdMQzRVrsP1mJrZHcrz8LtGbhLzve84Qx\",\n    \"/dns/kusama-asset-hub-connect-1.polkadot.io/tcp/30334/p2p/12D3KooWQmGf5z3DU1kKcZoLzMNgdbP31ybjuwxS1VGLKMUjq5ez\",\n    \"/dns/kusama-asset-hub-connect-1.polkadot.io/tcp/443/wss/p2p/12D3KooWQmGf5z3DU1kKcZoLzMNgdbP31ybjuwxS1VGLKMUjq5ez\",\n    \"/dns/asset-hub-kusama.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWGfJsBTxWttMwFkyBi6ZvEzAU3mvcVAzE7yFXMZuasicr\",\n    \"/dns/asset-hub-kusama.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWK7hHQbFEhhgZURY7V4LzY6BkqLsnCCpEJ69eUF7ucPcE\",\n    \"/dns/boot.metaspan.io/tcp/26052/p2p/12D3KooW9z9hKqe3mqYAp5UJMhZiCqhkTHyiR43fegnGmTJ3JAba\",\n    \"/dns/boot.metaspan.io/tcp/26056/wss/p2p/12D3KooW9z9hKqe3mqYAp5UJMhZiCqhkTHyiR43fegnGmTJ3JAba\",\n    \"/dns/boot.gatotech.network/tcp/33210/p2p/12D3KooWRMUYeWMPkadDG8baX9j1e95fspfp8MhPGym5BQza7Fm5\",\n    \"/dns/boot.gatotech.network/tcp/35210/wss/p2p/12D3KooWRMUYeWMPkadDG8baX9j1e95fspfp8MhPGym5BQza7Fm5\",\n    \"/dns/statemine-bootnode.turboflakes.io/tcp/30320/p2p/12D3KooWN2Qqvp5wWgjbBMpbqhKgvSibSHfomP5VWVD9VCn3VrV4\",\n    \"/dns/statemine-bootnode.turboflakes.io/tcp/30420/wss/p2p/12D3KooWN2Qqvp5wWgjbBMpbqhKgvSibSHfomP5VWVD9VCn3VrV4\",\n    \"/dns/boot-node.helikon.io/tcp/10210/p2p/12D3KooWFXRQce3aMgZMn5SxvHtYH4PsR63TZLf8LrnBsEVTyzdr\",\n    \"/dns/boot-node.helikon.io/tcp/10212/wss/p2p/12D3KooWFXRQce3aMgZMn5SxvHtYH4PsR63TZLf8LrnBsEVTyzdr\",\n    \"/dns/asset-hub-kusama.bootnode.amforc.com/tcp/30007/p2p/12D3KooWHy1CPndZYphwdVqMb295KPC6LRt17Ae3zNSr7evzeF5a\",\n    \"/dns/asset-hub-kusama.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWHy1CPndZYphwdVqMb295KPC6LRt17Ae3zNSr7evzeF5a\",\n    \"/dns/statemine-boot-ng.dwellir.com/tcp/30343/p2p/12D3KooWQNJKBaNfW6Nn7HZDi5pSSEFmHL2Qz7chr9RksQUDR1Wk\",\n    \"/dns/statemine-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWQNJKBaNfW6Nn7HZDi5pSSEFmHL2Qz7chr9RksQUDR1Wk\",\n    \"/dns/statemine-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWCKUrE5uaXQ288ko3Ex3zCyozyJLG47KEYTopinnXNtYL\",\n    \"/dns/statemine-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWCKUrE5uaXQ288ko3Ex3zCyozyJLG47KEYTopinnXNtYL\",\n    \"/dns/mine14.rotko.net/tcp/33524/p2p/12D3KooWJUFnjR2PNbsJhudwPVaWCoZy1acPGKjM2cSuGj345BBu\",\n    \"/dns/mine14.rotko.net/tcp/34524/ws/p2p/12D3KooWJUFnjR2PNbsJhudwPVaWCoZy1acPGKjM2cSuGj345BBu\",\n    \"/dns/mine14.rotko.net/tcp/35524/wss/p2p/12D3KooWJUFnjR2PNbsJhudwPVaWCoZy1acPGKjM2cSuGj345BBu\",\n    \"/dns/asset-hub-kusama.bootnodes.polkadotters.com/tcp/30511/p2p/12D3KooWDpk7wVH7RgjErEvbvAZ2kY5VeaAwRJP5ojmn1e8b8UbU\",\n    \"/dns/asset-hub-kusama.bootnodes.polkadotters.com/tcp/30513/wss/p2p/12D3KooWDpk7wVH7RgjErEvbvAZ2kY5VeaAwRJP5ojmn1e8b8UbU\",\n    \"/dns/boot-kusama-assethub.luckyfriday.io/tcp/443/wss/p2p/12D3KooWSwaeFs6FNgpgh54fdoxSDAA4nJNaPE3PAcse2GRrG7b3\"\n  ],\n  \"properties\": {\n    \"ss58Format\": 2,\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"KSM\"\n  },\n  \"relay_chain\": \"ksmcc3\",\n  \"para_id\": 1000,\n  \"consensusEngine\": null,\n  \"genesis\": {\n    \"stateRootHash\": \"0x299ac939ea4722d1fcf7f4873675040ebc83d144620c76206dbeb7468cf30cdf\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-DQYTBFVY.mjs.map","// src/specs/ksmcc3_bridge_hub.ts\nvar chainSpec = `{\n  \"name\": \"Kusama BridgeHub\",\n  \"id\": \"bridge-hub-kusama\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/kusama-bridge-hub-connect-ew1-0.polkadot.io/tcp/30334/p2p/12D3KooWPQQPivrqQ51kRTDc2R1mtqwKT4GGtk2rapkY4FrwHrEp\",\n    \"/dns/kusama-bridge-hub-connect-ew1-1.polkadot.io/tcp/30334/p2p/12D3KooWPcF9Yk4gYrMju9CyWCV69hAFXbYsnxCLogwLGu9QFTRn\",\n    \"/dns/kusama-bridge-hub-connect-ew1-0.polkadot.io/tcp/443/wss/p2p/12D3KooWPQQPivrqQ51kRTDc2R1mtqwKT4GGtk2rapkY4FrwHrEp\",\n    \"/dns/kusama-bridge-hub-connect-ew1-1.polkadot.io/tcp/443/wss/p2p/12D3KooWPcF9Yk4gYrMju9CyWCV69hAFXbYsnxCLogwLGu9QFTRn\",\n    \"/dns/bridge-hub-kusama.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWCujTih2WeQr51xSpopt5LoYVyXy3bgGgcN5ftPQViBmh\",\n    \"/dns/bridge-hub-kusama.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWDSxWZ8RcuPfKSpybYHWUdhQHG328Euyo2PwkNUTXcXuw\",\n    \"/dns/boot.metaspan.io/tcp/26032/p2p/12D3KooWKfuSaZrLNz43PDgM4inMALXRHTSh2WBuqQtZRq8zmT1Z\",\n    \"/dns/boot.metaspan.io/tcp/26036/wss/p2p/12D3KooWKfuSaZrLNz43PDgM4inMALXRHTSh2WBuqQtZRq8zmT1Z\",\n    \"/dns/boot.gatotech.network/tcp/33230/p2p/12D3KooWFQFmg8UqAYLDNc2onySB6o5LLvpbx3eXZVqz9YFxAmXs\",\n    \"/dns/boot.gatotech.network/tcp/35230/wss/p2p/12D3KooWFQFmg8UqAYLDNc2onySB6o5LLvpbx3eXZVqz9YFxAmXs\",\n    \"/dns/bridge-hub-kusama-bootnode.turboflakes.io/tcp/30615/p2p/12D3KooWE3dJXbwA5SQqbDNxHfj7BXJRcy2KiXWjJY4VUMKoa7S2\",\n    \"/dns/bridge-hub-kusama-bootnode.turboflakes.io/tcp/30715/wss/p2p/12D3KooWE3dJXbwA5SQqbDNxHfj7BXJRcy2KiXWjJY4VUMKoa7S2\",\n    \"/dns/boot-node.helikon.io/tcp/10250/p2p/12D3KooWDJLkhqQdXcVKWX7CqJHnpAY6PzrPc4ZG2CUWnARbmguy\",\n    \"/dns/boot-node.helikon.io/tcp/10252/wss/p2p/12D3KooWDJLkhqQdXcVKWX7CqJHnpAY6PzrPc4ZG2CUWnARbmguy\",\n    \"/dns/bridge-hub-kusama.bootnode.amforc.com/tcp/30010/p2p/12D3KooWNyTBwRvCz1Ey2SgC1f3MvymhiAyLEa3cL8kU5gFH3V7Z\",\n    \"/dns/bridge-hub-kusama.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWNyTBwRvCz1Ey2SgC1f3MvymhiAyLEa3cL8kU5gFH3V7Z\",\n    \"/dns/kusama-bridge-hub-boot-ng.dwellir.com/tcp/30337/p2p/12D3KooWBFskNCQDVjuUeBh6vrszWrUvYMBBhtZRLnoTZDdLYbW5\",\n    \"/dns/kusama-bridge-hub-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWBFskNCQDVjuUeBh6vrszWrUvYMBBhtZRLnoTZDdLYbW5\",\n    \"/dns/bridgehub-kusama-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWQMWofXj8v3RroDNnrhv1iURqm8vnaG98AdGnCn2YoDcW\",\n    \"/dns/bridgehub-kusama-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWQMWofXj8v3RroDNnrhv1iURqm8vnaG98AdGnCn2YoDcW\",\n    \"/dns/kbr13.rotko.net/tcp/33553/p2p/12D3KooWAmBp54mUEYtvsk2kxNEsDbAvdUMcaghxKXgUQxmPEQ66\",\n    \"/dns/kbr13.rotko.net/tcp/34553/ws/p2p/12D3KooWAmBp54mUEYtvsk2kxNEsDbAvdUMcaghxKXgUQxmPEQ66\",\n    \"/dns/kbr13.rotko.net/tcp/35553/wss/p2p/12D3KooWAmBp54mUEYtvsk2kxNEsDbAvdUMcaghxKXgUQxmPEQ66\",\n    \"/dns/bridge-hub-kusama.bootnodes.polkadotters.com/tcp/30520/p2p/12D3KooWH3pucezRRS5esoYyzZsUkKWcPSByQxEvmM819QL1HPLV\",\n    \"/dns/bridge-hub-kusama.bootnodes.polkadotters.com/tcp/30522/wss/p2p/12D3KooWH3pucezRRS5esoYyzZsUkKWcPSByQxEvmM819QL1HPLV\",\n    \"/dns/boot-kusama-bridgehub.luckyfriday.io/tcp/443/wss/p2p/12D3KooWQybw6AFmAvrFfwUQnNxUpS12RovapD6oorh2mAJr4xyd\"\n  ],\n  \"telemetryEndpoints\": null,\n  \"protocolId\": null,\n  \"properties\": {\n    \"ss58Format\": 2,\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"KSM\"\n  },\n  \"relay_chain\": \"ksmcc3\",\n  \"para_id\": 1002,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0x583af14f9c4b1a687c219bfccc9c6b8e5a6dd24e50e742c2a733f110c5aad03d\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-QE62BN6Z.mjs.map","// src/specs/ksmcc3_people.ts\nvar chainSpec = `{\n  \"name\": \"Kusama People\",\n  \"id\": \"people-kusama\",\n  \"chainType\": \"Live\",\n  \"bootNodes\": [\n    \"/dns/kusama-people-connect-0.polkadot.io/tcp/30334/p2p/12D3KooWQaqG5TNmDfRWrtH7tMsN7YeqwVkSfoZT4GkemSzezNi1\",\n    \"/dns/kusama-people-connect-1.polkadot.io/tcp/30334/p2p/12D3KooWKhYoQH9LdSyvY3SVZY9gFf6ZV1bFh6317TRehUP3r5fm\",\n    \"/dns/kusama-people-connect-0.polkadot.io/tcp/443/wss/p2p/12D3KooWQaqG5TNmDfRWrtH7tMsN7YeqwVkSfoZT4GkemSzezNi1\",\n    \"/dns/kusama-people-connect-1.polkadot.io/tcp/443/wss/p2p/12D3KooWKhYoQH9LdSyvY3SVZY9gFf6ZV1bFh6317TRehUP3r5fm\",\n    \"/dns/people-kusama.bootnode.amforc.com/tcp/29999/wss/p2p/12D3KooWPjzgKZe5jdG6TY4gwcFq8QxyyhqsYbQo6N29pwGePWLA\",\n    \"/dns/people-kusama.bootnode.amforc.com/tcp/30004/p2p/12D3KooWPjzgKZe5jdG6TY4gwcFq8QxyyhqsYbQo6N29pwGePWLA\",\n    \"/dns/boot.gatotech.network/tcp/33240/p2p/12D3KooWLi9TzaKX4zniJpiM521PnYG4EocpdqjPpJUhXq9QGkRX\",\n    \"/dns/boot.gatotech.network/tcp/35240/wss/p2p/12D3KooWLi9TzaKX4zniJpiM521PnYG4EocpdqjPpJUhXq9QGkRX\",\n    \"/dns/people-kusama-bootnode.radiumblock.com/tcp/30333/p2p/12D3KooWGP1C9iWTHnZyeaSjYZ7LdK8douXWc1n1dBv25XEASHaj\",\n    \"/dns/people-kusama-bootnode.radiumblock.com/tcp/30336/wss/p2p/12D3KooWGP1C9iWTHnZyeaSjYZ7LdK8douXWc1n1dBv25XEASHaj\",\n    \"/dns/kppl16.rotko.net/tcp/33756/p2p/12D3KooWSKQwgoydfbN6mNN2aNwdqfkR2ExAnTRs8mmdrPQTtDLo\",\n    \"/dns/kppl16.rotko.net/tcp/35756/wss/p2p/12D3KooWSKQwgoydfbN6mNN2aNwdqfkR2ExAnTRs8mmdrPQTtDLo\",\n    \"/dns/people-kusama-boot-ng.dwellir.com/tcp/30359/p2p/12D3KooWM6T8MMibxLZhhpq6F612CZ4FgnfDSJSkWDMiVUDe1aGb\",\n    \"/dns/people-kusama-boot-ng.dwellir.com/tcp/443/wss/p2p/12D3KooWM6T8MMibxLZhhpq6F612CZ4FgnfDSJSkWDMiVUDe1aGb\",\n    \"/dns/people-kusama-bootnode.turboflakes.io/tcp/30645/p2p/12D3KooWCR2Q8J2NFFfuofDak4zSgWkuBq7orP96HFaxLgAoDUBV\",\n    \"/dns/people-kusama-bootnode.turboflakes.io/tcp/30745/wss/p2p/12D3KooWCR2Q8J2NFFfuofDak4zSgWkuBq7orP96HFaxLgAoDUBV\",\n    \"/dns/boot-node.helikon.io/tcp/7510/p2p/12D3KooWM1X4setrMWjwnV8iDkAtYhqFHNkGozdWdq6sawWh5Yhv\",\n    \"/dns/boot-node.helikon.io/tcp/7512/wss/p2p/12D3KooWM1X4setrMWjwnV8iDkAtYhqFHNkGozdWdq6sawWh5Yhv\",\n    \"/dns/people-kusama.bootnodes.polkadotters.com/tcp/30377/p2p/12D3KooWHy7TAuK6EoVij2tfaeh3KkaEJxhTmumbEom3HfRnSEsp\",\n    \"/dns/people-kusama.bootnodes.polkadotters.com/tcp/30379/wss/p2p/12D3KooWHy7TAuK6EoVij2tfaeh3KkaEJxhTmumbEom3HfRnSEsp\",\n    \"/dns/boot.metaspan.io/tcp/25068/p2p/12D3KooWDoDLtLvQi8hhFVyubPZhaYuAwSAJrPFtyGWJ2NSfBiyP\",\n    \"/dns/boot.metaspan.io/tcp/25069/wss/p2p/12D3KooWDoDLtLvQi8hhFVyubPZhaYuAwSAJrPFtyGWJ2NSfBiyP\",\n    \"/dns/ibp-boot-kusama-people.luckyfriday.io/tcp/30342/p2p/12D3KooWM4bRafMH2StfBEQtyj5cMWfGLYbuikCZmvKv9m1MQVPn\",\n    \"/dns/ibp-boot-kusama-people.luckyfriday.io/tcp/443/wss/p2p/12D3KooWM4bRafMH2StfBEQtyj5cMWfGLYbuikCZmvKv9m1MQVPn\",\n    \"/dns4/people-kusama.boot.stake.plus/tcp/30332/wss/p2p/12D3KooWRuKr3ogzXwD8zE2CTWenGdy8vSfViAjYMwGiwvFCsz8n\",\n    \"/dns/people-kusama.boot.stake.plus/tcp/31332/wss/p2p/12D3KooWFkDKdFxBJFyj9zumuJ4Mmctec2GqdYHcKYq8MTVe8dxf\"\n  ],\n  \"telemetryEndpoints\": null,\n  \"protocolId\": null,\n  \"properties\": {\n    \"ss58Format\": 2,\n    \"tokenDecimals\": 12,\n    \"tokenSymbol\": \"KSM\"\n  },\n  \"relay_chain\": \"ksmcc3\",\n  \"para_id\": 1004,\n  \"codeSubstitutes\": {},\n  \"genesis\": {\n    \"stateRootHash\": \"0xd83cfbf48e85ab66eb53b647aff8cd75954af93b127467b31d07a21dd06cea38\"\n  }\n}\n`;\n\nexport {\n  chainSpec\n};\n//# sourceMappingURL=chunk-4Q5KAEDT.mjs.map","import * as wellKnownChains from \"polkadot-api/chains\"\nimport { ChainId, ChainIdRelay, TChain } from \"../../chains/types\"\n\ntype chainDefinition = {\n  network: ChainIdRelay\n  smoldot: string | null\n  info: TChain\n}\n\nexport const WellKnownChains: Record<ChainId, chainDefinition> = {\n  polkadot: {\n    network: \"polkadot\",\n    smoldot: wellKnownChains.polkadot,\n    info: {\n      id: \"polkadot\",\n      name: \"Polkadot\",\n      wsUrl: [\n        \"wss://rpc.ibp.network/polkadot\",\n        \"wss://polkadot-rpc.dwellir.com\",\n        \"wss://rpc.dotters.network/polkadot\",\n        \"wss://polkadot-rpc-tn.dwellir.com\",\n        \"wss://polkadot-rpc.publicnode.com\",\n        \"wss://polkadot-public-rpc.blockops.network/ws\",\n        \"wss://rpc-polkadot.luckyfriday.io\",\n        \"wss://rockx-dot.w3node.com/polka-public-dot/ws\",\n        \"wss://dot-rpc.stakeworld.io\",\n      ],\n      paraId: null,\n      stableTokenId: null,\n    },\n  },\n  pah: {\n    network: \"polkadot\",\n    smoldot: wellKnownChains.polkadot_asset_hub,\n    info: {\n      id: \"pah\",\n      name: \"Asset Hub\",\n      wsUrl: [\n        \"wss://sys.ibp.network/statemint\",\n        \"wss://sys.dotters.network/statemint\",\n        \"wss://sys.ibp.network/asset-hub-polkadot\",\n        \"wss://sys.dotters.network/asset-hub-polkadot\",\n        \"wss://asset-hub-polkadot-rpc.dwellir.com\",\n        \"wss://statemint-rpc-tn.dwellir.com\",\n        \"wss://rpc-asset-hub-polkadot.luckyfriday.io\",\n        \"wss://polkadot-asset-hub-rpc.polkadot.io\",\n        \"wss://dot-rpc.stakeworld.io/assethub\",\n        \"wss://statemint-rpc.dwellir.com\",\n      ],\n      paraId: 1000,\n      stableTokenId: null,\n    },\n  },\n  pbh: {\n    network: \"polkadot\",\n    smoldot: wellKnownChains.polkadot_bridge_hub,\n    info: {\n      id: \"pbh\",\n      name: \"Bridge Hub\",\n      wsUrl: [\n        \"wss://bridge-hub-polkadot-rpc.dwellir.com\",\n        \"wss://polkadot-bridge-hub-rpc-tn.dwellir.com\",\n        \"wss://sys.ibp.network/bridgehub-polkadot\",\n        \"wss://bridge-hub-polkadot.dotters.network\",\n        \"wss://rpc-bridge-hub-polkadot.luckyfriday.io\",\n        \"wss://bridgehub-polkadot.api.onfinality.io/public-ws\",\n        \"wss://polkadot-bridge-hub-rpc.polkadot.io\",\n        \"wss://bridgehub-polkadot.public.curie.radiumblock.co/ws\",\n        \"wss://dot-rpc.stakeworld.io/bridgehub\",\n      ],\n      paraId: 1002,\n      stableTokenId: null,\n    },\n  },\n  pcl: {\n    network: \"polkadot\",\n    smoldot: wellKnownChains.polkadot_collectives,\n    info: {\n      id: \"pcl\",\n      name: \"Collectives\",\n      wsUrl: [\n        \"wss://collectives-polkadot-rpc.dwellir.com\",\n        \"wss://polkadot-collectives-rpc-tn.dwellir.com\",\n        \"wss://sys.ibp.network/collectives-polkadot\",\n        \"wss://collectives-polkadot.dotters.network\",\n        \"wss://rpc-collectives-polkadot.luckyfriday.io\",\n        \"wss://collectives.api.onfinality.io/public-ws\",\n        \"wss://polkadot-collectives-rpc.polkadot.io\",\n        \"wss://collectives.public.curie.radiumblock.co/ws\",\n      ],\n      paraId: 1001,\n      stableTokenId: null,\n    },\n  },\n  pct: {\n    network: \"polkadot\",\n    smoldot: wellKnownChains.polkadot_coretime,\n    info: {\n      id: \"pct\",\n      name: \"Coretime\",\n      wsUrl: [\n        \"wss://sys.ibp.network/coretime-polkadot\",\n        \"wss://coretime-polkadot.dotters.network\",\n        \"wss://rpc-coretime-polkadot.luckyfriday.io\",\n        \"wss://polkadot-coretime-rpc.polkadot.io\",\n      ],\n      paraId: 1005,\n      stableTokenId: null,\n    },\n  },\n  ppl: {\n    network: \"polkadot\",\n    smoldot: wellKnownChains.polkadot_people,\n    info: {\n      id: \"ppl\",\n      name: \"People\",\n      wsUrl: [\n        \"wss://sys.ibp.network/people-polkadot\",\n        \"wss://people-polkadot.dotters.network\",\n        \"wss://rpc-people-polkadot.luckyfriday.io\",\n        \"wss://polkadot-people-rpc.polkadot.io\",\n        \"wss://people-polkadot.public.curie.radiumblock.co/ws\",\n      ],\n      paraId: 1004,\n      stableTokenId: null,\n    },\n  },\n  kusama: {\n    network: \"kusama\",\n    smoldot: wellKnownChains.ksmcc3,\n    info: {\n      id: \"kusama\",\n      name: \"Kusama\",\n      wsUrl: [\n        \"wss://kusama-rpc.polkadot.io\",\n        \"wss://rpc.ibp.network/kusama\",\n        \"wss://rpc.dotters.network/kusama\",\n        \"wss://1rpc.io/ksm\",\n        \"wss://kusama-rpc.dwellir.com\",\n        \"wss://kusama-rpc-tn.dwellir.com\",\n        \"wss://kusama-rpc.publicnode.com\",\n        \"wss://rpc-kusama.luckyfriday.io\",\n        \"wss://rockx-ksm.w3node.com/polka-public-ksm/ws\",\n        \"wss://ksm-rpc.stakeworld.io\",\n      ],\n      paraId: null,\n      stableTokenId: null,\n    },\n  },\n  kah: {\n    network: \"kusama\",\n    smoldot: wellKnownChains.ksmcc3_asset_hub,\n    info: {\n      id: \"kah\",\n      name: \"Asset Hub\",\n      wsUrl: [\n        \"wss://sys.ibp.network/statemine\",\n        \"wss://kusama-asset-hub-rpc.polkadot.io\",\n        \"wss://sys.dotters.network/statemine\",\n        \"wss://asset-hub-kusama-rpc.dwellir.com\",\n        \"wss://statemine-rpc-tn.dwellir.com\",\n        \"wss://rpc-asset-hub-kusama.luckyfriday.io\",\n        \"wss://ksm-rpc.stakeworld.io/assethub\",\n      ],\n      paraId: 1000,\n      stableTokenId: null,\n    },\n  },\n  kbh: {\n    network: \"kusama\",\n    smoldot: wellKnownChains.ksmcc3_bridge_hub,\n    info: {\n      id: \"kbh\",\n      name: \"Bridge Hub\",\n      wsUrl: [\n        \"wss://bridge-hub-kusama-rpc.dwellir.com\",\n        \"wss://kusama-bridge-hub-rpc-tn.dwellir.com\",\n        \"wss://sys.ibp.network/bridgehub-kusama\",\n        \"wss://bridge-hub-kusama.dotters.network\",\n        \"wss://rpc-bridge-hub-kusama.luckyfriday.io\",\n        \"wss://bridgehub-kusama.api.onfinality.io/public-ws\",\n        \"wss://kusama-bridge-hub-rpc.polkadot.io\",\n        \"wss://bridgehub-kusama.public.curie.radiumblock.co/ws\",\n        \"wss://ksm-rpc.stakeworld.io/bridgehub\",\n      ],\n      paraId: 1002,\n      stableTokenId: null,\n    },\n  },\n  kct: {\n    network: \"kusama\",\n    smoldot: null,\n    info: {\n      id: \"kct\",\n      name: \"Coretime\",\n      wsUrl: [\n        \"wss://coretime-kusama-rpc.dwellir.com\",\n        \"wss://sys.ibp.network/coretime-kusama\",\n        \"wss://coretime-kusama.dotters.network\",\n        \"wss://rpc-coretime-kusama.luckyfriday.io\",\n        \"wss://kusama-coretime-rpc.polkadot.io\",\n        \"wss://ksm-rpc.stakeworld.io/coretime\",\n      ],\n      paraId: 1005,\n      stableTokenId: null,\n    },\n  },\n  kpl: {\n    network: \"kusama\",\n    smoldot: wellKnownChains.ksmcc3_people,\n    info: {\n      id: \"kpl\",\n      name: \"People\",\n      wsUrl: [\n        \"wss://people-kusama-rpc.n.dwellir.com\",\n        \"wss://sys.ibp.network/people-kusama\",\n        \"wss://people-kusama.dotters.network\",\n        \"wss://rpc-people-kusama.luckyfriday.io\",\n        \"wss://kusama-people-rpc.polkadot.io\",\n        \"wss://ksm-rpc.stakeworld.io/people\",\n      ],\n      paraId: 1004,\n      stableTokenId: null,\n    },\n  },\n  westend: {\n    network: \"westend\",\n    smoldot: wellKnownChains.westend2,\n    info: {\n      id: \"westend\",\n      name: \"Westend\",\n      wsUrl: [\n        \"wss://rpc.ibp.network/westend\",\n        \"wss://rpc.dotters.network/westend\",\n        \"wss://westend-rpc.dwellir.com\",\n        \"wss://westend-rpc-tn.dwellir.com\",\n        \"wss://westend-rpc.polkadot.io\",\n      ],\n      paraId: null,\n      stableTokenId: null,\n    },\n  },\n  wah: {\n    network: \"westend\",\n    smoldot: wellKnownChains.westend2_asset_hub,\n    info: {\n      id: \"wah\",\n      name: \"Asset Hub\",\n      wsUrl: [\n        \"wss://sys.ibp.network/westmint\",\n        \"wss://sys.dotters.network/westmint\",\n        \"wss://asset-hub-westend-rpc.dwellir.com\",\n        \"wss://westmint-rpc-tn.dwellir.com\",\n        \"wss://westend-asset-hub-rpc.polkadot.io\",\n      ],\n      paraId: 1000,\n      stableTokenId: null,\n    },\n  },\n  wbh: {\n    network: \"westend\",\n    smoldot: wellKnownChains.westend2_bridge_hub,\n    info: {\n      id: \"wbh\",\n      name: \"Bridge Hub\",\n      wsUrl: [\n        \"wss://bridge-hub-westend-rpc.dwellir.com\",\n        \"wss://westend-bridge-hub-rpc-tn.dwellir.com\",\n        \"wss://sys.ibp.network/bridgehub-westend\",\n        \"wss://bridge-hub-westend.dotters.network\",\n        \"wss://bridgehub-westend.api.onfinality.io/public-ws\",\n        \"wss://westend-bridge-hub-rpc.polkadot.io\",\n      ],\n      paraId: 1002,\n      stableTokenId: null,\n    },\n  },\n  wcl: {\n    network: \"westend\",\n    smoldot: wellKnownChains.westend2_collectives,\n    info: {\n      id: \"wcl\",\n      name: \"Collectives\",\n      wsUrl: [\n        \"wss://collectives-westend-rpc.dwellir.com\",\n        \"wss://westend-collectives-rpc-tn.dwellir.com\",\n        \"wss://sys.ibp.network/collectives-westend\",\n        \"wss://collectives-westend.dotters.network\",\n        \"wss://westend-collectives-rpc.polkadot.io\",\n      ],\n      paraId: 1001,\n      stableTokenId: null,\n    },\n  },\n  wpl: {\n    network: \"westend\",\n    smoldot: wellKnownChains.westend2_people,\n    info: {\n      id: \"wpl\",\n      name: \"People\",\n      wsUrl: [\n        \"wss://people-westend-rpc.n.dwellir.com\",\n        \"wss://sys.ibp.network/people-westend\",\n        \"wss://people-westend.dotters.network\",\n        \"wss://westend-people-rpc.polkadot.io\",\n      ],\n      paraId: 1004,\n      stableTokenId: null,\n    },\n  },\n  wct: {\n    network: \"westend\",\n    smoldot: null,\n    info: {\n      id: \"wct\",\n      name: \"Coretime\",\n      wsUrl: [\n        \"wss://coretime-westend-rpc.n.dwellir.com\",\n        \"wss://sys.ibp.network/coretime-westend\",\n        \"wss://coretime-westend.dotters.network\",\n        \"wss://westend-coretime-rpc.polkadot.io\",\n      ],\n      paraId: 1005,\n      stableTokenId: null,\n    },\n  },\n}\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/internal/toInternalBytes.ts\nvar HEX_MAP = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15,\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15\n};\nfunction fromHex(hexString) {\n  const isOdd = hexString.length % 2;\n  const base = (hexString[1] === \"x\" ? 2 : 0) + isOdd;\n  const nBytes = (hexString.length - base) / 2 + isOdd;\n  const bytes = new Uint8Array(nBytes);\n  if (isOdd)\n    bytes[0] = 0 | HEX_MAP[hexString[2]];\n  for (let i = 0; i < nBytes; ) {\n    const idx = base + i * 2;\n    const a = HEX_MAP[hexString[idx]];\n    const b = HEX_MAP[hexString[idx + 1]];\n    bytes[isOdd + i++] = a << 4 | b;\n  }\n  return bytes;\n}\nvar InternalUint8Array = class extends Uint8Array {\n  constructor(buffer) {\n    super(buffer);\n    __publicField(this, \"i\", 0);\n    __publicField(this, \"v\");\n    this.v = new DataView(buffer);\n  }\n};\nvar toInternalBytes = (fn) => (buffer) => fn(buffer instanceof InternalUint8Array ? buffer : new InternalUint8Array(buffer instanceof Uint8Array ? buffer.buffer : typeof buffer === \"string\" ? fromHex(buffer).buffer : buffer));\n\n// src/internal/mergeUint8.ts\nvar mergeUint8 = (inputs) => {\n  const len = inputs.length;\n  let totalLen = 0;\n  for (let i = 0; i < len; i++)\n    totalLen += inputs[i].length;\n  const result = new Uint8Array(totalLen);\n  for (let idx = 0, at = 0; idx < len; idx++) {\n    const current = inputs[idx];\n    result.set(current, at);\n    at += current.byteLength;\n  }\n  return result;\n};\n\n// src/internal/mapObject.ts\nfunction mapObject(input, mapper) {\n  const keys = Object.keys(input);\n  const len = keys.length;\n  const result = {};\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    result[key] = mapper(input[key], key);\n  }\n  return result;\n}\n\n// src/utils.ts\nvar createDecoder = toInternalBytes;\nvar createCodec = (encoder, decoder) => {\n  const result = [encoder, decoder];\n  result.enc = encoder;\n  result.dec = decoder;\n  return result;\n};\nvar enhanceEncoder = (encoder, mapper) => (value) => encoder(mapper(value));\nvar enhanceDecoder = (decoder, mapper) => (value) => mapper(decoder(value));\nvar enhanceCodec = ([encoder, decoder], toFrom, fromTo) => createCodec(enhanceEncoder(encoder, toFrom), enhanceDecoder(decoder, fromTo));\n\n// src/codecs/fixed-width-ints.ts\nfunction decodeInt(nBytes, getter) {\n  return toInternalBytes((bytes) => {\n    const result = bytes.v[getter](bytes.i, true);\n    bytes.i += nBytes;\n    return result;\n  });\n}\nfunction encodeInt(nBytes, setter) {\n  return (input) => {\n    const result = new Uint8Array(nBytes);\n    const dv = new DataView(result.buffer);\n    dv[setter](0, input, true);\n    return result;\n  };\n}\nfunction intCodec(nBytes, getter, setter) {\n  return createCodec(encodeInt(nBytes, setter), decodeInt(nBytes, getter));\n}\nvar u8 = intCodec(1, \"getUint8\", \"setUint8\");\nvar u16 = intCodec(2, \"getUint16\", \"setUint16\");\nvar u32 = intCodec(4, \"getUint32\", \"setUint32\");\nvar u64 = intCodec(8, \"getBigUint64\", \"setBigUint64\");\nvar i8 = intCodec(1, \"getInt8\", \"setInt8\");\nvar i16 = intCodec(2, \"getInt16\", \"setInt16\");\nvar i32 = intCodec(4, \"getInt32\", \"setInt32\");\nvar i64 = intCodec(8, \"getBigInt64\", \"setBigInt64\");\nvar x128Enc = (value) => {\n  const result = new Uint8Array(16);\n  const dv = new DataView(result.buffer);\n  dv.setBigInt64(0, value, true);\n  dv.setBigInt64(8, value >> 64n, true);\n  return result;\n};\nvar create128Dec = (method) => toInternalBytes((input) => {\n  const { v, i } = input;\n  const right = v.getBigUint64(i, true);\n  const left = v[method](i + 8, true);\n  input.i += 16;\n  return left << 64n | right;\n});\nvar u128 = createCodec(x128Enc, create128Dec(\"getBigUint64\"));\nvar i128 = createCodec(x128Enc, create128Dec(\"getBigInt64\"));\nvar x256Enc = (value) => {\n  const result = new Uint8Array(32);\n  const dv = new DataView(result.buffer);\n  dv.setBigInt64(0, value, true);\n  dv.setBigInt64(8, value >> 64n, true);\n  dv.setBigInt64(16, value >> 128n, true);\n  dv.setBigInt64(24, value >> 192n, true);\n  return result;\n};\nvar create256Dec = (method) => toInternalBytes((input) => {\n  let result = input.v.getBigUint64(input.i, true);\n  input.i += 8;\n  result |= input.v.getBigUint64(input.i, true) << 64n;\n  input.i += 8;\n  result |= input.v.getBigUint64(input.i, true) << 128n;\n  input.i += 8;\n  result |= input.v[method](input.i, true) << 192n;\n  input.i += 8;\n  return result;\n});\nvar u256 = createCodec(x256Enc, create256Dec(\"getBigUint64\"));\nvar i256 = createCodec(x256Enc, create256Dec(\"getBigInt64\"));\n\n// src/codecs/bool.ts\nvar bool = enhanceCodec(u8, (value) => value ? 1 : 0, Boolean);\n\n// src/codecs/compact.ts\nvar decoders = [u8[1], u16[1], u32[1]];\nvar compactDec = toInternalBytes((bytes) => {\n  const init = bytes[bytes.i];\n  const kind = init & 3;\n  if (kind < 3)\n    return decoders[kind](bytes) >>> 2;\n  const nBytes = (init >>> 2) + 4;\n  bytes.i++;\n  let result = 0n;\n  const nU64 = nBytes / 8 | 0;\n  let shift = 0n;\n  for (let i = 0; i < nU64; i++) {\n    result = u64[1](bytes) << shift | result;\n    shift += 64n;\n  }\n  let nReminders = nBytes % 8;\n  if (nReminders > 3) {\n    result = BigInt(u32[1](bytes)) << shift | result;\n    shift += 32n;\n    nReminders -= 4;\n  }\n  if (nReminders > 1) {\n    result = BigInt(u16[1](bytes)) << shift | result;\n    shift += 16n;\n    nReminders -= 2;\n  }\n  if (nReminders)\n    result = BigInt(u8[1](bytes)) << shift | result;\n  return result;\n});\nvar MIN_U64 = 1n << 56n;\nvar MIN_U32 = 1 << 24;\nvar MIN_U16 = 256;\nvar U32_MASK = 4294967295n;\nvar SINGLE_BYTE_MODE_LIMIT = 1 << 6;\nvar TWO_BYTE_MODE_LIMIT = 1 << 14;\nvar FOUR_BYTE_MODE_LIMIT = 1 << 30;\nvar compactEnc = (input) => {\n  if (input < 0)\n    throw new Error(`Wrong compact input (${input})`);\n  const nInput = Number(input) << 2;\n  if (input < SINGLE_BYTE_MODE_LIMIT)\n    return u8[0](nInput);\n  if (input < TWO_BYTE_MODE_LIMIT)\n    return u16[0](nInput | 1);\n  if (input < FOUR_BYTE_MODE_LIMIT)\n    return u32[0](nInput | 2);\n  let buffers = [new Uint8Array(1)];\n  let bigValue = BigInt(input);\n  while (bigValue >= MIN_U64) {\n    buffers.push(u64[0](bigValue));\n    bigValue >>= 64n;\n  }\n  if (bigValue >= MIN_U32) {\n    buffers.push(u32[0](Number(bigValue & U32_MASK)));\n    bigValue >>= 32n;\n  }\n  let smValue = Number(bigValue);\n  if (smValue >= MIN_U16) {\n    buffers.push(u16[0](smValue));\n    smValue >>= 16;\n  }\n  smValue && buffers.push(u8[0](smValue));\n  const result = mergeUint8(buffers);\n  result[0] = result.length - 5 << 2 | 3;\n  return result;\n};\nvar compact = createCodec(compactEnc, compactDec);\n\n// src/codecs/str.ts\nvar textEncoder = new TextEncoder();\nvar strEnc = (str2) => {\n  const val = textEncoder.encode(str2);\n  return mergeUint8([compact.enc(val.length), val]);\n};\nvar textDecoder = new TextDecoder();\nvar strDec = toInternalBytes((bytes) => {\n  let nElements = compact.dec(bytes);\n  const dv = new DataView(bytes.buffer, bytes.i, nElements);\n  bytes.i += nElements;\n  return textDecoder.decode(dv);\n});\nvar str = createCodec(strEnc, strDec);\n\n// src/codecs/void.ts\nvar noop = () => {\n};\nvar emptyArr = new Uint8Array(0);\nvar _void = createCodec(() => emptyArr, noop);\n\n// src/codecs/Bytes.ts\nvar BytesEnc = (nBytes) => nBytes === void 0 ? (bytes) => mergeUint8([compact.enc(bytes.length), bytes]) : (bytes) => bytes.length === nBytes ? bytes : bytes.slice(0, nBytes);\nvar BytesDec = (nBytes) => toInternalBytes((bytes) => {\n  const len = nBytes === void 0 ? compact.dec(bytes) : nBytes !== Infinity ? nBytes : bytes.byteLength - bytes.i;\n  const result = new Uint8Array(bytes.buffer.slice(bytes.i, bytes.i + len));\n  bytes.i += len;\n  return result;\n});\nvar Bytes = (nBytes) => createCodec(BytesEnc(nBytes), BytesDec(nBytes));\nBytes.enc = BytesEnc;\nBytes.dec = BytesDec;\n\n// src/codecs/Enum.ts\nvar enumEnc = (inner, x) => {\n  const keys = Object.keys(inner);\n  const mappedKeys = new Map(x?.map((actualIdx, idx) => [keys[idx], actualIdx]) ?? keys.map((key, idx) => [key, idx]));\n  const getKey = (key) => mappedKeys.get(key);\n  return ({ tag, value }) => mergeUint8([u8.enc(getKey(tag)), inner[tag](value)]);\n};\nvar enumDec = (inner, x) => {\n  const keys = Object.keys(inner);\n  const mappedKeys = new Map(x?.map((actualIdx, idx) => [actualIdx, keys[idx]]) ?? keys.map((key, idx) => [idx, key]));\n  return toInternalBytes((bytes) => {\n    const idx = u8.dec(bytes);\n    const tag = mappedKeys.get(idx);\n    const innerDecoder = inner[tag];\n    return {\n      tag,\n      value: innerDecoder(bytes)\n    };\n  });\n};\nvar Enum = (inner, ...args) => createCodec(enumEnc(mapObject(inner, ([encoder]) => encoder), ...args), enumDec(mapObject(inner, ([, decoder]) => decoder), ...args));\nEnum.enc = enumEnc;\nEnum.dec = enumDec;\n\n// src/codecs/Option.ts\nvar OptionDec = (inner) => toInternalBytes((bytes) => u8[1](bytes) > 0 ? inner(bytes) : void 0);\nvar OptionEnc = (inner) => (value) => {\n  const result = new Uint8Array(1);\n  if (value === void 0)\n    return result;\n  result[0] = 1;\n  return mergeUint8([result, inner(value)]);\n};\nvar Option = (inner) => createCodec(OptionEnc(inner[0]), OptionDec(inner[1]));\nOption.enc = OptionEnc;\nOption.dec = OptionDec;\n\n// src/codecs/Result.ts\nvar ResultDec = (okDecoder, koDecoder) => toInternalBytes((bytes) => {\n  const success = u8[1](bytes) === 0;\n  const decoder = success ? okDecoder : koDecoder;\n  const value = decoder(bytes);\n  return { success, value };\n});\nvar ResultEnc = (okEncoder, koEncoder) => ({ success, value }) => mergeUint8([\n  u8[0](success ? 0 : 1),\n  (success ? okEncoder : koEncoder)(value)\n]);\nvar Result = (okCodec, koCodec) => createCodec(ResultEnc(okCodec[0], koCodec[0]), ResultDec(okCodec[1], koCodec[1]));\nResult.dec = ResultDec;\nResult.enc = ResultEnc;\n\n// src/codecs/Tuple.ts\nvar TupleDec = (...decoders2) => toInternalBytes((bytes) => decoders2.map((decoder) => decoder(bytes)));\nvar TupleEnc = (...encoders) => (values) => mergeUint8(encoders.map((enc, idx) => enc(values[idx])));\nvar Tuple = (...codecs) => createCodec(TupleEnc(...codecs.map(([encoder]) => encoder)), TupleDec(...codecs.map(([, decoder]) => decoder)));\nTuple.enc = TupleEnc;\nTuple.dec = TupleDec;\n\n// src/codecs/Struct.ts\nvar StructEnc = (encoders) => {\n  const keys = Object.keys(encoders);\n  return enhanceEncoder(Tuple.enc(...Object.values(encoders)), (input) => keys.map((k) => input[k]));\n};\nvar StructDec = (decoders2) => {\n  const keys = Object.keys(decoders2);\n  return enhanceDecoder(Tuple.dec(...Object.values(decoders2)), (tuple) => Object.fromEntries(tuple.map((value, idx) => [keys[idx], value])));\n};\nvar Struct = (codecs) => createCodec(StructEnc(mapObject(codecs, (x) => x[0])), StructDec(mapObject(codecs, (x) => x[1])));\nStruct.enc = StructEnc;\nStruct.dec = StructDec;\n\n// src/codecs/Vector.ts\nvar VectorEnc = (inner, size) => size >= 0 ? (value) => mergeUint8(value.map(inner)) : (value) => mergeUint8([compact.enc(value.length), mergeUint8(value.map(inner))]);\nvar VectorDec = (getter, size) => toInternalBytes((bytes) => {\n  const nElements = size >= 0 ? size : compact.dec(bytes);\n  const result = new Array(nElements);\n  for (let i = 0; i < nElements; i++) {\n    result[i] = getter(bytes);\n  }\n  return result;\n});\nvar Vector = (inner, size) => createCodec(VectorEnc(inner[0], size), VectorDec(inner[1], size));\nVector.enc = VectorEnc;\nVector.dec = VectorDec;\nexport {\n  Bytes,\n  Enum,\n  Option,\n  Result,\n  Struct,\n  Tuple,\n  Vector,\n  _void,\n  bool,\n  compact,\n  createCodec,\n  createDecoder,\n  enhanceCodec,\n  enhanceDecoder,\n  enhanceEncoder,\n  i128,\n  i16,\n  i256,\n  i32,\n  i64,\n  i8,\n  str,\n  u128,\n  u16,\n  u256,\n  u32,\n  u64,\n  u8\n};\n//# sourceMappingURL=scale-ts.js.map\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nfunction isArrayOf(isString, arr) {\n    if (!Array.isArray(arr))\n        return false;\n    if (arr.length === 0)\n        return true;\n    if (isString) {\n        return arr.every((item) => typeof item === 'string');\n    }\n    else {\n        return arr.every((item) => Number.isSafeInteger(item));\n    }\n}\n// no abytes: seems to have 10% slowdown. Why?!\nfunction afn(input) {\n    if (typeof input !== 'function')\n        throw new Error('function expected');\n    return true;\n}\nfunction astr(label, input) {\n    if (typeof input !== 'string')\n        throw new Error(`${label}: string expected`);\n    return true;\n}\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`invalid integer: ${n}`);\n}\nexport const assertNumber = anumber;\nfunction aArr(input) {\n    if (!Array.isArray(input))\n        throw new Error('array expected');\n}\nfunction astrArr(label, input) {\n    if (!isArrayOf(true, input))\n        throw new Error(`${label}: array of strings expected`);\n}\nfunction anumArr(label, input) {\n    if (!isArrayOf(false, input))\n        throw new Error(`${label}: array of numbers expected`);\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction chain(...args) {\n    const id = (a) => a;\n    // Wrap call in closure so JIT can inline calls\n    const wrap = (a, b) => (c) => a(b(c));\n    // Construct chain of args[-1].encode(args[-2].encode([...]))\n    const encode = args.map((x) => x.encode).reduceRight(wrap, id);\n    // Construct chain of args[0].decode(args[1].decode(...))\n    const decode = args.map((x) => x.decode).reduce(wrap, id);\n    return { encode, decode };\n}\n/**\n * Encodes integer radix representation to array of strings using alphabet and back.\n * Could also be array of strings.\n * @__NO_SIDE_EFFECTS__\n */\nfunction alphabet(letters) {\n    // mapping 1 to \"b\"\n    const lettersA = typeof letters === 'string' ? letters.split('') : letters;\n    const len = lettersA.length;\n    astrArr('alphabet', lettersA);\n    // mapping \"b\" to 1\n    const indexes = new Map(lettersA.map((l, i) => [l, i]));\n    return {\n        encode: (digits) => {\n            aArr(digits);\n            return digits.map((i) => {\n                if (!Number.isSafeInteger(i) || i < 0 || i >= len)\n                    throw new Error(`alphabet.encode: digit index outside alphabet \"${i}\". Allowed: ${letters}`);\n                return lettersA[i];\n            });\n        },\n        decode: (input) => {\n            aArr(input);\n            return input.map((letter) => {\n                astr('alphabet.decode', letter);\n                const i = indexes.get(letter);\n                if (i === undefined)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${letters}`);\n                return i;\n            });\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction join(separator = '') {\n    astr('join', separator);\n    return {\n        encode: (from) => {\n            astrArr('join.decode', from);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            astr('join.decode', to);\n            return to.split(separator);\n        },\n    };\n}\n/**\n * Pad strings array so it has integer number of bits\n * @__NO_SIDE_EFFECTS__\n */\nfunction padding(bits, chr = '=') {\n    anumber(bits);\n    astr('padding', chr);\n    return {\n        encode(data) {\n            astrArr('padding.encode', data);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            astrArr('padding.decode', input);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('padding: invalid, string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                const last = end - 1;\n                const byte = last * bits;\n                if (byte % 8 === 0)\n                    throw new Error('padding: invalid, string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction normalize(fn) {\n    afn(fn);\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\n/**\n * Slow: O(n^2) time complexity\n */\nfunction convertRadix(data, from, to) {\n    // base 1 is impossible\n    if (from < 2)\n        throw new Error(`convertRadix: invalid from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: invalid to=${to}, base cannot be less than 2`);\n    aArr(data);\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data, (d) => {\n        anumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`invalid integer: ${d}`);\n        return d;\n    });\n    const dlen = digits.length;\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < dlen; i++) {\n            const digit = digits[i];\n            const fromCarry = from * carry;\n            const digitBase = fromCarry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                fromCarry / from !== carry ||\n                digitBase - digit !== fromCarry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            const div = digitBase / to;\n            carry = digitBase % to;\n            const rounded = Math.floor(div);\n            digits[i] = rounded;\n            if (!Number.isSafeInteger(rounded) || rounded * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!rounded)\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (b === 0 ? a : gcd(b, a % b));\nconst radix2carry = /* @__NO_SIDE_EFFECTS__ */ (from, to) => from + (to - gcd(from, to));\nconst powers = /* @__PURE__ */ (() => {\n    let res = [];\n    for (let i = 0; i < 40; i++)\n        res.push(2 ** i);\n    return res;\n})();\n/**\n * Implemented with numbers, because BigInt is 5x slower\n */\nfunction convertRadix2(data, from, to, padding) {\n    aArr(data);\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0; // bitwise position in current element\n    const max = powers[from];\n    const mask = powers[to] - 1;\n    const res = [];\n    for (const n of data) {\n        anumber(n);\n        if (n >= max)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        const pow = powers[pos];\n        if (pow === undefined)\n            throw new Error('invalid carry');\n        carry &= pow - 1; // clean carry, otherwise it will cause overflow\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry > 0)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix(num) {\n    anumber(num);\n    const _256 = 2 ** 8;\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), _256, num);\n        },\n        decode: (digits) => {\n            anumArr('radix.decode', digits);\n            return Uint8Array.from(convertRadix(digits, num, _256));\n        },\n    };\n}\n/**\n * If both bases are power of same number (like `2**8 <-> 2**64`),\n * there is a linear algorithm. For now we have implementation for power-of-two bases only.\n * @__NO_SIDE_EFFECTS__\n */\nfunction radix2(bits, revPadding = false) {\n    anumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!isBytes(bytes))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            anumArr('radix2.decode', digits);\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    afn(fn);\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    anumber(len);\n    afn(fn);\n    return {\n        encode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const sum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(sum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!isBytes(data))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const oldChecksum = data.slice(-len);\n            const newChecksum = fn(payload).slice(0, len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\n// prettier-ignore\nexport const utils = {\n    alphabet, chain, checksum, convertRadix, convertRadix2, radix, radix2, join, padding,\n};\n// RFC 4648 aka RFC 3548\n// ---------------------\n/**\n * base16 encoding.\n */\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32nopad = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32hexnopad = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\n/**\n * base64 with padding. For no padding, use `base64nopad`.\n * @example\n * const b = base64.decode('A951'); // Uint8Array.from([ 3, 222, 117 ])\n * base64.encode(b); // 'A951'\n */\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\n/**\n * base64 without padding.\n */\nexport const base64nopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nexport const base64urlnopad = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), join(''));\n// base58 code\n// -----------\nconst genBase58 = /* @__NO_SIDE_EFFECTS__ */ (abc) => chain(radix(58), alphabet(abc), join(''));\n/**\n * Base58: base64 without characters +, /, 0, O, I, l.\n * Quadratic (O(n^2)) - so, can't be used on large inputs.\n */\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\n// Data len (index) -> encoded block len\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\n/**\n * XMR version of base58.\n * Done in 8-byte blocks (which equals 11 chars in decoding). Last (non-full) block padded with '1' to size in XMR_BLOCK_LEN.\n * Block encoding significantly reduces quadratic complexity of base58.\n */\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const createBase58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\n/**\n * Use `createBase58check` instead.\n * @deprecated\n */\nexport const base58check = createBase58check;\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % powers[30]], 30, 5, false));\n}\n/**\n * @__NO_SIDE_EFFECTS__\n */\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        astr('bech32.encode prefix', prefix);\n        if (isBytes(words))\n            words = Array.from(words);\n        anumArr('bech32.encode', words);\n        const plen = prefix.length;\n        if (plen === 0)\n            throw new TypeError(`Invalid prefix length ${plen}`);\n        const actualLength = plen + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        const lowered = prefix.toLowerCase();\n        const sum = bechChecksum(lowered, words, ENCODING_CONST);\n        return `${lowered}1${BECH_ALPHABET.encode(words)}${sum}`;\n    }\n    function decode(str, limit = 90) {\n        astr('bech32.decode input', str);\n        const slen = str.length;\n        if (slen < 8 || (limit !== false && slen > limit))\n            throw new TypeError(`invalid string length: ${slen} (${str}). Expected (8..${limit})`);\n        // don't allow mixed case\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        const sepIndex = lowered.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = lowered.slice(0, sepIndex);\n        const data = lowered.slice(sepIndex + 1);\n        if (data.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(data).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!data.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    function encodeFromBytes(prefix, bytes) {\n        return encode(prefix, toWords(bytes));\n    }\n    return {\n        encode,\n        decode,\n        encodeFromBytes,\n        decodeToBytes,\n        decodeUnsafe,\n        fromWords,\n        fromWordsUnsafe,\n        toWords,\n    };\n}\n/**\n * Low-level bech32 operations. Operates on words.\n */\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\n/**\n * UTF-8-to-byte decoder. Uses built-in TextDecoder / TextEncoder.\n * @example\n * const b = utf8.decode(\"hey\"); // => new Uint8Array([ 104, 101, 121 ])\n * const str = utf8.encode(b); // \"hey\"\n */\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\n/**\n * hex string decoder.\n * @example\n * const b = hex.decode(\"0102ff\"); // => new Uint8Array([ 1, 2, 255 ])\n * const str = hex.encode(b); // \"0102ff\"\n */\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2 !== 0)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\n// prettier-ignore\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = 'Invalid encoding type. Available types: utf8, hex, base16, base32, base64, base64url, base58, base58xmr';\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!isBytes(bytes))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString; // as in python, but for bytes only\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n//# sourceMappingURL=index.js.map","/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal helpers for blake hash.\n * @module\n */\nimport { aexists, anumber, aoutput } from './_assert.js';\nimport { byteSwap32, byteSwapIfBE, Hash, isLE, toBytes, u32 } from './utils.js';\n/**\n * Internal blake variable.\n * For BLAKE2b, the two extra permutations for rounds 10 and 11 are SIGMA[10..11] = SIGMA[0..1].\n */\n// prettier-ignore\nexport const SIGMA = /* @__PURE__ */ new Uint8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n    12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n    13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n    6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n    10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n    // Blake1, unused in others\n    11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n    7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n    9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n    2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n]);\n/** Class, from which others are subclassed. */\nexport class BLAKE extends Hash {\n    constructor(blockLen, outputLen, opts = {}, keyLen, saltLen, persLen) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.length = 0;\n        this.pos = 0;\n        this.finished = false;\n        this.destroyed = false;\n        anumber(blockLen);\n        anumber(outputLen);\n        anumber(keyLen);\n        if (outputLen < 0 || outputLen > keyLen)\n            throw new Error('outputLen bigger than keyLen');\n        if (opts.key !== undefined && (opts.key.length < 1 || opts.key.length > keyLen))\n            throw new Error('key length must be undefined or 1..' + keyLen);\n        if (opts.salt !== undefined && opts.salt.length !== saltLen)\n            throw new Error('salt must be undefined or ' + saltLen);\n        if (opts.personalization !== undefined && opts.personalization.length !== persLen)\n            throw new Error('personalization must be undefined or ' + persLen);\n        this.buffer = new Uint8Array(blockLen);\n        this.buffer32 = u32(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        // Main difference with other hashes: there is flag for last block,\n        // so we cannot process current block before we know that there\n        // is the next one. This significantly complicates logic and reduces ability\n        // to do zero-copy processing\n        const { blockLen, buffer, buffer32 } = this;\n        data = toBytes(data);\n        const len = data.length;\n        const offset = data.byteOffset;\n        const buf = data.buffer;\n        for (let pos = 0; pos < len;) {\n            // If buffer is full and we still have input (don't process last block, same as blake2s)\n            if (this.pos === blockLen) {\n                if (!isLE)\n                    byteSwap32(buffer32);\n                this.compress(buffer32, 0, false);\n                if (!isLE)\n                    byteSwap32(buffer32);\n                this.pos = 0;\n            }\n            const take = Math.min(blockLen - this.pos, len - pos);\n            const dataOffset = offset + pos;\n            // full block && aligned to 4 bytes && not last in input\n            if (take === blockLen && !(dataOffset % 4) && pos + take < len) {\n                const data32 = new Uint32Array(buf, dataOffset, Math.floor((len - pos) / 4));\n                if (!isLE)\n                    byteSwap32(data32);\n                for (let pos32 = 0; pos + blockLen < len; pos32 += buffer32.length, pos += blockLen) {\n                    this.length += blockLen;\n                    this.compress(data32, pos32, false);\n                }\n                if (!isLE)\n                    byteSwap32(data32);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            this.length += take;\n            pos += take;\n        }\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        const { pos, buffer32 } = this;\n        this.finished = true;\n        // Padding\n        this.buffer.subarray(pos).fill(0);\n        if (!isLE)\n            byteSwap32(buffer32);\n        this.compress(buffer32, 0, true);\n        if (!isLE)\n            byteSwap32(buffer32);\n        const out32 = u32(out);\n        this.get().forEach((v, i) => (out32[i] = byteSwapIfBE(v)));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        const { buffer, length, finished, destroyed, outputLen, pos } = this;\n        to || (to = new this.constructor({ dkLen: outputLen }));\n        to.set(...this.get());\n        to.length = length;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.outputLen = outputLen;\n        to.buffer.set(buffer);\n        to.pos = pos;\n        return to;\n    }\n}\n//# sourceMappingURL=_blake.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * Blake2b hash function. Focuses on 64-bit platforms, but in JS speed different from Blake2s is negligible.\n * @module\n */\nimport { BLAKE, SIGMA } from './_blake.js';\nimport u64 from './_u64.js';\nimport { byteSwapIfBE, toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n// Same as SHA-512 but LE\n// prettier-ignore\nconst B2B_IV = /* @__PURE__ */ new Uint32Array([\n    0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a,\n    0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n]);\n// Temporary buffer\nconst BBUF = /* @__PURE__ */ new Uint32Array(32);\n// Mixing function G splitted in two halfs\nfunction G1b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 32)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotr32H(Dh, Dl), Dl: u64.rotr32L(Dh, Dl) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 24)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrSH(Bh, Bl, 24), Bl: u64.rotrSL(Bh, Bl, 24) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nfunction G2b(a, b, c, d, msg, x) {\n    // NOTE: V is LE here\n    const Xl = msg[x], Xh = msg[x + 1]; // prettier-ignore\n    let Al = BBUF[2 * a], Ah = BBUF[2 * a + 1]; // prettier-ignore\n    let Bl = BBUF[2 * b], Bh = BBUF[2 * b + 1]; // prettier-ignore\n    let Cl = BBUF[2 * c], Ch = BBUF[2 * c + 1]; // prettier-ignore\n    let Dl = BBUF[2 * d], Dh = BBUF[2 * d + 1]; // prettier-ignore\n    // v[a] = (v[a] + v[b] + x) | 0;\n    let ll = u64.add3L(Al, Bl, Xl);\n    Ah = u64.add3H(ll, Ah, Bh, Xh);\n    Al = ll | 0;\n    // v[d] = rotr(v[d] ^ v[a], 16)\n    ({ Dh, Dl } = { Dh: Dh ^ Ah, Dl: Dl ^ Al });\n    ({ Dh, Dl } = { Dh: u64.rotrSH(Dh, Dl, 16), Dl: u64.rotrSL(Dh, Dl, 16) });\n    // v[c] = (v[c] + v[d]) | 0;\n    ({ h: Ch, l: Cl } = u64.add(Ch, Cl, Dh, Dl));\n    // v[b] = rotr(v[b] ^ v[c], 63)\n    ({ Bh, Bl } = { Bh: Bh ^ Ch, Bl: Bl ^ Cl });\n    ({ Bh, Bl } = { Bh: u64.rotrBH(Bh, Bl, 63), Bl: u64.rotrBL(Bh, Bl, 63) });\n    (BBUF[2 * a] = Al), (BBUF[2 * a + 1] = Ah);\n    (BBUF[2 * b] = Bl), (BBUF[2 * b + 1] = Bh);\n    (BBUF[2 * c] = Cl), (BBUF[2 * c + 1] = Ch);\n    (BBUF[2 * d] = Dl), (BBUF[2 * d + 1] = Dh);\n}\nexport class BLAKE2b extends BLAKE {\n    constructor(opts = {}) {\n        super(128, opts.dkLen === undefined ? 64 : opts.dkLen, opts, 64, 16, 16);\n        // Same as SHA-512, but LE\n        this.v0l = B2B_IV[0] | 0;\n        this.v0h = B2B_IV[1] | 0;\n        this.v1l = B2B_IV[2] | 0;\n        this.v1h = B2B_IV[3] | 0;\n        this.v2l = B2B_IV[4] | 0;\n        this.v2h = B2B_IV[5] | 0;\n        this.v3l = B2B_IV[6] | 0;\n        this.v3h = B2B_IV[7] | 0;\n        this.v4l = B2B_IV[8] | 0;\n        this.v4h = B2B_IV[9] | 0;\n        this.v5l = B2B_IV[10] | 0;\n        this.v5h = B2B_IV[11] | 0;\n        this.v6l = B2B_IV[12] | 0;\n        this.v6h = B2B_IV[13] | 0;\n        this.v7l = B2B_IV[14] | 0;\n        this.v7h = B2B_IV[15] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0l ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4l ^= byteSwapIfBE(salt[0]);\n            this.v4h ^= byteSwapIfBE(salt[1]);\n            this.v5l ^= byteSwapIfBE(salt[2]);\n            this.v5h ^= byteSwapIfBE(salt[3]);\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6l ^= byteSwapIfBE(pers[0]);\n            this.v6h ^= byteSwapIfBE(pers[1]);\n            this.v7l ^= byteSwapIfBE(pers[2]);\n            this.v7h ^= byteSwapIfBE(pers[3]);\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    // prettier-ignore\n    get() {\n        let { v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h } = this;\n        return [v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h];\n    }\n    // prettier-ignore\n    set(v0l, v0h, v1l, v1h, v2l, v2h, v3l, v3h, v4l, v4h, v5l, v5h, v6l, v6h, v7l, v7h) {\n        this.v0l = v0l | 0;\n        this.v0h = v0h | 0;\n        this.v1l = v1l | 0;\n        this.v1h = v1h | 0;\n        this.v2l = v2l | 0;\n        this.v2h = v2h | 0;\n        this.v3l = v3l | 0;\n        this.v3h = v3h | 0;\n        this.v4l = v4l | 0;\n        this.v4h = v4h | 0;\n        this.v5l = v5l | 0;\n        this.v5h = v5h | 0;\n        this.v6l = v6l | 0;\n        this.v6h = v6h | 0;\n        this.v7l = v7l | 0;\n        this.v7h = v7h | 0;\n    }\n    compress(msg, offset, isLast) {\n        this.get().forEach((v, i) => (BBUF[i] = v)); // First half from state.\n        BBUF.set(B2B_IV, 16); // Second half from IV.\n        let { h, l } = u64.fromBig(BigInt(this.length));\n        BBUF[24] = B2B_IV[8] ^ l; // Low word of the offset.\n        BBUF[25] = B2B_IV[9] ^ h; // High word.\n        // Invert all bits for last block\n        if (isLast) {\n            BBUF[28] = ~BBUF[28];\n            BBUF[29] = ~BBUF[29];\n        }\n        let j = 0;\n        const s = SIGMA;\n        for (let i = 0; i < 12; i++) {\n            G1b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G2b(0, 4, 8, 12, msg, offset + 2 * s[j++]);\n            G1b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G2b(1, 5, 9, 13, msg, offset + 2 * s[j++]);\n            G1b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G2b(2, 6, 10, 14, msg, offset + 2 * s[j++]);\n            G1b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G2b(3, 7, 11, 15, msg, offset + 2 * s[j++]);\n            G1b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G2b(0, 5, 10, 15, msg, offset + 2 * s[j++]);\n            G1b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G2b(1, 6, 11, 12, msg, offset + 2 * s[j++]);\n            G1b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G2b(2, 7, 8, 13, msg, offset + 2 * s[j++]);\n            G1b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n            G2b(3, 4, 9, 14, msg, offset + 2 * s[j++]);\n        }\n        this.v0l ^= BBUF[0] ^ BBUF[16];\n        this.v0h ^= BBUF[1] ^ BBUF[17];\n        this.v1l ^= BBUF[2] ^ BBUF[18];\n        this.v1h ^= BBUF[3] ^ BBUF[19];\n        this.v2l ^= BBUF[4] ^ BBUF[20];\n        this.v2h ^= BBUF[5] ^ BBUF[21];\n        this.v3l ^= BBUF[6] ^ BBUF[22];\n        this.v3h ^= BBUF[7] ^ BBUF[23];\n        this.v4l ^= BBUF[8] ^ BBUF[24];\n        this.v4h ^= BBUF[9] ^ BBUF[25];\n        this.v5l ^= BBUF[10] ^ BBUF[26];\n        this.v5h ^= BBUF[11] ^ BBUF[27];\n        this.v6l ^= BBUF[12] ^ BBUF[28];\n        this.v6h ^= BBUF[13] ^ BBUF[29];\n        this.v7l ^= BBUF[14] ^ BBUF[30];\n        this.v7h ^= BBUF[15] ^ BBUF[31];\n        BBUF.fill(0);\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * Blake2b hash function. Focuses on 64-bit platforms, but in JS speed different from Blake2s is negligible.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport const blake2b = /* @__PURE__ */ wrapConstructorWithOpts((opts) => new BLAKE2b(opts));\n//# sourceMappingURL=blake2b.js.map","import { base58 } from '@scure/base';\nimport { blake2b } from '@noble/hashes/blake2b';\n\nconst SS58_PREFIX = new TextEncoder().encode(\"SS58PRE\");\nconst CHECKSUM_LENGTH = 2;\nconst getSs58AddressInfo = (address) => {\n  try {\n    const decoded = base58.decode(address);\n    const prefixBytes = decoded.subarray(0, decoded[0] & 64 ? 2 : 1);\n    const publicKey = decoded.subarray(\n      prefixBytes.length,\n      decoded.length - CHECKSUM_LENGTH\n    );\n    const checksum = decoded.subarray(prefixBytes.length + publicKey.length);\n    const expectedChecksum = blake2b(\n      Uint8Array.of(...SS58_PREFIX, ...prefixBytes, ...publicKey),\n      {\n        dkLen: 64\n      }\n    ).subarray(0, CHECKSUM_LENGTH);\n    const isChecksumValid = checksum[0] === expectedChecksum[0] && checksum[1] === expectedChecksum[1];\n    if (!isChecksumValid) return { isValid: false };\n    return {\n      isValid: true,\n      ss58Format: prefixBytesToNumber(prefixBytes),\n      publicKey: publicKey.slice()\n    };\n  } catch (_) {\n    return { isValid: false };\n  }\n};\nconst prefixBytesToNumber = (bytes) => {\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n  return dv.byteLength === 1 ? dv.getUint8(0) : dv.getUint16(0);\n};\nconst fromBufferToBase58 = (ss58Format) => {\n  const prefixBytes = ss58Format < 64 ? Uint8Array.of(ss58Format) : Uint8Array.of(\n    (ss58Format & 252) >> 2 | 64,\n    ss58Format >> 8 | (ss58Format & 3) << 6\n  );\n  return (publicKey) => {\n    const checksum = blake2b(\n      Uint8Array.of(...SS58_PREFIX, ...prefixBytes, ...publicKey),\n      {\n        dkLen: 64\n      }\n    ).subarray(0, CHECKSUM_LENGTH);\n    return base58.encode(\n      Uint8Array.of(...prefixBytes, ...publicKey, ...checksum)\n    );\n  };\n};\n\nexport { fromBufferToBase58, getSs58AddressInfo };\n//# sourceMappingURL=ss58-util.mjs.map\n","import { enhanceCodec, Bytes } from 'scale-ts';\nimport { fromBufferToBase58, getSs58AddressInfo } from '../../utils/ss58-util.mjs';\n\nfunction fromBase58ToBuffer(nBytes, _ss58Format) {\n  return (address) => {\n    const info = getSs58AddressInfo(address);\n    if (!info.isValid) throw new Error(\"Invalid checksum\");\n    const { publicKey } = info;\n    if (publicKey.length !== nBytes)\n      throw new Error(\"Invalid public key length\");\n    return publicKey;\n  };\n}\nconst AccountId = (ss58Format = 42, nBytes = 32) => enhanceCodec(\n  Bytes(nBytes),\n  fromBase58ToBuffer(nBytes),\n  fromBufferToBase58(ss58Format)\n);\n\nexport { AccountId };\n//# sourceMappingURL=AccountId.mjs.map\n","const HEX_STR = \"0123456789abcdef\";\nfunction toHex(bytes) {\n  const result = new Array(bytes.length + 1);\n  result[0] = \"0x\";\n  for (let i = 0; i < bytes.length; ) {\n    const b = bytes[i++];\n    result[i] = HEX_STR[b >> 4] + HEX_STR[b & 15];\n  }\n  return result.join(\"\");\n}\nconst HEX_MAP = {\n  0: 0,\n  1: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  7: 7,\n  8: 8,\n  9: 9,\n  a: 10,\n  b: 11,\n  c: 12,\n  d: 13,\n  e: 14,\n  f: 15,\n  A: 10,\n  B: 11,\n  C: 12,\n  D: 13,\n  E: 14,\n  F: 15\n};\nfunction fromHex(hexString) {\n  const isOdd = hexString.length % 2;\n  const base = (hexString[1] === \"x\" ? 2 : 0) + isOdd;\n  const nBytes = (hexString.length - base) / 2 + isOdd;\n  const bytes = new Uint8Array(nBytes);\n  if (isOdd) bytes[0] = 0 | HEX_MAP[hexString[2]];\n  for (let i = 0; i < nBytes; ) {\n    const idx = base + i * 2;\n    const a = HEX_MAP[hexString[idx]];\n    const b = HEX_MAP[hexString[idx + 1]];\n    bytes[isOdd + i++] = a << 4 | b;\n  }\n  return bytes;\n}\n\nexport { fromHex, toHex };\n//# sourceMappingURL=hex.mjs.map\n","function mapObject(input, mapper) {\n  return Object.fromEntries(\n    Object.entries(input).map(\n      ([key, value]) => [key, mapper(value, key)]\n    )\n  );\n}\nconst mapStringRecord = (input, mapper) => Object.fromEntries(\n  Object.entries(input).map(([key, value]) => [key, mapper(value, key)])\n);\n\nexport { mapObject, mapStringRecord };\n//# sourceMappingURL=mapObject.mjs.map\n","const mergeUint8 = (...inputs) => {\n  const totalLen = inputs.reduce((acc, a) => acc + a.byteLength, 0);\n  const result = new Uint8Array(totalLen);\n  for (let idx = 0, at = 0; idx < inputs.length; idx++) {\n    const current = inputs[idx];\n    result.set(current, at);\n    at += current.byteLength;\n  }\n  return result;\n};\n\nexport { mergeUint8 };\n//# sourceMappingURL=mergeUint8.mjs.map\n","const noop = Function.prototype;\n\nexport { noop };\n//# sourceMappingURL=noop.mjs.map\n","class AbortError extends Error {\n  constructor() {\n    super(\"Abort Error\");\n    this.name = \"AbortError\";\n  }\n}\n\nexport { AbortError };\n//# sourceMappingURL=AbortError.mjs.map\n","import { Tuple, compact, Bytes, createCodec } from 'scale-ts';\nimport { fromHex, toHex, mergeUint8 } from '@polkadot-api/utils';\nimport { AccountId } from './AccountId.mjs';\n\nvar __defProp = Object.defineProperty;\nvar __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), member.set(obj, value), value);\nvar _bytes, _opaqueBytes, _hex, _opaqueHex, _str;\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst opaqueBytesDec = Tuple(compact, Bytes(Infinity))[1];\nclass Binary {\n  constructor(data, opaque = false) {\n    __privateAdd(this, _bytes);\n    __privateAdd(this, _opaqueBytes, null);\n    __privateAdd(this, _hex, null);\n    __privateAdd(this, _opaqueHex, null);\n    __privateAdd(this, _str, null);\n    __publicField(this, \"asText\", () => __privateGet(this, _str) ?? __privateSet(this, _str, textDecoder.decode(__privateGet(this, _bytes))));\n    __publicField(this, \"asHex\", () => __privateGet(this, _hex) || __privateSet(this, _hex, toHex(__privateGet(this, _bytes))));\n    __publicField(this, \"asOpaqueHex\", () => __privateGet(this, _opaqueHex) || __privateSet(this, _opaqueHex, toHex(this.asBytes())));\n    __publicField(this, \"asBytes\", () => __privateGet(this, _bytes));\n    __publicField(this, \"asOpaqueBytes\", () => __privateGet(this, _opaqueBytes) || __privateSet(this, _opaqueBytes, mergeUint8(\n      compact[0](__privateGet(this, _bytes).length),\n      __privateGet(this, _bytes)\n    )));\n    if (opaque) {\n      try {\n        const [len, bytes] = opaqueBytesDec(data);\n        if (len === bytes.length) {\n          __privateSet(this, _bytes, bytes);\n          __privateSet(this, _opaqueBytes, data);\n          return;\n        }\n      } catch (_) {\n      }\n      throw new Error(\"Invalid opaque bytes\");\n    } else __privateSet(this, _bytes, data);\n  }\n  static fromText(input) {\n    return new this(textEncoder.encode(input));\n  }\n  static fromHex(input) {\n    return new this(fromHex(input));\n  }\n  static fromOpaqueHex(input) {\n    return new this(fromHex(input), true);\n  }\n  static fromBytes(input) {\n    return new this(input);\n  }\n  static fromOpaqueBytes(input) {\n    return new this(input, true);\n  }\n}\n_bytes = new WeakMap();\n_opaqueBytes = new WeakMap();\n_hex = new WeakMap();\n_opaqueHex = new WeakMap();\n_str = new WeakMap();\nconst [accountIdEncoder] = AccountId();\nclass FixedSizeBinary extends Binary {\n  constructor(data) {\n    super(data);\n  }\n  static fromArray(input) {\n    return new this(new Uint8Array(input));\n  }\n  static fromAccountId32(input) {\n    return new this(accountIdEncoder(input));\n  }\n}\nconst enc = (nBytes) => {\n  const _enc = Bytes.enc(nBytes);\n  return (value) => _enc(value.asBytes());\n};\nconst dec = (nBytes) => {\n  const _dec = Bytes.dec(nBytes);\n  const Bin2 = nBytes == null ? Binary : FixedSizeBinary;\n  return (value) => Bin2.fromBytes(_dec(value));\n};\nconst Bin = (nBytes) => createCodec(enc(nBytes), dec(nBytes));\nBin.enc = enc;\nBin.dec = dec;\n\nexport { Bin, Binary, FixedSizeBinary };\n//# sourceMappingURL=Binary.mjs.map\n","import { enhanceCodec, compact } from 'scale-ts';\n\nconst compactNumber = enhanceCodec(compact, (v) => v, Number);\nconst compactBn = enhanceCodec(compact, (v) => v, BigInt);\n\nexport { compactBn, compactNumber };\n//# sourceMappingURL=compact.mjs.map\n","import { createDecoder, Bytes, createCodec } from 'scale-ts';\nimport { compactNumber } from './compact.mjs';\n\nconst bitSequenceDecoder = createDecoder((data) => {\n  const bitsLen = compactNumber.dec(data);\n  const bytesLen = Math.ceil(bitsLen / 8);\n  const bytes = Bytes(bytesLen).dec(data);\n  return { bytes, bitsLen };\n});\nconst bitSequenceEncoder = (input) => {\n  if (input.bitsLen > input.bytes.length * 8)\n    throw new Error(\n      `Not enough bytes. (bitsLen:${input.bitsLen}, bytesLen:${input.bytes.length})`\n    );\n  const lenEncoded = compactNumber.enc(input.bitsLen);\n  const result = new Uint8Array(input.bytes.length + lenEncoded.length);\n  result.set(lenEncoded, 0);\n  result.set(input.bytes, lenEncoded.length);\n  return result;\n};\nconst bitSequence = createCodec(bitSequenceEncoder, bitSequenceDecoder);\n\nexport { bitSequence };\n//# sourceMappingURL=bitSequence.mjs.map\n","import { enhanceCodec, u8 } from 'scale-ts';\n\nconst char = enhanceCodec(\n  u8,\n  (str) => str.charCodeAt(0),\n  String.fromCharCode\n);\n\nexport { char };\n//# sourceMappingURL=char.mjs.map\n","import { fromHex, toHex } from '@polkadot-api/utils';\nimport { createCodec, Bytes } from 'scale-ts';\n\nconst enc = (nBytes) => {\n  const _enc = Bytes.enc(nBytes);\n  return (value) => _enc(fromHex(value));\n};\nconst dec = (nBytes) => {\n  const _dec = Bytes.dec(nBytes);\n  return (value) => toHex(_dec(value));\n};\nconst Hex = (nBytes) => createCodec(enc(nBytes), dec(nBytes));\nHex.enc = enc;\nHex.dec = dec;\n\nexport { Hex };\n//# sourceMappingURL=Hex.mjs.map\n","import { enhanceCodec, Bytes } from 'scale-ts';\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst fixedStr = (nBytes) => enhanceCodec(\n  Bytes(nBytes),\n  (str) => textEncoder.encode(str),\n  (bytes) => textDecoder.decode(bytes)\n);\n\nexport { fixedStr };\n//# sourceMappingURL=fixed-str.mjs.map\n","import { createCodec } from 'scale-ts';\n\nconst selfEncoder = (value) => {\n  let cache = (x) => {\n    const encoder = value();\n    cache = encoder;\n    return encoder(x);\n  };\n  return (x) => cache(x);\n};\nconst selfDecoder = (value) => {\n  let cache = (x) => {\n    const decoder = value();\n    const result = decoder;\n    cache = decoder;\n    return result(x);\n  };\n  return (x) => cache(x);\n};\nconst Self = (value) => createCodec(\n  selfEncoder(() => value().enc),\n  selfDecoder(() => value().dec)\n);\n\nexport { Self, selfDecoder, selfEncoder };\n//# sourceMappingURL=Self.mjs.map\n","const discriminant = {\n  is(value, type) {\n    return value.type === type;\n  },\n  as(value, type) {\n    if (type !== value.type)\n      throw new Error(\n        `Enum.as(enum, ${type}) used with actual type ${value.type}`\n      );\n    return value;\n  }\n};\nconst Enum = Object.assign((type, value) => {\n  return {\n    type,\n    value\n  };\n}, discriminant);\nconst _Enum = new Proxy(\n  {},\n  {\n    get(_, prop) {\n      return (value) => Enum(prop, value);\n    }\n  }\n);\n\nexport { Enum, _Enum };\n//# sourceMappingURL=enum.mjs.map\n","import { createCodec, Enum } from 'scale-ts';\nimport { mapObject } from '@polkadot-api/utils';\nimport { Enum as Enum$1 } from '../../types/enum.mjs';\n\nconst VariantEnc = (...args) => {\n  const enc = Enum.enc(...args);\n  return (v) => enc({ tag: v.type, value: v.value });\n};\nconst VariantDec = (...args) => {\n  const dec = Enum.dec(...args);\n  return (v) => {\n    const { tag, value } = dec(v);\n    return Enum$1(tag, value);\n  };\n};\nconst Variant = (inner, ...args) => createCodec(\n  VariantEnc(\n    mapObject(inner, ([encoder]) => encoder),\n    ...args\n  ),\n  VariantDec(\n    mapObject(inner, ([, decoder]) => decoder),\n    ...args\n  )\n);\nVariant.enc = VariantEnc;\nVariant.dec = VariantDec;\n\nexport { Variant };\n//# sourceMappingURL=Variant.mjs.map\n","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { abytes, aexists, anumber, aoutput } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { byteSwap32, Hash, isLE, toBytes, u32, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","import { fromHex, toHex } from '@polkadot-api/utils';\nimport { Bytes, createCodec, createDecoder } from 'scale-ts';\nimport { keccak_256 } from '@noble/hashes/sha3';\n\nconst getFormattedAddress = (hexAddress) => {\n  const nonChecksum = hexAddress.slice(2);\n  const hashedAddress = toHex(keccak_256(nonChecksum)).slice(2);\n  const result = new Array(40);\n  for (let i = 0; i < 40; i++) {\n    const checksumVal = parseInt(hashedAddress[i], 16);\n    const char = nonChecksum[i];\n    result[i] = checksumVal > 7 ? char.toUpperCase() : char;\n  }\n  return `0x${result.join(\"\")}`;\n};\nconst bytes20Dec = Bytes(20)[1];\nconst ethAccount = createCodec(\n  (input) => {\n    const bytes = fromHex(input);\n    if (bytes.length !== 20)\n      throw new Error(`Invalid length found on EthAddress(${input})`);\n    const hexAddress = toHex(bytes);\n    if (input === hexAddress || input === hexAddress.toUpperCase()) return bytes;\n    if (getFormattedAddress(hexAddress) !== input)\n      throw new Error(`Invalid checksum found on EthAddress(${input})`);\n    return bytes;\n  },\n  createDecoder((bytes) => getFormattedAddress(toHex(bytes20Dec(bytes))))\n);\n\nexport { ethAccount };\n//# sourceMappingURL=ethAccount.mjs.map\n","import { enhanceCodec, Bytes, Struct, Vector, _void } from 'scale-ts';\nimport '../utils/ss58-util.mjs';\nimport './scale/Binary.mjs';\nimport './scale/bitSequence.mjs';\nimport './scale/char.mjs';\nimport { compactNumber } from './scale/compact.mjs';\nimport { Hex } from './scale/Hex.mjs';\nimport './scale/fixed-str.mjs';\nimport { Variant } from './scale/Variant.mjs';\nimport './scale/ethAccount.mjs';\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst fourChars = enhanceCodec(\n  Bytes(4),\n  textEncoder.encode.bind(textEncoder),\n  textDecoder.decode.bind(textDecoder)\n);\nconst diggestVal = Struct({\n  engine: fourChars,\n  payload: Hex()\n});\nconst diggest = Variant(\n  {\n    consensus: diggestVal,\n    seal: diggestVal,\n    preRuntime: diggestVal,\n    runtimeUpdated: _void\n  },\n  [4, 5, 6, 8]\n);\nconst hex32 = Hex(32);\nconst blockHeader = Struct({\n  parentHash: hex32,\n  number: compactNumber,\n  stateRoot: hex32,\n  extrinsicRoot: hex32,\n  digests: Vector(diggest)\n});\n\nexport { blockHeader };\n//# sourceMappingURL=blockHeader.mjs.map\n","import { Vector, str } from 'scale-ts';\n\nconst docs = Vector(str);\n\nexport { docs };\n//# sourceMappingURL=docs.mjs.map\n","import { compactNumber } from '../scale/compact.mjs';\nimport { Option, str, Enum, _void, Vector, Struct, u32, u8 } from 'scale-ts';\nimport { docs } from './docs.mjs';\n\nconst oStr = Option(str);\nconst primitive = Enum({\n  bool: _void,\n  char: _void,\n  str: _void,\n  u8: _void,\n  u16: _void,\n  u32: _void,\n  u64: _void,\n  u128: _void,\n  u256: _void,\n  i8: _void,\n  i16: _void,\n  i32: _void,\n  i64: _void,\n  i128: _void,\n  i256: _void\n});\nconst fields = Vector(\n  Struct({\n    name: oStr,\n    type: compactNumber,\n    typeName: oStr,\n    docs\n  })\n);\nconst arr = Struct({\n  len: u32,\n  type: compactNumber\n});\nconst bitSequence = Struct({\n  bitStoreType: compactNumber,\n  bitOrderType: compactNumber\n});\nconst variant = Vector(\n  Struct({\n    name: str,\n    fields,\n    index: u8,\n    docs\n  })\n);\nconst def = Enum({\n  composite: fields,\n  variant,\n  sequence: compactNumber,\n  array: arr,\n  tuple: Vector(compactNumber),\n  primitive,\n  compact: compactNumber,\n  bitSequence\n});\nconst param = Struct({\n  name: str,\n  type: Option(compactNumber)\n});\nconst params = Vector(param);\nconst entry = Struct({\n  id: compactNumber,\n  path: docs,\n  params,\n  def,\n  docs\n});\nconst lookup = Vector(entry);\n\nexport { lookup };\n//# sourceMappingURL=lookup.mjs.map\n","import { Enum, _void, Vector, Struct, u8, str, Option } from 'scale-ts';\nimport '../../utils/ss58-util.mjs';\nimport '../scale/Binary.mjs';\nimport '../scale/bitSequence.mjs';\nimport '../scale/char.mjs';\nimport { compactNumber } from '../scale/compact.mjs';\nimport { Hex } from '../scale/Hex.mjs';\nimport '../scale/fixed-str.mjs';\nimport '../scale/Variant.mjs';\nimport '../scale/ethAccount.mjs';\nimport { docs } from './docs.mjs';\n\nconst hashType = Enum({\n  Blake2128: _void,\n  Blake2256: _void,\n  Blake2128Concat: _void,\n  Twox128: _void,\n  Twox256: _void,\n  Twox64Concat: _void,\n  Identity: _void\n});\nconst hashers = Vector(hashType);\nconst storageMap = Struct({\n  hashers,\n  key: compactNumber,\n  value: compactNumber\n});\nconst storageItem = Struct({\n  name: str,\n  modifier: u8,\n  type: Enum({\n    plain: compactNumber,\n    map: storageMap\n  }),\n  fallback: Hex(),\n  docs\n});\nconst storage = Option(\n  Struct({\n    prefix: str,\n    items: Vector(storageItem)\n  })\n);\nconst v14Pallet = {\n  name: str,\n  storage,\n  calls: Option(compactNumber),\n  events: Option(compactNumber),\n  constants: Vector(\n    Struct({\n      name: str,\n      type: compactNumber,\n      value: Hex(),\n      docs\n    })\n  ),\n  errors: Option(compactNumber),\n  index: u8\n};\nconst v15Pallet = {\n  ...v14Pallet,\n  docs\n};\n\nexport { v14Pallet, v15Pallet };\n//# sourceMappingURL=pallets.mjs.map\n","import { Struct, Vector, u8, str, createCodec } from 'scale-ts';\nimport { lookup } from './lookup.mjs';\nimport '../../utils/ss58-util.mjs';\nimport '../scale/Binary.mjs';\nimport '../scale/bitSequence.mjs';\nimport '../scale/char.mjs';\nimport { compactNumber } from '../scale/compact.mjs';\nimport '../scale/Hex.mjs';\nimport '../scale/fixed-str.mjs';\nimport '../scale/Variant.mjs';\nimport '../scale/ethAccount.mjs';\nimport { v14Pallet } from './pallets.mjs';\n\nconst empty = new Uint8Array();\nconst Always = (value) => createCodec(\n  () => empty,\n  () => value\n);\nconst extrinsic = Struct({\n  type: compactNumber,\n  version: u8,\n  signedExtensions: Vector(\n    Struct({\n      identifier: str,\n      type: compactNumber,\n      additionalSigned: compactNumber\n    })\n  )\n});\nconst v14 = Struct({\n  lookup,\n  pallets: Vector(Struct({ ...v14Pallet, docs: Always([]) })),\n  extrinsic,\n  type: compactNumber,\n  apis: Always([])\n});\n\nexport { v14 };\n//# sourceMappingURL=v14.mjs.map\n","import { Struct, Vector, str } from 'scale-ts';\nimport { docs } from './docs.mjs';\nimport '../../utils/ss58-util.mjs';\nimport '../scale/Binary.mjs';\nimport '../scale/bitSequence.mjs';\nimport '../scale/char.mjs';\nimport { compactNumber } from '../scale/compact.mjs';\nimport '../scale/Hex.mjs';\nimport '../scale/fixed-str.mjs';\nimport '../scale/Variant.mjs';\nimport '../scale/ethAccount.mjs';\n\nconst runtimeApi = Struct({\n  name: str,\n  methods: Vector(\n    Struct({\n      name: str,\n      inputs: Vector(\n        Struct({\n          name: str,\n          type: compactNumber\n        })\n      ),\n      output: compactNumber,\n      docs\n    })\n  ),\n  docs\n});\n\nexport { runtimeApi };\n//# sourceMappingURL=runtime-api.mjs.map\n","import { Struct, Vector, u8, str, Tuple } from 'scale-ts';\nimport { lookup } from './lookup.mjs';\nimport { v15Pallet } from './pallets.mjs';\nimport '../../utils/ss58-util.mjs';\nimport '../scale/Binary.mjs';\nimport '../scale/bitSequence.mjs';\nimport '../scale/char.mjs';\nimport { compactNumber } from '../scale/compact.mjs';\nimport { Hex } from '../scale/Hex.mjs';\nimport '../scale/fixed-str.mjs';\nimport '../scale/Variant.mjs';\nimport '../scale/ethAccount.mjs';\nimport { runtimeApi } from './runtime-api.mjs';\n\nconst extrinsic = Struct({\n  version: u8,\n  address: compactNumber,\n  call: compactNumber,\n  signature: compactNumber,\n  extra: compactNumber,\n  signedExtensions: Vector(\n    Struct({\n      identifier: str,\n      type: compactNumber,\n      additionalSigned: compactNumber\n    })\n  )\n});\nconst v15 = Struct({\n  lookup,\n  pallets: Vector(Struct(v15Pallet)),\n  extrinsic,\n  type: compactNumber,\n  apis: Vector(runtimeApi),\n  outerEnums: Struct({\n    call: compactNumber,\n    event: compactNumber,\n    error: compactNumber\n  }),\n  custom: Vector(Tuple(str, Struct({ type: compactNumber, value: Hex() })))\n});\n\nexport { v15 };\n//# sourceMappingURL=v15.mjs.map\n","import { createCodec, Struct, Enum, u32, Bytes, Option, Tuple, compact } from 'scale-ts';\nimport { v14 } from './v14.mjs';\nimport { v15 } from './v15.mjs';\n\nconst unsupportedFn = () => {\n  throw new Error(\"Unsupported metadata version!\");\n};\nconst unsupported = createCodec(\n  unsupportedFn,\n  unsupportedFn\n);\nconst metadata = Struct({\n  magicNumber: u32,\n  metadata: Enum({\n    v0: unsupported,\n    v1: unsupported,\n    v2: unsupported,\n    v3: unsupported,\n    v4: unsupported,\n    v5: unsupported,\n    v6: unsupported,\n    v7: unsupported,\n    v8: unsupported,\n    v9: unsupported,\n    v10: unsupported,\n    v11: unsupported,\n    v12: unsupported,\n    v13: unsupported,\n    v14,\n    v15\n  })\n});\nconst opaqueBytes = Bytes();\nconst optionOpaque = Option(opaqueBytes);\nconst opaqueOpaqueBytes = Tuple(compact, opaqueBytes);\nconst decAnyMetadata = (input) => {\n  try {\n    return metadata.dec(input);\n  } catch (_) {\n  }\n  try {\n    return metadata.dec(optionOpaque.dec(input));\n  } catch (_) {\n  }\n  try {\n    return metadata.dec(opaqueBytes.dec(input));\n  } catch (_) {\n  }\n  try {\n    return metadata.dec(opaqueOpaqueBytes.dec(input)[1]);\n  } catch (_) {\n  }\n  throw null;\n};\n\nexport { decAnyMetadata, metadata };\n//# sourceMappingURL=metadata.mjs.map\n","import { mergeUint8 } from '@polkadot-api/utils';\nimport { blake2b } from '@noble/hashes/blake2b';\n\nconst len32 = { dkLen: 32 };\nconst Blake2256 = (encoded) => blake2b(encoded, len32);\nconst len16 = { dkLen: 16 };\nconst Blake2128 = (encoded) => blake2b(encoded, len16);\nconst Blake2128Concat = (encoded) => mergeUint8(Blake2128(encoded), encoded);\n\nexport { Blake2128, Blake2128Concat, Blake2256 };\n//# sourceMappingURL=blake2.mjs.map\n","/**\n * Blake2s hash function. Focuses on 8-bit to 32-bit platforms. blake2b for 64-bit, but in JS it is slower.\n * @module\n */\nimport { BLAKE, SIGMA } from './_blake.js';\nimport { fromBig } from './_u64.js';\nimport { byteSwapIfBE, rotr, toBytes, u32, wrapConstructorWithOpts } from './utils.js';\n/**\n * Initial state: same as SHA256. First 32 bits of the fractional parts of the square roots\n * of the first 8 primes 2..19.\n */\n// prettier-ignore\nexport const B2S_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Mixing function G splitted in two halfs\nexport function G1s(a, b, c, d, x) {\n    a = (a + b + x) | 0;\n    d = rotr(d ^ a, 16);\n    c = (c + d) | 0;\n    b = rotr(b ^ c, 12);\n    return { a, b, c, d };\n}\nexport function G2s(a, b, c, d, x) {\n    a = (a + b + x) | 0;\n    d = rotr(d ^ a, 8);\n    c = (c + d) | 0;\n    b = rotr(b ^ c, 7);\n    return { a, b, c, d };\n}\n// prettier-ignore\nexport function compress(s, offset, msg, rounds, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) {\n    let j = 0;\n    for (let i = 0; i < rounds; i++) {\n        ({ a: v0, b: v4, c: v8, d: v12 } = G1s(v0, v4, v8, v12, msg[offset + s[j++]]));\n        ({ a: v0, b: v4, c: v8, d: v12 } = G2s(v0, v4, v8, v12, msg[offset + s[j++]]));\n        ({ a: v1, b: v5, c: v9, d: v13 } = G1s(v1, v5, v9, v13, msg[offset + s[j++]]));\n        ({ a: v1, b: v5, c: v9, d: v13 } = G2s(v1, v5, v9, v13, msg[offset + s[j++]]));\n        ({ a: v2, b: v6, c: v10, d: v14 } = G1s(v2, v6, v10, v14, msg[offset + s[j++]]));\n        ({ a: v2, b: v6, c: v10, d: v14 } = G2s(v2, v6, v10, v14, msg[offset + s[j++]]));\n        ({ a: v3, b: v7, c: v11, d: v15 } = G1s(v3, v7, v11, v15, msg[offset + s[j++]]));\n        ({ a: v3, b: v7, c: v11, d: v15 } = G2s(v3, v7, v11, v15, msg[offset + s[j++]]));\n        ({ a: v0, b: v5, c: v10, d: v15 } = G1s(v0, v5, v10, v15, msg[offset + s[j++]]));\n        ({ a: v0, b: v5, c: v10, d: v15 } = G2s(v0, v5, v10, v15, msg[offset + s[j++]]));\n        ({ a: v1, b: v6, c: v11, d: v12 } = G1s(v1, v6, v11, v12, msg[offset + s[j++]]));\n        ({ a: v1, b: v6, c: v11, d: v12 } = G2s(v1, v6, v11, v12, msg[offset + s[j++]]));\n        ({ a: v2, b: v7, c: v8, d: v13 } = G1s(v2, v7, v8, v13, msg[offset + s[j++]]));\n        ({ a: v2, b: v7, c: v8, d: v13 } = G2s(v2, v7, v8, v13, msg[offset + s[j++]]));\n        ({ a: v3, b: v4, c: v9, d: v14 } = G1s(v3, v4, v9, v14, msg[offset + s[j++]]));\n        ({ a: v3, b: v4, c: v9, d: v14 } = G2s(v3, v4, v9, v14, msg[offset + s[j++]]));\n    }\n    return { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 };\n}\nexport class BLAKE2s extends BLAKE {\n    constructor(opts = {}) {\n        super(64, opts.dkLen === undefined ? 32 : opts.dkLen, opts, 32, 8, 8);\n        // Internal state, same as SHA-256\n        this.v0 = B2S_IV[0] | 0;\n        this.v1 = B2S_IV[1] | 0;\n        this.v2 = B2S_IV[2] | 0;\n        this.v3 = B2S_IV[3] | 0;\n        this.v4 = B2S_IV[4] | 0;\n        this.v5 = B2S_IV[5] | 0;\n        this.v6 = B2S_IV[6] | 0;\n        this.v7 = B2S_IV[7] | 0;\n        const keyLength = opts.key ? opts.key.length : 0;\n        this.v0 ^= this.outputLen | (keyLength << 8) | (0x01 << 16) | (0x01 << 24);\n        if (opts.salt) {\n            const salt = u32(toBytes(opts.salt));\n            this.v4 ^= byteSwapIfBE(salt[0]);\n            this.v5 ^= byteSwapIfBE(salt[1]);\n        }\n        if (opts.personalization) {\n            const pers = u32(toBytes(opts.personalization));\n            this.v6 ^= byteSwapIfBE(pers[0]);\n            this.v7 ^= byteSwapIfBE(pers[1]);\n        }\n        if (opts.key) {\n            // Pad to blockLen and update\n            const tmp = new Uint8Array(this.blockLen);\n            tmp.set(toBytes(opts.key));\n            this.update(tmp);\n        }\n    }\n    get() {\n        const { v0, v1, v2, v3, v4, v5, v6, v7 } = this;\n        return [v0, v1, v2, v3, v4, v5, v6, v7];\n    }\n    // prettier-ignore\n    set(v0, v1, v2, v3, v4, v5, v6, v7) {\n        this.v0 = v0 | 0;\n        this.v1 = v1 | 0;\n        this.v2 = v2 | 0;\n        this.v3 = v3 | 0;\n        this.v4 = v4 | 0;\n        this.v5 = v5 | 0;\n        this.v6 = v6 | 0;\n        this.v7 = v7 | 0;\n    }\n    compress(msg, offset, isLast) {\n        const { h, l } = fromBig(BigInt(this.length));\n        // prettier-ignore\n        const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(SIGMA, offset, msg, 10, this.v0, this.v1, this.v2, this.v3, this.v4, this.v5, this.v6, this.v7, B2S_IV[0], B2S_IV[1], B2S_IV[2], B2S_IV[3], l ^ B2S_IV[4], h ^ B2S_IV[5], isLast ? ~B2S_IV[6] : B2S_IV[6], B2S_IV[7]);\n        this.v0 ^= v0 ^ v8;\n        this.v1 ^= v1 ^ v9;\n        this.v2 ^= v2 ^ v10;\n        this.v3 ^= v3 ^ v11;\n        this.v4 ^= v4 ^ v12;\n        this.v5 ^= v5 ^ v13;\n        this.v6 ^= v6 ^ v14;\n        this.v7 ^= v7 ^ v15;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.buffer32.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\n/**\n * Blake2s hash function. Focuses on 8-bit to 32-bit platforms. blake2b for 64-bit, but in JS it is slower.\n * @param msg - message that would be hashed\n * @param opts - dkLen output length, key for MAC mode, salt, personalization\n */\nexport const blake2s = /* @__PURE__ */ wrapConstructorWithOpts((opts) => new BLAKE2s(opts));\n//# sourceMappingURL=blake2s.js.map","/**\n * Blake3 fast hash is Blake2 with reduced security (round count). Can also be used as MAC & KDF.\n *\n * It is advertised as \"the fastest cryptographic hash\". However, it isn't true in JS.\n * Why is this so slow? While it should be 6x faster than blake2b, perf diff is only 20%:\n *\n * * There is only 30% reduction in number of rounds from blake2s\n * * Speed-up comes from tree structure, which is parallelized using SIMD & threading.\n *   These features are not present in JS, so we only get overhead from trees.\n * * Parallelization only happens on 1024-byte chunks: there is no benefit for small inputs.\n * * It is still possible to make it faster using: a) loop unrolling b) web workers c) wasm\n * @module\n */\nimport { abytes, aexists, anumber, aoutput } from './_assert.js';\nimport { BLAKE } from './_blake.js';\nimport { fromBig } from './_u64.js';\nimport { B2S_IV, compress } from './blake2s.js';\nimport { byteSwap32, isLE, toBytes, u32, u8, wrapXOFConstructorWithOpts, } from './utils.js';\n// Flag bitset\nvar B3_Flags;\n(function (B3_Flags) {\n    B3_Flags[B3_Flags[\"CHUNK_START\"] = 1] = \"CHUNK_START\";\n    B3_Flags[B3_Flags[\"CHUNK_END\"] = 2] = \"CHUNK_END\";\n    B3_Flags[B3_Flags[\"PARENT\"] = 4] = \"PARENT\";\n    B3_Flags[B3_Flags[\"ROOT\"] = 8] = \"ROOT\";\n    B3_Flags[B3_Flags[\"KEYED_HASH\"] = 16] = \"KEYED_HASH\";\n    B3_Flags[B3_Flags[\"DERIVE_KEY_CONTEXT\"] = 32] = \"DERIVE_KEY_CONTEXT\";\n    B3_Flags[B3_Flags[\"DERIVE_KEY_MATERIAL\"] = 64] = \"DERIVE_KEY_MATERIAL\";\n})(B3_Flags || (B3_Flags = {}));\nconst SIGMA = /* @__PURE__ */ (() => {\n    const Id = Array.from({ length: 16 }, (_, i) => i);\n    const permute = (arr) => [2, 6, 3, 10, 7, 0, 4, 13, 1, 11, 12, 5, 9, 14, 15, 8].map((i) => arr[i]);\n    const res = [];\n    for (let i = 0, v = Id; i < 7; i++, v = permute(v))\n        res.push(...v);\n    return Uint8Array.from(res);\n})();\n/** Blake3 hash. Can be used as MAC and KDF. */\nexport class BLAKE3 extends BLAKE {\n    constructor(opts = {}, flags = 0) {\n        super(64, opts.dkLen === undefined ? 32 : opts.dkLen, {}, Number.MAX_SAFE_INTEGER, 0, 0);\n        this.flags = 0 | 0;\n        this.chunkPos = 0; // Position of current block in chunk\n        this.chunksDone = 0; // How many chunks we already have\n        this.stack = [];\n        // Output\n        this.posOut = 0;\n        this.bufferOut32 = new Uint32Array(16);\n        this.chunkOut = 0; // index of output chunk\n        this.enableXOF = true;\n        this.outputLen = opts.dkLen === undefined ? 32 : opts.dkLen;\n        anumber(this.outputLen);\n        if (opts.key !== undefined && opts.context !== undefined)\n            throw new Error('Blake3: only key or context can be specified at same time');\n        else if (opts.key !== undefined) {\n            const key = toBytes(opts.key).slice();\n            if (key.length !== 32)\n                throw new Error('Blake3: key should be 32 byte');\n            this.IV = u32(key);\n            if (!isLE)\n                byteSwap32(this.IV);\n            this.flags = flags | B3_Flags.KEYED_HASH;\n        }\n        else if (opts.context !== undefined) {\n            const context_key = new BLAKE3({ dkLen: 32 }, B3_Flags.DERIVE_KEY_CONTEXT)\n                .update(opts.context)\n                .digest();\n            this.IV = u32(context_key);\n            if (!isLE)\n                byteSwap32(this.IV);\n            this.flags = flags | B3_Flags.DERIVE_KEY_MATERIAL;\n        }\n        else {\n            this.IV = B2S_IV.slice();\n            this.flags = flags;\n        }\n        this.state = this.IV.slice();\n        this.bufferOut = u8(this.bufferOut32);\n    }\n    // Unused\n    get() {\n        return [];\n    }\n    set() { }\n    b2Compress(counter, flags, buf, bufPos = 0) {\n        const { state: s, pos } = this;\n        const { h, l } = fromBig(BigInt(counter), true);\n        // prettier-ignore\n        const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(SIGMA, bufPos, buf, 7, s[0], s[1], s[2], s[3], s[4], s[5], s[6], s[7], B2S_IV[0], B2S_IV[1], B2S_IV[2], B2S_IV[3], h, l, pos, flags);\n        s[0] = v0 ^ v8;\n        s[1] = v1 ^ v9;\n        s[2] = v2 ^ v10;\n        s[3] = v3 ^ v11;\n        s[4] = v4 ^ v12;\n        s[5] = v5 ^ v13;\n        s[6] = v6 ^ v14;\n        s[7] = v7 ^ v15;\n    }\n    compress(buf, bufPos = 0, isLast = false) {\n        // Compress last block\n        let flags = this.flags;\n        if (!this.chunkPos)\n            flags |= B3_Flags.CHUNK_START;\n        if (this.chunkPos === 15 || isLast)\n            flags |= B3_Flags.CHUNK_END;\n        if (!isLast)\n            this.pos = this.blockLen;\n        this.b2Compress(this.chunksDone, flags, buf, bufPos);\n        this.chunkPos += 1;\n        // If current block is last in chunk (16 blocks), then compress chunks\n        if (this.chunkPos === 16 || isLast) {\n            let chunk = this.state;\n            this.state = this.IV.slice();\n            // If not the last one, compress only when there are trailing zeros in chunk counter\n            // chunks used as binary tree where current stack is path. Zero means current leaf is finished and can be compressed.\n            // 1 (001) - leaf not finished (just push current chunk to stack)\n            // 2 (010) - leaf finished at depth=1 (merge with last elm on stack and push back)\n            // 3 (011) - last leaf not finished\n            // 4 (100) - leafs finished at depth=1 and depth=2\n            for (let last, chunks = this.chunksDone + 1; isLast || !(chunks & 1); chunks >>= 1) {\n                if (!(last = this.stack.pop()))\n                    break;\n                this.buffer32.set(last, 0);\n                this.buffer32.set(chunk, 8);\n                this.pos = this.blockLen;\n                this.b2Compress(0, this.flags | B3_Flags.PARENT, this.buffer32, 0);\n                chunk = this.state;\n                this.state = this.IV.slice();\n            }\n            this.chunksDone++;\n            this.chunkPos = 0;\n            this.stack.push(chunk);\n        }\n        this.pos = 0;\n    }\n    _cloneInto(to) {\n        to = super._cloneInto(to);\n        const { IV, flags, state, chunkPos, posOut, chunkOut, stack, chunksDone } = this;\n        to.state.set(state.slice());\n        to.stack = stack.map((i) => Uint32Array.from(i));\n        to.IV.set(IV);\n        to.flags = flags;\n        to.chunkPos = chunkPos;\n        to.chunksDone = chunksDone;\n        to.posOut = posOut;\n        to.chunkOut = chunkOut;\n        to.enableXOF = this.enableXOF;\n        to.bufferOut32.set(this.bufferOut32);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n        this.buffer32.fill(0);\n        this.IV.fill(0);\n        this.bufferOut32.fill(0);\n        for (let i of this.stack)\n            i.fill(0);\n    }\n    // Same as b2Compress, but doesn't modify state and returns 16 u32 array (instead of 8)\n    b2CompressOut() {\n        const { state: s, pos, flags, buffer32, bufferOut32: out32 } = this;\n        const { h, l } = fromBig(BigInt(this.chunkOut++));\n        if (!isLE)\n            byteSwap32(buffer32);\n        // prettier-ignore\n        const { v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15 } = compress(SIGMA, 0, buffer32, 7, s[0], s[1], s[2], s[3], s[4], s[5], s[6], s[7], B2S_IV[0], B2S_IV[1], B2S_IV[2], B2S_IV[3], l, h, pos, flags);\n        out32[0] = v0 ^ v8;\n        out32[1] = v1 ^ v9;\n        out32[2] = v2 ^ v10;\n        out32[3] = v3 ^ v11;\n        out32[4] = v4 ^ v12;\n        out32[5] = v5 ^ v13;\n        out32[6] = v6 ^ v14;\n        out32[7] = v7 ^ v15;\n        out32[8] = s[0] ^ v8;\n        out32[9] = s[1] ^ v9;\n        out32[10] = s[2] ^ v10;\n        out32[11] = s[3] ^ v11;\n        out32[12] = s[4] ^ v12;\n        out32[13] = s[5] ^ v13;\n        out32[14] = s[6] ^ v14;\n        out32[15] = s[7] ^ v15;\n        if (!isLE) {\n            byteSwap32(buffer32);\n            byteSwap32(out32);\n        }\n        this.posOut = 0;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        // Padding\n        this.buffer.fill(0, this.pos);\n        // Process last chunk\n        let flags = this.flags | B3_Flags.ROOT;\n        if (this.stack.length) {\n            flags |= B3_Flags.PARENT;\n            if (!isLE)\n                byteSwap32(this.buffer32);\n            this.compress(this.buffer32, 0, true);\n            if (!isLE)\n                byteSwap32(this.buffer32);\n            this.chunksDone = 0;\n            this.pos = this.blockLen;\n        }\n        else {\n            flags |= (!this.chunkPos ? B3_Flags.CHUNK_START : 0) | B3_Flags.CHUNK_END;\n        }\n        this.flags = flags;\n        this.b2CompressOut();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const { blockLen, bufferOut } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.b2CompressOut();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible after digest call');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.enableXOF = false;\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n}\n/**\n * BLAKE3 hash function. Can be used as MAC and KDF.\n * @param msg - message that would be hashed\n * @param opts - `dkLen` for output length, `key` for MAC mode, `context` for KDF mode\n * @example\n * const data = new Uint8Array(32);\n * const hash = blake3(data);\n * const mac = blake3(data, { key: new Uint8Array(32) });\n * const kdf = blake3(data, { context: 'application name' });\n */\nexport const blake3 = /* @__PURE__ */ wrapXOFConstructorWithOpts((opts) => new BLAKE3(opts));\n//# sourceMappingURL=blake3.js.map","import { mergeUint8 } from '@polkadot-api/utils';\nimport { blake3 } from '@noble/hashes/blake3';\n\nconst len32 = { dkLen: 32 };\nconst Blake3256 = (encoded) => blake3(encoded, len32);\nconst Blake3256Concat = (encoded) => mergeUint8(Blake3256(encoded), encoded);\n\nexport { Blake3256, Blake3256Concat };\n//# sourceMappingURL=blake3.mjs.map\n","const Identity = (encoded) => encoded;\n\nexport { Identity };\n//# sourceMappingURL=identity.mjs.map\n","const bigintFromU16 = (v0, v1, v2, v3) => new DataView(new Uint16Array([v0, v1, v2, v3]).buffer).getBigUint64(0, true);\nconst MASK_64 = 2n ** 64n - 1n;\nconst rotl = (input, nBits) => input << nBits & MASK_64 | input >> 64n - nBits;\nconst multiply = (a, b) => a * b & MASK_64;\nconst add = (a, b) => a + b & MASK_64;\nconst PRIME64_1 = 11400714785074694791n;\nconst PRIME64_2 = 14029467366897019727n;\nconst PRIME64_3 = 1609587929392839161n;\nconst PRIME64_4 = 9650029242287828579n;\nconst PRIME64_5 = 2870177450012600261n;\nfunction h64(input, seed = 0n) {\n  let v1 = add(add(seed, PRIME64_1), PRIME64_2);\n  let v2 = add(seed, PRIME64_2);\n  let v3 = seed;\n  let v4 = seed - PRIME64_1;\n  let totalLen = input.length;\n  let memsize = 0;\n  let memory = null;\n  (function update() {\n    let p2 = 0;\n    let bEnd = p2 + totalLen;\n    if (!totalLen) return;\n    memory = new Uint8Array(32);\n    if (totalLen < 32) {\n      memory.set(input.subarray(0, totalLen), memsize);\n      memsize += totalLen;\n      return;\n    }\n    if (p2 <= bEnd - 32) {\n      const limit = bEnd - 32;\n      do {\n        let other;\n        other = bigintFromU16(\n          input[p2 + 1] << 8 | input[p2],\n          input[p2 + 3] << 8 | input[p2 + 2],\n          input[p2 + 5] << 8 | input[p2 + 4],\n          input[p2 + 7] << 8 | input[p2 + 6]\n        );\n        v1 = multiply(rotl(add(v1, multiply(other, PRIME64_2)), 31n), PRIME64_1);\n        p2 += 8;\n        other = bigintFromU16(\n          input[p2 + 1] << 8 | input[p2],\n          input[p2 + 3] << 8 | input[p2 + 2],\n          input[p2 + 5] << 8 | input[p2 + 4],\n          input[p2 + 7] << 8 | input[p2 + 6]\n        );\n        v2 = multiply(rotl(add(v2, multiply(other, PRIME64_2)), 31n), PRIME64_1);\n        p2 += 8;\n        other = bigintFromU16(\n          input[p2 + 1] << 8 | input[p2],\n          input[p2 + 3] << 8 | input[p2 + 2],\n          input[p2 + 5] << 8 | input[p2 + 4],\n          input[p2 + 7] << 8 | input[p2 + 6]\n        );\n        v3 = multiply(rotl(add(v3, multiply(other, PRIME64_2)), 31n), PRIME64_1);\n        p2 += 8;\n        other = bigintFromU16(\n          input[p2 + 1] << 8 | input[p2],\n          input[p2 + 3] << 8 | input[p2 + 2],\n          input[p2 + 5] << 8 | input[p2 + 4],\n          input[p2 + 7] << 8 | input[p2 + 6]\n        );\n        v4 = multiply(rotl(add(v4, multiply(other, PRIME64_2)), 31n), PRIME64_1);\n        p2 += 8;\n      } while (p2 <= limit);\n    }\n    if (p2 < bEnd) {\n      memory.set(input.subarray(p2, bEnd), memsize);\n      memsize = bEnd - p2;\n    }\n  })();\n  input = memory || input;\n  let result;\n  let p = 0;\n  if (totalLen >= 32) {\n    result = rotl(v1, 1n);\n    result = add(result, rotl(v2, 7n));\n    result = add(result, rotl(v3, 12n));\n    result = add(result, rotl(v4, 18n));\n    v1 = multiply(rotl(multiply(v1, PRIME64_2), 31n), PRIME64_1);\n    result = result ^ v1;\n    result = add(multiply(result, PRIME64_1), PRIME64_4);\n    v2 = multiply(rotl(multiply(v2, PRIME64_2), 31n), PRIME64_1);\n    result = result ^ v2;\n    result = add(multiply(result, PRIME64_1), PRIME64_4);\n    v3 = multiply(rotl(multiply(v3, PRIME64_2), 31n), PRIME64_1);\n    result = result ^ v3;\n    result = add(multiply(result, PRIME64_1), PRIME64_4);\n    v4 = multiply(rotl(multiply(v4, PRIME64_2), 31n), PRIME64_1);\n    result = result ^ v4;\n    result = add(multiply(result, PRIME64_1), PRIME64_4);\n  } else {\n    result = add(seed, PRIME64_5);\n  }\n  result = add(result, BigInt(totalLen));\n  while (p <= memsize - 8) {\n    let temp2 = bigintFromU16(\n      input[p + 1] << 8 | input[p],\n      input[p + 3] << 8 | input[p + 2],\n      input[p + 5] << 8 | input[p + 4],\n      input[p + 7] << 8 | input[p + 6]\n    );\n    temp2 = multiply(rotl(multiply(temp2, PRIME64_2), 31n), PRIME64_1);\n    result = add(multiply(rotl(result ^ temp2, 27n), PRIME64_1), PRIME64_4);\n    p += 8;\n  }\n  if (p + 4 <= memsize) {\n    let temp2 = multiply(\n      bigintFromU16(\n        input[p + 1] << 8 | input[p],\n        input[p + 3] << 8 | input[p + 2],\n        0,\n        0\n      ),\n      PRIME64_1\n    );\n    result = add(multiply(rotl(result ^ temp2, 23n), PRIME64_2), PRIME64_3);\n    p += 4;\n  }\n  while (p < memsize) {\n    const temp2 = multiply(bigintFromU16(input[p++], 0, 0, 0), PRIME64_5);\n    result = multiply(rotl(result ^ temp2, 11n), PRIME64_1);\n  }\n  let temp = result >> 33n;\n  result = multiply(result ^ temp, PRIME64_2);\n  temp = result >> 29n;\n  result = multiply(result ^ temp, PRIME64_3);\n  temp = result >> 32n;\n  result ^= temp;\n  return result;\n}\n\nexport { h64 };\n//# sourceMappingURL=h64.mjs.map\n","import { mergeUint8 } from '@polkadot-api/utils';\nimport { u64 } from 'scale-ts';\nimport { h64 } from './h64.mjs';\n\nconst Twox128 = (input) => {\n  const result = new Uint8Array(16);\n  const dv = new DataView(result.buffer);\n  dv.setBigUint64(0, h64(input), true);\n  dv.setBigUint64(8, h64(input, 1n), true);\n  return result;\n};\nconst Twox256 = (input) => {\n  const result = new Uint8Array(32);\n  const dv = new DataView(result.buffer);\n  dv.setBigUint64(0, h64(input), true);\n  dv.setBigUint64(8, h64(input, 1n), true);\n  dv.setBigUint64(16, h64(input, 2n), true);\n  dv.setBigUint64(24, h64(input, 3n), true);\n  return result;\n};\nconst Twox64Concat = (encoded) => mergeUint8(u64.enc(h64(encoded)), encoded);\n\nexport { Twox128, Twox256, Twox64Concat };\n//# sourceMappingURL=twoX.mjs.map\n","import { mergeUint8, toHex, fromHex } from '@polkadot-api/utils';\nimport { Blake2128Concat, Blake2128, Blake2256 } from './hashes/blake2.mjs';\nimport '@noble/hashes/blake3';\nimport { Identity } from './hashes/identity.mjs';\nimport { Twox128, Twox64Concat, Twox256 } from './hashes/twoX.mjs';\n\nconst textEncoder = new TextEncoder();\nconst hashers = /* @__PURE__ */ new Map([\n  [Identity, 0],\n  [Twox64Concat, 8],\n  [Blake2128Concat, 16],\n  [Blake2128, -16],\n  [Blake2256, -32],\n  [Twox128, -16],\n  [Twox256, -32]\n]);\nconst Storage = (pallet) => {\n  const palledEncoded = Twox128(textEncoder.encode(pallet));\n  return (name, ...encoders) => {\n    const palletItemEncoded = mergeUint8(\n      palledEncoded,\n      Twox128(textEncoder.encode(name))\n    );\n    const palletItemEncodedHex = toHex(palletItemEncoded);\n    const dec = (key) => {\n      if (!key.startsWith(palletItemEncodedHex))\n        throw new Error(`key does not match this storage (${pallet}.${name})`);\n      if (encoders.length === 0) return [];\n      const argsKey = fromHex(key.slice(palletItemEncodedHex.length));\n      const result = new Array(encoders.length);\n      for (let i = 0, cur = 0; i < encoders.length; i++) {\n        const [codec, hasher] = encoders[i];\n        const hBytes = hashers.get(hasher);\n        if (hBytes == null) throw new Error(\"Unknown hasher\");\n        if (hBytes < 0) {\n          const opaqueBytes = hBytes * -1;\n          result[i] = toHex(argsKey.slice(cur, cur + opaqueBytes));\n          cur += opaqueBytes;\n        } else {\n          cur += hBytes;\n          result[i] = codec.dec(argsKey.slice(cur));\n          cur += codec.enc(result[i]).length;\n        }\n      }\n      return result;\n    };\n    const fns = encoders.map(\n      ([{ enc: enc2 }, hash]) => (val) => hash(enc2(val))\n    );\n    const enc = (...args) => toHex(\n      mergeUint8(palletItemEncoded, ...args.map((val, idx) => fns[idx](val)))\n    );\n    return {\n      enc,\n      dec\n    };\n  };\n};\n\nexport { Storage };\n//# sourceMappingURL=storage.mjs.map\n","import { mergeUint8 } from '@polkadot-api/utils';\nimport { compact, u16 } from 'scale-ts';\nimport './ss58-util.mjs';\nimport { Binary } from '../codecs/scale/Binary.mjs';\nimport '../codecs/scale/bitSequence.mjs';\nimport '../codecs/scale/char.mjs';\nimport '../codecs/scale/compact.mjs';\nimport '../codecs/scale/Hex.mjs';\nimport '../codecs/scale/fixed-str.mjs';\nimport '../codecs/scale/Variant.mjs';\nimport '../codecs/scale/ethAccount.mjs';\nimport '../codecs/blockHeader.mjs';\nimport '../codecs/metadata/metadata.mjs';\nimport '../codecs/metadata/v14.mjs';\nimport '../codecs/metadata/v15.mjs';\nimport '../codecs/metadata/lookup.mjs';\nimport { Blake2256 } from '../hashes/blake2.mjs';\nimport '@noble/hashes/blake3';\n\nconst PREFIX = Binary.fromText(\"modlpy/utilisuba\").asBytes();\nconst getMultisigAccountId = ({\n  threshold,\n  signatories\n}) => {\n  const sortedSignatories = sortMultisigSignatories(signatories);\n  const payload = mergeUint8(\n    PREFIX,\n    compact.enc(sortedSignatories.length),\n    ...sortedSignatories,\n    u16.enc(threshold)\n  );\n  return Blake2256(payload);\n};\nconst sortMultisigSignatories = (signatories) => signatories.slice().sort((a, b) => {\n  for (let i = 0; ; i++) {\n    const overA = i >= a.length;\n    const overB = i >= b.length;\n    if (overA && overB) return 0;\n    else if (overA) return -1;\n    else if (overB) return 1;\n    else if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\n  }\n});\n\nexport { getMultisigAccountId, sortMultisigSignatories };\n//# sourceMappingURL=multisig.mjs.map\n","import { Vector, Tuple, str, compactNumber, Variant, _void, Option, Self, Struct } from '@polkadot-api/substrate-bindings';\n\nconst smallCompact = compactNumber;\nconst StructCodec = Vector(Tuple(str, smallCompact));\nconst Primitive = {\n  bool: \"boolean\",\n  str: \"string\",\n  num: \"number\",\n  big: \"bigint\",\n  bits: \"bitseq\",\n  void: \"void\"\n};\nconst TerminalCodec = Variant(\n  Object.fromEntries(\n    Object.values(Primitive).map((p) => [p, _void])\n  )\n);\nconst EnumCodec = Vector(Tuple(str, Option(Self(() => TypedefCodec))));\nconst TupleCodec = Vector(smallCompact);\nconst ArrayCodec = Struct({\n  typeRef: smallCompact,\n  length: Option(smallCompact)\n});\nconst BinaryCodec = Option(compactNumber);\nconst OptionCodec = smallCompact;\nconst ResultCodec = Struct({\n  ok: smallCompact,\n  ko: smallCompact\n});\nconst TypedefCodec = Variant({\n  struct: StructCodec,\n  terminal: TerminalCodec,\n  enum: EnumCodec,\n  tuple: TupleCodec,\n  array: ArrayCodec,\n  binary: BinaryCodec,\n  option: OptionCodec,\n  result: ResultCodec\n});\nconst primitiveToTerminal = {\n  i256: Primitive.big,\n  i128: Primitive.big,\n  i64: Primitive.big,\n  i32: Primitive.num,\n  i16: Primitive.num,\n  i8: Primitive.num,\n  u256: Primitive.big,\n  u128: Primitive.big,\n  u64: Primitive.big,\n  u32: Primitive.num,\n  u16: Primitive.num,\n  u8: Primitive.num,\n  bool: Primitive.bool,\n  char: Primitive.str,\n  str: Primitive.str\n};\nconst terminal = (type) => ({\n  type: \"terminal\",\n  value: { type }\n});\nfunction mapLookupToTypedef(entry, resolve = () => {\n}) {\n  switch (entry.type) {\n    case \"AccountId20\":\n    case \"AccountId32\":\n      return terminal(Primitive.str);\n    case \"array\":\n      if (entry.value.type === \"primitive\" && entry.value.value === \"u8\") {\n        return { type: \"binary\", value: entry.len };\n      }\n      resolve(entry.value.id);\n      return {\n        type: \"array\",\n        value: {\n          typeRef: entry.value.id,\n          length: entry.len\n        }\n      };\n    case \"bitSequence\":\n      return terminal(Primitive.bits);\n    case \"compact\":\n      return terminal(entry.isBig ? Primitive.big : Primitive.num);\n    case \"enum\":\n      return {\n        type: \"enum\",\n        value: Object.entries(entry.value).map(([key, params]) => {\n          if (params.type === \"lookupEntry\") resolve(params.value.id);\n          return [\n            key,\n            params.type === \"lookupEntry\" ? mapLookupToTypedef(params.value, resolve) : mapLookupToTypedef(params, resolve)\n          ];\n        })\n      };\n    case \"struct\": {\n      const value = Object.entries(entry.value).map(\n        ([key, prop]) => [key, prop.id]\n      );\n      value.forEach(([, v]) => resolve(v));\n      return {\n        type: \"struct\",\n        value\n      };\n    }\n    case \"tuple\": {\n      const value = entry.value.map((v) => v.id);\n      value.forEach(resolve);\n      return {\n        type: \"tuple\",\n        value\n      };\n    }\n    case \"option\":\n      resolve(entry.value.id);\n      return {\n        type: \"option\",\n        value: entry.value.id\n      };\n    case \"primitive\":\n      return terminal(primitiveToTerminal[entry.value]);\n    case \"result\":\n      resolve(entry.value.ok.id);\n      resolve(entry.value.ko.id);\n      return {\n        type: \"result\",\n        value: {\n          ok: entry.value.ok.id,\n          ko: entry.value.ko.id\n        }\n      };\n    case \"sequence\":\n      if (entry.value.type === \"primitive\" && entry.value.value === \"u8\") {\n        return { type: \"binary\", value: void 0 };\n      }\n      resolve(entry.value.id);\n      return {\n        type: \"array\",\n        value: { typeRef: entry.value.id }\n      };\n    case \"void\":\n      return terminal(Primitive.void);\n  }\n}\nfunction mapReferences(node, mapFn) {\n  switch (node.type) {\n    case \"array\":\n      return {\n        ...node,\n        value: {\n          ...node.value,\n          typeRef: mapFn(node.value.typeRef)\n        }\n      };\n    case \"option\":\n      return { ...node, value: mapFn(node.value) };\n    case \"result\":\n      return {\n        ...node,\n        value: { ok: mapFn(node.value.ok), ko: mapFn(node.value.ko) }\n      };\n    case \"tuple\":\n      return { ...node, value: node.value.map(mapFn) };\n    case \"struct\":\n      return {\n        ...node,\n        value: node.value.map(([k, v]) => [k, mapFn(v)])\n      };\n    case \"enum\":\n      return {\n        ...node,\n        value: node.value.map(\n          ([k, v]) => [k, v == void 0 ? void 0 : mapReferences(v, mapFn)]\n        )\n      };\n    case \"binary\":\n    case \"terminal\":\n      return node;\n  }\n}\n\nexport { Primitive, TypedefCodec, mapLookupToTypedef, mapReferences };\n//# sourceMappingURL=typedef.mjs.map\n","import { Binary } from '@polkadot-api/substrate-bindings';\nimport { Primitive } from './typedef.mjs';\n\nfunction isCompatible(value, destNode, getNode) {\n  if (destNode.type === \"option\" && value == null) {\n    return true;\n  }\n  const nextCall = (value2, destNode2) => isCompatible(value2, destNode2, getNode);\n  const checkTerminal = (terminal) => {\n    switch (terminal.value.type) {\n      case Primitive.str:\n      case Primitive.big:\n      case Primitive.bool:\n      case Primitive.num:\n        return typeof value === terminal.value.type;\n      case Primitive.bits:\n        return typeof value === \"object\" && value != null && typeof value.bitsLen === \"number\" && value.bytes instanceof Uint8Array;\n      case Primitive.void:\n        return true;\n    }\n  };\n  switch (destNode.type) {\n    case \"terminal\":\n      return checkTerminal(destNode);\n    case \"binary\":\n      return value instanceof Binary && (destNode.value == null || value.asBytes().length >= destNode.value);\n    case \"array\":\n      if (!Array.isArray(value)) return false;\n      const valueArr = value;\n      if (destNode.value.length != null && valueArr.length < destNode.value.length) {\n        return false;\n      }\n      return valueArr.slice(0, destNode.value.length).every((value2) => nextCall(value2, getNode(destNode.value.typeRef)));\n    case \"enum\":\n      if (!value) return false;\n      const valueEnum = value;\n      const destVariants = Object.fromEntries(destNode.value);\n      if (!(valueEnum.type in destVariants)) {\n        return false;\n      }\n      const variantValue = destVariants[valueEnum.type];\n      if (variantValue == null) {\n        return true;\n      }\n      return nextCall(valueEnum.value, variantValue);\n    case \"option\":\n      if (value == null) {\n        return true;\n      }\n      return nextCall(value, getNode(destNode.value));\n    case \"struct\":\n      if (!value) return false;\n      return destNode.value.every(\n        ([key, typeRef]) => nextCall(value[key], getNode(typeRef))\n      );\n    case \"tuple\":\n      if (!value) return false;\n      return destNode.value.every(\n        (typeRef, idx) => nextCall(value[idx], getNode(typeRef))\n      );\n    case \"result\":\n      if (!(\"success\" in value && \"value\" in value)) return false;\n      return nextCall(\n        value.value,\n        getNode(value.success ? destNode.value.ok : destNode.value.ko)\n      );\n  }\n}\n\nexport { isCompatible };\n//# sourceMappingURL=isCompatible.mjs.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, key + \"\" , value);\nclass DoubleSet {\n  constructor(values = []) {\n    __publicField(this, \"value\", /* @__PURE__ */ new Map());\n    values.forEach(([a, b]) => this.add(a, b));\n  }\n  has(a, b) {\n    return this.value.get(a)?.has(b) ?? false;\n  }\n  add(a, b) {\n    if (!this.value.has(a)) {\n      this.value.set(a, /* @__PURE__ */ new Set());\n    }\n    this.value.get(a).add(b);\n  }\n  addAll(values) {\n    values.forEach(([a, b]) => this.add(a, b));\n  }\n  delete(a, b) {\n    if (!this.value.has(a)) return;\n    const set = this.value.get(a);\n    set.delete(b);\n    if (!set.size) {\n      this.value.delete(a);\n    }\n  }\n  isEmpty() {\n    return !this.value.size;\n  }\n  get values() {\n    return Array.from(this.value).flatMap(\n      ([a, values]) => Array.from(values).map((b) => [a, b])\n    );\n  }\n}\n\nexport { DoubleSet };\n//# sourceMappingURL=doubleSet.mjs.map\n","import { DoubleSet } from './doubleSet.mjs';\n\nvar CompatibilityLevel = /* @__PURE__ */ ((CompatibilityLevel2) => {\n  CompatibilityLevel2[CompatibilityLevel2[\"Incompatible\"] = 0] = \"Incompatible\";\n  CompatibilityLevel2[CompatibilityLevel2[\"Partial\"] = 1] = \"Partial\";\n  CompatibilityLevel2[CompatibilityLevel2[\"BackwardsCompatible\"] = 2] = \"BackwardsCompatible\";\n  CompatibilityLevel2[CompatibilityLevel2[\"Identical\"] = 3] = \"Identical\";\n  return CompatibilityLevel2;\n})(CompatibilityLevel || {});\nfunction isStaticCompatible(originNode, getOriginNode, destNode, getDestNode, cache) {\n  if (!destNode && !originNode) {\n    return unconditional(3 /* Identical */);\n  }\n  if (!destNode) return unconditional(2 /* BackwardsCompatible */);\n  if (!originNode)\n    return unconditional(\n      destNode.type === \"option\" ? 2 /* BackwardsCompatible */ : 0 /* Incompatible */\n    );\n  if (!cache.has(destNode)) {\n    cache.set(destNode, /* @__PURE__ */ new Map());\n  }\n  const destNodeCache = cache.get(destNode);\n  if (destNodeCache.has(originNode)) {\n    const result2 = destNodeCache.get(originNode);\n    if (result2 === null) {\n      return {\n        level: 3 /* Identical */,\n        assumptions: new DoubleSet([[originNode, destNode]])\n      };\n    }\n    return unconditional(result2);\n  }\n  destNodeCache.set(originNode, null);\n  const result = getIsStaticCompatible(\n    originNode,\n    destNode,\n    (originNode2, destNode2) => isStaticCompatible(\n      typeof originNode2 === \"number\" ? getOriginNode(originNode2) : originNode2,\n      getOriginNode,\n      typeof destNode2 === \"number\" ? getDestNode(destNode2) : destNode2,\n      getDestNode,\n      cache\n    )\n  );\n  result.assumptions.delete(originNode, destNode);\n  if (result.assumptions.isEmpty() || result.level === 0 /* Incompatible */) {\n    destNodeCache.set(originNode, result.level);\n  } else {\n    destNodeCache.delete(originNode);\n  }\n  return result;\n}\nfunction getIsStaticCompatible(originNode, destNode, nextCall) {\n  if (originNode.type !== destNode.type) {\n    if (destNode.type === \"option\") {\n      return withMaxLevel(\n        nextCall(originNode, destNode.value),\n        2 /* BackwardsCompatible */\n      );\n    }\n    if (originNode.type === \"option\") {\n      return withMaxLevel(\n        nextCall(originNode.value, destNode),\n        1 /* Partial */\n      );\n    }\n    return unconditional(0 /* Incompatible */);\n  }\n  switch (destNode.type) {\n    case \"terminal\":\n      return unconditional(\n        destNode.value.type === originNode.value.type ? 3 /* Identical */ : 0 /* Incompatible */\n      );\n    case \"binary\":\n      const binaryOrigin = originNode;\n      return unconditional(\n        compareOptionalLengths(binaryOrigin.value, destNode.value)\n      );\n    case \"array\":\n      const arrayOrigin = originNode;\n      const lengthCheck = unconditional(\n        compareOptionalLengths(arrayOrigin.value.length, destNode.value.length)\n      );\n      return strictMerge([\n        lengthCheck,\n        () => nextCall(arrayOrigin.value.typeRef, destNode.value.typeRef)\n      ]);\n    case \"enum\": {\n      const enumOrigin = originNode;\n      const destVariants = Object.fromEntries(destNode.value);\n      const maxLevel2 = enumOrigin.value.length === destNode.value.length ? 3 /* Identical */ : 2 /* BackwardsCompatible */;\n      return withMaxLevel(\n        mergeResults(\n          enumOrigin.value.map(\n            ([type, value]) => () => type in destVariants ? nextCall(value, destVariants[type]) : unconditional(0 /* Incompatible */)\n          )\n        ),\n        maxLevel2\n      );\n    }\n    case \"option\":\n      return nextCall(originNode.value, destNode.value);\n    case \"struct\":\n      const structOrigin = originNode;\n      const originProperties = Object.fromEntries(structOrigin.value);\n      const maxLevel = structOrigin.value.length === destNode.value.length ? 3 /* Identical */ : 2 /* BackwardsCompatible */;\n      return withMaxLevel(\n        strictMerge(\n          destNode.value.map(\n            ([key, value]) => () => nextCall(originProperties[key], value)\n          )\n        ),\n        maxLevel\n      );\n    case \"tuple\": {\n      const tupleOrigin = originNode;\n      const lengthCheck2 = unconditional(\n        compareArrayLengths(tupleOrigin.value, destNode.value)\n      );\n      return strictMerge([\n        lengthCheck2,\n        ...destNode.value.map(\n          (value, idx) => () => nextCall(tupleOrigin.value[idx], value)\n        )\n      ]);\n    }\n    case \"result\":\n      const resultOrigin = originNode;\n      return mergeResults([\n        nextCall(resultOrigin.value.ok, destNode.value.ok),\n        nextCall(resultOrigin.value.ko, destNode.value.ko)\n      ]);\n  }\n}\nconst withMaxLevel = (result, level) => ({\n  ...result,\n  // Confusing yes, but it's Math.min. If we do withMaxLevel(result, 1), we expect to get at most [1] as a result\n  level: Math.min(result.level, level)\n});\nconst noAssumptions = new DoubleSet();\nconst unconditional = (level) => ({\n  level,\n  assumptions: noAssumptions\n});\nconst strictMerge = (results) => {\n  let merged = unconditional(3 /* Identical */);\n  for (const resultFn of results) {\n    const result = typeof resultFn === \"function\" ? resultFn() : resultFn;\n    if (result.level === 0 /* Incompatible */) return result;\n    merged.assumptions.addAll(result.assumptions.values);\n    merged.level = Math.min(merged.level, result.level);\n  }\n  return merged;\n};\nconst mergeResults = (results) => {\n  if (!results.length) return unconditional(3 /* Identical */);\n  let hasCompatibles = false;\n  let merged = unconditional(3 /* Identical */);\n  for (const resultFn of results) {\n    const result = typeof resultFn === \"function\" ? resultFn() : resultFn;\n    if (result.level === 0 /* Incompatible */) {\n      merged.level = Math.min(merged.level, 1 /* Partial */);\n      continue;\n    }\n    hasCompatibles = true;\n    merged.assumptions.addAll(result.assumptions.values);\n    merged.level = Math.min(merged.level, result.level);\n  }\n  return hasCompatibles ? merged : unconditional(0 /* Incompatible */);\n};\nconst compareArrayLengths = (origin, dest) => dest.length === origin.length ? 3 /* Identical */ : origin.length >= dest.length ? 2 /* BackwardsCompatible */ : 0 /* Incompatible */;\nconst compareOptionalLengths = (origin, dest) => dest === origin ? 3 /* Identical */ : dest == null || origin >= dest ? 2 /* BackwardsCompatible */ : origin == null ? 1 /* Partial */ : 0 /* Incompatible */;\n\nexport { CompatibilityLevel, compareArrayLengths, compareOptionalLengths, isStaticCompatible, strictMerge, unconditional };\n//# sourceMappingURL=isStaticCompatible.mjs.map\n","import { Variant, compactNumber, Struct } from '@polkadot-api/substrate-bindings';\nimport { isCompatible } from './isCompatible.mjs';\nimport { isStaticCompatible } from './isStaticCompatible.mjs';\nimport { TypedefCodec, Primitive, mapLookupToTypedef, mapReferences } from './typedef.mjs';\n\nconst EntryPointNodeCodec = Variant({\n  lookup: compactNumber,\n  typedef: TypedefCodec\n});\nconst lookupNode = (value) => ({\n  type: \"lookup\",\n  value\n});\nconst typedefNode = (value) => ({\n  type: \"typedef\",\n  value\n});\nconst voidEntryPointNode = typedefNode({\n  type: \"terminal\",\n  value: { type: Primitive.void }\n});\nconst EntryPointCodec = Struct({\n  args: EntryPointNodeCodec,\n  values: EntryPointNodeCodec\n});\nfunction storageEntryPoint(storageEntry) {\n  if (storageEntry.type.tag === \"plain\")\n    return {\n      args: voidEntryPointNode,\n      values: lookupNode(storageEntry.type.value)\n    };\n  const { key, value } = storageEntry.type.value;\n  return {\n    args: lookupNode(key),\n    values: lookupNode(value)\n  };\n}\nfunction runtimeCallEntryPoint(entry) {\n  return {\n    args: typedefNode({\n      type: \"tuple\",\n      value: entry.inputs.map((v) => v.type)\n    }),\n    values: lookupNode(entry.output)\n  };\n}\nfunction enumValueEntryPointNode(entry) {\n  return entry.type === \"lookupEntry\" ? lookupNode(entry.value.id) : typedefNode(mapLookupToTypedef(entry));\n}\nfunction singleValueEntryPoint(value) {\n  return {\n    args: voidEntryPointNode,\n    values: lookupNode(value)\n  };\n}\nfunction entryPointsAreCompatible(descriptorEntry, getDescriptorNode, runtimeEntry, getRuntimeNode, cache) {\n  const resolveNode = (node, getTypedef) => node.type === \"lookup\" ? getTypedef(node.value) : node.value;\n  return {\n    args: isStaticCompatible(\n      resolveNode(descriptorEntry.args, getDescriptorNode),\n      getDescriptorNode,\n      resolveNode(runtimeEntry.args, getRuntimeNode),\n      getRuntimeNode,\n      cache\n    ).level,\n    values: isStaticCompatible(\n      resolveNode(runtimeEntry.values, getRuntimeNode),\n      getRuntimeNode,\n      resolveNode(descriptorEntry.values, getDescriptorNode),\n      getDescriptorNode,\n      cache\n    ).level\n  };\n}\nfunction valueIsCompatibleWithDest(dest, getDestNode, value) {\n  const node = dest.type === \"lookup\" ? getDestNode(dest.value) : dest.value;\n  return isCompatible(value, node, getDestNode);\n}\nfunction mapEntryPointReferences(entryPoint, mapFn) {\n  const mapNode = (node) => node.type === \"lookup\" ? lookupNode(mapFn(node.value)) : typedefNode(mapReferences(node.value, mapFn));\n  return {\n    args: mapNode(entryPoint.args),\n    values: mapNode(entryPoint.values)\n  };\n}\n\nexport { EntryPointCodec, entryPointsAreCompatible, enumValueEntryPointNode, mapEntryPointReferences, runtimeCallEntryPoint, singleValueEntryPoint, storageEntryPoint, valueIsCompatibleWithDest, voidEntryPointNode };\n//# sourceMappingURL=entryPoint.mjs.map\n","const noop = () => {\n};\n\nexport { noop };\n//# sourceMappingURL=noop.mjs.map\n","const chainHead = {\n  body: \"\",\n  call: \"\",\n  continue: \"\",\n  follow: \"\",\n  header: \"\",\n  stopOperation: \"\",\n  storage: \"\",\n  unfollow: \"\",\n  unpin: \"\",\n  followEvent: \"\"\n};\nconst chainSpec = {\n  chainName: \"\",\n  genesisHash: \"\",\n  properties: \"\"\n};\nconst transaction = {\n  broadcast: \"\",\n  stop: \"\"\n};\nObject.entries({ chainHead, chainSpec, transaction }).forEach(\n  ([fnGroupName, methods]) => {\n    Object.keys(methods).forEach((methodName) => {\n      methods[methodName] = `${fnGroupName}_v1_${methodName}`;\n    });\n  }\n);\n\nexport { chainHead, chainSpec, transaction };\n//# sourceMappingURL=methods.mjs.map\n","import '@polkadot-api/utils';\nimport { noop } from '../internal-utils/noop.mjs';\nimport { transaction } from '../methods.mjs';\n\nconst getTransaction = (request) => (tx, error) => {\n  let cancel = request(transaction.broadcast, [tx], {\n    onSuccess: (subscriptionId) => {\n      cancel = subscriptionId === null ? noop : () => {\n        request(transaction.stop, [subscriptionId]);\n      };\n      if (subscriptionId === null) {\n        error(new Error(\"Max # of broadcasted transactions has been reached\"));\n      }\n    },\n    onError: error\n  });\n  return () => {\n    cancel();\n  };\n};\n\nexport { getTransaction };\n//# sourceMappingURL=transaction.mjs.map\n","class StopError extends Error {\n  constructor() {\n    super(\"ChainHead stopped\");\n    this.name = \"StopError\";\n  }\n}\nclass DisjointError extends Error {\n  constructor() {\n    super(\"ChainHead disjointed\");\n    this.name = \"DisjointError\";\n  }\n}\nclass OperationLimitError extends Error {\n  constructor() {\n    super(\"ChainHead operations limit reached\");\n    this.name = \"OperationLimitError\";\n  }\n}\nclass OperationError extends Error {\n  constructor(error) {\n    super(error);\n    this.name = \"OperationError\";\n  }\n}\nclass OperationInaccessibleError extends Error {\n  constructor() {\n    super(\"ChainHead operation inaccessible\");\n    this.name = \"OperationInaccessibleError\";\n  }\n}\n\nexport { DisjointError, OperationError, OperationInaccessibleError, OperationLimitError, StopError };\n//# sourceMappingURL=errors.mjs.map\n","function deferred() {\n  let res = () => {\n  };\n  let rej = () => {\n  };\n  const promise = new Promise((_res, _rej) => {\n    res = _res;\n    rej = _rej;\n  });\n  return { promise, res, rej };\n}\n\nexport { deferred };\n//# sourceMappingURL=deferred-promise.mjs.map\n","const getSubscriptionsManager = () => {\n  const subscriptions = /* @__PURE__ */ new Map();\n  return {\n    has: subscriptions.has.bind(subscriptions),\n    subscribe(id, subscriber) {\n      subscriptions.set(id, subscriber);\n    },\n    unsubscribe(id) {\n      subscriptions.delete(id);\n    },\n    next(id, data) {\n      subscriptions.get(id)?.next(data);\n    },\n    error(id, e) {\n      const subscriber = subscriptions.get(id);\n      if (subscriber) {\n        subscriptions.delete(id);\n        subscriber.error(e);\n      }\n    },\n    errorAll(e) {\n      const subscribers = [...subscriptions.values()];\n      subscriptions.clear();\n      subscribers.forEach((s) => {\n        s.error(e);\n      });\n    }\n  };\n};\n\nexport { getSubscriptionsManager };\n//# sourceMappingURL=subscriptions-manager.mjs.map\n","import { AbortError, noop } from '@polkadot-api/utils';\n\nconst abortablePromiseFn = (fn) => (...args) => new Promise((res, rej) => {\n  let cancel = noop;\n  const [actualArgs, abortSignal] = args[args.length - 1] instanceof AbortSignal ? [args.slice(0, args.length - 1), args[args.length - 1]] : [args];\n  const onAbort = () => {\n    cancel();\n    rej(new AbortError());\n  };\n  abortSignal?.addEventListener(\"abort\", onAbort, { once: true });\n  const withCleanup = (fn2) => (x) => {\n    cancel = noop;\n    abortSignal?.removeEventListener(\"abort\", onAbort);\n    fn2(x);\n  };\n  cancel = fn(...[withCleanup(res), withCleanup(rej), ...actualArgs]);\n});\n\nexport { abortablePromiseFn };\n//# sourceMappingURL=abortablePromiseFn.mjs.map\n","import { abortablePromiseFn } from '../internal-utils/abortablePromiseFn.mjs';\nimport { noop } from '../internal-utils/noop.mjs';\nimport { OperationLimitError, OperationError, OperationInaccessibleError } from './errors.mjs';\nimport { chainHead } from '../methods.mjs';\n\nconst createOperationPromise = (operationName, factory) => (request) => abortablePromiseFn((res, rej, ...args) => {\n  let isRunning = true;\n  let cancel = () => {\n    isRunning = false;\n  };\n  const [requestArgs, logicCb] = factory(...args);\n  request(operationName, requestArgs, {\n    onSuccess: (response, followSubscription) => {\n      if (response.result === \"limitReached\")\n        return rej(new OperationLimitError());\n      const { operationId } = response;\n      const stopOperation = () => {\n        request(chainHead.stopOperation, [operationId]);\n      };\n      if (!isRunning) return stopOperation();\n      let done = noop;\n      const _res = (x) => {\n        isRunning = false;\n        done();\n        res(x);\n      };\n      const _rej = (x) => {\n        isRunning = false;\n        done();\n        rej(x);\n      };\n      done = followSubscription(operationId, {\n        next: (e) => {\n          const _e = e;\n          if (_e.event === \"operationError\")\n            rej(new OperationError(_e.error));\n          else if (_e.event === \"operationInaccessible\")\n            rej(new OperationInaccessibleError());\n          else logicCb(e, _res, _rej);\n        },\n        error: _rej\n      });\n      cancel = () => {\n        if (isRunning) {\n          done();\n          stopOperation();\n        }\n      };\n    },\n    onError: rej\n  });\n  return () => {\n    cancel();\n  };\n});\n\nexport { createOperationPromise };\n//# sourceMappingURL=operation-promise.mjs.map\n","import { chainHead } from '../methods.mjs';\nimport { createOperationPromise } from './operation-promise.mjs';\n\nconst createBodyFn = createOperationPromise(\n  chainHead.body,\n  (hash) => [\n    [hash],\n    (e, res) => {\n      res(e.value);\n    }\n  ]\n);\n\nexport { createBodyFn };\n//# sourceMappingURL=body.mjs.map\n","import { chainHead } from '../methods.mjs';\nimport { createOperationPromise } from './operation-promise.mjs';\n\nconst createCallFn = createOperationPromise(\n  chainHead.call,\n  (hash, fnName, callParameters) => [\n    [hash, fnName, callParameters],\n    (e, res) => {\n      res(e.output);\n    }\n  ]\n);\n\nexport { createCallFn };\n//# sourceMappingURL=call.mjs.map\n","import { chainHead } from '../methods.mjs';\n\nconst createHeaderFn = (request) => (hash) => new Promise((res, rej) => {\n  request(chainHead.header, [hash], {\n    onSuccess: res,\n    onError: rej\n  });\n});\n\nexport { createHeaderFn };\n//# sourceMappingURL=header.mjs.map\n","import { noop } from '@polkadot-api/utils';\nimport { chainHead } from '../methods.mjs';\nimport { OperationLimitError, OperationInaccessibleError, OperationError } from './errors.mjs';\n\nconst createStorageCb = (request) => (hash, inputs, childTrie, onItems, onError, onDone, onDiscardedItems) => {\n  if (inputs.length === 0) {\n    onDone();\n    return noop;\n  }\n  let isRunning = true;\n  let cancel = () => {\n    isRunning = false;\n  };\n  request(chainHead.storage, [hash, inputs, childTrie], {\n    onSuccess: (response, followSubscription) => {\n      if (response.result === \"limitReached\" || response.discardedItems === inputs.length)\n        return onError(new OperationLimitError());\n      const { operationId } = response;\n      const stopOperation = () => {\n        request(chainHead.stopOperation, [operationId]);\n      };\n      if (!isRunning) return stopOperation();\n      const doneListening = followSubscription(response.operationId, {\n        next: (event) => {\n          switch (event.event) {\n            case \"operationStorageItems\": {\n              onItems(event.items);\n              break;\n            }\n            case \"operationStorageDone\": {\n              _onDone();\n              break;\n            }\n            case \"operationError\": {\n              _onError(new OperationError(event.error));\n              break;\n            }\n            case \"operationInaccessible\": {\n              _onError(new OperationInaccessibleError());\n              break;\n            }\n            default:\n              request(chainHead.continue, [event.operationId]);\n          }\n        },\n        error: onError\n      });\n      cancel = () => {\n        doneListening();\n        request(chainHead.stopOperation, [response.operationId]);\n      };\n      const _onError = (e) => {\n        cancel = noop;\n        doneListening();\n        onError(e);\n      };\n      const _onDone = () => {\n        cancel = noop;\n        doneListening();\n        onDone();\n      };\n      onDiscardedItems(response.discardedItems);\n    },\n    onError\n  });\n  return () => {\n    cancel();\n  };\n};\n\nexport { createStorageCb };\n//# sourceMappingURL=storage-subscription.mjs.map\n","import { OperationLimitError } from './errors.mjs';\nimport { abortablePromiseFn } from '../internal-utils/abortablePromiseFn.mjs';\nimport { createStorageCb } from './storage-subscription.mjs';\n\nconst createStorageFn = (request) => {\n  const cbStore = createStorageCb(request);\n  return abortablePromiseFn((resolve, reject, hash, type, key, childTrie) => {\n    const isDescendants = type.startsWith(\"descendants\");\n    let result = isDescendants ? [] : null;\n    const onItems = isDescendants ? (items) => {\n      result.push(items);\n    } : (items) => {\n      result = items[0]?.[type];\n    };\n    const cancel = cbStore(\n      hash,\n      [{ key, type }],\n      childTrie ?? null,\n      onItems,\n      reject,\n      () => {\n        try {\n          resolve(isDescendants ? result.flat() : result);\n        } catch (e) {\n          reject(e);\n        }\n      },\n      (nDiscarded) => {\n        if (nDiscarded > 0) {\n          cancel();\n          reject(new OperationLimitError());\n        }\n      }\n    );\n    return cancel;\n  });\n};\n\nexport { createStorageFn };\n//# sourceMappingURL=storage.mjs.map\n","import { chainHead } from '../methods.mjs';\n\nconst createUnpinFn = (request) => (hashes) => hashes.length > 0 ? new Promise((res, rej) => {\n  request(chainHead.unpin, [hashes], {\n    onSuccess() {\n      res();\n    },\n    onError: rej\n  });\n}) : Promise.resolve();\n\nexport { createUnpinFn };\n//# sourceMappingURL=unpin.mjs.map\n","class DestroyedError extends Error {\n  constructor() {\n    super(\"Client destroyed\");\n    this.name = \"DestroyedError\";\n  }\n}\n\nexport { DestroyedError };\n//# sourceMappingURL=DestroyedError.mjs.map\n","import '@polkadot-api/utils';\nimport { deferred } from '../internal-utils/deferred-promise.mjs';\nimport { noop } from '../internal-utils/noop.mjs';\nimport { getSubscriptionsManager } from '../internal-utils/subscriptions-manager.mjs';\nimport { createBodyFn } from './body.mjs';\nimport { createCallFn } from './call.mjs';\nimport { createHeaderFn } from './header.mjs';\nimport { createStorageFn } from './storage.mjs';\nimport { createUnpinFn } from './unpin.mjs';\nimport { DisjointError, StopError } from './errors.mjs';\nimport { createStorageCb } from './storage-subscription.mjs';\nimport { DestroyedError } from '../client/DestroyedError.mjs';\nimport { chainHead } from '../methods.mjs';\n\nfunction isOperationEvent(event) {\n  return event.operationId !== void 0;\n}\nfunction getChainHead(request) {\n  return (withRuntime, onFollowEvent, onFollowError) => {\n    const subscriptions = getSubscriptionsManager();\n    const ongoingRequests = /* @__PURE__ */ new Set();\n    const deferredFollow = deferred();\n    let followSubscription = deferredFollow.promise;\n    const onAllFollowEventsNext = (event) => {\n      if (isOperationEvent(event)) {\n        if (!subscriptions.has(event.operationId))\n          console.warn(\"Uknown operationId on\", event);\n        return subscriptions.next(event.operationId, event);\n      }\n      if (event.event !== \"stop\") {\n        if (event.event === \"initialized\") {\n          return onFollowEvent({\n            type: event.event,\n            finalizedBlockHashes: event.finalizedBlockHashes,\n            finalizedBlockRuntime: event.finalizedBlockRuntime\n          });\n        }\n        const { event: type, ...rest } = event;\n        return onFollowEvent({ type, ...rest });\n      }\n      onFollowError(new StopError());\n      unfollow(false);\n    };\n    const onAllFollowEventsError = (error) => {\n      onFollowError(error);\n      unfollow(!(error instanceof DestroyedError));\n    };\n    const onFollowRequestSuccess = (subscriptionId, follow) => {\n      const done = follow(subscriptionId, {\n        next: onAllFollowEventsNext,\n        error: onAllFollowEventsError\n      });\n      unfollow = (sendUnfollow = true) => {\n        followSubscription = null;\n        unfollow = noop;\n        done();\n        sendUnfollow && request(chainHead.unfollow, [subscriptionId]);\n        subscriptions.errorAll(new DisjointError());\n        ongoingRequests.forEach((cb) => {\n          cb();\n        });\n        ongoingRequests.clear();\n      };\n      followSubscription = subscriptionId;\n      deferredFollow.res(subscriptionId);\n    };\n    const onFollowRequestError = (e) => {\n      if (e instanceof DestroyedError) {\n        unfollow(false);\n      } else {\n        onFollowError(e);\n      }\n      followSubscription = null;\n      deferredFollow.res(e);\n    };\n    let unfollow = request(\n      chainHead.follow,\n      [withRuntime],\n      { onSuccess: onFollowRequestSuccess, onError: onFollowRequestError }\n    );\n    const fRequest = (method, params, cb) => {\n      const disjoint = () => {\n        cb?.onError(new DisjointError());\n      };\n      if (followSubscription === null) {\n        disjoint();\n        return noop;\n      }\n      const onSubscription = (subscription) => {\n        if (!cb) return request(method, [subscription, ...params]);\n        ongoingRequests.add(disjoint);\n        const onSubscribeOperation = (operationId, subscriber) => {\n          if (followSubscription === null) {\n            subscriber.error(new DisjointError());\n            return noop;\n          }\n          subscriptions.subscribe(operationId, subscriber);\n          return () => {\n            subscriptions.unsubscribe(operationId);\n          };\n        };\n        const cleanup = request(method, [subscription, ...params], {\n          onSuccess: (response) => {\n            ongoingRequests.delete(disjoint);\n            cb.onSuccess(response, onSubscribeOperation);\n          },\n          onError: (e) => {\n            ongoingRequests.delete(disjoint);\n            cb.onError(e);\n          }\n        });\n        return () => {\n          ongoingRequests.delete(disjoint);\n          cleanup();\n        };\n      };\n      if (typeof followSubscription === \"string\")\n        return onSubscription(followSubscription);\n      let onCancel = noop;\n      followSubscription.then((x) => {\n        if (x instanceof Error) return disjoint();\n        if (followSubscription) onCancel = onSubscription(x);\n      });\n      return () => {\n        onCancel();\n      };\n    };\n    return {\n      unfollow() {\n        unfollow();\n        followSubscription = null;\n      },\n      body: createBodyFn(fRequest),\n      call: createCallFn(fRequest),\n      header: createHeaderFn(fRequest),\n      storage: createStorageFn(fRequest),\n      storageSubscription: createStorageCb(fRequest),\n      unpin: createUnpinFn(fRequest),\n      _request: fRequest\n    };\n  };\n}\n\nexport { getChainHead };\n//# sourceMappingURL=chainhead.mjs.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass RpcError extends Error {\n  constructor(e) {\n    super(e.message);\n    __publicField(this, \"code\");\n    __publicField(this, \"data\");\n    this.code = e.code;\n    this.data = e.data;\n    this.name = \"RpcError\";\n  }\n}\n\nexport { RpcError };\n//# sourceMappingURL=RpcError.mjs.map\n","import { RpcError } from './RpcError.mjs';\nimport '@polkadot-api/utils';\nimport { getSubscriptionsManager } from '../internal-utils/subscriptions-manager.mjs';\nimport { DestroyedError } from './DestroyedError.mjs';\n\nlet nextClientId = 1;\nconst createClient = (gProvider) => {\n  let clientId = nextClientId++;\n  const responses = /* @__PURE__ */ new Map();\n  const subscriptions = getSubscriptionsManager();\n  let connection = null;\n  const send = (id, method, params) => {\n    connection.send(\n      JSON.stringify({\n        jsonrpc: \"2.0\",\n        id,\n        method,\n        params\n      })\n    );\n  };\n  function onMessage(message) {\n    try {\n      let id, result, error, params, subscription;\n      const parsed = JSON.parse(message);\n      ({ id, result, error, params } = parsed);\n      if (id) {\n        const cb = responses.get(id);\n        if (!cb) return;\n        responses.delete(id);\n        return error ? cb.onError(new RpcError(error)) : cb.onSuccess(result, (opaqueId, subscriber) => {\n          const subscriptionId2 = opaqueId;\n          subscriptions.subscribe(subscriptionId2, subscriber);\n          return () => {\n            subscriptions.unsubscribe(subscriptionId2);\n          };\n        });\n      }\n      ;\n      ({ subscription, result, error } = params);\n      if (!subscription || !error && !Object.hasOwn(params, \"result\")) throw 0;\n      const subscriptionId = subscription;\n      if (error) {\n        subscriptions.error(subscriptionId, new RpcError(error));\n      } else {\n        subscriptions.next(subscriptionId, result);\n      }\n    } catch (e) {\n      console.warn(\"Error parsing incomming message: \" + message);\n      console.error(e);\n    }\n  }\n  connection = gProvider(onMessage);\n  const disconnect = () => {\n    connection?.disconnect();\n    connection = null;\n    subscriptions.errorAll(new DestroyedError());\n    responses.forEach((r) => r.onError(new DestroyedError()));\n    responses.clear();\n  };\n  let nextId = 1;\n  const request = (method, params, cb) => {\n    if (!connection) throw new Error(\"Not connected\");\n    const id = `${clientId}-${nextId++}`;\n    if (cb) responses.set(id, cb);\n    send(id, method, params);\n    return () => {\n      responses.delete(id);\n    };\n  };\n  return {\n    request,\n    disconnect\n  };\n};\n\nexport { createClient };\n//# sourceMappingURL=createClient.mjs.map\n","import { abortablePromiseFn } from './internal-utils/abortablePromiseFn.mjs';\nimport { chainSpec } from './methods.mjs';\n\nconst createGetChainSpec = (clientRequest) => {\n  const request = abortablePromiseFn(\n    (onSuccess, onError, method, params) => clientRequest(method, params, { onSuccess, onError })\n  );\n  let cachedPromise = null;\n  return async () => {\n    if (cachedPromise) return cachedPromise;\n    return cachedPromise = Promise.all([\n      request(chainSpec.chainName, []),\n      request(chainSpec.genesisHash, []),\n      request(chainSpec.properties, [])\n    ]).then(([name, genesisHash, properties]) => ({\n      name,\n      genesisHash,\n      properties\n    }));\n  };\n};\n\nexport { createGetChainSpec };\n//# sourceMappingURL=chainspec.mjs.map\n","import { getTransaction } from './transaction/transaction.mjs';\nexport { DisjointError, OperationError, OperationInaccessibleError, OperationLimitError, StopError } from './chainhead/errors.mjs';\nimport { getChainHead } from './chainhead/chainhead.mjs';\nexport { RpcError } from './client/RpcError.mjs';\nimport { createClient as createClient$1 } from './client/createClient.mjs';\nexport { DestroyedError } from './client/DestroyedError.mjs';\nimport { abortablePromiseFn } from './internal-utils/abortablePromiseFn.mjs';\nimport { createGetChainSpec } from './chainspec.mjs';\nexport { AbortError } from '@polkadot-api/utils';\n\nconst clientCache = /* @__PURE__ */ new Map();\nconst createClient = (provider) => {\n  const cached = clientCache.get(provider);\n  if (cached) {\n    cached.refCount++;\n    return cached.client;\n  }\n  const { request, disconnect } = createClient$1(provider);\n  const destroy = () => {\n    const cached2 = clientCache.get(provider);\n    if (!cached2 || cached2.refCount <= 1) {\n      clientCache.delete(provider);\n      disconnect();\n    } else {\n      cached2.refCount--;\n    }\n  };\n  const client = {\n    chainHead: getChainHead(request),\n    transaction: getTransaction(request),\n    getChainSpecData: createGetChainSpec(request),\n    destroy,\n    request: abortablePromiseFn(\n      (onSuccess, onError, method, params) => request(method, params, { onSuccess, onError })\n    ),\n    _request: request\n  };\n  clientCache.set(provider, { client, refCount: 1 });\n  return client;\n};\n\nexport { createClient };\n//# sourceMappingURL=index.mjs.map\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","export function isFunction(value) {\n    return typeof value === 'function';\n}\n//# sourceMappingURL=isFunction.js.map","export function createErrorClass(createImpl) {\n    var _super = function (instance) {\n        Error.call(instance);\n        instance.stack = new Error().stack;\n    };\n    var ctorFunc = createImpl(_super);\n    ctorFunc.prototype = Object.create(Error.prototype);\n    ctorFunc.prototype.constructor = ctorFunc;\n    return ctorFunc;\n}\n//# sourceMappingURL=createErrorClass.js.map","import { createErrorClass } from './createErrorClass';\nexport var UnsubscriptionError = createErrorClass(function (_super) {\n    return function UnsubscriptionErrorImpl(errors) {\n        _super(this);\n        this.message = errors\n            ? errors.length + \" errors occurred during unsubscription:\\n\" + errors.map(function (err, i) { return i + 1 + \") \" + err.toString(); }).join('\\n  ')\n            : '';\n        this.name = 'UnsubscriptionError';\n        this.errors = errors;\n    };\n});\n//# sourceMappingURL=UnsubscriptionError.js.map","export function arrRemove(arr, item) {\n    if (arr) {\n        var index = arr.indexOf(item);\n        0 <= index && arr.splice(index, 1);\n    }\n}\n//# sourceMappingURL=arrRemove.js.map","import { __read, __spreadArray, __values } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { arrRemove } from './util/arrRemove';\nvar Subscription = (function () {\n    function Subscription(initialTeardown) {\n        this.initialTeardown = initialTeardown;\n        this.closed = false;\n        this._parentage = null;\n        this._finalizers = null;\n    }\n    Subscription.prototype.unsubscribe = function () {\n        var e_1, _a, e_2, _b;\n        var errors;\n        if (!this.closed) {\n            this.closed = true;\n            var _parentage = this._parentage;\n            if (_parentage) {\n                this._parentage = null;\n                if (Array.isArray(_parentage)) {\n                    try {\n                        for (var _parentage_1 = __values(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {\n                            var parent_1 = _parentage_1_1.value;\n                            parent_1.remove(this);\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_parentage_1_1 && !_parentage_1_1.done && (_a = _parentage_1.return)) _a.call(_parentage_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                else {\n                    _parentage.remove(this);\n                }\n            }\n            var initialFinalizer = this.initialTeardown;\n            if (isFunction(initialFinalizer)) {\n                try {\n                    initialFinalizer();\n                }\n                catch (e) {\n                    errors = e instanceof UnsubscriptionError ? e.errors : [e];\n                }\n            }\n            var _finalizers = this._finalizers;\n            if (_finalizers) {\n                this._finalizers = null;\n                try {\n                    for (var _finalizers_1 = __values(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {\n                        var finalizer = _finalizers_1_1.value;\n                        try {\n                            execFinalizer(finalizer);\n                        }\n                        catch (err) {\n                            errors = errors !== null && errors !== void 0 ? errors : [];\n                            if (err instanceof UnsubscriptionError) {\n                                errors = __spreadArray(__spreadArray([], __read(errors)), __read(err.errors));\n                            }\n                            else {\n                                errors.push(err);\n                            }\n                        }\n                    }\n                }\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                finally {\n                    try {\n                        if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return)) _b.call(_finalizers_1);\n                    }\n                    finally { if (e_2) throw e_2.error; }\n                }\n            }\n            if (errors) {\n                throw new UnsubscriptionError(errors);\n            }\n        }\n    };\n    Subscription.prototype.add = function (teardown) {\n        var _a;\n        if (teardown && teardown !== this) {\n            if (this.closed) {\n                execFinalizer(teardown);\n            }\n            else {\n                if (teardown instanceof Subscription) {\n                    if (teardown.closed || teardown._hasParent(this)) {\n                        return;\n                    }\n                    teardown._addParent(this);\n                }\n                (this._finalizers = (_a = this._finalizers) !== null && _a !== void 0 ? _a : []).push(teardown);\n            }\n        }\n    };\n    Subscription.prototype._hasParent = function (parent) {\n        var _parentage = this._parentage;\n        return _parentage === parent || (Array.isArray(_parentage) && _parentage.includes(parent));\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _parentage = this._parentage;\n        this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;\n    };\n    Subscription.prototype._removeParent = function (parent) {\n        var _parentage = this._parentage;\n        if (_parentage === parent) {\n            this._parentage = null;\n        }\n        else if (Array.isArray(_parentage)) {\n            arrRemove(_parentage, parent);\n        }\n    };\n    Subscription.prototype.remove = function (teardown) {\n        var _finalizers = this._finalizers;\n        _finalizers && arrRemove(_finalizers, teardown);\n        if (teardown instanceof Subscription) {\n            teardown._removeParent(this);\n        }\n    };\n    Subscription.EMPTY = (function () {\n        var empty = new Subscription();\n        empty.closed = true;\n        return empty;\n    })();\n    return Subscription;\n}());\nexport { Subscription };\nexport var EMPTY_SUBSCRIPTION = Subscription.EMPTY;\nexport function isSubscription(value) {\n    return (value instanceof Subscription ||\n        (value && 'closed' in value && isFunction(value.remove) && isFunction(value.add) && isFunction(value.unsubscribe)));\n}\nfunction execFinalizer(finalizer) {\n    if (isFunction(finalizer)) {\n        finalizer();\n    }\n    else {\n        finalizer.unsubscribe();\n    }\n}\n//# sourceMappingURL=Subscription.js.map","export var config = {\n    onUnhandledError: null,\n    onStoppedNotification: null,\n    Promise: undefined,\n    useDeprecatedSynchronousErrorHandling: false,\n    useDeprecatedNextContext: false,\n};\n//# sourceMappingURL=config.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var timeoutProvider = {\n    setTimeout: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = timeoutProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {\n            return delegate.setTimeout.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setTimeout.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearTimeout: function (handle) {\n        var delegate = timeoutProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=timeoutProvider.js.map","import { config } from '../config';\nimport { timeoutProvider } from '../scheduler/timeoutProvider';\nexport function reportUnhandledError(err) {\n    timeoutProvider.setTimeout(function () {\n        var onUnhandledError = config.onUnhandledError;\n        if (onUnhandledError) {\n            onUnhandledError(err);\n        }\n        else {\n            throw err;\n        }\n    });\n}\n//# sourceMappingURL=reportUnhandledError.js.map","export function noop() { }\n//# sourceMappingURL=noop.js.map","import { config } from '../config';\nvar context = null;\nexport function errorContext(cb) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        var isRoot = !context;\n        if (isRoot) {\n            context = { errorThrown: false, error: null };\n        }\n        cb();\n        if (isRoot) {\n            var _a = context, errorThrown = _a.errorThrown, error = _a.error;\n            context = null;\n            if (errorThrown) {\n                throw error;\n            }\n        }\n    }\n    else {\n        cb();\n    }\n}\nexport function captureError(err) {\n    if (config.useDeprecatedSynchronousErrorHandling && context) {\n        context.errorThrown = true;\n        context.error = err;\n    }\n}\n//# sourceMappingURL=errorContext.js.map","import { __extends } from \"tslib\";\nimport { isFunction } from './util/isFunction';\nimport { isSubscription, Subscription } from './Subscription';\nimport { config } from './config';\nimport { reportUnhandledError } from './util/reportUnhandledError';\nimport { noop } from './util/noop';\nimport { nextNotification, errorNotification, COMPLETE_NOTIFICATION } from './NotificationFactories';\nimport { timeoutProvider } from './scheduler/timeoutProvider';\nimport { captureError } from './util/errorContext';\nvar Subscriber = (function (_super) {\n    __extends(Subscriber, _super);\n    function Subscriber(destination) {\n        var _this = _super.call(this) || this;\n        _this.isStopped = false;\n        if (destination) {\n            _this.destination = destination;\n            if (isSubscription(destination)) {\n                destination.add(_this);\n            }\n        }\n        else {\n            _this.destination = EMPTY_OBSERVER;\n        }\n        return _this;\n    }\n    Subscriber.create = function (next, error, complete) {\n        return new SafeSubscriber(next, error, complete);\n    };\n    Subscriber.prototype.next = function (value) {\n        if (this.isStopped) {\n            handleStoppedNotification(nextNotification(value), this);\n        }\n        else {\n            this._next(value);\n        }\n    };\n    Subscriber.prototype.error = function (err) {\n        if (this.isStopped) {\n            handleStoppedNotification(errorNotification(err), this);\n        }\n        else {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    Subscriber.prototype.complete = function () {\n        if (this.isStopped) {\n            handleStoppedNotification(COMPLETE_NOTIFICATION, this);\n        }\n        else {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            this.isStopped = true;\n            _super.prototype.unsubscribe.call(this);\n            this.destination = null;\n        }\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        try {\n            this.destination.error(err);\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    Subscriber.prototype._complete = function () {\n        try {\n            this.destination.complete();\n        }\n        finally {\n            this.unsubscribe();\n        }\n    };\n    return Subscriber;\n}(Subscription));\nexport { Subscriber };\nvar _bind = Function.prototype.bind;\nfunction bind(fn, thisArg) {\n    return _bind.call(fn, thisArg);\n}\nvar ConsumerObserver = (function () {\n    function ConsumerObserver(partialObserver) {\n        this.partialObserver = partialObserver;\n    }\n    ConsumerObserver.prototype.next = function (value) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.next) {\n            try {\n                partialObserver.next(value);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    ConsumerObserver.prototype.error = function (err) {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.error) {\n            try {\n                partialObserver.error(err);\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n        else {\n            handleUnhandledError(err);\n        }\n    };\n    ConsumerObserver.prototype.complete = function () {\n        var partialObserver = this.partialObserver;\n        if (partialObserver.complete) {\n            try {\n                partialObserver.complete();\n            }\n            catch (error) {\n                handleUnhandledError(error);\n            }\n        }\n    };\n    return ConsumerObserver;\n}());\nvar SafeSubscriber = (function (_super) {\n    __extends(SafeSubscriber, _super);\n    function SafeSubscriber(observerOrNext, error, complete) {\n        var _this = _super.call(this) || this;\n        var partialObserver;\n        if (isFunction(observerOrNext) || !observerOrNext) {\n            partialObserver = {\n                next: (observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : undefined),\n                error: error !== null && error !== void 0 ? error : undefined,\n                complete: complete !== null && complete !== void 0 ? complete : undefined,\n            };\n        }\n        else {\n            var context_1;\n            if (_this && config.useDeprecatedNextContext) {\n                context_1 = Object.create(observerOrNext);\n                context_1.unsubscribe = function () { return _this.unsubscribe(); };\n                partialObserver = {\n                    next: observerOrNext.next && bind(observerOrNext.next, context_1),\n                    error: observerOrNext.error && bind(observerOrNext.error, context_1),\n                    complete: observerOrNext.complete && bind(observerOrNext.complete, context_1),\n                };\n            }\n            else {\n                partialObserver = observerOrNext;\n            }\n        }\n        _this.destination = new ConsumerObserver(partialObserver);\n        return _this;\n    }\n    return SafeSubscriber;\n}(Subscriber));\nexport { SafeSubscriber };\nfunction handleUnhandledError(error) {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n        captureError(error);\n    }\n    else {\n        reportUnhandledError(error);\n    }\n}\nfunction defaultErrorHandler(err) {\n    throw err;\n}\nfunction handleStoppedNotification(notification, subscriber) {\n    var onStoppedNotification = config.onStoppedNotification;\n    onStoppedNotification && timeoutProvider.setTimeout(function () { return onStoppedNotification(notification, subscriber); });\n}\nexport var EMPTY_OBSERVER = {\n    closed: true,\n    next: noop,\n    error: defaultErrorHandler,\n    complete: noop,\n};\n//# sourceMappingURL=Subscriber.js.map","export var observable = (function () { return (typeof Symbol === 'function' && Symbol.observable) || '@@observable'; })();\n//# sourceMappingURL=observable.js.map","export function identity(x) {\n    return x;\n}\n//# sourceMappingURL=identity.js.map","import { identity } from './identity';\nexport function pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nexport function pipeFromArray(fns) {\n    if (fns.length === 0) {\n        return identity;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\n//# sourceMappingURL=pipe.js.map","import { SafeSubscriber, Subscriber } from './Subscriber';\nimport { isSubscription } from './Subscription';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\nimport { isFunction } from './util/isFunction';\nimport { errorContext } from './util/errorContext';\nvar Observable = (function () {\n    function Observable(subscribe) {\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    Observable.prototype.lift = function (operator) {\n        var observable = new Observable();\n        observable.source = this;\n        observable.operator = operator;\n        return observable;\n    };\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var _this = this;\n        var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new SafeSubscriber(observerOrNext, error, complete);\n        errorContext(function () {\n            var _a = _this, operator = _a.operator, source = _a.source;\n            subscriber.add(operator\n                ?\n                    operator.call(subscriber, source)\n                : source\n                    ?\n                        _this._subscribe(subscriber)\n                    :\n                        _this._trySubscribe(subscriber));\n        });\n        return subscriber;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.error(err);\n        }\n    };\n    Observable.prototype.forEach = function (next, promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var subscriber = new SafeSubscriber({\n                next: function (value) {\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscriber.unsubscribe();\n                    }\n                },\n                error: reject,\n                complete: resolve,\n            });\n            _this.subscribe(subscriber);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        var _a;\n        return (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber);\n    };\n    Observable.prototype[Symbol_observable] = function () {\n        return this;\n    };\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i] = arguments[_i];\n        }\n        return pipeFromArray(operations)(this);\n    };\n    Observable.prototype.toPromise = function (promiseCtor) {\n        var _this = this;\n        promiseCtor = getPromiseCtor(promiseCtor);\n        return new promiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return (value = x); }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nexport { Observable };\nfunction getPromiseCtor(promiseCtor) {\n    var _a;\n    return (_a = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config.Promise) !== null && _a !== void 0 ? _a : Promise;\n}\nfunction isObserver(value) {\n    return value && isFunction(value.next) && isFunction(value.error) && isFunction(value.complete);\n}\nfunction isSubscriber(value) {\n    return (value && value instanceof Subscriber) || (isObserver(value) && isSubscription(value));\n}\n//# sourceMappingURL=Observable.js.map","import { isFunction } from './isFunction';\nexport function hasLift(source) {\n    return isFunction(source === null || source === void 0 ? void 0 : source.lift);\n}\nexport function operate(init) {\n    return function (source) {\n        if (hasLift(source)) {\n            return source.lift(function (liftedSource) {\n                try {\n                    return init(liftedSource, this);\n                }\n                catch (err) {\n                    this.error(err);\n                }\n            });\n        }\n        throw new TypeError('Unable to lift unknown Observable type');\n    };\n}\n//# sourceMappingURL=lift.js.map","import { __extends } from \"tslib\";\nimport { Subscriber } from '../Subscriber';\nexport function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {\n    return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);\n}\nvar OperatorSubscriber = (function (_super) {\n    __extends(OperatorSubscriber, _super);\n    function OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {\n        var _this = _super.call(this, destination) || this;\n        _this.onFinalize = onFinalize;\n        _this.shouldUnsubscribe = shouldUnsubscribe;\n        _this._next = onNext\n            ? function (value) {\n                try {\n                    onNext(value);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n            }\n            : _super.prototype._next;\n        _this._error = onError\n            ? function (err) {\n                try {\n                    onError(err);\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._error;\n        _this._complete = onComplete\n            ? function () {\n                try {\n                    onComplete();\n                }\n                catch (err) {\n                    destination.error(err);\n                }\n                finally {\n                    this.unsubscribe();\n                }\n            }\n            : _super.prototype._complete;\n        return _this;\n    }\n    OperatorSubscriber.prototype.unsubscribe = function () {\n        var _a;\n        if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {\n            var closed_1 = this.closed;\n            _super.prototype.unsubscribe.call(this);\n            !closed_1 && ((_a = this.onFinalize) === null || _a === void 0 ? void 0 : _a.call(this));\n        }\n    };\n    return OperatorSubscriber;\n}(Subscriber));\nexport { OperatorSubscriber };\n//# sourceMappingURL=OperatorSubscriber.js.map","import { createErrorClass } from './createErrorClass';\nexport var ObjectUnsubscribedError = createErrorClass(function (_super) {\n    return function ObjectUnsubscribedErrorImpl() {\n        _super(this);\n        this.name = 'ObjectUnsubscribedError';\n        this.message = 'object unsubscribed';\n    };\n});\n//# sourceMappingURL=ObjectUnsubscribedError.js.map","import { __extends, __values } from \"tslib\";\nimport { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nvar Subject = (function (_super) {\n    __extends(Subject, _super);\n    function Subject() {\n        var _this = _super.call(this) || this;\n        _this.closed = false;\n        _this.currentObservers = null;\n        _this.observers = [];\n        _this.isStopped = false;\n        _this.hasError = false;\n        _this.thrownError = null;\n        return _this;\n    }\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype._throwIfClosed = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    };\n    Subject.prototype.next = function (value) {\n        var _this = this;\n        errorContext(function () {\n            var e_1, _a;\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                if (!_this.currentObservers) {\n                    _this.currentObservers = Array.from(_this.observers);\n                }\n                try {\n                    for (var _b = __values(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                        var observer = _c.value;\n                        observer.next(value);\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n            }\n        });\n    };\n    Subject.prototype.error = function (err) {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.hasError = _this.isStopped = true;\n                _this.thrownError = err;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    };\n    Subject.prototype.complete = function () {\n        var _this = this;\n        errorContext(function () {\n            _this._throwIfClosed();\n            if (!_this.isStopped) {\n                _this.isStopped = true;\n                var observers = _this.observers;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    };\n    Object.defineProperty(Subject.prototype, \"observed\", {\n        get: function () {\n            var _a;\n            return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Subject.prototype._trySubscribe = function (subscriber) {\n        this._throwIfClosed();\n        return _super.prototype._trySubscribe.call(this, subscriber);\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    };\n    Subject.prototype._innerSubscribe = function (subscriber) {\n        var _this = this;\n        var _a = this, hasError = _a.hasError, isStopped = _a.isStopped, observers = _a.observers;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(function () {\n            _this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    };\n    Subject.prototype._checkFinalizedStatuses = function (subscriber) {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, isStopped = _a.isStopped;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable));\nexport { Subject };\nvar AnonymousSubject = (function (_super) {\n    __extends(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        var _this = _super.call(this) || this;\n        _this.destination = destination;\n        _this.source = source;\n        return _this;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    };\n    return AnonymousSubject;\n}(Subject));\nexport { AnonymousSubject };\n//# sourceMappingURL=Subject.js.map","import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nvar BehaviorSubject = (function (_super) {\n    __extends(BehaviorSubject, _super);\n    function BehaviorSubject(_value) {\n        var _this = _super.call(this) || this;\n        _this._value = _value;\n        return _this;\n    }\n    Object.defineProperty(BehaviorSubject.prototype, \"value\", {\n        get: function () {\n            return this.getValue();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BehaviorSubject.prototype._subscribe = function (subscriber) {\n        var subscription = _super.prototype._subscribe.call(this, subscriber);\n        !subscription.closed && subscriber.next(this._value);\n        return subscription;\n    };\n    BehaviorSubject.prototype.getValue = function () {\n        var _a = this, hasError = _a.hasError, thrownError = _a.thrownError, _value = _a._value;\n        if (hasError) {\n            throw thrownError;\n        }\n        this._throwIfClosed();\n        return _value;\n    };\n    BehaviorSubject.prototype.next = function (value) {\n        _super.prototype.next.call(this, (this._value = value));\n    };\n    return BehaviorSubject;\n}(Subject));\nexport { BehaviorSubject };\n//# sourceMappingURL=BehaviorSubject.js.map","export var dateTimestampProvider = {\n    now: function () {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=dateTimestampProvider.js.map","import { __extends } from \"tslib\";\nimport { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar ReplaySubject = (function (_super) {\n    __extends(ReplaySubject, _super);\n    function ReplaySubject(_bufferSize, _windowTime, _timestampProvider) {\n        if (_bufferSize === void 0) { _bufferSize = Infinity; }\n        if (_windowTime === void 0) { _windowTime = Infinity; }\n        if (_timestampProvider === void 0) { _timestampProvider = dateTimestampProvider; }\n        var _this = _super.call(this) || this;\n        _this._bufferSize = _bufferSize;\n        _this._windowTime = _windowTime;\n        _this._timestampProvider = _timestampProvider;\n        _this._buffer = [];\n        _this._infiniteTimeWindow = true;\n        _this._infiniteTimeWindow = _windowTime === Infinity;\n        _this._bufferSize = Math.max(1, _bufferSize);\n        _this._windowTime = Math.max(1, _windowTime);\n        return _this;\n    }\n    ReplaySubject.prototype.next = function (value) {\n        var _a = this, isStopped = _a.isStopped, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow, _timestampProvider = _a._timestampProvider, _windowTime = _a._windowTime;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        _super.prototype.next.call(this, value);\n    };\n    ReplaySubject.prototype._subscribe = function (subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        var subscription = this._innerSubscribe(subscriber);\n        var _a = this, _infiniteTimeWindow = _a._infiniteTimeWindow, _buffer = _a._buffer;\n        var copy = _buffer.slice();\n        for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    };\n    ReplaySubject.prototype._trimBuffer = function () {\n        var _a = this, _bufferSize = _a._bufferSize, _timestampProvider = _a._timestampProvider, _buffer = _a._buffer, _infiniteTimeWindow = _a._infiniteTimeWindow;\n        var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            var now = _timestampProvider.now();\n            var last = 0;\n            for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    };\n    return ReplaySubject;\n}(Subject));\nexport { ReplaySubject };\n//# sourceMappingURL=ReplaySubject.js.map","import { __extends } from \"tslib\";\nimport { Subscription } from '../Subscription';\nvar Action = (function (_super) {\n    __extends(Action, _super);\n    function Action(scheduler, work) {\n        return _super.call(this) || this;\n    }\n    Action.prototype.schedule = function (state, delay) {\n        if (delay === void 0) { delay = 0; }\n        return this;\n    };\n    return Action;\n}(Subscription));\nexport { Action };\n//# sourceMappingURL=Action.js.map","import { __read, __spreadArray } from \"tslib\";\nexport var intervalProvider = {\n    setInterval: function (handler, timeout) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var delegate = intervalProvider.delegate;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval.apply(delegate, __spreadArray([handler, timeout], __read(args)));\n        }\n        return setInterval.apply(void 0, __spreadArray([handler, timeout], __read(args)));\n    },\n    clearInterval: function (handle) {\n        var delegate = intervalProvider.delegate;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n//# sourceMappingURL=intervalProvider.js.map","import { __extends } from \"tslib\";\nimport { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nvar AsyncAction = (function (_super) {\n    __extends(AsyncAction, _super);\n    function AsyncAction(scheduler, work) {\n        var _this = _super.call(this, scheduler, work) || this;\n        _this.scheduler = scheduler;\n        _this.work = work;\n        _this.pending = false;\n        return _this;\n    }\n    AsyncAction.prototype.schedule = function (state, delay) {\n        var _a;\n        if (delay === void 0) { delay = 0; }\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        var id = this.id;\n        var scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    };\n    AsyncAction.prototype.requestAsyncId = function (scheduler, _id, delay) {\n        if (delay === void 0) { delay = 0; }\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    };\n    AsyncAction.prototype.recycleAsyncId = function (_scheduler, id, delay) {\n        if (delay === void 0) { delay = 0; }\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    };\n    AsyncAction.prototype.execute = function (state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        var error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    };\n    AsyncAction.prototype._execute = function (state, _delay) {\n        var errored = false;\n        var errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    };\n    AsyncAction.prototype.unsubscribe = function () {\n        if (!this.closed) {\n            var _a = this, id = _a.id, scheduler = _a.scheduler;\n            var actions = scheduler.actions;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            _super.prototype.unsubscribe.call(this);\n        }\n    };\n    return AsyncAction;\n}(Action));\nexport { AsyncAction };\n//# sourceMappingURL=AsyncAction.js.map","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nvar Scheduler = (function () {\n    function Scheduler(schedulerActionCtor, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    Scheduler.prototype.schedule = function (work, delay, state) {\n        if (delay === void 0) { delay = 0; }\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    };\n    Scheduler.now = dateTimestampProvider.now;\n    return Scheduler;\n}());\nexport { Scheduler };\n//# sourceMappingURL=Scheduler.js.map","import { __extends } from \"tslib\";\nimport { Scheduler } from '../Scheduler';\nvar AsyncScheduler = (function (_super) {\n    __extends(AsyncScheduler, _super);\n    function AsyncScheduler(SchedulerAction, now) {\n        if (now === void 0) { now = Scheduler.now; }\n        var _this = _super.call(this, SchedulerAction, now) || this;\n        _this.actions = [];\n        _this._active = false;\n        return _this;\n    }\n    AsyncScheduler.prototype.flush = function (action) {\n        var actions = this.actions;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        var error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    };\n    return AsyncScheduler;\n}(Scheduler));\nexport { AsyncScheduler };\n//# sourceMappingURL=AsyncScheduler.js.map","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport var asyncScheduler = new AsyncScheduler(AsyncAction);\nexport var async = asyncScheduler;\n//# sourceMappingURL=async.js.map","import { Observable } from '../Observable';\nexport var EMPTY = new Observable(function (subscriber) { return subscriber.complete(); });\nexport function empty(scheduler) {\n    return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\nfunction emptyScheduled(scheduler) {\n    return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });\n}\n//# sourceMappingURL=empty.js.map","import { isFunction } from './isFunction';\nexport function isScheduler(value) {\n    return value && isFunction(value.schedule);\n}\n//# sourceMappingURL=isScheduler.js.map","import { isFunction } from './isFunction';\nimport { isScheduler } from './isScheduler';\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nexport function popResultSelector(args) {\n    return isFunction(last(args)) ? args.pop() : undefined;\n}\nexport function popScheduler(args) {\n    return isScheduler(last(args)) ? args.pop() : undefined;\n}\nexport function popNumber(args, defaultValue) {\n    return typeof last(args) === 'number' ? args.pop() : defaultValue;\n}\n//# sourceMappingURL=args.js.map","export var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });\n//# sourceMappingURL=isArrayLike.js.map","import { isFunction } from \"./isFunction\";\nexport function isPromise(value) {\n    return isFunction(value === null || value === void 0 ? void 0 : value.then);\n}\n//# sourceMappingURL=isPromise.js.map","import { observable as Symbol_observable } from '../symbol/observable';\nimport { isFunction } from './isFunction';\nexport function isInteropObservable(input) {\n    return isFunction(input[Symbol_observable]);\n}\n//# sourceMappingURL=isInteropObservable.js.map","import { isFunction } from './isFunction';\nexport function isAsyncIterable(obj) {\n    return Symbol.asyncIterator && isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);\n}\n//# sourceMappingURL=isAsyncIterable.js.map","export function createInvalidObservableTypeError(input) {\n    return new TypeError(\"You provided \" + (input !== null && typeof input === 'object' ? 'an invalid object' : \"'\" + input + \"'\") + \" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.\");\n}\n//# sourceMappingURL=throwUnobservableError.js.map","export function getSymbolIterator() {\n    if (typeof Symbol !== 'function' || !Symbol.iterator) {\n        return '@@iterator';\n    }\n    return Symbol.iterator;\n}\nexport var iterator = getSymbolIterator();\n//# sourceMappingURL=iterator.js.map","import { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from './isFunction';\nexport function isIterable(input) {\n    return isFunction(input === null || input === void 0 ? void 0 : input[Symbol_iterator]);\n}\n//# sourceMappingURL=isIterable.js.map","import { __asyncGenerator, __await, __generator } from \"tslib\";\nimport { isFunction } from './isFunction';\nexport function readableStreamLikeToAsyncGenerator(readableStream) {\n    return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {\n        var reader, _a, value, done;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    reader = readableStream.getReader();\n                    _b.label = 1;\n                case 1:\n                    _b.trys.push([1, , 9, 10]);\n                    _b.label = 2;\n                case 2:\n                    if (!true) return [3, 8];\n                    return [4, __await(reader.read())];\n                case 3:\n                    _a = _b.sent(), value = _a.value, done = _a.done;\n                    if (!done) return [3, 5];\n                    return [4, __await(void 0)];\n                case 4: return [2, _b.sent()];\n                case 5: return [4, __await(value)];\n                case 6: return [4, _b.sent()];\n                case 7:\n                    _b.sent();\n                    return [3, 2];\n                case 8: return [3, 10];\n                case 9:\n                    reader.releaseLock();\n                    return [7];\n                case 10: return [2];\n            }\n        });\n    });\n}\nexport function isReadableStreamLike(obj) {\n    return isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);\n}\n//# sourceMappingURL=isReadableStreamLike.js.map","import { __asyncValues, __awaiter, __generator, __values } from \"tslib\";\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isPromise } from '../util/isPromise';\nimport { Observable } from '../Observable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isIterable } from '../util/isIterable';\nimport { isReadableStreamLike, readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nimport { isFunction } from '../util/isFunction';\nimport { reportUnhandledError } from '../util/reportUnhandledError';\nimport { observable as Symbol_observable } from '../symbol/observable';\nexport function innerFrom(input) {\n    if (input instanceof Observable) {\n        return input;\n    }\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return fromInteropObservable(input);\n        }\n        if (isArrayLike(input)) {\n            return fromArrayLike(input);\n        }\n        if (isPromise(input)) {\n            return fromPromise(input);\n        }\n        if (isAsyncIterable(input)) {\n            return fromAsyncIterable(input);\n        }\n        if (isIterable(input)) {\n            return fromIterable(input);\n        }\n        if (isReadableStreamLike(input)) {\n            return fromReadableStreamLike(input);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\nexport function fromInteropObservable(obj) {\n    return new Observable(function (subscriber) {\n        var obs = obj[Symbol_observable]();\n        if (isFunction(obs.subscribe)) {\n            return obs.subscribe(subscriber);\n        }\n        throw new TypeError('Provided object does not correctly implement Symbol.observable');\n    });\n}\nexport function fromArrayLike(array) {\n    return new Observable(function (subscriber) {\n        for (var i = 0; i < array.length && !subscriber.closed; i++) {\n            subscriber.next(array[i]);\n        }\n        subscriber.complete();\n    });\n}\nexport function fromPromise(promise) {\n    return new Observable(function (subscriber) {\n        promise\n            .then(function (value) {\n            if (!subscriber.closed) {\n                subscriber.next(value);\n                subscriber.complete();\n            }\n        }, function (err) { return subscriber.error(err); })\n            .then(null, reportUnhandledError);\n    });\n}\nexport function fromIterable(iterable) {\n    return new Observable(function (subscriber) {\n        var e_1, _a;\n        try {\n            for (var iterable_1 = __values(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {\n                var value = iterable_1_1.value;\n                subscriber.next(value);\n                if (subscriber.closed) {\n                    return;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) _a.call(iterable_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        subscriber.complete();\n    });\n}\nexport function fromAsyncIterable(asyncIterable) {\n    return new Observable(function (subscriber) {\n        process(asyncIterable, subscriber).catch(function (err) { return subscriber.error(err); });\n    });\n}\nexport function fromReadableStreamLike(readableStream) {\n    return fromAsyncIterable(readableStreamLikeToAsyncGenerator(readableStream));\n}\nfunction process(asyncIterable, subscriber) {\n    var asyncIterable_1, asyncIterable_1_1;\n    var e_2, _a;\n    return __awaiter(this, void 0, void 0, function () {\n        var value, e_2_1;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0:\n                    _b.trys.push([0, 5, 6, 11]);\n                    asyncIterable_1 = __asyncValues(asyncIterable);\n                    _b.label = 1;\n                case 1: return [4, asyncIterable_1.next()];\n                case 2:\n                    if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done)) return [3, 4];\n                    value = asyncIterable_1_1.value;\n                    subscriber.next(value);\n                    if (subscriber.closed) {\n                        return [2];\n                    }\n                    _b.label = 3;\n                case 3: return [3, 1];\n                case 4: return [3, 11];\n                case 5:\n                    e_2_1 = _b.sent();\n                    e_2 = { error: e_2_1 };\n                    return [3, 11];\n                case 6:\n                    _b.trys.push([6, , 9, 10]);\n                    if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a = asyncIterable_1.return))) return [3, 8];\n                    return [4, _a.call(asyncIterable_1)];\n                case 7:\n                    _b.sent();\n                    _b.label = 8;\n                case 8: return [3, 10];\n                case 9:\n                    if (e_2) throw e_2.error;\n                    return [7];\n                case 10: return [7];\n                case 11:\n                    subscriber.complete();\n                    return [2];\n            }\n        });\n    });\n}\n//# sourceMappingURL=innerFrom.js.map","export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n    if (delay === void 0) { delay = 0; }\n    if (repeat === void 0) { repeat = false; }\n    var scheduleSubscription = scheduler.schedule(function () {\n        work();\n        if (repeat) {\n            parentSubscription.add(this.schedule(null, delay));\n        }\n        else {\n            this.unsubscribe();\n        }\n    }, delay);\n    parentSubscription.add(scheduleSubscription);\n    if (!repeat) {\n        return scheduleSubscription;\n    }\n}\n//# sourceMappingURL=executeSchedule.js.map","import { executeSchedule } from '../util/executeSchedule';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function observeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return executeSchedule(subscriber, scheduler, function () { return subscriber.next(value); }, delay); }, function () { return executeSchedule(subscriber, scheduler, function () { return subscriber.complete(); }, delay); }, function (err) { return executeSchedule(subscriber, scheduler, function () { return subscriber.error(err); }, delay); }));\n    });\n}\n//# sourceMappingURL=observeOn.js.map","import { operate } from '../util/lift';\nexport function subscribeOn(scheduler, delay) {\n    if (delay === void 0) { delay = 0; }\n    return operate(function (source, subscriber) {\n        subscriber.add(scheduler.schedule(function () { return source.subscribe(subscriber); }, delay));\n    });\n}\n//# sourceMappingURL=subscribeOn.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function scheduleObservable(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=scheduleObservable.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { observeOn } from '../operators/observeOn';\nimport { subscribeOn } from '../operators/subscribeOn';\nexport function schedulePromise(input, scheduler) {\n    return innerFrom(input).pipe(subscribeOn(scheduler), observeOn(scheduler));\n}\n//# sourceMappingURL=schedulePromise.js.map","import { Observable } from '../Observable';\nexport function scheduleArray(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var i = 0;\n        return scheduler.schedule(function () {\n            if (i === input.length) {\n                subscriber.complete();\n            }\n            else {\n                subscriber.next(input[i++]);\n                if (!subscriber.closed) {\n                    this.schedule();\n                }\n            }\n        });\n    });\n}\n//# sourceMappingURL=scheduleArray.js.map","import { Observable } from '../Observable';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { isFunction } from '../util/isFunction';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleIterable(input, scheduler) {\n    return new Observable(function (subscriber) {\n        var iterator;\n        executeSchedule(subscriber, scheduler, function () {\n            iterator = input[Symbol_iterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                var _a;\n                var value;\n                var done;\n                try {\n                    (_a = iterator.next(), value = _a.value, done = _a.done);\n                }\n                catch (err) {\n                    subscriber.error(err);\n                    return;\n                }\n                if (done) {\n                    subscriber.complete();\n                }\n                else {\n                    subscriber.next(value);\n                }\n            }, 0, true);\n        });\n        return function () { return isFunction(iterator === null || iterator === void 0 ? void 0 : iterator.return) && iterator.return(); };\n    });\n}\n//# sourceMappingURL=scheduleIterable.js.map","import { Observable } from '../Observable';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function scheduleAsyncIterable(input, scheduler) {\n    if (!input) {\n        throw new Error('Iterable cannot be null');\n    }\n    return new Observable(function (subscriber) {\n        executeSchedule(subscriber, scheduler, function () {\n            var iterator = input[Symbol.asyncIterator]();\n            executeSchedule(subscriber, scheduler, function () {\n                iterator.next().then(function (result) {\n                    if (result.done) {\n                        subscriber.complete();\n                    }\n                    else {\n                        subscriber.next(result.value);\n                    }\n                });\n            }, 0, true);\n        });\n    });\n}\n//# sourceMappingURL=scheduleAsyncIterable.js.map","import { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { readableStreamLikeToAsyncGenerator } from '../util/isReadableStreamLike';\nexport function scheduleReadableStreamLike(input, scheduler) {\n    return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(input), scheduler);\n}\n//# sourceMappingURL=scheduleReadableStreamLike.js.map","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { scheduleAsyncIterable } from './scheduleAsyncIterable';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\nimport { isAsyncIterable } from '../util/isAsyncIterable';\nimport { createInvalidObservableTypeError } from '../util/throwUnobservableError';\nimport { isReadableStreamLike } from '../util/isReadableStreamLike';\nimport { scheduleReadableStreamLike } from './scheduleReadableStreamLike';\nexport function scheduled(input, scheduler) {\n    if (input != null) {\n        if (isInteropObservable(input)) {\n            return scheduleObservable(input, scheduler);\n        }\n        if (isArrayLike(input)) {\n            return scheduleArray(input, scheduler);\n        }\n        if (isPromise(input)) {\n            return schedulePromise(input, scheduler);\n        }\n        if (isAsyncIterable(input)) {\n            return scheduleAsyncIterable(input, scheduler);\n        }\n        if (isIterable(input)) {\n            return scheduleIterable(input, scheduler);\n        }\n        if (isReadableStreamLike(input)) {\n            return scheduleReadableStreamLike(input, scheduler);\n        }\n    }\n    throw createInvalidObservableTypeError(input);\n}\n//# sourceMappingURL=scheduled.js.map","import { scheduled } from '../scheduled/scheduled';\nimport { innerFrom } from './innerFrom';\nexport function from(input, scheduler) {\n    return scheduler ? scheduled(input, scheduler) : innerFrom(input);\n}\n//# sourceMappingURL=from.js.map","import { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function of() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    return from(args, scheduler);\n}\n//# sourceMappingURL=of.js.map","import { Observable } from '../Observable';\nimport { isFunction } from '../util/isFunction';\nexport function throwError(errorOrErrorFactory, scheduler) {\n    var errorFactory = isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function () { return errorOrErrorFactory; };\n    var init = function (subscriber) { return subscriber.error(errorFactory()); };\n    return new Observable(scheduler ? function (subscriber) { return scheduler.schedule(init, 0, subscriber); } : init);\n}\n//# sourceMappingURL=throwError.js.map","import { createErrorClass } from './createErrorClass';\nexport var EmptyError = createErrorClass(function (_super) {\n    return function EmptyErrorImpl() {\n        _super(this);\n        this.name = 'EmptyError';\n        this.message = 'no elements in sequence';\n    };\n});\n//# sourceMappingURL=EmptyError.js.map","import { EmptyError } from './util/EmptyError';\nexport function lastValueFrom(source, config) {\n    var hasConfig = typeof config === 'object';\n    return new Promise(function (resolve, reject) {\n        var _hasValue = false;\n        var _value;\n        source.subscribe({\n            next: function (value) {\n                _value = value;\n                _hasValue = true;\n            },\n            error: reject,\n            complete: function () {\n                if (_hasValue) {\n                    resolve(_value);\n                }\n                else if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n    });\n}\n//# sourceMappingURL=lastValueFrom.js.map","import { EmptyError } from './util/EmptyError';\nimport { SafeSubscriber } from './Subscriber';\nexport function firstValueFrom(source, config) {\n    var hasConfig = typeof config === 'object';\n    return new Promise(function (resolve, reject) {\n        var subscriber = new SafeSubscriber({\n            next: function (value) {\n                resolve(value);\n                subscriber.unsubscribe();\n            },\n            error: reject,\n            complete: function () {\n                if (hasConfig) {\n                    resolve(config.defaultValue);\n                }\n                else {\n                    reject(new EmptyError());\n                }\n            },\n        });\n        source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=firstValueFrom.js.map","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n//# sourceMappingURL=isDate.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function map(project, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            subscriber.next(project.call(thisArg, value, index++));\n        }));\n    });\n}\n//# sourceMappingURL=map.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { map } from \"../operators/map\";\nvar isArray = Array.isArray;\nfunction callOrApply(fn, args) {\n    return isArray(args) ? fn.apply(void 0, __spreadArray([], __read(args))) : fn(args);\n}\nexport function mapOneOrManyArgs(fn) {\n    return map(function (args) { return callOrApply(fn, args); });\n}\n//# sourceMappingURL=mapOneOrManyArgs.js.map","var isArray = Array.isArray;\nvar getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys = Object.keys;\nexport function argsArgArrayOrObject(args) {\n    if (args.length === 1) {\n        var first_1 = args[0];\n        if (isArray(first_1)) {\n            return { args: first_1, keys: null };\n        }\n        if (isPOJO(first_1)) {\n            var keys = getKeys(first_1);\n            return {\n                args: keys.map(function (key) { return first_1[key]; }),\n                keys: keys,\n            };\n        }\n    }\n    return { args: args, keys: null };\n}\nfunction isPOJO(obj) {\n    return obj && typeof obj === 'object' && getPrototypeOf(obj) === objectProto;\n}\n//# sourceMappingURL=argsArgArrayOrObject.js.map","export function createObject(keys, values) {\n    return keys.reduce(function (result, key, i) { return ((result[key] = values[i]), result); }, {});\n}\n//# sourceMappingURL=createObject.js.map","import { Observable } from '../Observable';\nimport { argsArgArrayOrObject } from '../util/argsArgArrayOrObject';\nimport { from } from './from';\nimport { identity } from '../util/identity';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { popResultSelector, popScheduler } from '../util/args';\nimport { createObject } from '../util/createObject';\nimport { createOperatorSubscriber } from '../operators/OperatorSubscriber';\nimport { executeSchedule } from '../util/executeSchedule';\nexport function combineLatest() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var resultSelector = popResultSelector(args);\n    var _a = argsArgArrayOrObject(args), observables = _a.args, keys = _a.keys;\n    if (observables.length === 0) {\n        return from([], scheduler);\n    }\n    var result = new Observable(combineLatestInit(observables, scheduler, keys\n        ?\n            function (values) { return createObject(keys, values); }\n        :\n            identity));\n    return resultSelector ? result.pipe(mapOneOrManyArgs(resultSelector)) : result;\n}\nexport function combineLatestInit(observables, scheduler, valueTransform) {\n    if (valueTransform === void 0) { valueTransform = identity; }\n    return function (subscriber) {\n        maybeSchedule(scheduler, function () {\n            var length = observables.length;\n            var values = new Array(length);\n            var active = length;\n            var remainingFirstValues = length;\n            var _loop_1 = function (i) {\n                maybeSchedule(scheduler, function () {\n                    var source = from(observables[i], scheduler);\n                    var hasFirstValue = false;\n                    source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                        values[i] = value;\n                        if (!hasFirstValue) {\n                            hasFirstValue = true;\n                            remainingFirstValues--;\n                        }\n                        if (!remainingFirstValues) {\n                            subscriber.next(valueTransform(values.slice()));\n                        }\n                    }, function () {\n                        if (!--active) {\n                            subscriber.complete();\n                        }\n                    }));\n                }, subscriber);\n            };\n            for (var i = 0; i < length; i++) {\n                _loop_1(i);\n            }\n        }, subscriber);\n    };\n}\nfunction maybeSchedule(scheduler, execute, subscription) {\n    if (scheduler) {\n        executeSchedule(subscription, scheduler, execute);\n    }\n    else {\n        execute();\n    }\n}\n//# sourceMappingURL=combineLatest.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { executeSchedule } from '../util/executeSchedule';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand, innerSubScheduler, additionalFinalizer) {\n    var buffer = [];\n    var active = 0;\n    var index = 0;\n    var isComplete = false;\n    var checkComplete = function () {\n        if (isComplete && !buffer.length && !active) {\n            subscriber.complete();\n        }\n    };\n    var outerNext = function (value) { return (active < concurrent ? doInnerSub(value) : buffer.push(value)); };\n    var doInnerSub = function (value) {\n        expand && subscriber.next(value);\n        active++;\n        var innerComplete = false;\n        innerFrom(project(value, index++)).subscribe(createOperatorSubscriber(subscriber, function (innerValue) {\n            onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);\n            if (expand) {\n                outerNext(innerValue);\n            }\n            else {\n                subscriber.next(innerValue);\n            }\n        }, function () {\n            innerComplete = true;\n        }, undefined, function () {\n            if (innerComplete) {\n                try {\n                    active--;\n                    var _loop_1 = function () {\n                        var bufferedValue = buffer.shift();\n                        if (innerSubScheduler) {\n                            executeSchedule(subscriber, innerSubScheduler, function () { return doInnerSub(bufferedValue); });\n                        }\n                        else {\n                            doInnerSub(bufferedValue);\n                        }\n                    };\n                    while (buffer.length && active < concurrent) {\n                        _loop_1();\n                    }\n                    checkComplete();\n                }\n                catch (err) {\n                    subscriber.error(err);\n                }\n            }\n        }));\n    };\n    source.subscribe(createOperatorSubscriber(subscriber, outerNext, function () {\n        isComplete = true;\n        checkComplete();\n    }));\n    return function () {\n        additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();\n    };\n}\n//# sourceMappingURL=mergeInternals.js.map","import { map } from './map';\nimport { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { mergeInternals } from './mergeInternals';\nimport { isFunction } from '../util/isFunction';\nexport function mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    if (isFunction(resultSelector)) {\n        return mergeMap(function (a, i) { return map(function (b, ii) { return resultSelector(a, b, i, ii); })(innerFrom(project(a, i))); }, concurrent);\n    }\n    else if (typeof resultSelector === 'number') {\n        concurrent = resultSelector;\n    }\n    return operate(function (source, subscriber) { return mergeInternals(source, subscriber, project, concurrent); });\n}\n//# sourceMappingURL=mergeMap.js.map","import { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nexport function mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Infinity; }\n    return mergeMap(identity, concurrent);\n}\n//# sourceMappingURL=mergeAll.js.map","import { mergeAll } from './mergeAll';\nexport function concatAll() {\n    return mergeAll(1);\n}\n//# sourceMappingURL=concatAll.js.map","import { concatAll } from '../operators/concatAll';\nimport { popScheduler } from '../util/args';\nimport { from } from './from';\nexport function concat() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return concatAll()(from(args, popScheduler(args)));\n}\n//# sourceMappingURL=concat.js.map","import { Observable } from '../Observable';\nimport { innerFrom } from './innerFrom';\nexport function defer(observableFactory) {\n    return new Observable(function (subscriber) {\n        innerFrom(observableFactory()).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=defer.js.map","import { Subject } from '../Subject';\nimport { Observable } from '../Observable';\nimport { defer } from './defer';\nvar DEFAULT_CONFIG = {\n    connector: function () { return new Subject(); },\n    resetOnDisconnect: true,\n};\nexport function connectable(source, config) {\n    if (config === void 0) { config = DEFAULT_CONFIG; }\n    var connection = null;\n    var connector = config.connector, _a = config.resetOnDisconnect, resetOnDisconnect = _a === void 0 ? true : _a;\n    var subject = connector();\n    var result = new Observable(function (subscriber) {\n        return subject.subscribe(subscriber);\n    });\n    result.connect = function () {\n        if (!connection || connection.closed) {\n            connection = defer(function () { return source; }).subscribe(subject);\n            if (resetOnDisconnect) {\n                connection.add(function () { return (subject = connector()); });\n            }\n        }\n        return connection;\n    };\n    return result;\n}\n//# sourceMappingURL=connectable.js.map","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime, intervalOrScheduler, scheduler) {\n    if (dueTime === void 0) { dueTime = 0; }\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable(function (subscriber) {\n        var due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        var n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n//# sourceMappingURL=timer.js.map","import { mergeAll } from '../operators/mergeAll';\nimport { innerFrom } from './innerFrom';\nimport { EMPTY } from './empty';\nimport { popNumber, popScheduler } from '../util/args';\nimport { from } from './from';\nexport function merge() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(args);\n    var concurrent = popNumber(args, Infinity);\n    var sources = args;\n    return !sources.length\n        ?\n            EMPTY\n        : sources.length === 1\n            ?\n                innerFrom(sources[0])\n            :\n                mergeAll(concurrent)(from(sources, scheduler));\n}\n//# sourceMappingURL=merge.js.map","var isArray = Array.isArray;\nexport function argsOrArgArray(args) {\n    return args.length === 1 && isArray(args[0]) ? args[0] : args;\n}\n//# sourceMappingURL=argsOrArgArray.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function filter(predicate, thisArg) {\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) { return predicate.call(thisArg, value, index++) && subscriber.next(value); }));\n    });\n}\n//# sourceMappingURL=filter.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { operate } from '../util/lift';\nexport function catchError(selector) {\n    return operate(function (source, subscriber) {\n        var innerSub = null;\n        var syncUnsub = false;\n        var handledResult;\n        innerSub = source.subscribe(createOperatorSubscriber(subscriber, undefined, undefined, function (err) {\n            handledResult = innerFrom(selector(err, catchError(selector)(source)));\n            if (innerSub) {\n                innerSub.unsubscribe();\n                innerSub = null;\n                handledResult.subscribe(subscriber);\n            }\n            else {\n                syncUnsub = true;\n            }\n        }));\n        if (syncUnsub) {\n            innerSub.unsubscribe();\n            innerSub = null;\n            handledResult.subscribe(subscriber);\n        }\n    });\n}\n//# sourceMappingURL=catchError.js.map","import { createOperatorSubscriber } from './OperatorSubscriber';\nexport function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {\n    return function (source, subscriber) {\n        var hasState = hasSeed;\n        var state = seed;\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var i = index++;\n            state = hasState\n                ?\n                    accumulator(state, value, i)\n                :\n                    ((hasState = true), value);\n            emitOnNext && subscriber.next(state);\n        }, emitBeforeComplete &&\n            (function () {\n                hasState && subscriber.next(state);\n                subscriber.complete();\n            })));\n    };\n}\n//# sourceMappingURL=scanInternals.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { combineLatestInit } from '../observable/combineLatest';\nimport { operate } from '../util/lift';\nimport { argsOrArgArray } from '../util/argsOrArgArray';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nimport { pipe } from '../util/pipe';\nimport { popResultSelector } from '../util/args';\nexport function combineLatest() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var resultSelector = popResultSelector(args);\n    return resultSelector\n        ? pipe(combineLatest.apply(void 0, __spreadArray([], __read(args))), mapOneOrManyArgs(resultSelector))\n        : operate(function (source, subscriber) {\n            combineLatestInit(__spreadArray([source], __read(argsOrArgArray(args))))(subscriber);\n        });\n}\n//# sourceMappingURL=combineLatest.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { combineLatest } from './combineLatest';\nexport function combineLatestWith() {\n    var otherSources = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        otherSources[_i] = arguments[_i];\n    }\n    return combineLatest.apply(void 0, __spreadArray([], __read(otherSources)));\n}\n//# sourceMappingURL=combineLatestWith.js.map","import { mergeMap } from './mergeMap';\nimport { isFunction } from '../util/isFunction';\nexport function concatMap(project, resultSelector) {\n    return isFunction(resultSelector) ? mergeMap(project, resultSelector, 1) : mergeMap(project, 1);\n}\n//# sourceMappingURL=concatMap.js.map","import { EMPTY } from '../observable/empty';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function take(count) {\n    return count <= 0\n        ?\n            function () { return EMPTY; }\n        : operate(function (source, subscriber) {\n            var seen = 0;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                if (++seen <= count) {\n                    subscriber.next(value);\n                    if (count <= seen) {\n                        subscriber.complete();\n                    }\n                }\n            }));\n        });\n}\n//# sourceMappingURL=take.js.map","import { map } from './map';\nexport function mapTo(value) {\n    return map(function () { return value; });\n}\n//# sourceMappingURL=mapTo.js.map","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return function (source) {\n            return concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n        };\n    }\n    return mergeMap(function (value, index) { return innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)); });\n}\n//# sourceMappingURL=delayWhen.js.map","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler) {\n    if (scheduler === void 0) { scheduler = asyncScheduler; }\n    var duration = timer(due, scheduler);\n    return delayWhen(function () { return duration; });\n}\n//# sourceMappingURL=delay.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nimport { innerFrom } from '../observable/innerFrom';\nexport function distinct(keySelector, flushes) {\n    return operate(function (source, subscriber) {\n        var distinctKeys = new Set();\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var key = keySelector ? keySelector(value) : value;\n            if (!distinctKeys.has(key)) {\n                distinctKeys.add(key);\n                subscriber.next(value);\n            }\n        }));\n        flushes && innerFrom(flushes).subscribe(createOperatorSubscriber(subscriber, function () { return distinctKeys.clear(); }, noop));\n    });\n}\n//# sourceMappingURL=distinct.js.map","import { identity } from '../util/identity';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function distinctUntilChanged(comparator, keySelector) {\n    if (keySelector === void 0) { keySelector = identity; }\n    comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;\n    return operate(function (source, subscriber) {\n        var previousKey;\n        var first = true;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var currentKey = keySelector(value);\n            if (first || !comparator(previousKey, currentKey)) {\n                first = false;\n                previousKey = currentKey;\n                subscriber.next(value);\n            }\n        }));\n    });\n}\nfunction defaultCompare(a, b) {\n    return a === b;\n}\n//# sourceMappingURL=distinctUntilChanged.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function pairwise() {\n    return operate(function (source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([p, value]);\n            hasPrev = true;\n        }));\n    });\n}\n//# sourceMappingURL=pairwise.js.map","import { operate } from '../util/lift';\nimport { scanInternals } from './scanInternals';\nexport function scan(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, true));\n}\n//# sourceMappingURL=scan.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { innerFrom } from '../observable/innerFrom';\nimport { Subject } from '../Subject';\nimport { SafeSubscriber } from '../Subscriber';\nimport { operate } from '../util/lift';\nexport function share(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.connector, connector = _a === void 0 ? function () { return new Subject(); } : _a, _b = options.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;\n    return function (wrapperSource) {\n        var connection;\n        var resetConnection;\n        var subject;\n        var refCount = 0;\n        var hasCompleted = false;\n        var hasErrored = false;\n        var cancelReset = function () {\n            resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();\n            resetConnection = undefined;\n        };\n        var reset = function () {\n            cancelReset();\n            connection = subject = undefined;\n            hasCompleted = hasErrored = false;\n        };\n        var resetAndUnsubscribe = function () {\n            var conn = connection;\n            reset();\n            conn === null || conn === void 0 ? void 0 : conn.unsubscribe();\n        };\n        return operate(function (source, subscriber) {\n            refCount++;\n            if (!hasErrored && !hasCompleted) {\n                cancelReset();\n            }\n            var dest = (subject = subject !== null && subject !== void 0 ? subject : connector());\n            subscriber.add(function () {\n                refCount--;\n                if (refCount === 0 && !hasErrored && !hasCompleted) {\n                    resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);\n                }\n            });\n            dest.subscribe(subscriber);\n            if (!connection &&\n                refCount > 0) {\n                connection = new SafeSubscriber({\n                    next: function (value) { return dest.next(value); },\n                    error: function (err) {\n                        hasErrored = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnError, err);\n                        dest.error(err);\n                    },\n                    complete: function () {\n                        hasCompleted = true;\n                        cancelReset();\n                        resetConnection = handleReset(reset, resetOnComplete);\n                        dest.complete();\n                    },\n                });\n                innerFrom(source).subscribe(connection);\n            }\n        })(wrapperSource);\n    };\n}\nfunction handleReset(reset, on) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (on === true) {\n        reset();\n        return;\n    }\n    if (on === false) {\n        return;\n    }\n    var onSubscriber = new SafeSubscriber({\n        next: function () {\n            onSubscriber.unsubscribe();\n            reset();\n        },\n    });\n    return innerFrom(on.apply(void 0, __spreadArray([], __read(args)))).subscribe(onSubscriber);\n}\n//# sourceMappingURL=share.js.map","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    var _a, _b, _c;\n    var bufferSize;\n    var refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        (_a = configOrBufferSize.bufferSize, bufferSize = _a === void 0 ? Infinity : _a, _b = configOrBufferSize.windowTime, windowTime = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: function () { return new ReplaySubject(bufferSize, windowTime, scheduler); },\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n//# sourceMappingURL=shareReplay.js.map","import { concat } from '../observable/concat';\nimport { popScheduler } from '../util/args';\nimport { operate } from '../util/lift';\nexport function startWith() {\n    var values = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        values[_i] = arguments[_i];\n    }\n    var scheduler = popScheduler(values);\n    return operate(function (source, subscriber) {\n        (scheduler ? concat(values, source, scheduler) : concat(values, source)).subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=startWith.js.map","import { innerFrom } from '../observable/innerFrom';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function switchMap(project, resultSelector) {\n    return operate(function (source, subscriber) {\n        var innerSubscriber = null;\n        var index = 0;\n        var isComplete = false;\n        var checkComplete = function () { return isComplete && !innerSubscriber && subscriber.complete(); };\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();\n            var innerIndex = 0;\n            var outerIndex = index++;\n            innerFrom(project(value, outerIndex)).subscribe((innerSubscriber = createOperatorSubscriber(subscriber, function (innerValue) { return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue); }, function () {\n                innerSubscriber = null;\n                checkComplete();\n            })));\n        }, function () {\n            isComplete = true;\n            checkComplete();\n        }));\n    });\n}\n//# sourceMappingURL=switchMap.js.map","import { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\nexport function switchAll() {\n    return switchMap(identity);\n}\n//# sourceMappingURL=switchAll.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { noop } from '../util/noop';\nexport function takeUntil(notifier) {\n    return operate(function (source, subscriber) {\n        innerFrom(notifier).subscribe(createOperatorSubscriber(subscriber, function () { return subscriber.complete(); }, noop));\n        !subscriber.closed && source.subscribe(subscriber);\n    });\n}\n//# sourceMappingURL=takeUntil.js.map","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive) {\n    if (inclusive === void 0) { inclusive = false; }\n    return operate(function (source, subscriber) {\n        var index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            var result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n//# sourceMappingURL=takeWhile.js.map","import { isFunction } from '../util/isFunction';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { identity } from '../util/identity';\nexport function tap(observerOrNext, error, complete) {\n    var tapObserver = isFunction(observerOrNext) || error || complete\n        ?\n            { next: observerOrNext, error: error, complete: complete }\n        : observerOrNext;\n    return tapObserver\n        ? operate(function (source, subscriber) {\n            var _a;\n            (_a = tapObserver.subscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n            var isUnsub = true;\n            source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n                var _a;\n                (_a = tapObserver.next) === null || _a === void 0 ? void 0 : _a.call(tapObserver, value);\n                subscriber.next(value);\n            }, function () {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.complete) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                subscriber.complete();\n            }, function (err) {\n                var _a;\n                isUnsub = false;\n                (_a = tapObserver.error) === null || _a === void 0 ? void 0 : _a.call(tapObserver, err);\n                subscriber.error(err);\n            }, function () {\n                var _a, _b;\n                if (isUnsub) {\n                    (_a = tapObserver.unsubscribe) === null || _a === void 0 ? void 0 : _a.call(tapObserver);\n                }\n                (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);\n            }));\n        })\n        :\n            identity;\n}\n//# sourceMappingURL=tap.js.map","import { __read, __spreadArray } from \"tslib\";\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom() {\n    var inputs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        inputs[_i] = arguments[_i];\n    }\n    var project = popResultSelector(inputs);\n    return operate(function (source, subscriber) {\n        var len = inputs.length;\n        var otherValues = new Array(len);\n        var hasValue = inputs.map(function () { return false; });\n        var ready = false;\n        var _loop_1 = function (i) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, function (value) {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        };\n        for (var i = 0; i < len; i++) {\n            _loop_1(i);\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, function (value) {\n            if (ready) {\n                var values = __spreadArray([value], __read(otherValues));\n                subscriber.next(project ? project.apply(void 0, __spreadArray([], __read(values))) : values);\n            }\n        }));\n    });\n}\n//# sourceMappingURL=withLatestFrom.js.map","import { OperationLimitError } from '@polkadot-api/substrate-client';\nimport { Observable } from 'rxjs';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\nclass PendingTaskQueue {\n  constructor() {\n    __publicField(this, \"first\");\n    __publicField(this, \"last\");\n  }\n  getRemoveFn(node) {\n    return () => {\n      if (node.prev) {\n        node.prev.next = node.next;\n      } else {\n        this.first = node.next;\n      }\n      if (node.next) {\n        node.next.prev = node.prev;\n      } else {\n        this.last = node.prev;\n      }\n      delete node.prev;\n      delete node.next;\n    };\n  }\n  push(value) {\n    const newNode = { value };\n    if (this.last === void 0) {\n      this.last = this.first = newNode;\n    } else {\n      this.last.next = newNode;\n      newNode.prev = this.last;\n      this.last = newNode;\n    }\n    return this.getRemoveFn(newNode);\n  }\n  unshift(value) {\n    this.first = { value, next: this.first };\n    this.first.next && (this.first.next.prev = this.first);\n    this.last || (this.last = this.first);\n    return this.getRemoveFn(this.first);\n  }\n  pop() {\n    const result = this.first?.value;\n    if (this.first) {\n      this.first = this.first.next;\n      if (!this.first) {\n        this.last = void 0;\n      } else {\n        delete this.first.prev?.next;\n        delete this.first.prev;\n      }\n    }\n    return result;\n  }\n  isEmpty() {\n    return !this.first;\n  }\n}\nconst getWithRecovery = () => {\n  const tearDownOperations = /* @__PURE__ */ new Map();\n  const setTeardown = (observable, cb) => {\n    tearDownOperations.set(observable, () => {\n      tearDownOperations.delete(observable);\n      cb();\n    });\n  };\n  const teardown = (observable) => {\n    tearDownOperations.get(observable)?.();\n  };\n  const pendingTasks = new PendingTaskQueue();\n  const unshift = pendingTasks.unshift.bind(pendingTasks);\n  const push = pendingTasks.push.bind(pendingTasks);\n  const addTask = (task, topPriority) => {\n    const fn = topPriority ? unshift : push;\n    setTeardown(task.source$, fn(task));\n  };\n  const onEmptySlot = () => {\n    const data = pendingTasks.pop();\n    if (!data) return;\n    tearDownOperations.delete(data.source$);\n    process(data);\n  };\n  const process = (data) => {\n    const { source$, observer } = data;\n    let isOperationLimit = false;\n    const subscription = source$.subscribe({\n      next(x) {\n        observer.next(x);\n      },\n      error(e) {\n        (isOperationLimit = e instanceof OperationLimitError) ? addTask(data, true) : observer.error(e);\n      },\n      complete() {\n        observer.complete();\n      }\n    });\n    if (!subscription.closed) {\n      setTeardown(source$, () => {\n        subscription.unsubscribe();\n        onEmptySlot();\n      });\n    } else if (!isOperationLimit) onEmptySlot();\n  };\n  const withRecovery = (topPriority = false) => (source$) => new Observable((observer) => {\n    const pendingTask = { observer, source$ };\n    if (pendingTasks.isEmpty()) {\n      process(pendingTask);\n    } else {\n      addTask(pendingTask, topPriority);\n    }\n    return () => {\n      teardown(source$);\n    };\n  });\n  const withNormalRecovery = withRecovery();\n  const withRecoveryFn = (fn) => (...args) => withNormalRecovery(fn(...args));\n  return { withRecovery, withRecoveryFn };\n};\n\nexport { PendingTaskQueue as default, getWithRecovery };\n//# sourceMappingURL=operationLimitRecovery.mjs.map\n","class BlockNotPinnedError extends Error {\n  constructor(hash, label) {\n    super(`Block ${hash} is not pinned (${label})`);\n    this.name = \"BlockNotPinnedError\";\n  }\n}\nclass BlockPrunedError extends Error {\n  constructor() {\n    super(\"Block pruned\");\n    this.name = \"BlockPrunedError\";\n  }\n}\nclass NotBestBlockError extends Error {\n  constructor() {\n    super(\"Block is not best block or finalized\");\n    this.name = \"NotBestBlockError\";\n  }\n}\n\nexport { BlockNotPinnedError, BlockPrunedError, NotBestBlockError };\n//# sourceMappingURL=errors.mjs.map\n","import { take, mergeMap, catchError, throwError, timer, concatMap } from 'rxjs';\nimport { BlockNotPinnedError } from '../errors.mjs';\nimport { OperationInaccessibleError } from '@polkadot-api/substrate-client';\n\nconst dynamicBlocks = /* @__PURE__ */ new Set([\"best\", \"finalized\", null]);\nconst operable = (source$) => {\n  const result = source$.pipe(\n    catchError(\n      (e) => e instanceof OperationInaccessibleError ? timer(750).pipe(concatMap(() => result)) : throwError(() => e)\n    )\n  );\n  return result;\n};\nconst getWithOptionalhash$ = (finalized$, best$, usingBlock) => {\n  return (fn) => (hash, ...args) => {\n    if (!dynamicBlocks.has(hash))\n      return operable(fn(hash, ...args)).pipe(\n        usingBlock(hash)\n      );\n    const hash$ = hash === \"best\" ? best$ : finalized$;\n    const result$ = hash$.pipe(\n      take(1),\n      mergeMap((h) => fn(h, ...args).pipe(usingBlock(h))),\n      catchError((e) => {\n        return e instanceof BlockNotPinnedError ? result$ : throwError(() => e);\n      })\n    );\n    return operable(result$);\n  };\n};\n\nexport { getWithOptionalhash$ };\n//# sourceMappingURL=optionalHash.mjs.map\n","import { Observable } from 'rxjs';\n\nconst fromAbortControllerFn = (fn) => (...args) => new Observable((observer) => {\n  let aborter = new AbortController();\n  fn(...[...args, aborter.signal]).then(\n    (value) => {\n      observer.next(value);\n      observer.complete();\n    },\n    (error) => {\n      observer.error(error);\n    }\n  );\n  return () => {\n    observer.unsubscribe();\n    aborter.abort();\n    aborter = void 0;\n  };\n});\n\nexport { fromAbortControllerFn };\n//# sourceMappingURL=fromAbortControllerFn.mjs.map\n","const withLazyFollower = (getFollower) => (key) => (...args) => getFollower()[key](...args);\n\nexport { withLazyFollower };\n//# sourceMappingURL=lazyFollower.mjs.map\n","import { takeWhile, distinctUntilChanged, map } from 'rxjs';\n\nconst isBestOrFinalizedBlock = (blocks$, blockHash) => blocks$.pipe(\n  takeWhile((b) => b.blocks.has(blockHash)),\n  distinctUntilChanged(\n    (a, b) => a.finalized === b.finalized && a.best === b.best\n  ),\n  map((pinned) => {\n    if (pinned.blocks.get(blockHash).number > pinned.blocks.get(pinned.best).number)\n      return null;\n    const { number } = pinned.blocks.get(blockHash);\n    let current = pinned.blocks.get(pinned.best);\n    let isFinalized = pinned.finalized === current.hash;\n    while (current.number > number) {\n      current = pinned.blocks.get(current.parent);\n      isFinalized = isFinalized || pinned.finalized === current.hash;\n    }\n    if (isFinalized) return \"finalized\";\n    return current.hash === blockHash ? \"best\" : null;\n  }),\n  distinctUntilChanged(),\n  takeWhile((x) => x !== \"finalized\", true)\n);\n\nexport { isBestOrFinalizedBlock };\n//# sourceMappingURL=block-operations.mjs.map\n","import { pipe, Observable, filter, mergeMap, take, switchMap, throwError } from 'rxjs';\nimport { BlockPrunedError, NotBestBlockError } from '../errors.mjs';\nimport { isBestOrFinalizedBlock } from '../streams/block-operations.mjs';\n\nfunction withEnsureCanonicalChain(blocks$, follow$, fn) {\n  return (hash, ensureCanonical, ...args) => {\n    const enhancer = ensureCanonical ? pipe(\n      throwWhenPrune(\n        hash,\n        follow$.pipe(\n          filter((evt) => evt.type === \"finalized\"),\n          mergeMap((evt) => evt.prunedBlockHashes)\n        )\n      ),\n      onlyIfIsBestOrFinalized(hash, blocks$)\n    ) : (x) => x;\n    return enhancer(fn(hash, ...args));\n  };\n}\nconst onlyIfIsBestOrFinalized = (hash, blocks$) => (source$) => isBestOrFinalizedBlock(blocks$, hash).pipe(\n  take(1),\n  switchMap(\n    (isBest) => isBest ? source$ : throwError(() => new NotBestBlockError())\n  )\n);\nconst throwWhenPrune = (hash, pruned$) => (source$) => new Observable((subscriber) => {\n  const prunedSubscription = pruned$.pipe(filter((h) => h === hash)).subscribe(() => {\n    subscriber.error(new BlockPrunedError());\n  });\n  const sourceSubscription = source$.subscribe(subscriber);\n  return () => {\n    prunedSubscription.unsubscribe();\n    sourceSubscription.unsubscribe();\n  };\n});\n\nexport { withEnsureCanonicalChain };\n//# sourceMappingURL=whileBestBlock.mjs.map\n","import { Observable } from 'rxjs';\nimport { BlockNotPinnedError } from '../errors.mjs';\n\nfunction withStopRecovery(blocks$, fn, label) {\n  return (hash, ...args) => {\n    const source$ = fn(hash, ...args);\n    return new Observable((observer) => {\n      let sourceSub = null;\n      let isSubscribed = false;\n      const performSourceSub = () => {\n        if (isSubscribed) return;\n        isSubscribed = true;\n        sourceSub = source$.subscribe({\n          next: (v) => observer.next(v),\n          error: (e) => observer.error(e),\n          complete: () => observer.complete()\n        });\n        sourceSub.add(() => {\n          isSubscribed = false;\n          sourceSub = null;\n        });\n      };\n      let isRecovering = false;\n      const blockSub = blocks$.subscribe({\n        next: (v) => {\n          const block = v.blocks.get(hash);\n          if (!block) {\n            if (isRecovering) {\n              observer.error(new BlockNotPinnedError(hash, label));\n            }\n          } else if (block.recovering) {\n            sourceSub?.unsubscribe();\n          } else {\n            performSourceSub();\n          }\n          isRecovering = v.recovering;\n        },\n        error: (e) => observer.error(e)\n      });\n      return () => {\n        blockSub.unsubscribe();\n        sourceSub?.unsubscribe();\n      };\n    });\n  };\n}\n\nexport { withStopRecovery };\n//# sourceMappingURL=withStopRecovery.mjs.map\n","import { Observable, mergeAll } from 'rxjs';\n\nconst getRecoveralStorage$ = (getFollower, withRecovery) => {\n  const recoveralStorage$ = (hash, queries, childTrie, isHighPriority) => new Observable(\n    (observer) => getFollower().storageSubscription(\n      hash,\n      queries,\n      childTrie ?? null,\n      (items) => {\n        observer.next(items);\n      },\n      (error) => {\n        observer.error(error);\n      },\n      () => {\n        observer.complete();\n      },\n      (nDiscarded) => {\n        if (nDiscarded > 0)\n          observer.next(\n            recoveralStorage$(\n              hash,\n              queries.slice(-nDiscarded),\n              childTrie,\n              true\n            )\n          );\n      }\n    )\n  ).pipe(mergeAll(), withRecovery(isHighPriority));\n  return recoveralStorage$;\n};\n\nexport { getRecoveralStorage$ };\n//# sourceMappingURL=storage-queries.mjs.map\n","import { blockHeader } from '@polkadot-api/substrate-bindings';\nimport { StopError } from '@polkadot-api/substrate-client';\nimport { connectable, Observable, concatMap, of, Subscription, noop } from 'rxjs';\n\nconst withInitializedNumber = (getHeader) => (source$) => source$.pipe(\n  concatMap((event) => {\n    return event.type !== \"initialized\" ? of(event) : getHeader(event.finalizedBlockHashes[0]).then((header) => ({\n      ...event,\n      number: header.number,\n      parentHash: header.parentHash\n    }));\n  })\n);\nconst getFollow$ = (chainHead) => {\n  let follower = null;\n  let unfollow = noop;\n  const getFollower = () => {\n    if (!follower) throw new Error(\"Missing chainHead subscription\");\n    return follower;\n  };\n  const getHeader = (hash) => getFollower().header(hash).then(blockHeader.dec);\n  const follow$ = connectable(\n    new Observable((observer) => {\n      follower = chainHead(\n        true,\n        (e) => {\n          observer.next(e);\n        },\n        (e) => {\n          follower = null;\n          observer.error(e);\n        }\n      );\n      unfollow = () => {\n        observer.complete();\n        follower?.unfollow();\n      };\n    }).pipe(withInitializedNumber(getHeader), retryChainHeadError())\n  );\n  const startFollow = () => {\n    follow$.connect();\n    return () => {\n      unfollow();\n    };\n  };\n  return {\n    getHeader,\n    getFollower,\n    startFollow,\n    follow$\n  };\n};\nconst retryChainHeadError = () => (source$) => new Observable((observer) => {\n  const subscription = new Subscription();\n  const subscribe = () => source$.subscribe({\n    next: (v) => observer.next(v),\n    error: (e) => {\n      if (e instanceof StopError) {\n        observer.next({ type: \"stop-error\" });\n      } else {\n        console.warn(\"ChainHead follow request failed, retrying\\u2026\", e);\n      }\n      subscription.add(subscribe());\n    },\n    complete: () => observer.complete()\n  });\n  subscription.add(subscribe());\n  return subscription;\n});\n\nexport { getFollow$ };\n//# sourceMappingURL=follow.mjs.map\n","const isBytes = (value, nBytes) => value.type === \"array\" && value.len === nBytes && value.value.type === \"primitive\" && value.value.value === \"u8\";\nconst _void = { type: \"void\" };\nconst _denormalizeLookup = (lookupData, customMap = () => null) => {\n  const lookups = /* @__PURE__ */ new Map();\n  const from = /* @__PURE__ */ new Set();\n  const withCache = (fn) => {\n    return (id) => {\n      let entry = lookups.get(id);\n      if (entry) return entry;\n      if (from.has(id)) {\n        const entry2 = {\n          id\n        };\n        lookups.set(id, entry2);\n        return entry2;\n      }\n      from.add(id);\n      const value = fn(id);\n      entry = lookups.get(id);\n      if (entry) {\n        Object.assign(entry, value);\n      } else {\n        entry = {\n          id,\n          ...value\n        };\n        lookups.set(id, entry);\n      }\n      from.delete(id);\n      return entry;\n    };\n  };\n  let isAccountId32SearchOn = true;\n  let isAccountId20SearchOn = true;\n  const getLookupEntryDef = withCache((id) => {\n    const custom = customMap(lookupData[id]);\n    if (custom) return custom;\n    const { def, path, params } = lookupData[id];\n    if (def.tag === \"composite\") {\n      if (def.value.length === 0) return _void;\n      if (def.value.length === 1) {\n        const inner = getLookupEntryDef(def.value[0].type);\n        if (isAccountId32SearchOn && path.at(-1) === \"AccountId32\" && isBytes(inner, 32)) {\n          isAccountId32SearchOn = false;\n          return { type: \"AccountId32\" };\n        }\n        if (isAccountId20SearchOn && path.at(-1) === \"AccountId20\" && isBytes(inner, 20)) {\n          isAccountId20SearchOn = false;\n          return { type: \"AccountId20\" };\n        }\n        return inner;\n      }\n      return getComplexVar(def.value);\n    }\n    if (def.tag === \"variant\") {\n      if (path.length === 1 && path[0] === \"Option\" && params.length === 1 && params[0].name === \"T\") {\n        const value = getLookupEntryDef(params[0].type);\n        return value.type === \"void\" ? (\n          // Option<void> would return a Codec<undefined> which makes no sense\n          // Therefore, we better treat it as a bool\n          { type: \"primitive\", value: \"bool\" }\n        ) : {\n          type: \"option\",\n          value\n        };\n      }\n      if (path.length === 1 && path[0] === \"Result\" && params.length === 2 && params[0].name === \"T\" && params[1].name === \"E\") {\n        return {\n          type: \"result\",\n          value: {\n            ok: getLookupEntryDef(params[0].type),\n            ko: getLookupEntryDef(params[1].type)\n          }\n        };\n      }\n      if (def.value.length === 0) return _void;\n      const enumValue = {};\n      const enumDocs = {};\n      def.value.forEach((x) => {\n        const key = x.name;\n        enumDocs[key] = x.docs;\n        if (x.fields.length === 0) {\n          enumValue[key] = { ..._void, idx: x.index };\n          return;\n        }\n        if (x.fields.length === 1 && !x.fields[0].name) {\n          enumValue[key] = {\n            type: \"lookupEntry\",\n            value: getLookupEntryDef(x.fields[0].type),\n            idx: x.index\n          };\n          return;\n        }\n        enumValue[key] = { ...getComplexVar(x.fields), idx: x.index };\n      });\n      return {\n        type: \"enum\",\n        value: enumValue,\n        innerDocs: enumDocs\n      };\n    }\n    if (def.tag === \"sequence\")\n      return {\n        type: \"sequence\",\n        value: getLookupEntryDef(def.value)\n      };\n    if (def.tag === \"array\") {\n      const { len } = def.value;\n      const value = getLookupEntryDef(def.value.type);\n      return !len || value.type === \"void\" ? _void : len > 1 ? {\n        type: \"array\",\n        value,\n        len: def.value.len\n      } : value;\n    }\n    if (def.tag === \"tuple\") {\n      if (def.value.length === 0) return _void;\n      return def.value.length > 1 ? getArrayOrTuple(\n        def.value.map((x) => getLookupEntryDef(x)),\n        def.value.map((x) => lookupData[x].docs)\n      ) : getLookupEntryDef(def.value[0]);\n    }\n    if (def.tag === \"primitive\") {\n      return {\n        type: \"primitive\",\n        value: def.value.tag\n      };\n    }\n    if (def.tag === \"compact\") {\n      const translated = getLookupEntryDef(def.value);\n      if (translated.type === \"void\") return _void;\n      const isBig = Number(translated.value.slice(1)) > 32;\n      return {\n        type: \"compact\",\n        isBig,\n        size: translated.value\n      };\n    }\n    return {\n      type: def.tag\n    };\n  });\n  const getComplexVar = (input) => {\n    let allKey = true;\n    const values = {};\n    const innerDocs = {};\n    input.forEach((x, idx) => {\n      allKey = allKey && !!x.name;\n      const key = x.name || idx;\n      const value = getLookupEntryDef(x.type);\n      if (value.type !== \"void\") {\n        values[key] = value;\n        innerDocs[key] = x.docs;\n      }\n    });\n    return allKey ? {\n      type: \"struct\",\n      value: values,\n      innerDocs\n    } : getArrayOrTuple(Object.values(values), Object.values(innerDocs));\n  };\n  const getArrayOrTuple = (values, innerDocs) => {\n    if (values.every((v) => v.id === values[0].id) && innerDocs.every((doc) => !doc.length)) {\n      const [value] = values;\n      return value.type === \"void\" ? _void : {\n        type: \"array\",\n        value: values[0],\n        len: values.length\n      };\n    }\n    return {\n      type: \"tuple\",\n      value: values,\n      innerDocs\n    };\n  };\n  return getLookupEntryDef;\n};\nconst denormalizeLookup = (lookupData) => _denormalizeLookup(lookupData);\nconst getLookupFn = (metadata) => {\n  const getLookupEntryDef = _denormalizeLookup(metadata.lookup, ({ def }) => {\n    if (def.tag === \"composite\") {\n      const moduleErrorLength = getModuleErrorLength(def);\n      if (moduleErrorLength) {\n        return {\n          type: \"enum\",\n          innerDocs: {},\n          value: Object.fromEntries(\n            metadata.pallets.map((p) => [\n              p.name,\n              p.errors == null ? { ..._void, idx: p.index } : {\n                type: \"lookupEntry\",\n                value: getLookupEntryDef(p.errors),\n                idx: p.index\n              }\n            ])\n          ),\n          byteLength: moduleErrorLength\n        };\n      }\n    }\n    return null;\n  });\n  function getModuleErrorLength(def) {\n    const preChecks = def.value.length === 2 && def.value[0].name === \"index\" && def.value[1].name === \"error\";\n    if (!preChecks) return null;\n    const index = getLookupEntryDef(def.value[0].type);\n    const error = getLookupEntryDef(def.value[1].type);\n    return index.type === \"primitive\" && index.value === \"u8\" && error.type === \"array\" && error.value.type === \"primitive\" && error.value.value === \"u8\" ? 1 + error.len : null;\n  }\n  const getCall = () => {\n    if (\"outerEnums\" in metadata) {\n      return metadata.outerEnums.call;\n    }\n    const extrinsic = metadata.lookup[metadata.extrinsic?.type];\n    const call = extrinsic?.params.find((p) => p.name === \"Call\");\n    return call?.type ?? null;\n  };\n  return Object.assign(getLookupEntryDef, { metadata, call: getCall() });\n};\n\nexport { denormalizeLookup, getLookupFn };\n//# sourceMappingURL=lookups.mjs.map\n","const withCache = (fn, onEnterCircular, onExitCircular) => (input, cache, stack, ...rest) => {\n  const { id } = input;\n  if (cache.has(id)) return cache.get(id);\n  if (stack.has(id)) {\n    const res = onEnterCircular(() => cache.get(id), input, ...rest);\n    cache.set(id, res);\n    return res;\n  }\n  stack.add(id);\n  let result = fn(input, cache, stack, ...rest);\n  stack.delete(id);\n  if (cache.has(id))\n    result = onExitCircular(result, cache.get(id), input, ...rest);\n  cache.set(id, result);\n  return result;\n};\n\nexport { withCache };\n//# sourceMappingURL=with-cache.mjs.map\n","import * as scale from '@polkadot-api/substrate-bindings';\nimport { withCache } from './with-cache.mjs';\n\nconst _bytes = scale.Bin();\nconst _buildCodec = (input, cache, stack, _accountId) => {\n  if (input.type === \"primitive\") return scale[input.value];\n  if (input.type === \"void\") return scale._void;\n  if (input.type === \"AccountId32\") return _accountId;\n  if (input.type === \"AccountId20\") return scale.ethAccount;\n  if (input.type === \"compact\")\n    return input.isBig ? scale.compactBn : scale.compactNumber;\n  if (input.type === \"bitSequence\") return scale.bitSequence;\n  const buildNextCodec = (nextInput) => buildCodec(nextInput, cache, stack, _accountId);\n  const buildVector = (inner2, len) => {\n    const innerCodec = buildNextCodec(inner2);\n    return len ? scale.Vector(innerCodec, len) : scale.Vector(innerCodec);\n  };\n  const buildTuple = (value) => scale.Tuple(...value.map(buildNextCodec));\n  const buildStruct = (value) => {\n    const inner2 = Object.fromEntries(\n      Object.entries(value).map(([key, value2]) => [key, buildNextCodec(value2)])\n    );\n    return scale.Struct(inner2);\n  };\n  if (input.type === \"sequence\" && input.value.type === \"primitive\" && input.value.value === \"u8\") {\n    return _bytes;\n  }\n  if (input.type === \"array\") {\n    if (input.value.type === \"primitive\" && input.value.value === \"u8\")\n      return scale.Bin(input.len);\n    return buildVector(input.value, input.len);\n  }\n  if (input.type === \"sequence\") return buildVector(input.value);\n  if (input.type === \"tuple\") return buildTuple(input.value);\n  if (input.type === \"struct\") return buildStruct(input.value);\n  if (input.type === \"option\") return scale.Option(buildNextCodec(input.value));\n  if (input.type === \"result\")\n    return scale.Result(\n      buildNextCodec(input.value.ok),\n      buildNextCodec(input.value.ko)\n    );\n  const dependencies = Object.values(input.value).map((v) => {\n    switch (v.type) {\n      case \"void\":\n        return scale._void;\n      case \"lookupEntry\":\n        return buildNextCodec(v.value);\n      case \"tuple\":\n        return buildTuple(v.value);\n      case \"struct\":\n        return buildStruct(v.value);\n      case \"array\":\n        return buildVector(v.value, v.len);\n    }\n  });\n  const inner = Object.fromEntries(\n    Object.keys(input.value).map((key, idx) => {\n      return [key, dependencies[idx]];\n    })\n  );\n  const indexes = Object.values(input.value).map((x) => x.idx);\n  const areIndexesSorted = indexes.every((idx, i) => idx === i);\n  const variantCodec = areIndexesSorted ? scale.Variant(inner) : scale.Variant(inner, indexes);\n  return input.byteLength ? fixedSizeCodec(variantCodec, input.byteLength) : variantCodec;\n};\nconst buildCodec = withCache(_buildCodec, scale.Self, (res) => res);\nconst getLookupCodecBuilder = (lookup, accountId = scale.AccountId()) => {\n  const cache = /* @__PURE__ */ new Map();\n  const buildDefinition = (id) => buildCodec(lookup(id), cache, /* @__PURE__ */ new Set(), accountId);\n  return (id) => buildDefinition(id);\n};\nconst fixedSizeCodec = (codec, size) => {\n  const allBytes = scale.Bytes(size);\n  return scale.createCodec(\n    (value) => allBytes.enc(codec.enc(value)),\n    (data) => codec.dec(allBytes.dec(data))\n  );\n};\n\nexport { getLookupCodecBuilder };\n//# sourceMappingURL=lookup-codec-builder.mjs.map\n","import * as scale from '@polkadot-api/substrate-bindings';\nimport { mapObject } from '@polkadot-api/utils';\nimport { getLookupCodecBuilder } from './lookup-codec-builder.mjs';\n\nconst getDynamicBuilder = (getLookupEntryDef) => {\n  const { metadata } = getLookupEntryDef;\n  let buildDefinition = getLookupCodecBuilder(getLookupEntryDef);\n  const prefix = metadata.pallets.find((x) => x.name === \"System\")?.constants.find((x) => x.name === \"SS58Prefix\");\n  let ss58Prefix;\n  if (prefix) {\n    try {\n      const prefixVal = buildDefinition(prefix.type).dec(prefix.value);\n      if (typeof prefixVal === \"number\") {\n        ss58Prefix = prefixVal;\n        buildDefinition = getLookupCodecBuilder(\n          getLookupEntryDef,\n          scale.AccountId(prefixVal)\n        );\n      }\n    } catch (_) {\n    }\n  }\n  const storagePallets = /* @__PURE__ */ new Map();\n  const buildStorage = (pallet, entry) => {\n    let storagePallet = storagePallets.get(pallet);\n    if (!storagePallet)\n      storagePallets.set(pallet, storagePallet = scale.Storage(pallet));\n    const storageEntry = metadata.pallets.find((x) => x.name === pallet).storage.items.find((s) => s.name === entry);\n    const storageWithFallback = (len, value2, ...args) => {\n      const keys = storagePallet(...args);\n      return {\n        keys,\n        value: value2,\n        len,\n        fallback: storageEntry.modifier === 1 ? value2.dec(storageEntry.fallback) : void 0\n      };\n    };\n    if (storageEntry.type.tag === \"plain\")\n      return storageWithFallback(\n        0,\n        buildDefinition(storageEntry.type.value),\n        entry\n      );\n    const { key, value, hashers } = storageEntry.type.value;\n    const val = buildDefinition(value);\n    const hashes = hashers.map((x) => scale[x.tag]);\n    const hashArgs = (() => {\n      if (hashes.length === 1) {\n        return [[buildDefinition(key), hashes[0]]];\n      }\n      const keyDef = getLookupEntryDef(key);\n      switch (keyDef.type) {\n        case \"array\":\n          return hashes.map((hash) => [buildDefinition(keyDef.value.id), hash]);\n        case \"tuple\":\n          return keyDef.value.map((x, idx) => [\n            buildDefinition(x.id),\n            hashes[idx]\n          ]);\n        default:\n          throw new Error(\"Invalid key type\");\n      }\n    })();\n    return storageWithFallback(hashes.length, val, entry, ...hashArgs);\n  };\n  const buildEnumEntry = (entry) => {\n    switch (entry.type) {\n      case \"void\":\n        return scale._void;\n      case \"lookupEntry\":\n        return buildDefinition(entry.value.id);\n      case \"tuple\":\n        return scale.Tuple(\n          ...Object.values(entry.value).map((l) => buildDefinition(l.id))\n        );\n      case \"struct\":\n        return scale.Struct(\n          mapObject(entry.value, (x) => buildDefinition(x.id))\n        );\n      case \"array\":\n        return scale.Vector(buildDefinition(entry.value.id), entry.len);\n    }\n  };\n  const buildConstant = (pallet, constantName) => {\n    const storageEntry = metadata.pallets.find((x) => x.name === pallet).constants.find((s) => s.name === constantName);\n    return buildDefinition(storageEntry.type);\n  };\n  const buildVariant = (type) => (pallet, name) => {\n    const palletEntry = metadata.pallets.find((x) => x.name === pallet);\n    const lookup = getLookupEntryDef(palletEntry[type]);\n    if (lookup.type !== \"enum\") throw null;\n    const entry = lookup.value[name];\n    return {\n      location: [palletEntry.index, entry.idx],\n      codec: buildEnumEntry(lookup.value[name])\n    };\n  };\n  const buildRuntimeCall = (api, method) => {\n    const entry = metadata.apis.find((x) => x.name === api)?.methods.find((x) => x.name === method);\n    if (!entry) throw null;\n    return {\n      args: scale.Tuple(...entry.inputs.map((x) => buildDefinition(x.type))),\n      value: buildDefinition(entry.output)\n    };\n  };\n  return {\n    buildDefinition,\n    buildStorage,\n    buildEvent: buildVariant(\"events\"),\n    buildError: buildVariant(\"errors\"),\n    buildRuntimeCall,\n    buildCall: buildVariant(\"calls\"),\n    buildConstant,\n    ss58Prefix\n  };\n};\n\nexport { getDynamicBuilder };\n//# sourceMappingURL=dynamic-builder.mjs.map\n","import { getLookupFn, getDynamicBuilder } from '@polkadot-api/metadata-builders';\nimport { u32, Bytes, Option, Vector, AccountId, metadata } from '@polkadot-api/substrate-bindings';\nimport { toHex } from '@polkadot-api/utils';\nimport { map, shareReplay, catchError, of, mergeMap, EMPTY, timer } from 'rxjs';\nimport { BlockNotPinnedError } from '../errors.mjs';\nimport { OperationInaccessibleError } from '@polkadot-api/substrate-client';\n\nconst v15Args = toHex(u32.enc(15));\nconst opaqueBytes = Bytes();\nconst optionalOpaqueBytes = Option(opaqueBytes);\nconst u32ListDecoder = Vector(u32).dec;\nconst getRuntimeCreator = (call$) => {\n  const getMetadata$ = (getHash) => {\n    const recoverCall$ = (method, args) => {\n      const hash = getHash();\n      return hash ? call$(hash, method, args).pipe(\n        catchError((e) => {\n          if (e instanceof BlockNotPinnedError)\n            return recoverCall$(method, args);\n          if (e instanceof OperationInaccessibleError)\n            return timer(750).pipe(\n              mergeMap(() => recoverCall$(method, args))\n            );\n          throw e;\n        })\n      ) : EMPTY;\n    };\n    const versions = recoverCall$(\"Metadata_metadata_versions\", \"\").pipe(\n      map(u32ListDecoder)\n    );\n    const v14 = recoverCall$(\"Metadata_metadata\", \"\").pipe(\n      map((x) => {\n        const metadataRaw = opaqueBytes.dec(x);\n        const metadata$1 = metadata.dec(metadataRaw);\n        return { metadata: metadata$1.metadata.value, metadataRaw };\n      })\n    );\n    const v15 = recoverCall$(\"Metadata_metadata_at_version\", v15Args).pipe(\n      map((x) => {\n        const metadataRaw = optionalOpaqueBytes.dec(x);\n        const metadata$1 = metadata.dec(metadataRaw);\n        return { metadata: metadata$1.metadata.value, metadataRaw };\n      })\n    );\n    return versions.pipe(\n      catchError(() => of([14])),\n      mergeMap((v) => v.includes(15) ? v15 : v14)\n    );\n  };\n  return (getHash) => {\n    const initialHash = getHash();\n    const usages = /* @__PURE__ */ new Set([initialHash]);\n    const runtimeContext$ = getMetadata$(\n      getHash\n    ).pipe(\n      map(({ metadata, metadataRaw }) => {\n        const lookup = getLookupFn(metadata);\n        const dynamicBuilder = getDynamicBuilder(lookup);\n        const events = dynamicBuilder.buildStorage(\"System\", \"Events\");\n        const assetPayment = metadata.extrinsic.signedExtensions.find(\n          (x) => x.identifier === \"ChargeAssetTxPayment\"\n        );\n        let assetId = null;\n        if (assetPayment) {\n          const assetTxPayment = lookup(assetPayment.type);\n          if (assetTxPayment.type === \"struct\") {\n            const optionalAssetId = assetTxPayment.value.asset_id;\n            if (optionalAssetId.type === \"option\")\n              assetId = optionalAssetId.value.id;\n          }\n        }\n        return {\n          assetId,\n          metadataRaw,\n          lookup,\n          dynamicBuilder,\n          events: {\n            key: events.keys.enc(),\n            dec: events.value.dec\n          },\n          accountId: AccountId(dynamicBuilder.ss58Prefix)\n        };\n      }),\n      shareReplay(1)\n    );\n    const result = {\n      at: initialHash,\n      runtime: runtimeContext$,\n      addBlock: (block) => {\n        usages.add(block);\n        return result;\n      },\n      deleteBlocks: (blocks) => {\n        blocks.forEach((block) => {\n          usages.delete(block);\n        });\n        return usages.size;\n      },\n      usages\n    };\n    runtimeContext$.subscribe({\n      error() {\n      }\n    });\n    return result;\n  };\n};\n\nexport { getRuntimeCreator };\n//# sourceMappingURL=get-runtime-creator.mjs.map\n","import { share, ReplaySubject } from 'rxjs';\n\nconst shareLatest = share({\n  connector: () => new ReplaySubject(1),\n  resetOnError: true,\n  resetOnComplete: true,\n  resetOnRefCountZero: true\n});\n\nexport { shareLatest };\n//# sourceMappingURL=shareLatest.mjs.map\n","import { merge, scan, filter, map } from 'rxjs';\nimport '@polkadot-api/substrate-client';\nimport { withStopRecovery } from '../enhancers/withStopRecovery.mjs';\nimport { getRuntimeCreator } from './get-runtime-creator.mjs';\nimport { shareLatest } from '../../utils/shareLatest.mjs';\n\nconst createRuntimeGetter = (pinned, startAt) => {\n  return () => {\n    const runtime = pinned.runtimes[startAt];\n    if (!runtime) return pinned.blocks.has(startAt) ? startAt : null;\n    const winner = [...runtime.usages].reverse().find((x) => !pinned.blocks.get(x).unpinned);\n    return winner ?? null;\n  };\n};\nconst deleteBlock = (blocks, blockHash) => {\n  blocks.get(blocks.get(blockHash).parent)?.children.delete(blockHash);\n  blocks.delete(blockHash);\n};\nconst deleteBlocks = (blocks, toDelete) => {\n  toDelete.forEach((hash) => {\n    deleteBlock(blocks.blocks, hash);\n  });\n  Object.entries(blocks.runtimes).map(([key, value]) => ({\n    key,\n    usages: value.deleteBlocks(toDelete)\n  })).filter((x) => x.usages === 0).map((x) => x.key).forEach((unusedRuntime) => {\n    delete blocks.runtimes[unusedRuntime];\n  });\n};\nconst getPinnedBlocks$ = (follow$, call$, blockUsage$, onUnpin, deleteFromCache) => {\n  const pinnedBlocks$ = merge(\n    blockUsage$,\n    follow$\n  ).pipe(\n    scan((acc, event) => {\n      switch (event.type) {\n        case \"initialized\":\n          if (acc.recovering) {\n            const isConnected = event.finalizedBlockHashes.some(\n              (hash) => acc.blocks.has(hash)\n            );\n            if (!isConnected) {\n              acc = getInitialPinnedBlocks();\n            }\n          }\n          const [finalizedHash] = event.finalizedBlockHashes.slice(-1);\n          acc.finalized = acc.best = finalizedHash;\n          const lastIdx = event.finalizedBlockHashes.length - 1;\n          event.finalizedBlockHashes.forEach((hash, i) => {\n            if (acc.blocks.has(hash)) {\n              acc.blocks.get(hash).recovering = false;\n            } else {\n              acc.blocks.set(hash, {\n                hash,\n                parent: i === 0 ? event.parentHash : event.finalizedBlockHashes[i - 1],\n                children: new Set(\n                  i === lastIdx ? [] : [event.finalizedBlockHashes[i + 1]]\n                ),\n                runtime: hash,\n                refCount: 0,\n                number: event.number + i,\n                recovering: false\n              });\n            }\n          });\n          const finalizedRuntime = Object.values(acc.runtimes).find(\n            (runtime) => runtime.usages.has(finalizedHash)\n          );\n          acc.finalizedRuntime = finalizedRuntime ?? (acc.runtimes[finalizedHash] = getRuntime(\n            createRuntimeGetter(acc, finalizedHash)\n          ));\n          return acc;\n        case \"stop-error\":\n          for (const block of acc.blocks.values()) {\n            block.recovering = true;\n          }\n          acc.recovering = true;\n          return acc;\n        case \"newBlock\": {\n          const { parentBlockHash: parent, blockHash: hash } = event;\n          if (acc.blocks.has(hash)) {\n            acc.blocks.get(hash).recovering = false;\n          } else {\n            const parentNode = acc.blocks.get(parent);\n            parentNode.children.add(hash);\n            if (event.newRuntime) {\n              acc.runtimes[hash] = getRuntime(createRuntimeGetter(acc, hash));\n            }\n            const block = {\n              hash,\n              number: parentNode.number + 1,\n              parent,\n              children: /* @__PURE__ */ new Set(),\n              runtime: event.newRuntime ? hash : parentNode.runtime,\n              refCount: 0,\n              recovering: false\n            };\n            acc.blocks.set(hash, block);\n            acc.runtimes[block.runtime].addBlock(hash);\n          }\n          return acc;\n        }\n        case \"bestBlockChanged\": {\n          if (acc.recovering) {\n            for (const [hash, block] of acc.blocks) {\n              if (block.recovering) {\n                deleteBlock(acc.blocks, hash);\n                deleteFromCache(hash);\n              }\n            }\n            acc.recovering = false;\n          }\n          acc.best = event.bestBlockHash;\n          return acc;\n        }\n        case \"finalized\": {\n          acc.finalized = event.finalizedBlockHashes.slice(-1)[0];\n          const { blocks } = acc;\n          if (blocks.get(acc.best).number < blocks.get(acc.finalized).number)\n            acc.best = acc.finalized;\n          acc.finalizedRuntime = acc.runtimes[blocks.get(acc.finalized).runtime];\n          const { prunedBlockHashes: prunned } = event;\n          deleteBlocks(acc, prunned);\n          onUnpin(prunned);\n          setTimeout(() => {\n            const trail = [];\n            const toUnpin = [];\n            let current = blocks.get(blocks.get(acc.finalized).parent);\n            while (current) {\n              const { hash } = current;\n              trail.push(hash);\n              if (current.refCount === 0 && !current.unpinned) {\n                current.unpinned = true;\n                if (current.recovering) deleteFromCache(hash);\n                else toUnpin.push(hash);\n              }\n              current = blocks.get(current.parent);\n            }\n            const toDelete = [];\n            for (let i = trail.length - 1; i >= 0; i--) {\n              current = blocks.get(trail[i]);\n              if (!current.unpinned) break;\n              toDelete.push(current.hash);\n            }\n            deleteBlocks(acc, toDelete);\n            onUnpin(toUnpin);\n          }, 0);\n          return acc;\n        }\n        case \"blockUsage\": {\n          if (!acc.blocks.has(event.value.hash)) return acc;\n          const block = acc.blocks.get(event.value.hash);\n          block.refCount += event.value.type === \"hold\" ? 1 : -1;\n          if (block.refCount === 0 && block.number < acc.blocks.get(acc.finalized).number && !block.recovering) {\n            block.unpinned = true;\n            onUnpin([block.hash]);\n          }\n          return acc;\n        }\n      }\n    }, getInitialPinnedBlocks()),\n    filter((x) => !!x.finalizedRuntime.runtime),\n    map((x) => ({ ...x })),\n    shareLatest\n  );\n  const getRuntime = getRuntimeCreator(\n    withStopRecovery(pinnedBlocks$, call$, \"pinned-blocks\")\n  );\n  return pinnedBlocks$;\n};\nconst getInitialPinnedBlocks = () => ({\n  best: \"\",\n  finalized: \"\",\n  runtimes: {},\n  blocks: /* @__PURE__ */ new Map(),\n  finalizedRuntime: {},\n  recovering: false\n});\n\nexport { getPinnedBlocks$ };\n//# sourceMappingURL=pinned-blocks.mjs.map\n","import { take, mergeMap, of, takeUntil, distinct, map, filter } from 'rxjs';\n\nconst getTrackTx = (blocks$, getBody, getIsValid, getEvents) => {\n  const whileBlockPresent = (hash) => takeUntil(blocks$.pipe(filter(({ blocks }) => !blocks.has(hash))));\n  const analyzeBlock = (hash, tx, alreadyPresent) => {\n    if (alreadyPresent)\n      return of({ hash, found: { type: false, validity: null } });\n    const whilePresent = whileBlockPresent(hash);\n    return getBody(hash).pipe(\n      mergeMap((txs) => {\n        const index = txs.indexOf(tx);\n        return index > -1 ? whilePresent(getEvents(hash)).pipe(\n          map((events) => ({\n            hash,\n            found: {\n              type: true,\n              index,\n              events\n            }\n          }))\n        ) : getIsValid(hash, tx).pipe(\n          map((validity) => ({\n            hash,\n            found: { type: false, validity }\n          }))\n        );\n      }),\n      whilePresent\n    );\n  };\n  const findInBranch = (hash, tx, alreadyPresent) => analyzeBlock(hash, tx, alreadyPresent.has(hash)).pipe(\n    mergeMap((analyzed) => {\n      const { found } = analyzed;\n      return found.type || found.validity?.success === false ? of(analyzed) : blocks$.pipe(\n        whileBlockPresent(hash),\n        mergeMap((x) => x.blocks.get(hash).children),\n        distinct(),\n        mergeMap((hash2) => findInBranch(hash2, tx, alreadyPresent))\n      );\n    })\n  );\n  return (tx) => blocks$.pipe(\n    take(1),\n    mergeMap((x) => findInBranch(x.finalized, tx, new Set(x.blocks.keys())))\n  );\n};\n\nexport { getTrackTx };\n//# sourceMappingURL=track-tx.mjs.map\n","import { map, withLatestFrom } from 'rxjs';\nimport { toHex, mergeUint8, fromHex } from '@polkadot-api/utils';\nimport { Variant, u8, _void, createDecoder } from '@polkadot-api/substrate-bindings';\n\nconst external = new Uint8Array([2]);\nconst getValidateTxArgs = (tx, hash) => toHex(mergeUint8(external, fromHex(tx), fromHex(hash)));\nconst TaggedTransactionQueue = \"TaggedTransactionQueue\";\nconst validateTransaction = \"validate_transaction\";\nconst [, defaultInvalidTxDecoder] = Variant({\n  InvalidTransaction: Variant({\n    Call: _void,\n    Payment: _void,\n    Future: _void,\n    Stale: _void,\n    BadProof: _void,\n    AncientBirthBlock: _void,\n    ExhaustsResources: _void,\n    Custom: u8,\n    BadMandatory: _void,\n    MandatoryValidation: _void,\n    BadSigner: _void\n  }),\n  UnknownTransaction: Variant({\n    CannotLookup: _void,\n    NoUnsignedValidator: _void,\n    Custom: u8\n  })\n});\nconst defaultValidateTxDecoder = createDecoder((input) => {\n  const firstByte = u8.dec(input);\n  if (firstByte > 1)\n    throw new Error(\"Unable to decode validateTransaction result\");\n  if (!firstByte) return { success: true, value: void 0 };\n  let value;\n  try {\n    value = defaultInvalidTxDecoder(input);\n  } catch (_) {\n    value = {\n      type: \"UnknownInvalidTx\"\n    };\n  }\n  return { success: false, value };\n});\nconst getValidateTx = (call$, getRuntimeContext) => (blockHash, tx) => {\n  const decoder$ = getRuntimeContext(blockHash).pipe(\n    map((ctx) => {\n      try {\n        return ctx.dynamicBuilder.buildRuntimeCall(\n          TaggedTransactionQueue,\n          validateTransaction\n        ).value[1];\n      } catch (_) {\n        return defaultValidateTxDecoder;\n      }\n    })\n  );\n  return call$(\n    blockHash,\n    `${TaggedTransactionQueue}_${validateTransaction}`,\n    getValidateTxArgs(tx, blockHash)\n  ).pipe(\n    withLatestFrom(decoder$),\n    map(([result, decoder]) => decoder(result))\n  );\n};\n\nexport { getValidateTx };\n//# sourceMappingURL=validate-tx.mjs.map\n","import { Observable } from 'rxjs';\n\nconst withDefaultValue = (defaultValue) => (source$) => new Observable((observer) => {\n  let hasEmited = false;\n  const subscription = source$.subscribe({\n    next(v) {\n      hasEmited = true;\n      observer.next(v);\n    },\n    error(e) {\n      observer.error(e);\n    },\n    complete() {\n      observer.complete();\n    }\n  });\n  if (!hasEmited) observer.next(defaultValue);\n  return subscription;\n});\n\nexport { withDefaultValue };\n//# sourceMappingURL=with-default-value.mjs.map\n","import { Observable, defer } from 'rxjs';\n\nconst concatMapEager = (mapper, concurrent = Infinity) => (source$) => new Observable((observer) => {\n  let topSubscription;\n  const queues = /* @__PURE__ */ new Map();\n  const innerSubscriptions = /* @__PURE__ */ new Map();\n  const results = /* @__PURE__ */ new Map();\n  let mapperIdx = 0;\n  let subscriptionIdx = 0;\n  let observerIdx = 0;\n  const nextSubscription = () => {\n    const inner$ = queues.get(subscriptionIdx);\n    if (!inner$) {\n      if (innerSubscriptions.size === 0 && (typeof topSubscription === \"undefined\" || topSubscription.closed)) {\n        observer.complete();\n      }\n      return;\n    }\n    const idx = subscriptionIdx++;\n    queues.delete(idx);\n    if (observerIdx !== idx) {\n      results.set(idx, []);\n    }\n    let isCompleted = false;\n    let subscription = inner$.subscribe({\n      next(x) {\n        if (observerIdx === idx) {\n          observer.next(x);\n        } else {\n          results.get(idx).push(x);\n        }\n      },\n      complete() {\n        isCompleted = true;\n        innerSubscriptions.delete(idx);\n        if (idx === observerIdx) {\n          observerIdx++;\n          while (results.has(observerIdx)) {\n            results.get(observerIdx).forEach((x) => observer.next(x));\n            results.delete(observerIdx);\n            if (innerSubscriptions.has(observerIdx)) {\n              break;\n            }\n            observerIdx++;\n          }\n        }\n        nextSubscription();\n      },\n      error(e) {\n        observer.error(e);\n      }\n    });\n    if (!isCompleted) innerSubscriptions.set(idx, subscription);\n  };\n  topSubscription = source$.subscribe({\n    next(outterValue) {\n      const idx = mapperIdx++;\n      queues.set(\n        idx,\n        defer(() => mapper(outterValue, idx))\n      );\n      if (innerSubscriptions.size < concurrent) {\n        nextSubscription();\n      }\n    },\n    error(e) {\n      observer.error(e);\n    },\n    complete() {\n      if (innerSubscriptions.size === 0) {\n        observer.complete();\n      }\n    }\n  });\n  return () => {\n    innerSubscriptions.forEach((subscription) => subscription.unsubscribe());\n    topSubscription.unsubscribe();\n    queues.clear();\n    results.clear();\n  };\n});\n\nexport { concatMapEager };\n//# sourceMappingURL=concatMapEager.mjs.map\n","import { Observable } from 'rxjs';\n\nconst delayUnsubscription = (ms) => (source) => new Observable((observer) => {\n  const subscription = source.subscribe({\n    next(v) {\n      observer.next(v);\n    },\n    error(e) {\n      observer.error(e);\n    },\n    complete() {\n      observer.complete();\n    }\n  });\n  const unsubscribe = () => subscription.unsubscribe();\n  return () => {\n    Promise.resolve().then(unsubscribe);\n  };\n});\n\nexport { delayUnsubscription };\n//# sourceMappingURL=delay-unsubscription.mjs.map\n","import { DisjointError } from '@polkadot-api/substrate-client';\nimport { Subject, filter, distinctUntilChanged, scan, mergeAll, map, switchMap, take, mergeMap, shareReplay, merge, Observable, share, ReplaySubject, tap, defer, of, noop } from 'rxjs';\nimport { getWithRecovery } from './enhancers/operationLimitRecovery.mjs';\nimport { getWithOptionalhash$ } from './enhancers/optionalHash.mjs';\nimport { fromAbortControllerFn } from './enhancers/fromAbortControllerFn.mjs';\nimport { withLazyFollower } from './enhancers/lazyFollower.mjs';\nimport { withEnsureCanonicalChain } from './enhancers/whileBestBlock.mjs';\nimport { withStopRecovery } from './enhancers/withStopRecovery.mjs';\nimport { BlockNotPinnedError } from './errors.mjs';\nimport { getRecoveralStorage$ } from './storage-queries.mjs';\nimport { getFollow$ } from './streams/follow.mjs';\nimport './streams/get-runtime-creator.mjs';\nimport { getPinnedBlocks$ } from './streams/pinned-blocks.mjs';\nimport { getTrackTx } from './track-tx.mjs';\nimport { getValidateTx } from './validate-tx.mjs';\nimport { withDefaultValue } from '../utils/with-default-value.mjs';\nimport { concatMapEager } from '../utils/concatMapEager.mjs';\nimport { delayUnsubscription } from '../utils/delay-unsubscription.mjs';\nimport { shareLatest } from '../utils/shareLatest.mjs';\n\nconst toBlockInfo = ({ hash, number, parent }) => ({\n  hash,\n  number,\n  parent\n});\nconst getChainHead$ = (chainHead) => {\n  const { getFollower, startFollow, follow$, getHeader } = getFollow$(chainHead);\n  const lazyFollower = withLazyFollower(getFollower);\n  const { withRecovery, withRecoveryFn } = getWithRecovery();\n  const blockUsage$ = new Subject();\n  const holdBlock = (hash) => {\n    blockUsage$.next({ type: \"blockUsage\", value: { type: \"hold\", hash } });\n    return () => {\n      setTimeout(() => {\n        blockUsage$.next({\n          type: \"blockUsage\",\n          value: { type: \"release\", hash }\n        });\n      }, 0);\n    };\n  };\n  const usingBlock = (blockHash) => (base) => new Observable((observer) => {\n    const release = holdBlock(blockHash);\n    const subscription = base.subscribe(observer);\n    subscription.add(release);\n    return subscription;\n  });\n  const withRefcount = (fn) => (hash, ...args) => fn(hash, ...args).pipe(usingBlock(hash));\n  const withInMemory = (fn, label) => (hash, ...args) => new Observable((observer) => {\n    let isPresent = false;\n    pinnedBlocks$.pipe(take(1)).subscribe((blocks) => {\n      const block = blocks.blocks.get(hash);\n      isPresent = !!block && !block.unpinned;\n    });\n    return isPresent ? fn(hash, ...args).subscribe(observer) : observer.error(new BlockNotPinnedError(hash, label));\n  });\n  const unpin = (hashes) => getFollower().unpin(hashes).catch((e) => {\n    if (e instanceof DisjointError) return;\n    throw e;\n  });\n  const commonEnhancer = (fn, label) => {\n    const canonicalChain = (_fn) => withEnsureCanonicalChain(pinnedBlocks$, follow$, _fn);\n    return withInMemory(\n      withRefcount(\n        canonicalChain(\n          withStopRecovery(\n            pinnedBlocks$,\n            withRecoveryFn(fromAbortControllerFn(fn)),\n            `stop-${label}`\n          )\n        )\n      ),\n      label\n    );\n  };\n  const withCanonicalChain = (fn, withCanonicalChain2 = true) => (hash, ...args) => fn(hash, withCanonicalChain2, ...args);\n  const cache = /* @__PURE__ */ new Map();\n  const pinnedBlocks$ = getPinnedBlocks$(\n    follow$,\n    withRefcount(withRecoveryFn(fromAbortControllerFn(lazyFollower(\"call\")))),\n    blockUsage$,\n    (blocks) => {\n      unpin(blocks);\n      blocks.forEach((hash) => {\n        cache.delete(hash);\n      });\n    },\n    (block) => {\n      cache.delete(block);\n    }\n  );\n  const getRuntimeContext$ = withRefcount(\n    (hash) => pinnedBlocks$.pipe(\n      take(1),\n      mergeMap(\n        (pinned) => pinned.runtimes[pinned.blocks.get(hash).runtime].runtime\n      )\n    )\n  );\n  const withRuntime = (mapper) => (source$) => source$.pipe(\n    concatMapEager(\n      (x) => getRuntimeContext$(mapper(x)).pipe(map((runtime) => [x, runtime]))\n    )\n  );\n  const upsertCachedStream = (hash, key, stream) => {\n    const hashCache = cache.get(hash) ?? /* @__PURE__ */ new Map();\n    const cached = hashCache.get(key);\n    if (cached) return cached;\n    cache.set(hash, hashCache);\n    let connector;\n    const result = stream.pipe(\n      share({\n        connector: () => connector = new ReplaySubject()\n      }),\n      tap({\n        complete() {\n          hashCache.set(key, connector);\n        }\n      }),\n      delayUnsubscription()\n    );\n    hashCache.set(key, result);\n    return result;\n  };\n  const finalized$ = pinnedBlocks$.pipe(\n    filter((x) => !x.recovering),\n    distinctUntilChanged((a, b) => a.finalized === b.finalized),\n    scan((acc, value) => {\n      let current = value.blocks.get(value.finalized);\n      const result = [current];\n      const latest = acc.at(-1);\n      if (!latest) return result;\n      while (current.number > latest.number + 1) {\n        current = value.blocks.get(current.parent);\n        if (!current) break;\n        result.unshift(current);\n      }\n      return result;\n    }, []),\n    mergeAll(),\n    map(toBlockInfo),\n    shareLatest\n  );\n  const best$ = pinnedBlocks$.pipe(\n    distinctUntilChanged((a, b) => a.best === b.best),\n    map((pinned) => toBlockInfo(pinned.blocks.get(pinned.best))),\n    shareLatest\n  );\n  const bestBlocks$ = pinnedBlocks$.pipe(\n    filter((x) => !x.recovering),\n    distinctUntilChanged(\n      (prev, current) => prev.finalized === current.finalized && prev.best === current.best\n    ),\n    scan((acc, pinned) => {\n      const getBlockInfo = (hash) => acc.get(hash) || toBlockInfo(pinned.blocks.get(hash));\n      const best = getBlockInfo(pinned.best);\n      const finalized = getBlockInfo(pinned.finalized);\n      const len = best.number - finalized.number + 1;\n      const result = new Array(len);\n      for (let i = 0, hash = best.hash; i < len; i++) {\n        result[i] = getBlockInfo(hash);\n        hash = result[i].parent;\n      }\n      return new Map(result.map((b) => [b.hash, b]));\n    }, /* @__PURE__ */ new Map()),\n    map((x) => [...x.values()]),\n    shareLatest\n  );\n  const runtime$ = pinnedBlocks$.pipe(\n    distinctUntilChanged((a, b) => a.finalizedRuntime === b.finalizedRuntime),\n    switchMap(\n      ({ finalizedRuntime: { runtime } }) => runtime.pipe(withDefaultValue(null))\n    ),\n    shareLatest\n  );\n  const metadata$ = runtime$.pipe(map((x) => x?.lookup.metadata ?? null));\n  const withOptionalHash$ = getWithOptionalhash$(\n    finalized$.pipe(map((b) => b.hash)),\n    best$.pipe(map((b) => b.hash)),\n    usingBlock\n  );\n  const _body$ = withOptionalHash$(commonEnhancer(lazyFollower(\"body\"), \"body\"));\n  const body$ = (hash) => upsertCachedStream(hash, \"body\", _body$(hash, true));\n  const _storage$ = commonEnhancer(lazyFollower(\"storage\"), \"storage\");\n  const storage$ = withOptionalHash$(\n    (hash, withCanonicalChain2, type, keyMapper, childTrie = null, mapper) => pinnedBlocks$.pipe(\n      take(1),\n      mergeMap(\n        (pinned) => pinned.runtimes[pinned.blocks.get(hash).runtime].runtime\n      ),\n      mergeMap((ctx) => {\n        const key = keyMapper(ctx);\n        const unMapped$ = upsertCachedStream(\n          hash,\n          `storage-${type}-${key}-${childTrie ?? \"\"}`,\n          _storage$(hash, withCanonicalChain2, type, key, childTrie)\n        );\n        return mapper ? upsertCachedStream(\n          hash,\n          `storage-${type}-${key}-${childTrie ?? \"\"}-dec`,\n          unMapped$.pipe(\n            map((raw) => ({ raw, mapped: mapper(raw, ctx) }))\n          )\n        ) : unMapped$;\n      })\n    )\n  );\n  const recoveralStorage$ = getRecoveralStorage$(getFollower, withRecovery);\n  const storageQueries$ = withOptionalHash$(\n    withStopRecovery(\n      pinnedBlocks$,\n      (hash, queries, childTrie) => recoveralStorage$(hash, queries, childTrie ?? null, false),\n      `storageQueries`\n    )\n  );\n  const header$ = withOptionalHash$(\n    withStopRecovery(\n      pinnedBlocks$,\n      (hash) => defer(() => getHeader(hash)),\n      \"header\"\n    )\n  );\n  const eventsAt$ = (hash, canonical = false) => storage$(\n    hash,\n    canonical,\n    \"value\",\n    (ctx) => ctx.events.key,\n    null,\n    (x, ctx) => ctx.events.dec(x)\n  ).pipe(map((x) => x.mapped));\n  const __call$ = commonEnhancer(lazyFollower(\"call\"), \"call\");\n  const call$ = withOptionalHash$(\n    (hash, canonical, fn, args) => upsertCachedStream(\n      hash,\n      `call-${fn}-${args}`,\n      __call$(hash, canonical, fn, args)\n    )\n  );\n  const validateTx$ = getValidateTx(\n    withCanonicalChain(call$, false),\n    getRuntimeContext$\n  );\n  const innerBody$ = (hash) => upsertCachedStream(hash, \"body\", _body$(hash, false));\n  const trackTx$ = getTrackTx(pinnedBlocks$, innerBody$, validateTx$, eventsAt$);\n  const trackTxWithoutEvents$ = getTrackTx(\n    pinnedBlocks$,\n    innerBody$,\n    validateTx$,\n    () => of()\n  );\n  const genesis$ = runtime$.pipe(\n    filter(Boolean),\n    take(1),\n    mergeMap((runtime) => {\n      const { enc } = runtime.dynamicBuilder.buildStorage(\n        \"System\",\n        \"BlockHash\"\n      ).keys;\n      let key;\n      try {\n        key = enc(0);\n      } catch {\n        key = enc(0n);\n      }\n      return storage$(\n        null,\n        false,\n        \"value\",\n        () => key,\n        null\n      );\n    }),\n    shareReplay(1)\n  );\n  merge(runtime$, bestBlocks$).subscribe({\n    error() {\n    }\n  });\n  let unfollow = noop;\n  let started = false;\n  let nSubscribers = 0;\n  const start = (_nSubscribers) => {\n    nSubscribers += _nSubscribers;\n    started = true;\n    unfollow = startFollow();\n  };\n  return [\n    {\n      follow$,\n      finalized$,\n      best$,\n      bestBlocks$,\n      runtime$,\n      metadata$,\n      genesis$,\n      header$,\n      body$,\n      call$: withCanonicalChain(call$),\n      storage$: withCanonicalChain(storage$),\n      storageQueries$,\n      eventsAt$: withCanonicalChain(eventsAt$),\n      holdBlock,\n      trackTx$,\n      trackTxWithoutEvents$,\n      validateTx$,\n      pinnedBlocks$,\n      withRuntime,\n      getRuntimeContext$: withOptionalHash$(getRuntimeContext$),\n      unfollow: () => {\n        if (started == null) return;\n        nSubscribers--;\n        if (started && !nSubscribers) {\n          started = null;\n          unfollow();\n          unfollow = noop;\n        }\n      }\n    },\n    start\n  ];\n};\n\nexport { getChainHead$ };\n//# sourceMappingURL=chainHead.mjs.map\n","import { Observable } from 'rxjs';\n\nvar getBroadcastTx$ = (baseTransaction) => (transaction) => new Observable(\n  (observer) => baseTransaction(transaction, (e) => {\n    observer.error(e);\n  })\n);\n\nexport { getBroadcastTx$ as default };\n//# sourceMappingURL=tx.mjs.map\n","import { getChainHead$ } from './chainHead/chainHead.mjs';\nimport 'rxjs';\nimport getBroadcastTx$ from './tx.mjs';\n\nconst clientCache = /* @__PURE__ */ new Map();\nconst getObservableClient = (substrateClient) => {\n  const cached = clientCache.get(substrateClient);\n  if (cached) {\n    cached.refCount++;\n    return cached.client;\n  }\n  const destroy = () => {\n    const cached2 = clientCache.get(substrateClient);\n    if (!cached2 || cached2.refCount <= 1) {\n      clientCache.delete(substrateClient);\n      substrateClient.destroy();\n    } else {\n      cached2.refCount--;\n    }\n  };\n  let cachedChainhead = null;\n  let currentSubscribers = 0;\n  let expectedSubscribers = null;\n  const client = {\n    chainHead$: (_expectedSubscribers) => {\n      currentSubscribers++;\n      expectedSubscribers || (expectedSubscribers = _expectedSubscribers || 1);\n      cachedChainhead || (cachedChainhead = getChainHead$(substrateClient.chainHead));\n      const [result, start] = cachedChainhead;\n      if (expectedSubscribers === currentSubscribers) {\n        const copiedCurrentSubscribers = currentSubscribers;\n        currentSubscribers = 0;\n        expectedSubscribers = null;\n        cachedChainhead = null;\n        start(copiedCurrentSubscribers);\n      }\n      return result;\n    },\n    broadcastTx$: getBroadcastTx$(substrateClient.transaction),\n    destroy\n  };\n  clientCache.set(substrateClient, { client, refCount: 1 });\n  return client;\n};\n\nexport { getObservableClient };\n//# sourceMappingURL=getObservableClient.mjs.map\n","import { EntryPointCodec, TypedefCodec, mapLookupToTypedef, CompatibilityLevel, valueIsCompatibleWithDest, entryPointsAreCompatible } from '@polkadot-api/metadata-compatibility';\nimport { Vector, Tuple } from '@polkadot-api/substrate-bindings';\nimport { filter, firstValueFrom, combineLatest, map } from 'rxjs';\n\nclass RuntimeToken {\n  constructor() {\n  }\n  // @ts-ignore\n  _runtime(value) {\n  }\n}\nclass CompatibilityToken {\n  constructor() {\n  }\n  // @ts-ignore\n  _compatibility(value) {\n  }\n}\nconst compatibilityTokenApi = /* @__PURE__ */ new WeakMap();\nconst runtimeTokenApi = /* @__PURE__ */ new WeakMap();\nconst getCompatibilityApi = (token) => token instanceof RuntimeToken ? runtimeTokenApi.get(token) : compatibilityTokenApi.get(token);\nvar OpType = /* @__PURE__ */ ((OpType2) => {\n  OpType2[\"Storage\"] = \"storage\";\n  OpType2[\"Tx\"] = \"tx\";\n  OpType2[\"Event\"] = \"events\";\n  OpType2[\"Const\"] = \"constants\";\n  return OpType2;\n})(OpType || {});\nconst EntryPointsCodec = Vector(EntryPointCodec);\nconst TypedefsCodec = Vector(TypedefCodec);\nconst TypesCodec = Tuple(EntryPointsCodec, TypedefsCodec);\nconst createCompatibilityToken = (chainDefinition, chainHead) => {\n  const awaitedRuntime = new Promise(async (resolve) => {\n    const loadedRuntime$ = chainHead.runtime$.pipe(filter((v) => v != null));\n    let latest = await firstValueFrom(loadedRuntime$);\n    loadedRuntime$.subscribe((v) => latest = v);\n    resolve(() => latest);\n  });\n  const promise = Promise.all([\n    chainDefinition.metadataTypes.then(TypesCodec.dec),\n    chainDefinition.descriptors,\n    awaitedRuntime\n  ]).then(([[entryPoints, typedefNodes], descriptors, runtime]) => {\n    const token = new CompatibilityToken();\n    compatibilityTokenApi.set(token, {\n      runtime,\n      getPalletEntryPoint(opType, pallet, name) {\n        const idx = descriptors[opType]?.[pallet]?.[name];\n        if (idx == null)\n          throw new Error(\n            `Descriptor for ${opType} ${pallet}.${name} does not exist`\n          );\n        return entryPoints[idx];\n      },\n      getApiEntryPoint(name, method) {\n        const idx = descriptors.apis?.[name]?.[method];\n        if (idx == null)\n          throw new Error(`Descriptor for API ${name}.${method} does not exist`);\n        return entryPoints[idx];\n      },\n      typedefNodes\n    });\n    return token;\n  });\n  return promise;\n};\nconst createRuntimeToken = (chainHead) => {\n  const awaitedRuntime = new Promise(async (resolve) => {\n    const loadedRuntime$ = chainHead.runtime$.pipe(filter((v) => v != null));\n    let latest = await firstValueFrom(loadedRuntime$);\n    loadedRuntime$.subscribe((v) => latest = v);\n    resolve(() => latest);\n  });\n  const promise = awaitedRuntime.then((runtime) => {\n    const token = new RuntimeToken();\n    runtimeTokenApi.set(token, {\n      runtime\n    });\n    return token;\n  });\n  return promise;\n};\nconst metadataCache = /* @__PURE__ */ new WeakMap();\nconst getMetadataCache = (ctx) => {\n  if (!metadataCache.has(ctx.metadataRaw)) {\n    metadataCache.set(ctx.metadataRaw, {\n      compat: /* @__PURE__ */ new Map(),\n      lookup: ctx.lookup,\n      typeNodes: []\n    });\n  }\n  return metadataCache.get(ctx.metadataRaw);\n};\nconst compatibilityHelper = (descriptors, getDescriptorEntryPoint, getRuntimeEntryPoint) => {\n  const getRuntimeTypedef = (ctx, id) => {\n    var _a;\n    const cache = getMetadataCache(ctx);\n    return (_a = cache.typeNodes)[id] || (_a[id] = mapLookupToTypedef(cache.lookup(id)));\n  };\n  function getCompatibilityLevels(descriptors2, ctx) {\n    if (descriptors2 instanceof RuntimeToken) {\n      return {\n        args: CompatibilityLevel.Identical,\n        values: CompatibilityLevel.Identical\n      };\n    }\n    const compatibilityApi = compatibilityTokenApi.get(descriptors2);\n    ctx || (ctx = compatibilityApi.runtime());\n    const descriptorEntryPoint = getDescriptorEntryPoint(compatibilityApi);\n    const runtimeEntryPoint = getRuntimeEntryPoint(ctx);\n    if (runtimeEntryPoint == null)\n      return {\n        args: CompatibilityLevel.Incompatible,\n        values: CompatibilityLevel.Incompatible\n      };\n    const descriptorNodes = compatibilityApi.typedefNodes;\n    const cache = getMetadataCache(ctx);\n    return entryPointsAreCompatible(\n      descriptorEntryPoint,\n      (id) => descriptorNodes[id],\n      runtimeEntryPoint,\n      (id) => getRuntimeTypedef(ctx, id),\n      cache.compat\n    );\n  }\n  const getCompatibilityLevel = withOptionalToken(\n    descriptors,\n    (runtime) => minCompatLevel(getCompatibilityLevels(runtime))\n  );\n  const isCompatible = withOptionalToken(\n    descriptors,\n    (threshold, runtime) => getCompatibilityLevel(runtime) >= threshold\n  );\n  const compatibleRuntime$ = (chainHead, hash) => combineLatest([descriptors, chainHead.getRuntimeContext$(hash)]);\n  const withCompatibleRuntime = (chainHead, mapper) => (source$) => combineLatest([\n    source$.pipe(chainHead.withRuntime(mapper)),\n    descriptors\n  ]).pipe(map(([[x, ctx], descriptors2]) => [x, descriptors2, ctx]));\n  const argsAreCompatible = (descriptors2, ctx, args) => {\n    if (descriptors2 instanceof RuntimeToken) return true;\n    const levels = getCompatibilityLevels(descriptors2, ctx);\n    if (levels.args === CompatibilityLevel.Incompatible) return false;\n    if (levels.args > CompatibilityLevel.Partial) return true;\n    if (levels.values === CompatibilityLevel.Incompatible) return false;\n    const entryPoint = getRuntimeEntryPoint(ctx);\n    if (entryPoint == null) return false;\n    return valueIsCompatibleWithDest(\n      entryPoint.args,\n      (id) => getRuntimeTypedef(ctx, id),\n      args\n    );\n  };\n  const valuesAreCompatible = (descriptors2, ctx, values) => {\n    if (descriptors2 instanceof RuntimeToken) return true;\n    const level = getCompatibilityLevels(descriptors2, ctx).values;\n    if (level === CompatibilityLevel.Incompatible) return false;\n    if (level > CompatibilityLevel.Partial) return true;\n    const compatibilityApi = compatibilityTokenApi.get(descriptors2);\n    const entryPoint = getDescriptorEntryPoint(compatibilityApi);\n    return valueIsCompatibleWithDest(\n      entryPoint.values,\n      (id) => compatibilityApi.typedefNodes[id],\n      values\n    );\n  };\n  return {\n    isCompatible,\n    getCompatibilityLevel,\n    getCompatibilityLevels,\n    descriptors,\n    withCompatibleRuntime,\n    compatibleRuntime$,\n    argsAreCompatible,\n    valuesAreCompatible,\n    getRuntimeTypedef\n  };\n};\nconst minCompatLevel = (levels) => Math.min(levels.args, levels.values);\nconst withOptionalToken = (compatibilityToken, fn) => (...args) => {\n  const lastElement = args.at(-1);\n  if (lastElement instanceof CompatibilityToken || lastElement instanceof RuntimeToken) {\n    return fn(...args);\n  }\n  return compatibilityToken.then((token) => fn(...args, token));\n};\n\nexport { CompatibilityToken, OpType, RuntimeToken, compatibilityHelper, createCompatibilityToken, createRuntimeToken, getCompatibilityApi, minCompatLevel };\n//# sourceMappingURL=compatibility.mjs.map\n","import { getCompatibilityApi } from './compatibility.mjs';\n\nconst createConstantEntry = (palletName, name, {\n  valuesAreCompatible,\n  descriptors,\n  isCompatible,\n  getCompatibilityLevel\n}) => {\n  const cachedResults = /* @__PURE__ */ new WeakMap();\n  const getValueWithContext = (ctx) => {\n    if (cachedResults.has(ctx)) {\n      return cachedResults.get(ctx);\n    }\n    const pallet = ctx.lookup.metadata.pallets.find(\n      (p) => p.name === palletName\n    );\n    const constant = pallet?.constants.find((c) => c.name === name);\n    if (constant == null)\n      throw new Error(`Runtime entry Constant(${palletName}.${name}) not found`);\n    const result = ctx.dynamicBuilder.buildConstant(palletName, name).dec(constant.value);\n    cachedResults.set(ctx, result);\n    return result;\n  };\n  const fn = (token) => {\n    if (token) {\n      const ctx = getCompatibilityApi(token).runtime();\n      const value = getValueWithContext(ctx);\n      if (!valuesAreCompatible(token, ctx, value))\n        throw new Error(\n          `Incompatible runtime entry Constant(${palletName}.${name})`\n        );\n      return value;\n    }\n    return descriptors.then(fn);\n  };\n  return Object.assign(fn, { isCompatible, getCompatibilityLevel });\n};\n\nexport { createConstantEntry };\n//# sourceMappingURL=constants.mjs.map\n","import { share, ReplaySubject } from 'rxjs';\n\nconst shareLatest = share({\n  connector: () => new ReplaySubject(1),\n  resetOnError: true,\n  resetOnComplete: true,\n  resetOnRefCountZero: true\n});\n\nexport { shareLatest };\n//# sourceMappingURL=shareLatest.mjs.map\n","import { map, firstValueFrom, mergeMap } from 'rxjs';\nimport { concatMapEager } from '@polkadot-api/observable-client';\nimport { shareLatest } from './utils/shareLatest.mjs';\nimport '@polkadot-api/utils';\nimport 'rxjs/operators';\n\nconst createEventEntry = (pallet, name, chainHead, {\n  isCompatible,\n  getCompatibilityLevel,\n  withCompatibleRuntime,\n  argsAreCompatible,\n  valuesAreCompatible\n}) => {\n  const compatibilityError = () => new Error(`Incompatible runtime entry Event(${pallet}.${name})`);\n  const shared$ = chainHead.finalized$.pipe(\n    withCompatibleRuntime(chainHead, (x) => x.hash),\n    map(([block, runtime, ctx]) => {\n      const eventsIdx = ctx.lookup.metadata.pallets.find(\n        (p) => p.name === pallet\n      )?.events;\n      if (eventsIdx == null || ctx.lookup.metadata.lookup[eventsIdx].def.tag !== \"variant\" || ctx.lookup.metadata.lookup[eventsIdx].def.value.find(\n        (ev) => ev.name === name\n      ) == null)\n        throw new Error(`Runtime entry Event(${pallet}.${name}) not found`);\n      if (!argsAreCompatible(runtime, ctx, null)) throw compatibilityError();\n      return [block, runtime, ctx];\n    }),\n    concatMapEager(\n      ([block, runtime, ctx]) => chainHead.eventsAt$(block.hash).pipe(\n        map((events) => {\n          const winners = events.filter(\n            (e) => e.event.type === pallet && e.event.value.type === name\n          );\n          return winners.map((x) => {\n            if (!valuesAreCompatible(runtime, ctx, x.event.value.value))\n              throw compatibilityError();\n            return {\n              meta: {\n                phase: x.phase,\n                block\n              },\n              payload: x.event.value.value\n            };\n          });\n        })\n      )\n    ),\n    shareLatest\n  );\n  const watch = (f) => shared$.pipe(mergeMap((x) => f ? x.filter((d) => f(d.payload)) : x));\n  const pull = () => firstValueFrom(shared$);\n  const filter = (events) => events.filter((e) => e.type === pallet && e.value.type === name).map((x) => x.value.value);\n  return { watch, pull, filter, getCompatibilityLevel, isCompatible };\n};\n\nexport { createEventEntry };\n//# sourceMappingURL=event.mjs.map\n","import { AbortError } from '@polkadot-api/utils';\nimport { noop } from 'rxjs';\n\nfunction firstValueFromWithSignal(source, signal) {\n  return new Promise((resolve, reject) => {\n    let subscription = null;\n    let isDone = false;\n    const onAbort = signal ? () => {\n      subscription?.unsubscribe();\n      reject(new AbortError());\n    } : noop;\n    subscription = source.subscribe({\n      next: (value) => {\n        resolve(value);\n        subscription?.unsubscribe();\n        isDone = true;\n      },\n      error: (e) => {\n        signal?.removeEventListener(\"abort\", onAbort);\n        reject(e);\n        isDone = true;\n      },\n      complete: () => {\n        signal?.removeEventListener(\"abort\", onAbort);\n        reject(new Error(\"Observable completed without emitting\"));\n        isDone = true;\n      }\n    });\n    if (!isDone) signal?.addEventListener(\"abort\", onAbort);\n  });\n}\n\nexport { firstValueFromWithSignal };\n//# sourceMappingURL=firstValueFromWithSignal.mjs.map\n","const isOptionalArg = (lastArg) => typeof lastArg === \"object\" && lastArg !== null && Object.entries(lastArg).every(\n  ([k, v]) => k === \"at\" && (v === void 0 || typeof v === \"string\") || k === \"signal\" && (v === void 0 || v instanceof AbortSignal)\n);\n\nexport { isOptionalArg };\n//# sourceMappingURL=optional-arg.mjs.map\n","import '@polkadot-api/observable-client';\nimport './utils/shareLatest.mjs';\nimport { mergeMap, map } from 'rxjs';\nimport { firstValueFromWithSignal } from './utils/firstValueFromWithSignal.mjs';\nimport { isOptionalArg } from './utils/optional-arg.mjs';\nimport 'rxjs/operators';\nimport { toHex } from '@polkadot-api/utils';\n\nconst createRuntimeCallEntry = (api, method, chainHead, {\n  isCompatible,\n  getCompatibilityLevel,\n  compatibleRuntime$,\n  argsAreCompatible,\n  valuesAreCompatible\n}) => {\n  const callName = `${api}_${method}`;\n  const compatibilityError = () => new Error(`Incompatible runtime entry RuntimeCall(${callName})`);\n  const fn = (...args) => {\n    const lastArg = args[args.length - 1];\n    const isLastArgOptional = isOptionalArg(lastArg);\n    const { signal, at: _at } = isLastArgOptional ? lastArg : {};\n    const at = _at ?? null;\n    const result$ = compatibleRuntime$(chainHead, at).pipe(\n      mergeMap(([runtime, ctx]) => {\n        let codecs;\n        try {\n          codecs = ctx.dynamicBuilder.buildRuntimeCall(api, method);\n        } catch {\n          throw new Error(`Runtime entry RuntimeCall(${callName}) not found`);\n        }\n        if (!argsAreCompatible(runtime, ctx, args)) throw compatibilityError();\n        return chainHead.call$(at, callName, toHex(codecs.args.enc(args))).pipe(\n          map(codecs.value.dec),\n          map((value) => {\n            if (!valuesAreCompatible(runtime, ctx, value))\n              throw compatibilityError();\n            return value;\n          })\n        );\n      })\n    );\n    return firstValueFromWithSignal(result$, signal);\n  };\n  return Object.assign(fn, { getCompatibilityLevel, isCompatible });\n};\n\nexport { createRuntimeCallEntry };\n//# sourceMappingURL=runtime-call.mjs.map\n","import { Observable } from 'rxjs';\n\nconst EMPTY_VALUE = Symbol(\"EMPTY_VALUE\");\nconst lossLessExhaustMap = (mapper) => (source$) => new Observable((observer) => {\n  let idx = 0;\n  let innerSubscription = null;\n  let queuedValue = EMPTY_VALUE;\n  let isOutterDone = false;\n  const setInnerSubscription = () => {\n    const observable = mapper(queuedValue, idx++);\n    queuedValue = EMPTY_VALUE;\n    innerSubscription = observable.subscribe({\n      next(vv) {\n        observer.next(vv);\n      },\n      error(ee) {\n        observer.error(ee);\n      },\n      complete() {\n        if (queuedValue !== EMPTY_VALUE) setInnerSubscription();\n        else {\n          innerSubscription = null;\n          if (isOutterDone) observer.complete();\n        }\n      }\n    });\n  };\n  const subscription = source$.subscribe({\n    next(v) {\n      queuedValue = v;\n      if (!innerSubscription) setInnerSubscription();\n    },\n    error(e) {\n      observer.error(e);\n    },\n    complete() {\n      if (!innerSubscription) observer.complete();\n      isOutterDone = true;\n    }\n  });\n  return () => {\n    innerSubscription?.unsubscribe();\n    subscription.unsubscribe();\n  };\n});\n\nexport { lossLessExhaustMap };\n//# sourceMappingURL=lossLessExhaustMap.mjs.map\n","import { NotBestBlockError } from '@polkadot-api/observable-client';\nimport './utils/shareLatest.mjs';\nimport { map, filter, take, identity, shareReplay, pipe, combineLatestWith, distinctUntilChanged, from, mergeMap } from 'rxjs';\nimport { firstValueFromWithSignal } from './utils/firstValueFromWithSignal.mjs';\nimport { lossLessExhaustMap } from './utils/lossLessExhaustMap.mjs';\nimport { isOptionalArg } from './utils/optional-arg.mjs';\nimport 'rxjs/operators';\nimport { CompatibilityLevel } from '@polkadot-api/metadata-compatibility';\nimport { FixedSizeBinary } from '@polkadot-api/substrate-bindings';\nimport { minCompatLevel } from './compatibility.mjs';\n\nconst toMapped = map((x) => x.mapped);\nconst createStorageEntry = (pallet, name, chainHead, getWatchEntries, {\n  isCompatible,\n  getCompatibilityLevel,\n  getCompatibilityLevels,\n  descriptors: descriptorsPromise,\n  argsAreCompatible,\n  valuesAreCompatible\n}) => {\n  const isSystemNumber = pallet === \"System\" && name === \"Number\";\n  const isBlockHash = pallet === \"System\" && name === \"BlockHash\";\n  const sysNumberMapper$ = chainHead.runtime$.pipe(\n    filter(Boolean),\n    take(1),\n    map(\n      ({ dynamicBuilder }) => typeof dynamicBuilder.buildStorage(\"System\", \"Number\").value.dec(new Uint8Array(32)) === \"bigint\" ? BigInt : identity\n    ),\n    shareReplay()\n  );\n  const bigIntOrNumber = pipe(\n    combineLatestWith(sysNumberMapper$),\n    map(([input, mapper]) => mapper(input))\n  );\n  const incompatibleError = () => new Error(`Incompatible runtime entry Storage(${pallet}.${name})`);\n  const invalidArgs = (args) => new Error(`Invalid Arguments calling ${pallet}.${name}(${args})`);\n  const getCodec = (ctx) => {\n    try {\n      return ctx.dynamicBuilder.buildStorage(pallet, name);\n    } catch (e) {\n      throw new Error(`Runtime entry Storage(${pallet}.${name}) not found`);\n    }\n  };\n  const watchValue = (...args) => {\n    const target = args[args.length - 1];\n    const isBest = target === \"best\";\n    const actualArgs = isBest || target === \"finalized\" ? args.slice(0, -1) : args;\n    return chainHead[isBest ? \"best$\" : \"finalized$\"].pipe(\n      lossLessExhaustMap(\n        () => getRawValue$(...actualArgs, isBest ? { at: \"best\" } : {})\n      ),\n      distinctUntilChanged((a, b) => a.raw === b.raw),\n      toMapped\n    );\n  };\n  const getRawValue$ = (...args) => {\n    const lastArg = args[args.length - 1];\n    const isLastArgOptional = isOptionalArg(lastArg);\n    const { at: _at } = isLastArgOptional ? lastArg : {};\n    const at = _at ?? null;\n    if (isSystemNumber)\n      return chainHead.bestBlocks$.pipe(\n        map((blocks) => {\n          if (at === \"finalized\" || !at) return blocks.at(-1);\n          if (at === \"best\") return blocks.at(0);\n          return blocks.find((block) => block.hash === at);\n        }),\n        map((block) => {\n          if (!block) throw new NotBestBlockError();\n          return block.number;\n        }),\n        distinctUntilChanged(),\n        bigIntOrNumber,\n        map((mapped) => ({ raw: mapped, mapped }))\n      );\n    if (isBlockHash && Number(args[0]) === 0) {\n      return chainHead.genesis$.pipe(\n        map((raw) => ({ raw, mapped: FixedSizeBinary.fromHex(raw) }))\n      );\n    }\n    return from(descriptorsPromise).pipe(\n      mergeMap(\n        (descriptors) => chainHead.storage$(\n          at,\n          \"value\",\n          (ctx) => {\n            const codecs = getCodec(ctx);\n            const actualArgs = args.length === codecs.len ? args : args.slice(0, -1);\n            if (args !== actualArgs && !isLastArgOptional)\n              throw invalidArgs(args);\n            if (!argsAreCompatible(descriptors, ctx, actualArgs))\n              throw incompatibleError();\n            return codecs.keys.enc(...actualArgs);\n          },\n          null,\n          (data, ctx) => {\n            const codecs = getCodec(ctx);\n            const value = data === null ? codecs.fallback : codecs.value.dec(data);\n            if (!valuesAreCompatible(descriptors, ctx, value))\n              throw incompatibleError();\n            return value;\n          }\n        )\n      )\n    );\n  };\n  const getValue = async (...args) => {\n    const lastArg = args[args.length - 1];\n    const isLastArgOptional = isOptionalArg(lastArg);\n    const { signal } = isLastArgOptional ? lastArg : {};\n    return firstValueFromWithSignal(\n      getRawValue$(...args).pipe(toMapped),\n      signal\n    );\n  };\n  const getEntries = async (...args) => {\n    const lastArg = args[args.length - 1];\n    const isLastArgOptional = isOptionalArg(lastArg);\n    const { signal, at: _at } = isLastArgOptional ? lastArg : {};\n    const at = _at ?? null;\n    const descriptors = await descriptorsPromise;\n    const result$ = chainHead.storage$(\n      at,\n      \"descendantsValues\",\n      (ctx) => {\n        const codecs = getCodec(ctx);\n        if (minCompatLevel(getCompatibilityLevels(descriptors, ctx)) === CompatibilityLevel.Incompatible)\n          throw incompatibleError();\n        if (args.length > codecs.len) throw invalidArgs(args);\n        const actualArgs = args.length > 0 && isLastArgOptional ? args.slice(0, -1) : args;\n        if (args.length === codecs.len && actualArgs === args)\n          throw invalidArgs(args);\n        return codecs.keys.enc(...actualArgs);\n      },\n      null,\n      (values, ctx) => {\n        const codecs = getCodec(ctx);\n        const decodedValues = values.map(({ key, value }) => ({\n          keyArgs: codecs.keys.dec(key),\n          value: codecs.value.dec(value)\n        }));\n        if (decodedValues.some(\n          ({ value }) => !valuesAreCompatible(descriptors, ctx, value)\n        ))\n          throw incompatibleError();\n        return decodedValues;\n      }\n    ).pipe(toMapped);\n    return firstValueFromWithSignal(result$, signal);\n  };\n  const getValues = (keyArgs, options) => Promise.all(\n    keyArgs.map((args) => getValue(...options ? [...args, options] : args))\n  );\n  const watchEntries = (...args) => {\n    const lastArg = args.at(-1);\n    const isLastArgOptional = isOptionalArg(lastArg);\n    return getWatchEntries(\n      pallet,\n      name,\n      isLastArgOptional ? args.slice(0, -1) : args,\n      isLastArgOptional && lastArg.at === \"best\"\n    );\n  };\n  return {\n    isCompatible,\n    getCompatibilityLevel,\n    getValue,\n    getValues,\n    getEntries,\n    watchValue,\n    watchEntries\n  };\n};\n\nexport { createStorageEntry };\n//# sourceMappingURL=storage.mjs.map\n","import { enhanceEncoder, u8, compact } from '@polkadot-api/substrate-bindings';\nimport { mergeUint8 } from '@polkadot-api/utils';\nimport { getLookupFn } from '@polkadot-api/metadata-builders';\n\nconst versionCodec = enhanceEncoder(\n  u8.enc,\n  (value) => +!!value.signed << 7 | value.version\n);\nconst unkownSignerType = () => new Error(\"Unkown signer\");\nconst getSignerType = (metadata) => {\n  const { extrinsic } = metadata;\n  const getLookup = getLookupFn(metadata);\n  let address;\n  let signature;\n  if (\"address\" in extrinsic) {\n    address = getLookup(extrinsic.address);\n    signature = getLookup(extrinsic.signature);\n  } else {\n    const extProps = Object.fromEntries(\n      metadata.lookup[extrinsic.type].params.filter((x) => x.type != null).map((x) => [x.name, getLookup(x.type)])\n    );\n    address = extProps[\"Address\"];\n    signature = extProps[\"Signature\"];\n    if (!address || !signature) throw unkownSignerType();\n  }\n  if (address.type === \"AccountId20\" && signature.type === \"array\" && signature.len === 65 && signature.value.type === \"primitive\" && signature.value.value === \"u8\")\n    return [1 /* Ethereum */, []];\n  if (signature.type !== \"enum\" || [\"Ecdsa\", \"Ed25519\", \"Sr25519\"].some((x) => !(x in signature.value)))\n    throw unkownSignerType();\n  if (address.type === \"enum\") {\n    const id = address.value[\"Id\"];\n    if (id.type === \"lookupEntry\" && id.value.type === \"AccountId32\")\n      return [0 /* Polkadot */, [id.idx]];\n  } else if (address.type === \"AccountId32\") return [0 /* Polkadot */, []];\n  throw unkownSignerType();\n};\nconst signingTypeId = {\n  Ed25519: 0,\n  Sr25519: 1,\n  Ecdsa: 2\n};\nconst createV4Tx = (metadata, publicKey, signed, extra, callData, signingType) => {\n  const [signerType, addressPrefix] = getSignerType(metadata);\n  const preResult = mergeUint8(\n    versionCodec({ signed: true, version: 4 }),\n    // converting it to a `MultiAddress` enum, where the index 0 is `Id(AccountId)`\n    signerType === 1 /* Ethereum */ ? publicKey : new Uint8Array([...addressPrefix, ...publicKey]),\n    signerType === 1 /* Ethereum */ || !signingType ? signed : new Uint8Array([signingTypeId[signingType], ...signed]),\n    ...extra,\n    callData\n  );\n  return mergeUint8(compact.enc(preResult.length), preResult);\n};\n\nexport { createV4Tx };\n//# sourceMappingURL=v4.mjs.map\n","import { Binary } from '@polkadot-api/substrate-bindings';\nimport { mergeUint8 } from '@polkadot-api/utils';\n\nconst [preBytes, postBytes] = [\"<Bytes>\", \"</Bytes>\"].map(\n  (str) => Binary.fromText(str).asBytes()\n);\nconst getSignBytes = (sign) => async (data) => {\n  let isPadded = true;\n  let i;\n  for (i = 0; isPadded && i < preBytes.length; i++)\n    isPadded = preBytes[i] === data[i];\n  isPadded = isPadded && i === preBytes.length;\n  const postDataStart = data.length - postBytes.length;\n  for (i = 0; isPadded && i < postBytes.length; i++)\n    isPadded = postBytes[i] === data[postDataStart + i];\n  isPadded = isPadded && i === postBytes.length;\n  return sign(isPadded ? data : mergeUint8(preBytes, data, postBytes));\n};\n\nexport { getSignBytes };\n//# sourceMappingURL=sign-bytes.mjs.map\n","import { mergeUint8 } from '@polkadot-api/utils';\nimport { getSignBytes, createV4Tx } from '@polkadot-api/signers-common';\nimport { Blake2256, decAnyMetadata } from '@polkadot-api/substrate-bindings';\n\nfunction getPolkadotSigner(publicKey, signingType, sign) {\n  const signTx = async (callData, signedExtensions, metadata, _, hasher = Blake2256) => {\n    let decMeta;\n    try {\n      const tmpMeta = decAnyMetadata(metadata);\n      if (tmpMeta.metadata.tag !== \"v14\" && tmpMeta.metadata.tag !== \"v15\")\n        throw null;\n      decMeta = tmpMeta.metadata.value;\n    } catch (_2) {\n      throw new Error(\"Unsupported metadata version\");\n    }\n    const extra = [];\n    const additionalSigned = [];\n    decMeta.extrinsic.signedExtensions.map(({ identifier }) => {\n      const signedExtension = signedExtensions[identifier];\n      if (!signedExtension)\n        throw new Error(`Missing ${identifier} signed extension`);\n      extra.push(signedExtension.value);\n      additionalSigned.push(signedExtension.additionalSigned);\n    });\n    const toSign = mergeUint8(callData, ...extra, ...additionalSigned);\n    const signed = await sign(toSign.length > 256 ? hasher(toSign) : toSign);\n    return createV4Tx(decMeta, publicKey, signed, extra, callData, signingType);\n  };\n  return {\n    publicKey,\n    signTx,\n    signBytes: getSignBytes(sign)\n  };\n}\n\nexport { getPolkadotSigner };\n//# sourceMappingURL=from-raw-signer.mjs.map\n","const getSystemVersionStruct = (lookupFn, dynamicBuilder) => {\n  const constant = lookupFn.metadata.pallets.find((x) => x.name === \"System\").constants.find((s) => s.name === \"Version\");\n  const systemVersion = lookupFn(constant.type);\n  const systemVersionDec = dynamicBuilder.buildDefinition(constant.type).dec;\n  if (systemVersion.type !== \"struct\") throw new Error(\"not a struct\");\n  return systemVersionDec(constant.value);\n};\n\nexport { getSystemVersionStruct };\n//# sourceMappingURL=system-version.mjs.map\n","import { enhanceEncoder, Bytes, u16 } from '@polkadot-api/substrate-bindings';\n\nfunction trailingZeroes(n) {\n  let i = 0;\n  while (!(n & 1)) {\n    i++;\n    n >>= 1;\n  }\n  return i;\n}\nconst mortal = enhanceEncoder(\n  Bytes(2)[0],\n  (value) => {\n    const factor = Math.max(value.period >> 12, 1);\n    const left = Math.min(Math.max(trailingZeroes(value.period) - 1, 1), 15);\n    const right = value.phase / factor << 4;\n    return u16[0](left | right);\n  }\n);\n\nexport { mortal };\n//# sourceMappingURL=mortal-enc.mjs.map\n","import { Struct, Option, compact, Bytes } from '@polkadot-api/substrate-bindings';\n\nconst [ChargeAssetTxPaymentEnc] = Struct({\n  tip: compact,\n  asset: Option(Bytes(Infinity))\n});\n\nexport { ChargeAssetTxPaymentEnc };\n//# sourceMappingURL=charge-asset-tx-enc.mjs.map\n","import { mapObject, fromHex } from '@polkadot-api/utils';\nimport { getSystemVersionStruct } from './system-version.mjs';\nimport { mortal } from './mortal-enc.mjs';\nimport { ChargeAssetTxPaymentEnc } from './charge-asset-tx-enc.mjs';\n\nconst empty = new Uint8Array();\nconst zero = Uint8Array.from([0]);\nconst value = (value2) => ({\n  value: value2,\n  additionalSigned: empty\n});\nconst additionalSigned = (additionalSigned2) => ({\n  value: empty,\n  additionalSigned: additionalSigned2\n});\nconst both = (value2, additionalSigned2) => ({\n  value: value2,\n  additionalSigned: additionalSigned2\n});\nconst getSignExtensionsCreator = (genesis, lookupFn, dynamicBuilder) => {\n  const signedExtensionsEncoders = {};\n  lookupFn.metadata.extrinsic.signedExtensions.forEach(\n    ({ identifier, type, additionalSigned: additionalSigned2 }) => {\n      signedExtensionsEncoders[identifier] = [type, additionalSigned2].map(\n        (x) => dynamicBuilder.buildDefinition(x)[0]\n      );\n    }\n  );\n  return ({\n    mortality,\n    tip = 0n,\n    nonce,\n    customSignedExtensions = {},\n    ...rest\n  }) => {\n    const invalidKeys = [];\n    const systemVersion = getSystemVersionStruct(lookupFn, dynamicBuilder);\n    const getFromCustomEntry = (key) => {\n      const [valueEnc, additionalEnc] = signedExtensionsEncoders[key];\n      const customEntry = customSignedExtensions[key];\n      try {\n        return mapObject(\n          {\n            value: valueEnc,\n            additionalSigned: additionalEnc\n          },\n          (encoder, key2) => {\n            const input = customEntry?.[key2];\n            return input instanceof Uint8Array ? input : encoder(input);\n          }\n        );\n      } catch {\n        invalidKeys.push(key);\n        return null;\n      }\n    };\n    const result = mapObject(\n      signedExtensionsEncoders,\n      ([valueEnc, additionalEnc], key) => {\n        if (customSignedExtensions[key]) return getFromCustomEntry(key);\n        switch (key) {\n          case \"CheckNonce\":\n            return value(valueEnc(nonce));\n          case \"CheckMortality\":\n            return mortality.mortal ? both(\n              mortal({\n                period: mortality.period,\n                phase: mortality.startAtBlock.height % mortality.period\n              }),\n              fromHex(mortality.startAtBlock.hash)\n            ) : both(zero, genesis);\n          case \"ChargeTransactionPayment\":\n            return value(valueEnc(tip));\n          case \"ChargeAssetTxPayment\":\n            return value(\n              ChargeAssetTxPaymentEnc({\n                tip,\n                asset: rest.asset\n              })\n            );\n          case \"CheckGenesis\":\n            return additionalSigned(genesis);\n          case \"CheckMetadataHash\":\n            return both(zero, zero);\n          case \"CheckSpecVersion\":\n            return additionalSigned(\n              additionalEnc(systemVersion[\"spec_version\"])\n            );\n          case \"CheckTxVersion\":\n            return additionalSigned(\n              additionalEnc(systemVersion[\"transaction_version\"])\n            );\n          default:\n            return getFromCustomEntry(key);\n        }\n      }\n    );\n    invalidKeys.forEach((key) => {\n      delete result[key];\n    });\n    return mapObject(result, (x, identifier) => ({ ...x, identifier }));\n  };\n};\n\nexport { getSignExtensionsCreator };\n//# sourceMappingURL=sign-extensions.mjs.map\n","import { u64, u32, u16, u8 } from '@polkadot-api/substrate-bindings';\nimport { combineLatest, of, take, mergeMap, map } from 'rxjs';\nimport { toHex, fromHex } from '@polkadot-api/utils';\nimport { getSignExtensionsCreator } from './signed-extensions/sign-extensions.mjs';\n\nconst NONCE_RUNTIME_CALL = \"AccountNonceApi_account_nonce\";\nconst lenToDecoder = {\n  1: u8.dec,\n  2: u16.dec,\n  4: u32.dec,\n  8: u64.dec\n};\nconst getNonce$ = (call$, from, at) => call$(at, NONCE_RUNTIME_CALL, from).pipe(\n  map((result) => {\n    const bytes = fromHex(result);\n    const decoder = lenToDecoder[bytes.length];\n    if (!decoder)\n      throw new Error(`${NONCE_RUNTIME_CALL} retrieved wrong data`);\n    return decoder(bytes);\n  })\n);\nconst createTx = (chainHead, signer, callData, atBlock, customSignedExtensions, hinted = {}) => combineLatest([\n  hinted.nonce ? of(hinted.nonce) : getNonce$(chainHead.call$, toHex(signer.publicKey), atBlock.hash),\n  chainHead.getRuntimeContext$(atBlock.hash),\n  chainHead.genesis$\n]).pipe(\n  take(1),\n  mergeMap(([nonce, ctx, genesis]) => {\n    const signExtCreator = getSignExtensionsCreator(\n      fromHex(genesis),\n      ctx.lookup,\n      ctx.dynamicBuilder\n    );\n    const mortality = hinted.mortality ?? { period: 64, mortal: true };\n    const signExtensions = signExtCreator({\n      nonce,\n      tip: hinted.tip ?? 0n,\n      mortality: mortality.mortal ? {\n        mortal: true,\n        period: mortality.period,\n        startAtBlock: {\n          height: atBlock.number,\n          hash: atBlock.hash\n        }\n      } : { mortal: false },\n      customSignedExtensions\n    });\n    return signer.signTx(\n      callData,\n      signExtensions,\n      ctx.metadataRaw,\n      atBlock.number\n    );\n  })\n);\n\nexport { createTx, getNonce$ };\n//# sourceMappingURL=create-tx.mjs.map\n","import { Observable } from 'rxjs';\n\nlet NOTIN = {};\nconst continueWith = (mapper) => (source) => new Observable((observer) => {\n  let latestValue = NOTIN;\n  let subscription = source.subscribe({\n    next(v) {\n      observer.next(latestValue = v);\n    },\n    error(e) {\n      observer.error(e);\n    },\n    complete() {\n      if (latestValue === NOTIN) observer.complete();\n      else subscription = mapper(latestValue).subscribe(observer);\n    }\n  });\n  return () => {\n    subscription.unsubscribe();\n  };\n});\n\nexport { continueWith };\n//# sourceMappingURL=continue-with.mjs.map\n","import { Binary, Blake2256 } from '@polkadot-api/substrate-bindings';\nimport { lastValueFrom, take, map, mergeMap, filter, Observable, concat, of, EMPTY, distinctUntilChanged } from 'rxjs';\nimport '@polkadot-api/observable-client';\nimport '../utils/shareLatest.mjs';\nimport { toHex, fromHex } from '@polkadot-api/utils';\nimport { continueWith } from '../utils/continue-with.mjs';\nimport 'rxjs/operators';\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => __defNormalProp(obj, key + \"\" , value);\nconst hashFromTx = (tx) => toHex(Blake2256(fromHex(tx)));\nconst computeState = (analized$, blocks$) => new Observable((observer) => {\n  const analyzedBlocks = /* @__PURE__ */ new Map();\n  let pinnedBlocks;\n  let latestState;\n  const computeNextState = () => {\n    let current = pinnedBlocks.best;\n    let analyzed = analyzedBlocks.get(current);\n    let analyzedNumber = pinnedBlocks.blocks.get(current).number;\n    while (!analyzed) {\n      const block = pinnedBlocks.blocks.get(current);\n      if (!block) break;\n      analyzed = analyzedBlocks.get(current = block.parent);\n      analyzedNumber--;\n    }\n    if (!analyzed) return;\n    const isFinalized = analyzedNumber <= pinnedBlocks.blocks.get(pinnedBlocks.finalized).number;\n    const found = analyzed.found.type;\n    if (found && latestState?.found && latestState.hash === analyzed.hash) {\n      if (isFinalized) observer.complete();\n      return;\n    }\n    observer.next(\n      latestState = analyzed.found.type ? {\n        found,\n        hash: analyzed.hash,\n        number: analyzedNumber,\n        index: analyzed.found.index,\n        events: analyzed.found.events\n      } : {\n        found,\n        validity: analyzed.found.validity\n      }\n    );\n    if (isFinalized) {\n      if (found) observer.complete();\n      else if (analyzed.found.validity?.success === false)\n        observer.error(new InvalidTxError(analyzed.found.validity.value));\n    }\n  };\n  const subscription = blocks$.pipe(\n    distinctUntilChanged(\n      (a, b) => a.finalized === b.finalized && a.best === b.best\n    )\n  ).subscribe({\n    next: (pinned) => {\n      pinnedBlocks = pinned;\n      if (analyzedBlocks.size === 0) return;\n      computeNextState();\n    },\n    error(e) {\n      observer.error(e);\n    }\n  });\n  subscription.add(\n    analized$.subscribe({\n      next: (block) => {\n        analyzedBlocks.set(block.hash, block);\n        computeNextState();\n      },\n      error(e) {\n        observer.error(e);\n      }\n    })\n  );\n  return subscription;\n}).pipe(distinctUntilChanged((a, b) => a === b));\nconst getTxSuccessFromSystemEvents = (systemEvents, txIdx) => {\n  const events = systemEvents.filter((x) => x.phase.type === \"ApplyExtrinsic\" && x.phase.value === txIdx).map((x) => ({ ...x.event, topics: x.topics }));\n  const lastEvent = events[events.length - 1];\n  if (lastEvent.type === \"System\" && lastEvent.value.type === \"ExtrinsicFailed\") {\n    return {\n      ok: false,\n      events,\n      dispatchError: lastEvent.value.value.dispatch_error\n    };\n  }\n  return { ok: true, events };\n};\nclass InvalidTxError extends Error {\n  // likely to be a `TransactionValidityError`\n  constructor(e) {\n    super(\n      JSON.stringify(\n        e,\n        (_, value) => {\n          if (typeof value === \"bigint\") return value.toString();\n          return value instanceof Binary ? value.asHex() : value;\n        },\n        2\n      )\n    );\n    __publicField(this, \"error\");\n    this.name = \"InvalidTxError\";\n    this.error = e;\n  }\n}\nconst submit$ = (chainHead, broadcastTx$, tx, at, emitSign = false) => {\n  const txHash = hashFromTx(tx);\n  const getTxEvent = (type, rest) => ({\n    type,\n    txHash,\n    ...rest\n  });\n  const at$ = chainHead.pinnedBlocks$.pipe(\n    take(1),\n    map((blocks) => {\n      const block = blocks.blocks.get(at);\n      return block && !block.unpinned ? block.hash : blocks.finalized;\n    })\n  );\n  const validate$ = at$.pipe(\n    mergeMap(\n      (at2) => chainHead.validateTx$(at2, tx).pipe(\n        filter((x) => !x.success),\n        map((x) => {\n          throw new InvalidTxError(x.value);\n        })\n      )\n    )\n  );\n  const track$ = new Observable((observer) => {\n    const subscription = chainHead.trackTx$(tx).subscribe(observer);\n    subscription.add(\n      broadcastTx$(tx).subscribe({\n        error(e) {\n          observer.error(e);\n        }\n      })\n    );\n    return subscription;\n  });\n  const bestBlockState$ = computeState(track$, chainHead.pinnedBlocks$).pipe(\n    map((x) => {\n      if (!x.found)\n        return getTxEvent(\"txBestBlocksState\", {\n          found: false,\n          isValid: x.validity?.success !== false\n        });\n      return getTxEvent(\"txBestBlocksState\", {\n        found: true,\n        block: {\n          index: x.index,\n          number: x.number,\n          hash: x.hash\n        },\n        ...getTxSuccessFromSystemEvents(x.events, x.index)\n      });\n    })\n  );\n  return concat(\n    emitSign ? of(getTxEvent(\"signed\", {})) : EMPTY,\n    validate$,\n    of(getTxEvent(\"broadcasted\", {})),\n    bestBlockState$.pipe(\n      continueWith(\n        ({ found, type, ...rest }) => found ? of(getTxEvent(\"finalized\", rest)) : EMPTY\n      )\n    )\n  );\n};\nconst submit = async (chainHead, broadcastTx$, transaction, at) => lastValueFrom(submit$(chainHead, broadcastTx$, transaction, at)).then((x) => {\n  if (x.type !== \"finalized\") throw null;\n  const result = { ...x };\n  delete result.type;\n  return result;\n});\n\nexport { InvalidTxError, submit, submit$ };\n//# sourceMappingURL=submit-fns.mjs.map\n","import { getPolkadotSigner } from '@polkadot-api/signer';\nimport { AccountId, Struct, u128, Variant, _void, compactBn, Enum, u32, Binary } from '@polkadot-api/substrate-bindings';\nimport { toHex, fromHex, mergeUint8 } from '@polkadot-api/utils';\nimport { firstValueFrom, mergeMap, map, take, throwError, combineLatest } from 'rxjs';\nimport { getCompatibilityApi } from '../compatibility.mjs';\nimport { createTx } from './create-tx.mjs';\nimport { submit, submit$ } from './submit-fns.mjs';\nexport { InvalidTxError } from './submit-fns.mjs';\nimport { isCompatible, mapLookupToTypedef } from '@polkadot-api/metadata-compatibility';\n\nconst accountIdEnc = AccountId().enc;\nconst fakeSignature = new Uint8Array(64);\nconst fakeSignatureEth = new Uint8Array(65);\nconst getFakeSignature = (isEth) => () => isEth ? fakeSignatureEth : fakeSignature;\nconst [, queryInfoDecFallback] = Struct({\n  weight: Struct({\n    ref_time: compactBn,\n    proof_size: compactBn\n  }),\n  class: Variant({\n    Normal: _void,\n    Operational: _void,\n    Mandatory: _void\n  }),\n  partial_fee: u128\n});\nconst createTxEntry = (pallet, name, chainHead, broadcast, {\n  isCompatible: isCompatibleHelper,\n  getCompatibilityLevel,\n  compatibleRuntime$,\n  argsAreCompatible,\n  getRuntimeTypedef\n}, checkCompatibility) => {\n  const fn = (arg) => {\n    const getCallDataWithContext = (runtime, arg2, txOptions = {}) => {\n      const ctx = getCompatibilityApi(runtime).runtime();\n      const { dynamicBuilder, assetId, lookup } = ctx;\n      let codecs;\n      try {\n        codecs = dynamicBuilder.buildCall(pallet, name);\n      } catch {\n        throw new Error(`Runtime entry Tx(${pallet}.${name}) not found`);\n      }\n      if (checkCompatibility && !argsAreCompatible(runtime, ctx, arg2))\n        throw new Error(`Incompatible runtime entry Tx(${pallet}.${name})`);\n      let returnOptions = txOptions;\n      if (txOptions.asset) {\n        if (assetId == null || !isCompatible(\n          txOptions.asset,\n          mapLookupToTypedef(lookup(assetId)),\n          (id) => getRuntimeTypedef(ctx, id)\n        ))\n          throw new Error(`Incompatible runtime asset`);\n        returnOptions = {\n          ...txOptions,\n          asset: dynamicBuilder.buildDefinition(assetId).enc(txOptions.asset)\n        };\n      }\n      const { location, codec } = codecs;\n      return {\n        callData: Binary.fromBytes(\n          mergeUint8(new Uint8Array(location), codec.enc(arg2))\n        ),\n        options: returnOptions\n      };\n    };\n    const getCallData$ = (arg2, options = {}) => compatibleRuntime$(chainHead, null).pipe(\n      map(([runtime]) => getCallDataWithContext(runtime, arg2, options))\n    );\n    const getEncodedData = (token) => {\n      if (!token)\n        return firstValueFrom(getCallData$(arg).pipe(map((x) => x.callData)));\n      return getCallDataWithContext(token, arg).callData;\n    };\n    const sign$ = (from, { ..._options }, atBlock) => getCallData$(arg, _options).pipe(\n      mergeMap(\n        ({ callData, options }) => createTx(\n          chainHead,\n          from,\n          callData.asBytes(),\n          atBlock,\n          _options.customSignedExtensions || {},\n          options\n        )\n      )\n    );\n    const _sign = (from, { at, ..._options } = {}) => {\n      return (!at || at === \"finalized\" ? chainHead.finalized$ : at === \"best\" ? chainHead.best$ : chainHead.bestBlocks$.pipe(\n        map((x) => x.find((b) => b.hash === at))\n      )).pipe(\n        take(1),\n        mergeMap(\n          (atBlock) => atBlock ? sign$(from, _options, atBlock).pipe(\n            map((signed) => ({\n              tx: toHex(signed),\n              block: atBlock\n            }))\n          ) : throwError(() => new Error(`Uknown block ${at}`))\n        )\n      );\n    };\n    const sign = (from, options) => firstValueFrom(_sign(from, options)).then((x) => x.tx);\n    const signAndSubmit = (from, _options) => firstValueFrom(_sign(from, _options)).then(\n      ({ tx, block }) => submit(chainHead, broadcast, tx, block.hash)\n    );\n    const signSubmitAndWatch = (from, _options) => _sign(from, _options).pipe(\n      mergeMap(\n        ({ tx, block }) => submit$(chainHead, broadcast, tx, block.hash, true)\n      )\n    );\n    const getPaymentInfo = async (from, _options) => {\n      if (typeof from === \"string\")\n        from = from.startsWith(\"0x\") ? fromHex(from) : accountIdEnc(from);\n      const isEth = from.length === 20;\n      const fakeSigner = getPolkadotSigner(\n        from,\n        isEth ? \"Ecdsa\" : \"Sr25519\",\n        getFakeSignature(isEth)\n      );\n      const encoded = fromHex(await sign(fakeSigner, _options));\n      const args = toHex(mergeUint8(encoded, u32.enc(encoded.length)));\n      const decoder$ = chainHead.getRuntimeContext$(null).pipe(\n        map((ctx) => {\n          try {\n            return ctx.dynamicBuilder.buildRuntimeCall(\n              \"TransactionPaymentApi\",\n              \"query_info\"\n            ).value[1];\n          } catch {\n            return queryInfoDecFallback;\n          }\n        })\n      );\n      const call$ = chainHead.call$(\n        null,\n        \"TransactionPaymentApi_query_info\",\n        args\n      );\n      return firstValueFrom(\n        combineLatest([call$, decoder$]).pipe(\n          map(([result, decoder]) => decoder(result))\n        )\n      );\n    };\n    const getEstimatedFees = async (from, _options) => (await getPaymentInfo(from, _options)).partial_fee;\n    return {\n      getPaymentInfo,\n      getEstimatedFees,\n      decodedCall: {\n        type: pallet,\n        value: Enum(name, arg)\n      },\n      getEncodedData,\n      sign,\n      signSubmitAndWatch,\n      signAndSubmit\n    };\n  };\n  return Object.assign(fn, {\n    getCompatibilityLevel,\n    isCompatible: isCompatibleHelper\n  });\n};\n\nexport { createTxEntry, submit, submit$ };\n//# sourceMappingURL=tx.mjs.map\n","import { BehaviorSubject, Subject } from 'rxjs';\nimport { tap, switchAll } from 'rxjs/operators';\n\nconst selfDependent = () => {\n  const activeSubject = new BehaviorSubject(\n    new Subject()\n  );\n  return [\n    activeSubject.pipe(switchAll()),\n    () => tap({\n      next: (v) => activeSubject.value.next(v),\n      error: (e) => {\n        activeSubject.value.error(e);\n        activeSubject.next(new Subject());\n      },\n      complete: () => {\n        activeSubject.value.complete();\n        activeSubject.next(new Subject());\n      }\n    })\n  ];\n};\n\nexport { selfDependent };\n//# sourceMappingURL=self-dependent.mjs.map\n","var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\n// src/SUSPENSE.ts\nvar SUSPENSE = Symbol(\"SUSPENSE\");\n\n// src/StatePromise.ts\nvar StatePromise = class extends Promise {\n  constructor(cb) {\n    super(cb);\n  }\n};\n\n// src/errors.ts\nvar NoSubscribersError = class extends Error {\n  constructor() {\n    super();\n    this.name = \"NoSubscribersError\";\n  }\n};\nvar EmptyObservableError = class extends Error {\n  constructor() {\n    super();\n    this.name = \"EmptyObservableError\";\n  }\n};\n\n// src/internal/empty-value.ts\nvar EMPTY_VALUE = {};\n\n// src/state/stateFactory.ts\nimport { Observable as Observable2 } from \"rxjs\";\n\n// src/internal/state-observable.ts\nimport {\n  noop,\n  Observable,\n  Subject,\n  Subscriber\n} from \"rxjs\";\nvar StateObservable = class extends Observable {\n  constructor(source$, defaultValue, teardown = noop) {\n    super((subscriber) => {\n      const subscriberWithoutComplete = new Subscriber({\n        next: subscriber.next.bind(subscriber),\n        error: subscriber.error.bind(subscriber),\n        complete: noop\n      });\n      this.refCount++;\n      let innerSub;\n      subscriber.add(() => {\n        var _a;\n        this.refCount--;\n        innerSub.unsubscribe();\n        if (this.refCount === 0) {\n          this.currentValue = EMPTY_VALUE;\n          if (this.subscription) {\n            this.subscription.unsubscribe();\n          }\n          teardown();\n          (_a = this.subject) == null ? void 0 : _a.complete();\n          this.subject = null;\n          this.subscription = null;\n          if (this.promise) {\n            this.promise.rej(new NoSubscribersError());\n            this.promise = null;\n          }\n        }\n      });\n      if (!this.subject) {\n        this.subject = new Subject();\n        innerSub = this.subject.subscribe(subscriberWithoutComplete);\n        this.subscription = null;\n        this.subscription = new Subscriber({\n          next: (value) => {\n            if (this.promise && value !== SUSPENSE) {\n              this.promise.res(value);\n              this.promise = null;\n            }\n            this.subject.next(this.currentValue = value);\n          },\n          error: (err) => {\n            var _a;\n            this.subscription = null;\n            const subject = this.subject;\n            this.subject = null;\n            this.currentValue = EMPTY_VALUE;\n            const rej = (_a = this.promise) == null ? void 0 : _a.rej;\n            if (rej && err === SUSPENSE) {\n              this.promise.rej = () => {\n                rej(err);\n              };\n            }\n            subject.error(err);\n            if (rej && this.promise) {\n              this.promise.rej = rej;\n            }\n          },\n          complete: () => {\n            this.subscription = null;\n            if (this.promise) {\n              this.promise.rej(new EmptyObservableError());\n              this.promise = null;\n            }\n            if (this.currentValue !== EMPTY_VALUE)\n              return this.subject.complete();\n            if (defaultValue === EMPTY_VALUE) {\n              const subject = this.subject;\n              this.subject = null;\n              return subject.error(new EmptyObservableError());\n            }\n            this.subject.next(this.currentValue = defaultValue);\n            this.subject.complete();\n          }\n        });\n        source$.subscribe(this.subscription);\n        if (defaultValue !== EMPTY_VALUE && this.currentValue === EMPTY_VALUE) {\n          this.subject.next(this.currentValue = defaultValue);\n        }\n      } else {\n        innerSub = this.subject.subscribe(subscriberWithoutComplete);\n        if (this.currentValue !== EMPTY_VALUE) {\n          subscriber.next(this.currentValue);\n        }\n      }\n    });\n    this.defaultValue = defaultValue;\n    __publicField(this, \"subject\", null);\n    __publicField(this, \"subscription\", null);\n    __publicField(this, \"refCount\", 0);\n    __publicField(this, \"currentValue\", EMPTY_VALUE);\n    __publicField(this, \"promise\", null);\n    __publicField(this, \"pipeState\", (...ops) => {\n      const result = super.pipe(...ops);\n      return result instanceof StateObservable ? result : new StateObservable(result, EMPTY_VALUE);\n    });\n    __publicField(this, \"getRefCount\", () => {\n      return this.refCount;\n    });\n    __publicField(this, \"getValue\", () => {\n      if (this.promise)\n        return this.promise.p;\n      if (this.currentValue !== EMPTY_VALUE && this.currentValue !== SUSPENSE)\n        return this.currentValue;\n      if (this.defaultValue !== EMPTY_VALUE)\n        return this.defaultValue;\n      if (this.refCount === 0)\n        throw new NoSubscribersError();\n      const promise = new StatePromise((res, rej) => {\n        this.promise = { res, rej, p: null };\n      });\n      this.promise.p = promise;\n      return promise;\n    });\n    __publicField(this, \"getDefaultValue\", () => {\n      return this.defaultValue;\n    });\n    if (defaultValue === EMPTY_VALUE) {\n      delete this.getDefaultValue;\n    }\n  }\n};\n\n// src/state/stateFactory.ts\nfunction cloneProps(internal, external) {\n  external.getValue = internal.getValue;\n  external.getRefCount = internal.getRefCount;\n  external.pipeState = internal.pipeState;\n  if (internal.getDefaultValue) {\n    ;\n    external.getDefaultValue = internal.getDefaultValue;\n  }\n}\nfunction connectFactoryObservable(getObservable, defaultValue) {\n  const cache = new NestedMap();\n  const getDefaultValue = typeof defaultValue === \"function\" ? defaultValue : () => defaultValue;\n  const getSharedObservables$ = (input) => {\n    for (let i = input.length - 1; input[i] === void 0 && i > -1; i--) {\n      input.splice(-1);\n    }\n    const keys = [input.length, ...input];\n    const cachedVal = cache.get(keys);\n    if (cachedVal !== void 0) {\n      return cachedVal;\n    }\n    const sharedObservable$ = new StateObservable(getObservable(...input), getDefaultValue(...input), () => {\n      cache.delete(keys);\n    });\n    const publicShared$ = new Observable2((subscriber) => {\n      const inCache = cache.get(keys);\n      let source$ = sharedObservable$;\n      if (!inCache) {\n        cache.set(keys, result);\n      } else if (inCache !== publicShared$) {\n        source$ = inCache;\n        cloneProps(source$, publicShared$);\n      }\n      return source$.subscribe(subscriber);\n    });\n    cloneProps(sharedObservable$, publicShared$);\n    const result = publicShared$;\n    cache.set(keys, result);\n    return result;\n  };\n  return (...input) => getSharedObservables$(input);\n}\nvar NestedMap = class {\n  constructor() {\n    __publicField(this, \"root\");\n    this.root = /* @__PURE__ */ new Map();\n  }\n  get(keys) {\n    let current = this.root;\n    for (let i = 0; i < keys.length; i++) {\n      current = current.get(keys[i]);\n      if (!current)\n        return void 0;\n    }\n    return current;\n  }\n  set(keys, value) {\n    let current = this.root;\n    let i;\n    for (i = 0; i < keys.length - 1; i++) {\n      let nextCurrent = current.get(keys[i]);\n      if (!nextCurrent) {\n        nextCurrent = /* @__PURE__ */ new Map();\n        current.set(keys[i], nextCurrent);\n      }\n      current = nextCurrent;\n    }\n    current.set(keys[i], value);\n  }\n  delete(keys) {\n    const maps = [this.root];\n    let current = this.root;\n    for (let i = 0; i < keys.length - 1; i++) {\n      maps.push(current = current.get(keys[i]));\n    }\n    let mapIdx = maps.length - 1;\n    maps[mapIdx].delete(keys[mapIdx]);\n    while (--mapIdx > -1 && maps[mapIdx].get(keys[mapIdx]).size === 0) {\n      maps[mapIdx].delete(keys[mapIdx]);\n    }\n  }\n};\n\n// src/state/stateSingle.ts\nfunction state(observable, defaultValue) {\n  return new StateObservable(observable, defaultValue);\n}\n\n// src/state/index.ts\nvar state2 = (...args) => (typeof args[0] === \"function\" ? connectFactoryObservable : state)(args[0], args.length > 1 ? args[1] : EMPTY_VALUE);\n\n// src/withDefault.ts\nvar withDefault = (defaultValue) => (source$) => state2(source$, defaultValue);\n\n// src/effects/sinkSuspense.ts\nimport { Observable as Observable3, Subscriber as Subscriber2 } from \"rxjs\";\nvar sinkSuspense = () => {\n  return (source$) => {\n    let waiting = null;\n    return new Observable3((observer) => {\n      if (waiting) {\n        waiting.inner = observer;\n        const outter2 = waiting;\n        return () => {\n          if (outter2.inner === observer)\n            outter2.unsubscribe();\n        };\n      }\n      let outter = new Subscriber2({\n        next(value) {\n          if (value === SUSPENSE) {\n            waiting = outter;\n            outter.inner.error(value);\n            waiting = null;\n            if (outter.inner === observer) {\n              outter.unsubscribe();\n            }\n          } else {\n            outter.inner.next(value);\n          }\n        },\n        error(e) {\n          outter.inner.error(e);\n        },\n        complete() {\n          outter.inner.complete();\n        }\n      });\n      outter.inner = observer;\n      source$.subscribe(outter);\n      return () => {\n        if (outter.inner === observer)\n          outter.unsubscribe();\n      };\n    });\n  };\n};\n\n// src/effects/liftSuspense.ts\nimport { Observable as Observable4, Subscriber as Subscriber3 } from \"rxjs\";\nvar liftSuspense = () => {\n  return (source$) => {\n    return new Observable4((observer) => {\n      let subscriber;\n      const setSubscriber = () => {\n        subscriber = new Subscriber3({\n          next(v) {\n            observer.next(v);\n          },\n          error(e) {\n            if (e === SUSPENSE) {\n              observer.next(e);\n              setSubscriber();\n            } else\n              observer.error(e);\n          },\n          complete() {\n            observer.complete();\n          }\n        });\n        source$.subscribe(subscriber);\n      };\n      setSubscriber();\n      return () => {\n        subscriber.unsubscribe();\n      };\n    });\n  };\n};\nexport {\n  EmptyObservableError,\n  NoSubscribersError,\n  SUSPENSE,\n  StatePromise,\n  liftSuspense,\n  sinkSuspense,\n  state2 as state,\n  withDefault\n};\n//# sourceMappingURL=rxstate.core.es2017.js.map\n","import { isBestOrFinalizedBlock, BlockNotPinnedError } from '@polkadot-api/observable-client';\nimport { distinctUntilChanged, take, map, withLatestFrom, merge, mergeMap, combineLatest, delay, filter, startWith, pairwise, EMPTY, of, takeUntil, catchError, throwError } from 'rxjs';\nimport './utils/shareLatest.mjs';\nimport '@polkadot-api/utils';\nimport { lossLessExhaustMap } from './utils/lossLessExhaustMap.mjs';\nimport { selfDependent } from './utils/self-dependent.mjs';\nimport { state } from '@rx-state/core';\n\nconst getDiff = (_prev, _current, patch) => {\n  const current = new Map(_current.map((x) => [x.key, x]));\n  const prev = new Map(_prev.map((x) => [x.key, x]));\n  const upserted = /* @__PURE__ */ new Map();\n  const deleted = [];\n  _current.forEach((value) => {\n    const { key } = value;\n    const prevVal = prev.get(key);\n    if (!prevVal || prevVal.value !== value.value)\n      upserted.set(key, patch(value));\n  });\n  _prev.forEach((x) => {\n    if (!current.has(x.key)) deleted.push(x);\n  });\n  return {\n    deltas: {\n      deleted,\n      upserted: [...upserted.values()]\n    },\n    entries: _current.map(({ key }) => upserted.get(key) ?? prev.get(key))\n  };\n};\nconst findPrevious = (start, state2, pinned, includeStart = false) => {\n  try {\n    let target = includeStart ? start : pinned.blocks.get(start).parent;\n    while (target && !state2[target]) target = pinned.blocks.get(target).parent;\n    if (!target) return null;\n    return state2[target];\n  } catch {\n    return null;\n  }\n};\nconst getPatcherFromRuntime = (pallet, entry) => (runtime) => {\n  const { keys, value } = runtime.dynamicBuilder.buildStorage(pallet, entry);\n  return (x) => {\n    x.dec = {\n      value: value.dec(x.value),\n      args: keys.dec(x.key)\n    };\n    return x;\n  };\n};\nconst createWatchEntries = (blocks$, storage, withRuntime) => {\n  const getMemoryBlocks$ = state(\n    (pallet, entry, storageKey) => {\n      const getPatcher = getPatcherFromRuntime(pallet, entry);\n      const getNextMemoryBlock$ = (prev, block) => {\n        const isNotCanonical$ = isBestOrFinalizedBlock(\n          blocks$,\n          block.hash\n        ).pipe(\n          filter((x) => !x),\n          take(1)\n        );\n        return storage(\n          block.hash,\n          \"closestDescendantMerkleValue\",\n          () => storageKey\n        ).pipe(\n          mergeMap((rootHash) => {\n            if (rootHash === prev?.rootHash)\n              return of({\n                ...prev,\n                block,\n                deltas: null,\n                prev: prev.block.hash\n              });\n            return storage(\n              block.hash,\n              \"descendantsValues\",\n              () => storageKey\n            ).pipe(\n              withRuntime(() => block.hash),\n              map(\n                ([entries, runtimeCtx]) => [entries, getPatcher(runtimeCtx)]\n              ),\n              map(\n                ([entries, patcher]) => ({\n                  prev: prev && prev.block.hash,\n                  rootHash,\n                  block,\n                  ...getDiff(\n                    prev?.entries ?? [],\n                    entries,\n                    patcher\n                  )\n                })\n              )\n            );\n          }),\n          takeUntil(isNotCanonical$),\n          catchError(\n            (e) => e instanceof BlockNotPinnedError ? EMPTY : throwError(() => e)\n          )\n        );\n      };\n      const initial$ = blocks$.pipe(\n        distinctUntilChanged((a, b) => a.finalized === b.finalized),\n        lossLessExhaustMap(\n          ({ blocks, finalized }) => getNextMemoryBlock$(null, blocks.get(finalized))\n        ),\n        take(1),\n        map(\n          (x) => ({\n            blocks: { [x.block.hash]: x },\n            finalized: x.block.hash\n          })\n        )\n      );\n      const [_memoryBlocks$, connectMemoryBlocks] = selfDependent();\n      const updates$ = blocks$.pipe(\n        distinctUntilChanged((a, b) => a.best === b.best),\n        withLatestFrom(_memoryBlocks$),\n        lossLessExhaustMap(([pinned, memoryBlocks]) => {\n          const { best } = pinned;\n          const { blocks } = memoryBlocks;\n          let target = !blocks[best] ? best : null;\n          if (!target) return EMPTY;\n          const previous = findPrevious(target, blocks, pinned);\n          if (previous)\n            return getNextMemoryBlock$(\n              previous,\n              pinned.blocks.get(target)\n            ).pipe(\n              map((x) => {\n                blocks[target] = x;\n                return memoryBlocks;\n              })\n            );\n          target = pinned.finalized;\n          return getNextMemoryBlock$(\n            blocks[memoryBlocks.finalized],\n            pinned.blocks.get(target)\n          ).pipe(\n            map((x) => {\n              x.prev = null;\n              return {\n                blocks: { [target]: x },\n                finalized: target\n              };\n            })\n          );\n        })\n      );\n      return merge(initial$, updates$).pipe(connectMemoryBlocks());\n    }\n  );\n  const getBestOrFinalized = (isFinalized) => (pallet, entry, storageKey) => {\n    const memoryBlocks$ = getMemoryBlocks$(pallet, entry, storageKey);\n    const getPatcher = getPatcherFromRuntime(pallet, entry);\n    const prop = isFinalized ? \"finalized\" : \"best\";\n    return combineLatest([\n      memoryBlocks$.pipe(delay(0)),\n      blocks$.pipe(distinctUntilChanged((a, b) => a[prop] === b[prop]))\n    ]).pipe(\n      map(\n        ([state2, blocks]) => findPrevious(blocks[prop], state2.blocks, blocks, true)\n      ),\n      filter(Boolean),\n      distinctUntilChanged(),\n      startWith(null),\n      pairwise(),\n      withLatestFrom(memoryBlocks$),\n      withRuntime(([[, _latest]]) => _latest.block.hash),\n      map(\n        ([[[prevUpdate, latest], memoryBlocks], runtimeCtx]) => [\n          prevUpdate,\n          latest,\n          memoryBlocks,\n          getPatcher(runtimeCtx)\n        ]\n      ),\n      mergeMap(([prevUpdate, latest, memoryBlocks, patcher]) => {\n        if (!prevUpdate) return [latest];\n        let ancestor = latest;\n        const updates = [];\n        while (ancestor && ancestor.block.number > prevUpdate.block.number) {\n          updates.unshift(ancestor);\n          ancestor = ancestor.prev ? memoryBlocks.blocks[ancestor.prev] : null;\n        }\n        if (isFinalized) {\n          memoryBlocks.finalized = latest.block.hash;\n          if (updates.length) {\n            const { blocks } = memoryBlocks;\n            Object.keys(blocks).forEach((key) => {\n              if (blocks[key].block.number < updates[0].block.number)\n                delete blocks[key];\n            });\n          }\n        }\n        if (prevUpdate === ancestor) return updates;\n        return [\n          {\n            ...latest,\n            ...prevUpdate.rootHash === latest.rootHash ? {\n              entries: prevUpdate.entries,\n              deltas: null\n            } : getDiff(prevUpdate.entries, latest.entries, patcher)\n          }\n        ];\n      })\n    );\n  };\n  const getFinalized$ = state(getBestOrFinalized(true));\n  const getBest$ = state(getBestOrFinalized(false));\n  return (pallet, entry, args, atBest) => {\n    const fn = atBest ? getBest$ : getFinalized$;\n    const storageKey$ = blocks$.pipe(\n      take(1),\n      mergeMap(\n        (b) => b.runtimes[b.blocks.get(b[atBest ? \"best\" : \"finalized\"]).runtime].runtime\n      ),\n      map(\n        (runtime) => runtime.dynamicBuilder.buildStorage(pallet, entry).keys.enc(...args)\n      )\n    );\n    return storageKey$.pipe(\n      take(1),\n      mergeMap((storageKey) => fn(pallet, entry, storageKey)),\n      map(({ block: { hash, number, parent }, deltas, entries }, idx) => {\n        const actualDeltas = idx > 0 ? deltas : { deleted: [], upserted: entries };\n        return {\n          block: { hash, number, parent },\n          entries: entries.map(toDec),\n          deltas: actualDeltas && {\n            deleted: actualDeltas.deleted.map(toDec),\n            upserted: actualDeltas.upserted.map(toDec)\n          }\n        };\n      })\n    );\n  };\n};\nconst toDec = (x) => x.dec;\n\nexport { createWatchEntries };\n//# sourceMappingURL=watch-entries.mjs.map\n","import { enumValueEntryPointNode, voidEntryPointNode, storageEntryPoint, singleValueEntryPoint, runtimeCallEntryPoint } from '@polkadot-api/metadata-compatibility';\nimport { getObservableClient } from '@polkadot-api/observable-client';\nimport { createClient as createClient$1 } from '@polkadot-api/substrate-client';\nimport { firstValueFrom } from 'rxjs';\nimport { createRuntimeToken, createCompatibilityToken, getCompatibilityApi, compatibilityHelper, OpType } from './compatibility.mjs';\nimport { createConstantEntry } from './constants.mjs';\nimport { createEventEntry } from './event.mjs';\nimport { createRuntimeCallEntry } from './runtime-call.mjs';\nimport { createStorageEntry } from './storage.mjs';\nimport { createTxEntry } from './tx/tx.mjs';\nimport { createWatchEntries } from './watch-entries.mjs';\nimport { submit$, submit } from './tx/submit-fns.mjs';\n\nconst createApi = (compatibilityToken, chainHead, broadcast$) => {\n  const target = {};\n  const createProxy = (propCall) => new Proxy(target, {\n    get(_, prop) {\n      return propCall(prop);\n    }\n  });\n  const createProxyPath = (pathCall) => {\n    const cache = {};\n    return createProxy((a) => {\n      if (!cache[a]) cache[a] = {};\n      return createProxy((b) => {\n        if (!cache[a][b]) cache[a][b] = pathCall(a, b);\n        return cache[a][b];\n      });\n    });\n  };\n  const getPallet = (ctx, name) => ctx.lookup.metadata.pallets.find((p) => p.name === name);\n  const getWatchEntries = createWatchEntries(\n    chainHead.pinnedBlocks$,\n    chainHead.storage$,\n    chainHead.withRuntime\n  );\n  const query = createProxyPath(\n    (pallet, name) => createStorageEntry(\n      pallet,\n      name,\n      chainHead,\n      getWatchEntries,\n      compatibilityHelper(\n        compatibilityToken,\n        (r) => r.getPalletEntryPoint(OpType.Storage, pallet, name),\n        // TODO this is way sub-optimal. Needs some rethought - maybe a builder for entry points?.\n        (ctx) => {\n          const item = getPallet(ctx, pallet)?.storage?.items.find(\n            (s) => s.name === name\n          );\n          return item == null ? null : storageEntryPoint(item);\n        }\n      )\n    )\n  );\n  const getEnumEntry = (ctx, side, id, name) => {\n    if (id == null) return null;\n    const entry = ctx.lookup(id);\n    if (entry.type !== \"enum\") throw new Error(\"Expected enum\");\n    if (entry.value[name] == null) return null;\n    const node = enumValueEntryPointNode(entry.value[name]);\n    return {\n      args: side === \"args\" ? node : voidEntryPointNode,\n      values: side === \"args\" ? voidEntryPointNode : node\n    };\n  };\n  const tx = createProxyPath(\n    (pallet, name) => createTxEntry(\n      pallet,\n      name,\n      chainHead,\n      broadcast$,\n      compatibilityHelper(\n        compatibilityToken,\n        (r) => r.getPalletEntryPoint(OpType.Tx, pallet, name),\n        (ctx) => getEnumEntry(ctx, \"args\", getPallet(ctx, pallet)?.calls, name)\n      ),\n      true\n    )\n  );\n  const event = createProxyPath(\n    (pallet, name) => createEventEntry(\n      pallet,\n      name,\n      chainHead,\n      compatibilityHelper(\n        compatibilityToken,\n        (r) => r.getPalletEntryPoint(OpType.Event, pallet, name),\n        (ctx) => getEnumEntry(ctx, \"values\", getPallet(ctx, pallet)?.events, name)\n      )\n    )\n  );\n  const constants = createProxyPath(\n    (pallet, name) => createConstantEntry(\n      pallet,\n      name,\n      compatibilityHelper(\n        compatibilityToken,\n        (r) => r.getPalletEntryPoint(OpType.Const, pallet, name),\n        (ctx) => {\n          const item = getPallet(ctx, pallet)?.constants.find(\n            (c) => c.name === name\n          )?.type;\n          return item == null ? null : singleValueEntryPoint(item);\n        }\n      )\n    )\n  );\n  const apis = createProxyPath(\n    (api, method) => createRuntimeCallEntry(\n      api,\n      method,\n      chainHead,\n      compatibilityHelper(\n        compatibilityToken,\n        (r) => r.getApiEntryPoint(api, method),\n        (ctx) => runtimeCallEntryPoint(\n          ctx.lookup.metadata.apis.find((a) => a.name === api).methods.find((m) => m.name === method)\n        )\n      )\n    )\n  );\n  const _callDataTx = (callData, token) => {\n    const { lookup, dynamicBuilder } = getCompatibilityApi(token).runtime();\n    try {\n      const decoded = dynamicBuilder.buildDefinition(lookup.call).dec(callData.asBytes());\n      const pallet = decoded.type;\n      const call = decoded.value.type;\n      const args = decoded.value.value;\n      return createTxEntry(\n        pallet,\n        call,\n        chainHead,\n        broadcast$,\n        compatibilityHelper(\n          compatibilityToken,\n          (r) => r.getPalletEntryPoint(OpType.Tx, pallet, call),\n          (ctx) => getEnumEntry(ctx, \"args\", getPallet(ctx, pallet)?.calls, call)\n        ),\n        false\n      )(args);\n    } catch {\n      throw new Error(\"createTx: invalid call data\");\n    }\n  };\n  return {\n    query,\n    txFromCallData: (callData, token) => token ? _callDataTx(callData, token) : compatibilityToken.then((t) => _callDataTx(callData, t)),\n    tx,\n    event,\n    apis,\n    constants\n  };\n};\nfunction createClient(provider) {\n  const rawClient = createClient$1(provider);\n  const client = getObservableClient(rawClient);\n  const chainHead = client.chainHead$();\n  const { getChainSpecData } = rawClient;\n  const _request = rawClient.request;\n  let runtimeToken;\n  const compatibilityToken = /* @__PURE__ */ new WeakMap();\n  const getChainToken = (chainDefinition) => {\n    const result = compatibilityToken.get(chainDefinition) || createCompatibilityToken(chainDefinition, chainHead);\n    compatibilityToken.set(chainDefinition, result);\n    return result;\n  };\n  const getRuntimeToken = () => runtimeToken ?? (runtimeToken = createRuntimeToken(chainHead));\n  const { broadcastTx$ } = client;\n  return {\n    getChainSpecData,\n    finalizedBlock$: chainHead.finalized$,\n    getFinalizedBlock: () => firstValueFrom(chainHead.finalized$),\n    bestBlocks$: chainHead.bestBlocks$,\n    getBestBlocks: () => firstValueFrom(chainHead.bestBlocks$),\n    watchBlockBody: chainHead.body$,\n    getBlockBody: (hash) => firstValueFrom(chainHead.body$(hash)),\n    getBlockHeader: (hash) => firstValueFrom(chainHead.header$(hash ?? null)),\n    submit: (...args) => submit(chainHead, broadcastTx$, ...args),\n    submitAndWatch: (...args) => submit$(chainHead, broadcastTx$, ...args),\n    getTypedApi: (chainDefinition) => {\n      const token = getChainToken(chainDefinition);\n      return Object.assign(\n        createApi(token, chainHead, broadcastTx$),\n        { compatibilityToken: token }\n      );\n    },\n    getUnsafeApi: () => {\n      const token = getRuntimeToken();\n      return Object.assign(createApi(token, chainHead, broadcastTx$), {\n        runtimeToken: token\n      });\n    },\n    destroy: () => {\n      chainHead.unfollow();\n      client.destroy();\n    },\n    _request\n  };\n}\n\nexport { createClient };\n//# sourceMappingURL=client.mjs.map\n","const toParsed = (base) => {\n  let _onMsg = null;\n  const { send, disconnect } = base((msg) => {\n    _onMsg?.(JSON.parse(msg));\n  });\n  return (onMsg) => {\n    _onMsg = onMsg;\n    return {\n      send(msg) {\n        send(JSON.stringify(msg));\n      },\n      disconnect() {\n        _onMsg = null;\n        disconnect();\n      }\n    };\n  };\n};\nconst fromParsed = (base) => {\n  let _onMsg = null;\n  const { send, disconnect } = base((msg) => {\n    _onMsg?.(JSON.stringify(msg));\n  });\n  return (onMsg) => {\n    _onMsg = onMsg;\n    return {\n      send(msg) {\n        send(JSON.parse(msg));\n      },\n      disconnect() {\n        _onMsg = null;\n        disconnect();\n      }\n    };\n  };\n};\nconst parsed = (...enhancers) => (base) => fromParsed(enhancers.reduce((a, b) => b(a), toParsed(base)));\n\nexport { fromParsed, parsed, toParsed };\n//# sourceMappingURL=parsed.mjs.map\n","const chainHead = {\n  body: \"\",\n  call: \"\",\n  continue: \"\",\n  follow: \"\",\n  header: \"\",\n  stopOperation: \"\",\n  storage: \"\",\n  unfollow: \"\",\n  unpin: \"\"\n};\nconst transaction = {\n  broadcast: \"\",\n  stop: \"\"\n};\nconst chainSpec = {\n  chainName: \"\",\n  genesisHash: \"\",\n  properties: \"\"\n};\nObject.entries({ chainHead, chainSpec, transaction }).forEach(\n  ([fnGroupName, methods]) => {\n    Object.keys(methods).forEach((methodName) => {\n      methods[methodName] = `${fnGroupName}_v1_${methodName}`;\n    });\n  }\n);\n\nexport { chainHead, chainSpec, transaction };\n//# sourceMappingURL=methods.mjs.map\n","import { chainSpec } from '../methods.mjs';\n\nconst fixChainSpec = (base) => (onMsg) => {\n  const { send: originalSend, disconnect } = base(onMsg);\n  const send = (msg) => {\n    switch (msg.method) {\n      case chainSpec.chainName:\n        return originalSend({ ...msg, method: \"system_chain\" });\n      case chainSpec.genesisHash:\n        return originalSend({\n          ...msg,\n          method: \"chain_getBlockHash\",\n          params: [0]\n        });\n      case chainSpec.properties:\n        return originalSend({ ...msg, method: \"system_properties\" });\n    }\n    originalSend(msg);\n  };\n  return {\n    send,\n    disconnect\n  };\n};\n\nexport { fixChainSpec };\n//# sourceMappingURL=chain-spec.mjs.map\n","import { chainHead } from '../methods.mjs';\n\nconst fixPrematureBlocks = (base) => (onMsg) => {\n  const pendingChainHeadSubs = /* @__PURE__ */ new Set();\n  const pinnedBlocksInSub = /* @__PURE__ */ new Map();\n  const prematureBlocks = /* @__PURE__ */ new Map();\n  const { send: originalSend, disconnect } = base((message) => {\n    if (\"id\" in message) {\n      onMsg(message);\n      const { id, result } = message;\n      if (pendingChainHeadSubs.has(id)) {\n        pendingChainHeadSubs.delete(id);\n        pinnedBlocksInSub.set(result, /* @__PURE__ */ new Set());\n        prematureBlocks.set(result, /* @__PURE__ */ new Map());\n        return;\n      }\n    } else {\n      const { subscription } = message.params;\n      const pinnedBlocks = pinnedBlocksInSub.get(subscription);\n      const prematureSub = prematureBlocks.get(subscription);\n      if (pinnedBlocks) {\n        const result = message.params.result;\n        const { event } = result;\n        if (event === \"initialized\") {\n          result.finalizedBlockHashes.forEach((hash) => {\n            pinnedBlocks.add(hash);\n          });\n        }\n        if (event === \"newBlock\") {\n          const { parentBlockHash } = result;\n          if (!pinnedBlocks.has(parentBlockHash)) {\n            const list = prematureSub.get(parentBlockHash) ?? [];\n            list.push(message);\n            prematureSub.set(parentBlockHash, list);\n            return;\n          }\n          const hash = result.blockHash;\n          pinnedBlocks.add(result.blockHash);\n          onMsg(message);\n          const prematureMessages = prematureSub.get(hash);\n          if (prematureMessages) {\n            prematureSub.delete(hash);\n            prematureMessages.forEach((msg) => {\n              pinnedBlocks.add(msg.params.result.blockHash);\n              onMsg(msg);\n            });\n          }\n          return;\n        }\n        if (event === \"stop\") {\n          pinnedBlocks.delete(subscription);\n          prematureBlocks.delete(subscription);\n        }\n      }\n      onMsg(message);\n    }\n  });\n  const send = (msg) => {\n    const subId = msg.params[0];\n    switch (msg.method) {\n      case chainHead.follow:\n        pendingChainHeadSubs.add(msg.id);\n        break;\n      case chainHead.unpin:\n        const [subscription, blocks] = msg.params;\n        blocks.forEach((block) => {\n          pinnedBlocksInSub.get(subscription)?.delete(block);\n          prematureBlocks.get(subscription)?.delete(block);\n        });\n        break;\n      case chainHead.unfollow:\n        pinnedBlocksInSub.delete(subId);\n        prematureBlocks.delete(subId);\n        break;\n    }\n    originalSend(msg);\n  };\n  return {\n    send,\n    disconnect\n  };\n};\n\nexport { fixPrematureBlocks };\n//# sourceMappingURL=fix-premature-blocks.mjs.map\n","const jsonObj = (input) => ({\n  jsonrpc: \"2.0\",\n  ...input\n});\nconst operationNotification = (subscription, event, operationId, innerResult = {}) => jsonObj({\n  method: \"chainHead_v1_followEvent\",\n  params: {\n    subscription,\n    result: {\n      event,\n      operationId,\n      ...innerResult\n    }\n  }\n});\nconst requestPrefix = \"__INNER_RQ_DesV\";\nconst getRequest = (base) => {\n  let nextId = 0;\n  const onGoingRequests = /* @__PURE__ */ new Map();\n  const listener = ({ id, error, result }) => {\n    const callback = onGoingRequests.get(id);\n    if (callback) {\n      onGoingRequests.delete(id);\n      if (error) callback(false, error);\n      else callback(true, result);\n    }\n    return !callback;\n  };\n  let send = () => {\n  };\n  const provider = (onMsg) => {\n    const { send: _send, disconnect } = base((msg) => {\n      if (listener(msg)) onMsg(msg);\n    });\n    send = _send;\n    return {\n      send,\n      disconnect: () => {\n        onGoingRequests.clear();\n        disconnect();\n      }\n    };\n  };\n  const request = (method, params, onSuccess, onError) => {\n    const id = requestPrefix + nextId++;\n    onGoingRequests.set(id, (isOk, value) => {\n      (isOk ? onSuccess : onError)(value);\n    });\n    send(jsonObj({ id, method, params }));\n  };\n  return [provider, request];\n};\n\nexport { getRequest, jsonObj, operationNotification };\n//# sourceMappingURL=utils.mjs.map\n","import { chainHead } from '../methods.mjs';\nimport { getRequest, jsonObj, operationNotification } from '../utils.mjs';\n\nconst operationPrefix = \"__INNER_OP_DesV\";\nlet nextOperationId = 0;\nconst fixDescendantValues = (base) => (onMsg) => {\n  const [provider, request] = getRequest(base);\n  const getDescendantValues = getDescendantValuesFromOldRpc(request);\n  const preOpId = /* @__PURE__ */ new Map();\n  const onGoing = /* @__PURE__ */ new Map();\n  const { send: originalSend, disconnect } = provider((msg) => {\n    if (\"id\" in msg) {\n      const opIdCb = preOpId.get(msg.id);\n      if (opIdCb) {\n        preOpId.delete(msg.id);\n        if (msg.result.result === \"started\") opIdCb(msg.result.operationId);\n      }\n    } else if (msg.params) {\n      const { subscription, result } = msg.params;\n      const { operationId } = result || {};\n      const operations = onGoing.get(subscription);\n      if (operations && result.event === \"stop\") {\n        operations.forEach((x) => {\n          x.cancel();\n        });\n        onGoing.delete(subscription);\n      }\n      const operation = operations?.get(operationId);\n      if (operation) {\n        switch (result.event) {\n          case \"operationInaccessible\":\n          case \"operationError\":\n            operation.cancel();\n            break;\n          case \"operationStorageDone\": {\n            if (operation.isInnerDone) {\n              operations.delete(operationId);\n            } else {\n              operation.isOutterDone = true;\n              return;\n            }\n          }\n        }\n      }\n    }\n    onMsg(msg);\n  });\n  const getStartDescendantValues = (subscription, blockHash, keys) => (operationId) => {\n    let _cancel = () => {\n    };\n    if (!onGoing.has(subscription)) {\n      onGoing.set(subscription, /* @__PURE__ */ new Map());\n    }\n    const operationsMap = onGoing.get(subscription);\n    const state = {\n      isOutterDone: false,\n      isInnerDone: false,\n      cancel: () => {\n        _cancel();\n      }\n    };\n    operationsMap.set(operationId, state);\n    let nFinished = 0;\n    const stoppers = keys.map(\n      (key) => getDescendantValues(\n        key,\n        blockHash,\n        (values) => {\n          onMsg(\n            operationNotification(\n              subscription,\n              \"operationStorageItems\",\n              operationId,\n              { items: values.map(([key2, value]) => ({ key: key2, value })) }\n            )\n          );\n        },\n        (error) => {\n          _cancel();\n          if (!state.isOutterDone) {\n            originalSend(\n              jsonObj({\n                method: \"chainHead_v1_stopOperation\",\n                params: [operationId]\n              })\n            );\n          }\n          onMsg(\n            operationNotification(\n              subscription,\n              \"operationError\",\n              operationId,\n              {\n                error: typeof error === \"string\" ? error : JSON.stringify(error)\n              }\n            )\n          );\n        },\n        () => {\n          if (++nFinished === keys.length) {\n            if (state.isOutterDone) {\n              _cancel();\n              onMsg(\n                operationNotification(\n                  subscription,\n                  \"operationStorageDone\",\n                  operationId\n                )\n              );\n            } else state.isInnerDone = true;\n          }\n        }\n      )\n    );\n    _cancel = () => {\n      operationsMap.delete(operationId);\n      stoppers.forEach((cb) => cb());\n    };\n  };\n  const send = (msg) => {\n    switch (msg.method) {\n      case chainHead.storage: {\n        const [followSub, blockHash, items] = msg.params;\n        const descendantsValuesKeys = [];\n        const actualItems = items.filter((x) => {\n          const isDescendantsValues = x.type === \"descendantsValues\";\n          if (isDescendantsValues) descendantsValuesKeys.push(x.key);\n          return !isDescendantsValues;\n        });\n        const startGetDescendantValues = getStartDescendantValues(\n          followSub,\n          blockHash,\n          descendantsValuesKeys\n        );\n        if (!actualItems.length) {\n          const operationId = operationPrefix + nextOperationId++;\n          onMsg(\n            jsonObj({\n              id: msg.id,\n              result: { result: \"started\", operationId }\n            })\n          );\n          startGetDescendantValues(operationId);\n          onGoing.get(followSub).get(operationId).isOutterDone = true;\n          return;\n        } else if (descendantsValuesKeys.length) {\n          preOpId.set(msg.id, startGetDescendantValues);\n        }\n        msg.params[2] = actualItems;\n        break;\n      }\n      case chainHead.stopOperation: {\n        const [followSubscription, operationId] = msg.params;\n        const data = onGoing.get(followSubscription)?.get(operationId);\n        if (data) {\n          data.cancel();\n          if (data.isOutterDone) return;\n        }\n        break;\n      }\n      case chainHead.unfollow: {\n        const [followSubscription] = msg.params;\n        onGoing.get(followSubscription)?.forEach((x) => x.cancel());\n        onGoing.delete(followSubscription);\n        break;\n      }\n    }\n    originalSend(msg);\n  };\n  return {\n    send,\n    disconnect\n  };\n};\nconst getDescendantValuesFromOldRpc = (request) => (rootKey, at, onValues, onError, onDone) => {\n  let isRunning = true;\n  let areAllKeysDone = false;\n  let onGoingValues = 0;\n  const _onError = (e) => {\n    if (isRunning) {\n      isRunning = false;\n      onError(e);\n    }\n  };\n  const PAGE_SIZE = 1e3;\n  const pullKeys = (startAtKey) => {\n    request(\n      \"state_getKeysPaged\",\n      [rootKey, PAGE_SIZE, startAtKey || void 0, at],\n      (result) => {\n        if (isRunning) {\n          if (result.length > 0) {\n            onGoingValues++;\n            request(\n              \"state_queryStorageAt\",\n              [result, at],\n              ([{ changes }]) => {\n                if (isRunning) {\n                  onGoingValues--;\n                  onValues(changes);\n                  if (areAllKeysDone && !onGoingValues) onDone();\n                }\n              },\n              _onError\n            );\n          }\n          if (result.length < PAGE_SIZE) {\n            areAllKeysDone = true;\n            if (!onGoingValues) onDone();\n          } else pullKeys(result.at(-1));\n        }\n      },\n      _onError\n    );\n  };\n  pullKeys();\n  return () => {\n    isRunning = false;\n  };\n};\n\nexport { fixDescendantValues };\n//# sourceMappingURL=fix-descendant-values.mjs.map\n","import { chainHead } from '../methods.mjs';\n\nconst fixUnorderedBlocks = (base) => (onMsg) => {\n  const pendingChainHeadSubs = /* @__PURE__ */ new Set();\n  const pinnedBlocksInSub = /* @__PURE__ */ new Map();\n  const uknownBlocksNotifications = /* @__PURE__ */ new Map();\n  const { send: originalSend, disconnect } = base((message) => {\n    if (\"id\" in message) {\n      onMsg(message);\n      const { id, result } = message;\n      if (pendingChainHeadSubs.has(id)) {\n        pendingChainHeadSubs.delete(id);\n        pinnedBlocksInSub.set(result, /* @__PURE__ */ new Set());\n        uknownBlocksNotifications.set(result, /* @__PURE__ */ new Map());\n        return;\n      }\n    } else {\n      const { subscription } = message.params;\n      const pinnedBlocks = pinnedBlocksInSub.get(subscription);\n      const premature = uknownBlocksNotifications.get(subscription);\n      if (pinnedBlocks) {\n        const result = message.params.result;\n        const { event } = result;\n        if (event === \"initialized\") {\n          result.finalizedBlockHashes.forEach((hash) => {\n            pinnedBlocks.add(hash);\n          });\n        }\n        if (event === \"finalized\") {\n          result.prunedBlockHashes = result.prunedBlockHashes.filter(\n            (x) => pinnedBlocks.has(x)\n          );\n        }\n        if (event === \"newBlock\") {\n          pinnedBlocks.add(result.blockHash);\n          const hash = result.blockHash;\n          const missing = premature.get(hash);\n          if (missing) {\n            premature.delete(hash);\n            onMsg(message);\n            Promise.resolve().then(() => {\n              onMsg(missing);\n            });\n            return;\n          }\n        }\n        if (event === \"bestBlockChanged\") {\n          const hash = result.bestBlockHash;\n          if (!pinnedBlocks.has(hash)) {\n            uknownBlocksNotifications.get(subscription).set(hash, message);\n            return;\n          }\n        }\n        if (event === \"stop\") {\n          pinnedBlocks.delete(subscription);\n          uknownBlocksNotifications.delete(subscription);\n        }\n      }\n      onMsg(message);\n    }\n  });\n  const send = (msg) => {\n    const subId = msg.params[0];\n    switch (msg.method) {\n      case chainHead.follow:\n        pendingChainHeadSubs.add(msg.id);\n        break;\n      case chainHead.unpin:\n        const [subscription, blocks] = msg.params;\n        blocks.forEach((block) => {\n          pinnedBlocksInSub.get(subscription)?.delete(block);\n          uknownBlocksNotifications.get(subscription)?.delete(block);\n        });\n        break;\n      case chainHead.unfollow:\n        pinnedBlocksInSub.delete(subId);\n        uknownBlocksNotifications.delete(subId);\n        break;\n    }\n    originalSend(msg);\n  };\n  return {\n    send,\n    disconnect\n  };\n};\n\nexport { fixUnorderedBlocks };\n//# sourceMappingURL=fix-unordered-blocks.mjs.map\n","import { chainHead } from '../methods.mjs';\n\nconst terminalOperationEvents = new Set(\n  [\"BodyDone\", \"CallDone\", \"StorageDone\", \"Inaccessible\", \"Error\"].map(\n    (x) => \"operation\" + x\n  )\n);\nconst isTerminalNotification = (msg) => terminalOperationEvents.has(msg.params?.result?.event);\nconst fixUnorderedEvents = (base) => (onMsg) => {\n  const pendingChainHeadSubs = /* @__PURE__ */ new Set();\n  const pendingOperationIds = /* @__PURE__ */ new Map();\n  const activeOperationIds = /* @__PURE__ */ new Map();\n  const uknownOperationNotifications = /* @__PURE__ */ new Map();\n  const { send: originalSend, disconnect } = base((message) => {\n    if (\"id\" in message) {\n      onMsg(message);\n      const { id, result } = message;\n      if (pendingChainHeadSubs.has(id)) {\n        pendingChainHeadSubs.delete(id);\n        activeOperationIds.set(result, /* @__PURE__ */ new Set());\n        uknownOperationNotifications.set(result, /* @__PURE__ */ new Map());\n        return;\n      }\n      const subId = pendingOperationIds.get(id);\n      if (subId !== void 0) {\n        pendingOperationIds.delete(id);\n        const opId = message.result?.operationId;\n        if (opId !== void 0 && activeOperationIds.has(subId)) {\n          const subOperations = activeOperationIds.get(subId);\n          subOperations.add(opId);\n          const pendingNotifications = uknownOperationNotifications.get(subId)?.get(opId);\n          if (pendingNotifications) {\n            pendingNotifications.forEach(onMsg);\n            uknownOperationNotifications.get(subId).delete(opId);\n            if (isTerminalNotification(pendingNotifications.at(-1)))\n              subOperations.delete(opId);\n          }\n        }\n      }\n    } else {\n      const { subscription, result } = message.params;\n      const operationIds = activeOperationIds.get(subscription);\n      if (operationIds) {\n        const { operationId } = message.params.result;\n        if (operationId !== void 0) {\n          if (!operationIds.has(operationId)) {\n            const subscriptionPending = uknownOperationNotifications.get(subscription);\n            const pendingMessages = subscriptionPending.get(operationId) ?? [];\n            pendingMessages.push(message);\n            subscriptionPending.set(operationId, pendingMessages);\n            return;\n          } else if (isTerminalNotification(message))\n            operationIds.delete(operationId);\n        } else if (result?.event === \"stop\") {\n          activeOperationIds.delete(subscription);\n          uknownOperationNotifications.delete(subscription);\n        }\n      }\n      onMsg(message);\n    }\n  });\n  const send = (msg) => {\n    const subId = msg.params[0];\n    switch (msg.method) {\n      case chainHead.follow:\n        pendingChainHeadSubs.add(msg.id);\n        break;\n      case chainHead.body:\n      case chainHead.call:\n      case chainHead.storage:\n        pendingOperationIds.set(msg.id, subId);\n        break;\n      case chainHead.unfollow:\n        activeOperationIds.delete(subId);\n        uknownOperationNotifications.delete(subId);\n        break;\n      case chainHead.stopOperation:\n        activeOperationIds.get(subId)?.delete(msg.params[1]);\n    }\n    originalSend(msg);\n  };\n  return {\n    send,\n    disconnect\n  };\n};\n\nexport { fixUnorderedEvents };\n//# sourceMappingURL=fix-unordered-events.mjs.map\n","const patchChainHeadEvents = (base) => (onMsg) => base((message) => {\n  const result = message.params?.result;\n  if (!(\"id\" in message) && result) {\n    const { prunedBlockHashes, finalizedBlockHash, event } = result;\n    if (event === \"finalized\" && Array.isArray(prunedBlockHashes))\n      result.prunedBlockHashes = [...new Set(result.prunedBlockHashes)];\n    else if (event === \"initialized\" && finalizedBlockHash) {\n      result.finalizedBlockHashes = [result.finalizedBlockHash];\n      delete result.finalizedBlockHash;\n    }\n  }\n  onMsg(message);\n});\n\nexport { patchChainHeadEvents };\n//# sourceMappingURL=patch-chainhead-events.mjs.map\n","import { chainHead } from '../methods.mjs';\n\nconst unpinHash = (base) => (onMsg) => {\n  const { send: _send, disconnect } = base(onMsg);\n  const send = (msg) => {\n    const { method, params, id, ...rest } = msg;\n    if (method == chainHead.unpin && params && Array.isArray(params[1])) {\n      params[1].forEach((hash, idx) => {\n        _send({\n          ...rest,\n          id: idx === 0 ? id : `${id}-patched-${idx}`,\n          method,\n          params: [params[0], hash]\n        });\n      });\n    } else _send(msg);\n  };\n  return { send, disconnect };\n};\n\nexport { unpinHash };\n//# sourceMappingURL=unpin-hash.mjs.map\n","import { transaction, chainHead, chainSpec } from '../methods.mjs';\n\nconst jsonRpcMsg = (msg) => ({\n  jsonrpc: \"2.0\",\n  ...msg\n});\nconst [transactionGroup] = transaction.stop.split(\"_\");\nconst unstable = \"unstable\";\nconst rpcMethods = \"rpc_methods\";\nconst RPC_METHODS_ID = \"__INTERNAL_ID\";\nconst translate = (base) => {\n  return (originalOnMsg) => {\n    let isRunning = true;\n    let bufferedMsgs = [];\n    let _send = (msg) => {\n      bufferedMsgs.push(msg);\n    };\n    const preOnMsg = ({\n      id,\n      result,\n      error\n    }) => {\n      if (id !== RPC_METHODS_ID || !isRunning) return;\n      if (!result) {\n        console.error(error);\n        if (nTries < 4) {\n          setTimeout(sendMethodsRequest, 200);\n          return;\n        }\n        result = { methods: [] };\n      }\n      const methodsSet = new Set(result.methods);\n      const methodMappings = {};\n      [chainHead, chainSpec, transaction].forEach((obj) => {\n        Object.values(obj).forEach((method) => {\n          if (methodsSet.has(method)) {\n            methodMappings[method] = method;\n          } else {\n            const [group, , name] = method.split(\"_\");\n            const unstableMethod = `${group}_${unstable}_${name}`;\n            if (methodsSet.has(unstableMethod)) {\n              methodMappings[method] = unstableMethod;\n              methodsSet.delete(unstableMethod);\n              methodsSet.add(method);\n            } else {\n              methodMappings[method] = null;\n              if (group === transactionGroup) {\n                let matchedMethod;\n                const translatedMethod = method === \"stop\" ? \"unwatch\" : \"submitAndWatch\";\n                const txGroup = [\n                  transactionGroup + \"Watch\",\n                  transactionGroup\n                ].find(\n                  (group2) => [\"v1\", unstable].find(\n                    (v) => methodsSet.has(\n                      matchedMethod = `${group2}_${v}_${translatedMethod}`\n                    )\n                  )\n                );\n                if (txGroup) {\n                  methodMappings[method] = matchedMethod;\n                  methodsSet.add(method);\n                }\n              }\n            }\n          }\n        });\n      });\n      _onMsg = originalOnMsg;\n      const enhancedSend = ({\n        method,\n        ...rest\n      }) => {\n        if (method === rpcMethods) {\n          Promise.resolve().then(() => {\n            originalOnMsg(\n              jsonRpcMsg({\n                id: rest.id,\n                result: { methods: [...methodsSet] }\n              })\n            );\n          });\n          return;\n        }\n        const mapping = methodMappings[method];\n        if (mapping === null) {\n          if (method.split(\"_\")[2] === \"follow\") {\n            reset();\n            _send({ method, ...rest });\n          } else {\n            Promise.resolve().then(() => {\n              originalOnMsg({\n                error: { code: -32603, message: `Method not found: ${method}` },\n                id: rest.id\n              });\n            });\n          }\n        } else\n          originalSend({\n            method: mapping || method,\n            ...rest\n          });\n      };\n      const bufferCopy = [...bufferedMsgs];\n      bufferedMsgs = [];\n      for (let i = 0; isRunning && i < bufferCopy.length; i++)\n        enhancedSend(bufferCopy[i]);\n      if (isRunning) _send = enhancedSend;\n    };\n    let _onMsg = preOnMsg;\n    const { send: originalSend, disconnect } = base((msg) => {\n      _onMsg(msg);\n    });\n    const reset = () => {\n      isRunning = true;\n      bufferedMsgs = [];\n      _send = (msg) => {\n        bufferedMsgs.push(msg);\n      };\n      _onMsg = preOnMsg;\n      sendMethodsRequest();\n    };\n    let nTries = 0;\n    const sendMethodsRequest = () => {\n      nTries++;\n      originalSend(\n        jsonRpcMsg({\n          id: RPC_METHODS_ID,\n          method: rpcMethods,\n          params: []\n        })\n      );\n    };\n    sendMethodsRequest();\n    return {\n      send: (msg) => {\n        _send(msg);\n      },\n      disconnect() {\n        isRunning = false;\n        _send = _onMsg = () => {\n        };\n        bufferedMsgs = [];\n        disconnect();\n      }\n    };\n  };\n};\n\nexport { translate };\n//# sourceMappingURL=translate.mjs.map\n","const withNumericIds = (base) => (onMsg) => {\n  let nextId = 0;\n  const numberToOriginal = /* @__PURE__ */ new Map();\n  const { send: originalSend, disconnect } = base((message) => {\n    if (numberToOriginal.has(message.id))\n      message.id = numberToOriginal.get(message.id);\n    onMsg(message);\n  });\n  return {\n    send: (msg) => {\n      if (\"id\" in msg) {\n        const id = nextId++;\n        numberToOriginal.set(id, msg.id);\n        msg.id = id;\n      }\n      originalSend(msg);\n    },\n    disconnect\n  };\n};\n\nexport { withNumericIds };\n//# sourceMappingURL=numeric-ids.mjs.map\n","import { parsed } from './parsed.mjs';\nexport { fromParsed, toParsed } from './parsed.mjs';\nimport { fixChainSpec } from './parsed-enhancers/chain-spec.mjs';\nimport { fixPrematureBlocks } from './parsed-enhancers/fix-premature-blocks.mjs';\nimport { fixDescendantValues } from './parsed-enhancers/fix-descendant-values.mjs';\nimport { fixUnorderedBlocks } from './parsed-enhancers/fix-unordered-blocks.mjs';\nimport { fixUnorderedEvents } from './parsed-enhancers/fix-unordered-events.mjs';\nimport { patchChainHeadEvents } from './parsed-enhancers/patch-chainhead-events.mjs';\nimport { unpinHash } from './parsed-enhancers/unpin-hash.mjs';\nimport { translate } from './parsed-enhancers/translate.mjs';\nimport { withNumericIds } from './parsed-enhancers/numeric-ids.mjs';\nimport * as methods from './methods.mjs';\nexport { methods };\n\nconst withPolkadotSdkCompat = parsed(\n  withNumericIds,\n  translate,\n  fixUnorderedEvents,\n  unpinHash,\n  patchChainHeadEvents,\n  fixPrematureBlocks,\n  fixUnorderedBlocks,\n  fixChainSpec,\n  fixDescendantValues\n);\n\nexport { fixDescendantValues, fixPrematureBlocks, fixUnorderedBlocks, fixUnorderedEvents, parsed, patchChainHeadEvents, translate, unpinHash, withNumericIds, withPolkadotSdkCompat };\n//# sourceMappingURL=index.mjs.map\n","'use strict';\n\nconst BINARY_TYPES = ['nodebuffer', 'arraybuffer', 'fragments'];\nconst hasBlob = typeof Blob !== 'undefined';\n\nif (hasBlob) BINARY_TYPES.push('blob');\n\nmodule.exports = {\n  BINARY_TYPES,\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  hasBlob,\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) {\n    return new FastBuffer(target.buffer, target.byteOffset, offset);\n  }\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.length === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.length);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = new FastBuffer(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = new FastBuffer(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst FastBuffer = Buffer[Symbol.species];\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) {\n        data = new FastBuffer(data.buffer, data.byteOffset, data.length - 4);\n      }\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { isUtf8 } = require('buffer');\n\nconst { hasBlob } = require('./constants');\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Determines whether a value is a `Blob`.\n *\n * @param {*} value The value to be tested\n * @return {Boolean} `true` if `value` is a `Blob`, else `false`\n * @private\n */\nfunction isBlob(value) {\n  return (\n    hasBlob &&\n    typeof value === 'object' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    (value[Symbol.toStringTag] === 'Blob' ||\n      value[Symbol.toStringTag] === 'File')\n  );\n}\n\nmodule.exports = {\n  isBlob,\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\nif (isUtf8) {\n  module.exports.isValidUTF8 = function (buf) {\n    return buf.length < 24 ? _isValidUTF8(buf) : isUtf8(buf);\n  };\n} /* istanbul ignore else  */ else if (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 32 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst FastBuffer = Buffer[Symbol.species];\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\nconst DEFER_EVENT = 6;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._allowSynchronousEvents =\n      options.allowSynchronousEvents !== undefined\n        ? options.allowSynchronousEvents\n        : true;\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._errored = false;\n    this._loop = false;\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = new FastBuffer(\n        buf.buffer,\n        buf.byteOffset + n,\n        buf.length - n\n      );\n\n      return new FastBuffer(buf.buffer, buf.byteOffset, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = new FastBuffer(\n          buf.buffer,\n          buf.byteOffset + n,\n          buf.length - n\n        );\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          this.getInfo(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          this.getPayloadLength16(cb);\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          this.getPayloadLength64(cb);\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          this.getData(cb);\n          break;\n        case INFLATING:\n        case DEFER_EVENT:\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    if (!this._errored) cb();\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getInfo(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      const error = this.createError(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n\n      cb(error);\n      return;\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      const error = this.createError(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (!this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        const error = this.createError(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n\n        cb(error);\n        return;\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        const error = this.createError(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (compressed) {\n        const error = this.createError(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (\n        this._payloadLength > 0x7d ||\n        (this._opcode === 0x08 && this._payloadLength === 1)\n      ) {\n        const error = this.createError(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    } else {\n      const error = this.createError(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        const error = this.createError(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n\n        cb(error);\n        return;\n      }\n    } else if (this._masked) {\n      const error = this.createError(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n\n      cb(error);\n      return;\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength16(cb) {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getPayloadLength64(cb) {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      const error = this.createError(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n\n      cb(error);\n      return;\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    this.haveLength(cb);\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  haveLength(cb) {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        const error = this.createError(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n\n        cb(error);\n        return;\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) {\n      this.controlMessage(data, cb);\n      return;\n    }\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    this.dataMessage(cb);\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          const error = this.createError(\n            RangeError,\n            'Max payload size exceeded',\n            false,\n            1009,\n            'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._fragments.push(buf);\n      }\n\n      this.dataMessage(cb);\n      if (this._state === GET_INFO) this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  dataMessage(cb) {\n    if (!this._fin) {\n      this._state = GET_INFO;\n      return;\n    }\n\n    const messageLength = this._messageLength;\n    const fragments = this._fragments;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragmented = 0;\n    this._fragments = [];\n\n    if (this._opcode === 2) {\n      let data;\n\n      if (this._binaryType === 'nodebuffer') {\n        data = concat(fragments, messageLength);\n      } else if (this._binaryType === 'arraybuffer') {\n        data = toArrayBuffer(concat(fragments, messageLength));\n      } else if (this._binaryType === 'blob') {\n        data = new Blob(fragments);\n      } else {\n        data = fragments;\n      }\n\n      if (this._allowSynchronousEvents) {\n        this.emit('message', data, true);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', data, true);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    } else {\n      const buf = concat(fragments, messageLength);\n\n      if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n        const error = this.createError(\n          Error,\n          'invalid UTF-8 sequence',\n          true,\n          1007,\n          'WS_ERR_INVALID_UTF8'\n        );\n\n        cb(error);\n        return;\n      }\n\n      if (this._state === INFLATING || this._allowSynchronousEvents) {\n        this.emit('message', buf, false);\n        this._state = GET_INFO;\n      } else {\n        this._state = DEFER_EVENT;\n        setImmediate(() => {\n          this.emit('message', buf, false);\n          this._state = GET_INFO;\n          this.startLoop(cb);\n        });\n      }\n    }\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data, cb) {\n    if (this._opcode === 0x08) {\n      if (data.length === 0) {\n        this._loop = false;\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          const error = this.createError(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n\n          cb(error);\n          return;\n        }\n\n        const buf = new FastBuffer(\n          data.buffer,\n          data.byteOffset + 2,\n          data.length - 2\n        );\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          const error = this.createError(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n\n          cb(error);\n          return;\n        }\n\n        this._loop = false;\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n\n      this._state = GET_INFO;\n      return;\n    }\n\n    if (this._allowSynchronousEvents) {\n      this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n      this._state = GET_INFO;\n    } else {\n      this._state = DEFER_EVENT;\n      setImmediate(() => {\n        this.emit(this._opcode === 0x09 ? 'ping' : 'pong', data);\n        this._state = GET_INFO;\n        this.startLoop(cb);\n      });\n    }\n  }\n\n  /**\n   * Builds an error object.\n   *\n   * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n   * @param {String} message The error message\n   * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n   *     `message`\n   * @param {Number} statusCode The status code\n   * @param {String} errorCode The exposed error code\n   * @return {(Error|RangeError)} The error\n   * @private\n   */\n  createError(ErrorCtor, message, prefix, statusCode, errorCode) {\n    this._loop = false;\n    this._errored = true;\n\n    const err = new ErrorCtor(\n      prefix ? `Invalid WebSocket frame: ${message}` : message\n    );\n\n    Error.captureStackTrace(err, this.createError);\n    err.code = errorCode;\n    err[kStatusCode] = statusCode;\n    return err;\n  }\n}\n\nmodule.exports = Receiver;\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex\" }] */\n\n'use strict';\n\nconst { Duplex } = require('stream');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER, kWebSocket, NOOP } = require('./constants');\nconst { isBlob, isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\nconst RANDOM_POOL_SIZE = 8 * 1024;\nlet randomPool;\nlet randomPoolPointer = RANDOM_POOL_SIZE;\n\nconst DEFAULT = 0;\nconst DEFLATING = 1;\nconst GET_BLOB_DATA = 2;\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {Duplex} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._queue = [];\n    this._state = DEFAULT;\n    this.onerror = NOOP;\n    this[kWebSocket] = undefined;\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        if (randomPoolPointer === RANDOM_POOL_SIZE) {\n          /* istanbul ignore else  */\n          if (randomPool === undefined) {\n            //\n            // This is lazily initialized because server-sent frames must not\n            // be masked so it may never be used.\n            //\n            randomPool = Buffer.alloc(RANDOM_POOL_SIZE);\n          }\n\n          randomFillSync(randomPool, 0, RANDOM_POOL_SIZE);\n          randomPoolPointer = 0;\n        }\n\n        mask[0] = randomPool[randomPoolPointer++];\n        mask[1] = randomPool[randomPoolPointer++];\n        mask[2] = randomPool[randomPoolPointer++];\n        mask[3] = randomPool[randomPoolPointer++];\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, false, options, cb]);\n      } else {\n        this.getBlobData(data, false, options, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else if (isBlob(data)) {\n      byteLength = data.size;\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    const opts = {\n      [kByteLength]: byteLength,\n      fin: options.fin,\n      generateMask: this._generateMask,\n      mask: options.mask,\n      maskBuffer: this._maskBuffer,\n      opcode,\n      readOnly,\n      rsv1\n    };\n\n    if (isBlob(data)) {\n      if (this._state !== DEFAULT) {\n        this.enqueue([this.getBlobData, data, this._compress, opts, cb]);\n      } else {\n        this.getBlobData(data, this._compress, opts, cb);\n      }\n    } else if (this._state !== DEFAULT) {\n      this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n    } else {\n      this.dispatch(data, this._compress, opts, cb);\n    }\n  }\n\n  /**\n   * Gets the contents of a blob as binary data.\n   *\n   * @param {Blob} blob The blob\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     the data\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  getBlobData(blob, compress, options, cb) {\n    this._bufferedBytes += options[kByteLength];\n    this._state = GET_BLOB_DATA;\n\n    blob\n      .arrayBuffer()\n      .then((arrayBuffer) => {\n        if (this._socket.destroyed) {\n          const err = new Error(\n            'The socket was closed while the blob was being read'\n          );\n\n          //\n          // `callCallbacks` is called in the next tick to ensure that errors\n          // that might be thrown in the callbacks behave like errors thrown\n          // outside the promise chain.\n          //\n          process.nextTick(callCallbacks, this, err, cb);\n          return;\n        }\n\n        this._bufferedBytes -= options[kByteLength];\n        const data = toBuffer(arrayBuffer);\n\n        if (!compress) {\n          this._state = DEFAULT;\n          this.sendFrame(Sender.frame(data, options), cb);\n          this.dequeue();\n        } else {\n          this.dispatch(data, compress, options, cb);\n        }\n      })\n      .catch((err) => {\n        //\n        // `onError` is called in the next tick for the same reason that\n        // `callCallbacks` above is.\n        //\n        process.nextTick(onError, this, err, cb);\n      });\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._state = DEFLATING;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        callCallbacks(this, err, cb);\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._state = DEFAULT;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (this._state === DEFAULT && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {(Buffer | String)[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n\n/**\n * Calls queued callbacks with an error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error to call the callbacks with\n * @param {Function} [cb] The first callback\n * @private\n */\nfunction callCallbacks(sender, err, cb) {\n  if (typeof cb === 'function') cb(err);\n\n  for (let i = 0; i < sender._queue.length; i++) {\n    const params = sender._queue[i];\n    const callback = params[params.length - 1];\n\n    if (typeof callback === 'function') callback(err);\n  }\n}\n\n/**\n * Handles a `Sender` error.\n *\n * @param {Sender} sender The `Sender` instance\n * @param {Error} err The error\n * @param {Function} [cb] The first pending callback\n * @private\n */\nfunction onError(sender, err, cb) {\n  callCallbacks(sender, err, cb);\n  sender.onerror(err);\n}\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex|Readable$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Duplex, Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst { isBlob } = require('./validation');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._errorEmitted = false;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._autoPong = options.autoPong;\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * For historical reasons, the custom \"nodebuffer\" type is used by the default\n   * instead of \"blob\".\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Boolean} [options.allowSynchronousEvents=false] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      allowSynchronousEvents: options.allowSynchronousEvents,\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    const sender = new Sender(socket, this._extensions, options.generateMask);\n\n    this._receiver = receiver;\n    this._sender = sender;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    sender[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    sender.onerror = senderOnError;\n\n    //\n    // These methods may not be available if `socket` is just a `Duplex`.\n    //\n    if (socket.setTimeout) socket.setTimeout(0);\n    if (socket.setNoDelay) socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    setCloseTimer(this);\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      abortHandshake(this, this._req, msg);\n      return;\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether any\n *     of the `'message'`, `'ping'`, and `'pong'` events can be emitted multiple\n *     times in the same tick\n * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n *     automatically send a pong in response to a ping\n * @param {Function} [options.finishRequest] A function which can be used to\n *     customize the headers of each http request before it is sent\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    allowSynchronousEvents: true,\n    autoPong: true,\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  websocket._autoPong = opts.autoPong;\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n  }\n\n  if (parsedUrl.protocol === 'http:') {\n    parsedUrl.protocol = 'ws:';\n  } else if (parsedUrl.protocol === 'https:') {\n    parsedUrl.protocol = 'wss:';\n  }\n\n  websocket._url = parsedUrl.href;\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", ' +\n      '\"http:\", \"https\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection =\n    opts.createConnection || (isSecure ? tlsConnect : netConnect);\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n          ? false\n          : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const upgrade = res.headers.upgrade;\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      allowSynchronousEvents: opts.allowSynchronousEvents,\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  if (opts.finishRequest) {\n    opts.finishRequest(req, websocket);\n  } else {\n    req.end();\n  }\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  //\n  // The following assignment is practically useless and is done only for\n  // consistency.\n  //\n  websocket._errorEmitted = true;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = isBlob(data) ? data.size : toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    process.nextTick(cb, err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._autoPong) websocket.pong(data, !this._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The `Sender` error event handler.\n *\n * @param {Error} The error\n * @private\n */\nfunction senderOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket.readyState === WebSocket.CLOSED) return;\n  if (websocket.readyState === WebSocket.OPEN) {\n    websocket._readyState = WebSocket.CLOSING;\n    setCloseTimer(websocket);\n  }\n\n  //\n  // `socket.end()` is used instead of `socket.destroy()` to allow the other\n  // peer to finish sending queued data. There is no need to set a timer here\n  // because `CLOSING` means that it is already set or not needed.\n  //\n  this._socket.end();\n\n  if (!websocket._errorEmitted) {\n    websocket._errorEmitted = true;\n    websocket.emit('error', err);\n  }\n}\n\n/**\n * Set a timer to destroy the underlying raw socket of a WebSocket.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @private\n */\nfunction setCloseTimer(websocket) {\n  websocket._closeTimer = setTimeout(\n    websocket._socket.destroy.bind(websocket._socket),\n    closeTimeout\n  );\n}\n\n/**\n * The listener of the socket `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the socket `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the socket `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the socket `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^WebSocket$\" }] */\n'use strict';\n\nconst WebSocket = require('./websocket');\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {Duplex} stream The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @param {Error} err The error\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} [options] The options for the `Duplex` constructor\n * @return {Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let terminateOnDestroy = true;\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg, isBinary) {\n    const data =\n      !isBinary && duplex._readableState.objectMode ? msg.toString() : msg;\n\n    if (!duplex.push(data)) ws.pause();\n  });\n\n  ws.once('error', function error(err) {\n    if (duplex.destroyed) return;\n\n    // Prevent `ws.terminate()` from being called by `duplex._destroy()`.\n    //\n    // - If the `'error'` event is emitted before the `'open'` event, then\n    //   `ws.terminate()` is a noop as no socket is assigned.\n    // - Otherwise, the error is re-emitted by the listener of the `'error'`\n    //   event of the `Receiver` object. The listener already closes the\n    //   connection by calling `ws.close()`. This allows a close frame to be\n    //   sent to the other peer. If `ws.terminate()` is called right after this,\n    //   then the close frame might not be sent.\n    terminateOnDestroy = false;\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function (err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    let called = false;\n\n    ws.once('error', function error(err) {\n      called = true;\n      callback(err);\n    });\n\n    ws.once('close', function close() {\n      if (!called) callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n\n    if (terminateOnDestroy) ws.terminate();\n  };\n\n  duplex._final = function (callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    // If the value of the `_socket` property is `null` it means that `ws` is a\n    // client websocket and the handshake failed. In fact, when this happens, a\n    // socket is never assigned to the websocket. Wait for the `'error'` event\n    // that will be emitted by the websocket.\n    if (ws._socket === null) return;\n\n    if (ws._socket._writableState.finished) {\n      callback();\n      if (duplex._readableState.endEmitted) duplex.destroy();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the websocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function () {\n    if (ws.isPaused) ws.resume();\n  };\n\n  duplex._write = function (chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nmodule.exports = { parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Duplex$\", \"caughtErrors\": \"none\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst http = require('http');\nconst { Duplex } = require('stream');\nconst { createHash } = require('crypto');\n\nconst extension = require('./extension');\nconst PerMessageDeflate = require('./permessage-deflate');\nconst subprotocol = require('./subprotocol');\nconst WebSocket = require('./websocket');\nconst { GUID, kWebSocket } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} [options.allowSynchronousEvents=true] Specifies whether\n   *     any of the `'message'`, `'ping'`, and `'pong'` events can be emitted\n   *     multiple times in the same tick\n   * @param {Boolean} [options.autoPong=true] Specifies whether or not to\n   *     automatically send a pong in response to a ping\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      allowSynchronousEvents: true,\n      autoPong: true,\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http.createServer((req, res) => {\n        const body = http.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const upgrade = req.headers.upgrade;\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (upgrade === undefined || upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (key === undefined || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {Duplex} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null, undefined, this.options);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      allowSynchronousEvents: this.options.allowSynchronousEvents,\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {Duplex} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n","const jsonRpcMsg = (msg) => JSON.stringify({\n  jsonrpc: \"2.0\",\n  ...msg\n});\n\nexport { jsonRpcMsg };\n//# sourceMappingURL=json-rpc-message.mjs.map\n","import { jsonRpcMsg } from './json-rpc-message.mjs';\n\nconst unfollowMethods = new Set(\n  [\"v1\", \"unstable\"].map((x) => `chainHead_${x}_unfollow`)\n);\nconst getProxy = (toConsumer) => {\n  let state = {\n    type: 1 /* Connecting */,\n    pending: []\n  };\n  const onMsgFromProvider = (msg) => {\n    if (state.type === 0 /* Connected */) {\n      const parsed = JSON.parse(msg);\n      if (\"id\" in parsed) {\n        if (\"result\" in parsed && state.onGoingRequests.get(parsed.id)?.type === 0 /* ChainHeadFollow */)\n          state.activeChainHeads.add(parsed.result);\n        state.onGoingRequests.delete(parsed.id);\n      } else if (\"params\" in parsed) {\n        const { subscription, result } = parsed.params;\n        if (result?.event === \"stop\")\n          state.activeChainHeads.delete(subscription);\n      }\n    }\n    if (state.type !== 2 /* Done */) toConsumer(msg);\n  };\n  const send = (msg) => {\n    if (state.type === 2 /* Done */) return;\n    if (state.type === 1 /* Connecting */) {\n      state.pending.push(msg);\n      return;\n    }\n    const parsed = JSON.parse(msg);\n    if (unfollowMethods.has(parsed.method))\n      state.activeChainHeads.delete(parsed.params[0]);\n    if (\"id\" in parsed) {\n      const { method, id } = parsed;\n      const ongoingMsg = method.startsWith(\"chainHead\") ? method.endsWith(\"follow\") ? {\n        type: 0 /* ChainHeadFollow */,\n        msg\n      } : { type: 1 /* ChainHeadOperation */, id } : { type: 2 /* Other */, msg };\n      state.onGoingRequests.set(id, ongoingMsg);\n    }\n    state.connection.send(msg);\n  };\n  return {\n    send,\n    disconnect: () => {\n      if (state.type === 2 /* Done */) return;\n      if (state.type === 0 /* Connected */) state.connection.disconnect();\n      state = { type: 2 /* Done */ };\n    },\n    connect: (cb) => {\n      if (state.type !== 1 /* Connecting */) throw new Error(\"Nonesense\");\n      const { pending } = state;\n      const onGoingRequests = /* @__PURE__ */ new Map();\n      const activeChainHeads = /* @__PURE__ */ new Set();\n      const onHalt = () => {\n        state = {\n          type: 1 /* Connecting */,\n          pending: []\n        };\n        activeChainHeads.forEach((subscription) => {\n          onMsgFromProvider(\n            jsonRpcMsg({\n              params: {\n                subscription,\n                result: {\n                  event: \"stop\",\n                  internal: true\n                }\n              }\n            })\n          );\n        });\n        activeChainHeads.clear();\n        for (const x of onGoingRequests.values()) {\n          if (x.type === 1 /* ChainHeadOperation */)\n            onMsgFromProvider(\n              jsonRpcMsg({\n                id: x.id,\n                error: { code: -32603, message: \"Internal error\" },\n                internal: true\n              })\n            );\n          else send(x.msg);\n        }\n        onGoingRequests.clear();\n      };\n      state = {\n        type: 0 /* Connected */,\n        connection: cb(onMsgFromProvider, onHalt),\n        onGoingRequests,\n        activeChainHeads\n      };\n      pending.forEach(send);\n    }\n  };\n};\n\nexport { getProxy };\n//# sourceMappingURL=get-proxy.mjs.map\n","import { getProxy } from './get-proxy.mjs';\n\nconst getSyncProvider = (input) => (onMessage) => {\n  let proxy = getProxy(onMessage);\n  const start = () => {\n    input().then(\n      (cb) => {\n        if (!proxy) {\n          try {\n            cb(\n              () => {\n              },\n              () => {\n              }\n            ).disconnect();\n          } catch (_) {\n          }\n        } else\n          proxy.connect(\n            (onMsg, onHalt) => cb(onMsg, () => {\n              onHalt();\n              start();\n            })\n          );\n      },\n      () => {\n        proxy && setTimeout(start, 0);\n      }\n    );\n  };\n  start();\n  return {\n    send: (msg) => {\n      proxy?.send(msg);\n    },\n    disconnect: () => {\n      proxy?.disconnect();\n      proxy = null;\n    }\n  };\n};\n\nexport { getSyncProvider };\n//# sourceMappingURL=get-sync-provider.mjs.map\n","var WsEvent = /* @__PURE__ */ ((WsEvent2) => {\n  WsEvent2[WsEvent2[\"CONNECTING\"] = 0] = \"CONNECTING\";\n  WsEvent2[WsEvent2[\"CONNECTED\"] = 1] = \"CONNECTED\";\n  WsEvent2[WsEvent2[\"ERROR\"] = 2] = \"ERROR\";\n  WsEvent2[WsEvent2[\"CLOSE\"] = 3] = \"CLOSE\";\n  return WsEvent2;\n})(WsEvent || {});\n\nexport { WsEvent };\n//# sourceMappingURL=types.mjs.map\n","const methods = {};\n[\"v1\", \"unstable\"].forEach((version) => {\n  methods[`chainHead_${version}_follow`] = \"follow\";\n  methods[`chainHead_${version}_unfollow`] = \"unfollow\";\n});\nconst followEnhancer = (base, forceDisconnect) => {\n  const prematureStops = /* @__PURE__ */ new Set();\n  const preOpId = /* @__PURE__ */ new Map();\n  const onGoing = /* @__PURE__ */ new Set();\n  let methodsRequestId;\n  const result = (onMsg) => {\n    const { send, disconnect } = base((fromProvider) => {\n      const parsed = JSON.parse(fromProvider);\n      if (\"id\" in parsed) {\n        const { id, result: result2 } = parsed;\n        if (id === methodsRequestId) {\n          methodsRequestId = void 0;\n          if (result2 && !result2.methods.some((x) => {\n            const [group, , name] = x.split(\"_\");\n            return group === \"chainHead\" && name === \"follow\";\n          })) {\n            onMsg(fromProvider);\n            forceDisconnect();\n            return;\n          }\n        }\n        const msg = preOpId.get(id);\n        if (msg) {\n          preOpId.delete(id);\n          if (prematureStops.has(result2)) {\n            prematureStops.delete(result2);\n            return;\n          }\n          onGoing.add(result2);\n          const currentSize = onGoing.size + preOpId.size;\n          if (currentSize > 2)\n            console.warn(\n              `Too many chainHead follow subscriptions (${currentSize})`\n            );\n          else if (parsed.error) {\n            console.warn(`chainHead follow failed on the ${currentSize} sub`);\n            forceDisconnect();\n            preOpId.set(id, msg);\n            send(msg);\n            return;\n          }\n        }\n      } else {\n        const { subscription, result: result2 } = parsed.params;\n        if (result2?.event === \"stop\") {\n          if (onGoing.has(subscription)) onGoing.delete(subscription);\n          else prematureStops.add(subscription);\n        }\n      }\n      onMsg(fromProvider);\n    });\n    return {\n      send(toProvider) {\n        const parsed = JSON.parse(toProvider);\n        if (parsed.method === \"rpc_methods\") methodsRequestId = parsed.id;\n        const method = methods[parsed.method];\n        if (method === \"follow\") {\n          preOpId.set(parsed.id, toProvider);\n        } else if (method === \"unfollow\") {\n          onGoing.delete(parsed.params[0]);\n        }\n        send(toProvider);\n      },\n      disconnect\n    };\n  };\n  return Object.assign(result, {\n    cleanup: () => {\n      prematureStops.clear();\n      preOpId.clear();\n      onGoing.clear();\n    }\n  });\n};\n\nexport { followEnhancer };\n//# sourceMappingURL=follow-enhancer.mjs.map\n","import { getSyncProvider } from '@polkadot-api/json-rpc-provider-proxy';\nimport { WsEvent } from './types.mjs';\nimport { followEnhancer } from './follow-enhancer.mjs';\n\nconst timeoutError = {\n  type: WsEvent.ERROR,\n  event: { type: \"timeout\" }\n};\nconst noop = () => {\n};\nconst mapEndpoints = (endpoints) => endpoints.map((x) => typeof x === \"string\" ? [x] : [x.uri, x.protocol]);\nconst getInternalWsProvider = (WebsocketClass) => {\n  return (...args) => {\n    let endpoints = [];\n    let onStatusChanged = noop;\n    let timeout = 3500;\n    const [firstArg] = args;\n    if (args.length === 1 && typeof firstArg === \"object\" && !Array.isArray(firstArg)) {\n      endpoints = mapEndpoints(firstArg.endpoints);\n      onStatusChanged = firstArg.onStatusChanged ?? noop;\n      timeout = firstArg.timeout ?? timeout;\n    } else {\n      if (typeof args[1] === \"function\")\n        onStatusChanged = args[1];\n      if (Array.isArray(firstArg)) endpoints = mapEndpoints(firstArg);\n      else {\n        endpoints = [[firstArg]];\n        if (args[1] && args[1] !== onStatusChanged)\n          endpoints[0][1] = args[1];\n        if (args[2]) onStatusChanged = args[2];\n      }\n    }\n    let idx = 0;\n    let status;\n    let switchTo = null;\n    let disconnect = noop;\n    let outerCleanup = noop;\n    const result = followEnhancer(\n      getSyncProvider(async () => {\n        const [uri, protocols] = switchTo || endpoints[idx++ % endpoints.length];\n        switchTo = null;\n        const socket = new WebsocketClass(uri, protocols);\n        const forceSocketClose = () => {\n          try {\n            socket.addEventListener(\"error\", noop, { once: true });\n            socket.close();\n          } catch {\n          }\n        };\n        onStatusChanged(\n          status = {\n            type: WsEvent.CONNECTING,\n            uri,\n            protocols\n          }\n        );\n        await new Promise((resolve, reject) => {\n          const onOpen = () => {\n            initialCleanup();\n            resolve();\n          };\n          const onError = (e) => {\n            initialCleanup();\n            if (e == null) forceSocketClose();\n            console.error(\n              `Unable to connect to ${uri}${protocols ? \", protocols: \" + protocols : \"\"}`\n            );\n            onStatusChanged(\n              status = {\n                type: e ? WsEvent.ERROR : WsEvent.CLOSE,\n                event: e\n              }\n            );\n            setTimeout(reject, e ? 300 : 0, e);\n          };\n          const timeoutToken = timeout !== Infinity ? setTimeout(() => {\n            initialCleanup();\n            forceSocketClose();\n            onStatusChanged(status = timeoutError);\n            reject(timeoutError.event);\n          }, timeout) : void 0;\n          const initialCleanup = () => {\n            clearTimeout(timeoutToken);\n            socket.removeEventListener(\"error\", onError);\n            socket.removeEventListener(\"open\", onOpen);\n          };\n          socket.addEventListener(\"open\", onOpen);\n          socket.addEventListener(\"error\", onError);\n          disconnect = () => {\n            onError(null);\n          };\n        });\n        onStatusChanged(\n          status = {\n            type: WsEvent.CONNECTED,\n            uri,\n            protocols\n          }\n        );\n        return (onMessage, onHalt) => {\n          const _onMessage = (e) => {\n            if (typeof e.data === \"string\") onMessage(e.data);\n          };\n          const innerHalt = (reason) => (e) => {\n            console.warn(`WS halt (${reason})`);\n            onStatusChanged(\n              status = {\n                type: reason,\n                event: e\n              }\n            );\n            onHalt();\n          };\n          const onError = innerHalt(WsEvent.ERROR);\n          const onClose = innerHalt(WsEvent.CLOSE);\n          socket.addEventListener(\"message\", _onMessage);\n          socket.addEventListener(\"error\", onError);\n          socket.addEventListener(\"close\", onClose);\n          disconnect = (withHalt) => {\n            outerCleanup();\n            disconnect = noop;\n            socket.removeEventListener(\"message\", _onMessage);\n            socket.removeEventListener(\"error\", onError);\n            socket.removeEventListener(\"close\", onClose);\n            forceSocketClose();\n            if (withHalt) onClose({});\n          };\n          return {\n            send: (msg) => {\n              socket.send(msg);\n            },\n            disconnect\n          };\n        };\n      }),\n      () => {\n        switchFn();\n      }\n    );\n    outerCleanup = result.cleanup;\n    delete result.cleanup;\n    const switchFn = (...args2) => {\n      if (status.type === WsEvent.CLOSE) return;\n      if (args2.length) switchTo = args2;\n      if (status.type !== WsEvent.ERROR) disconnect(true);\n    };\n    return Object.assign(result, { switch: switchFn, getStatus: () => status });\n  };\n};\n\nexport { getInternalWsProvider };\n//# sourceMappingURL=ws-provider.mjs.map\n","import { WebSocket } from 'ws';\nimport { getInternalWsProvider } from './ws-provider.mjs';\nexport { WsEvent } from './types.mjs';\n\nclass WS extends WebSocket {\n  close() {\n    this.terminate();\n  }\n}\nconst getWsProvider = getInternalWsProvider(\n  WS\n);\n\nexport { getWsProvider };\n//# sourceMappingURL=node.mjs.map\n","import {\n  kusama,\n  kah,\n  kbh,\n  kpl,\n  kct,\n  polkadot,\n  pah,\n  pbh,\n  pcl,\n  pct,\n  ppl,\n  westend,\n  wah,\n  wbh,\n  wcl,\n  wpl,\n  wct,\n} from \"@polkadot-api/descriptors\"\nimport {\n  TDescriptors,\n  TDescriptorsAssetHub,\n  TDescriptorsKusama,\n  TDescriptorsPolkadot,\n  TDescriptorsRelay,\n  TDescriptorsWestend,\n} from \"./types\"\n\nexport const DESCRIPTORS_RELAY: TDescriptorsRelay = {\n  polkadot,\n  kusama,\n  westend,\n}\n\nexport const DESCRIPTORS_ASSET_HUB: TDescriptorsAssetHub = {\n  kah,\n  wah,\n  pah,\n}\n\n// TODO add other system chains\nexport const DESCRIPTORS: TDescriptors = {\n  polkadot,\n  kusama,\n  westend,\n  kah,\n  wah,\n  pah,\n  pbh,\n  pcl,\n  pct,\n  ppl,\n  kbh,\n  kpl,\n  wbh,\n  wpl,\n  wcl,\n  kct,\n  wct,\n}\n\nexport const DESCRIPTORS_POLKADOT: TDescriptorsPolkadot = {\n  polkadot,\n  pah,\n  pbh,\n  pcl,\n  pct,\n  ppl,\n}\n\nexport const DESCRIPTORS_KUSAMA: TDescriptorsKusama = {\n  kusama,\n  kah,\n  kbh,\n  kct,\n  kpl,\n}\n\nexport const DESCRIPTORS_WESTEND: TDescriptorsWestend = {\n  westend,\n  wah,\n  wbh,\n  wcl,\n  wpl,\n  wct,\n}\n","import { CompatibilityLevel, SS58String } from \"polkadot-api\"\nimport { NativeBalanceSdkTypedApi } from \"./descriptors\"\nimport { ChainConnector } from \"..\"\n\nexport const system_getAccountBalance = async (\n  chain: ChainConnector,\n  typedApi: NativeBalanceSdkTypedApi,\n  account: SS58String[],\n): Promise<{\n  free: bigint\n  reserved: bigint\n  frozen: bigint\n}> => {\n  if (!chain.pallets.includes(\"System\")) {\n    throw new Error(\"No System pallet found\")\n  }\n  if (account.length === 0) {\n    throw new Error(\"No account provided\")\n  }\n\n  const query = typedApi.query.System.Account\n\n  const balance = query.isCompatible(\n    CompatibilityLevel.BackwardsCompatible,\n    chain.compatibilityToken,\n  )\n    ? await query.getValues(account.map((a) => [a]))\n    : []\n  return balance.reduce(\n    (acc, b) => {\n      const { free, reserved, frozen } = b.data\n      return {\n        free: acc.free + BigInt(free),\n        reserved: acc.reserved + BigInt(reserved),\n        frozen: acc.frozen + BigInt(frozen),\n      }\n    },\n    {\n      free: BigInt(0),\n      reserved: BigInt(0),\n      frozen: BigInt(0),\n    },\n  )\n}\n","import { CompatibilityLevel, SS58String } from \"polkadot-api\"\nimport { NativeBalanceSdkTypedApi } from \"./descriptors\"\nimport { ChainConnector } from \"..\"\n\nexport const balances_getAccountBalance = async (\n  chain: ChainConnector,\n  typedApi: NativeBalanceSdkTypedApi,\n  account: SS58String[],\n): Promise<{\n  free: bigint\n  reserved: bigint\n  frozen: bigint\n}> => {\n  if (!chain.pallets.includes(\"Balances\")) {\n    throw new Error(\"No Balances pallet found\")\n  }\n  if (account.length === 0) {\n    throw new Error(\"No account provided\")\n  }\n  const query = typedApi.query.Balances.Account\n\n  const balance = query.isCompatible(\n    CompatibilityLevel.BackwardsCompatible,\n    chain.compatibilityToken,\n  )\n    ? await query.getValues(account.map((a) => [a]))\n    : []\n\n  return balance.reduce(\n    (acc, b) => {\n      const { free, reserved, frozen } = b\n      return {\n        free: acc.free + BigInt(free),\n        reserved: acc.reserved + BigInt(reserved),\n        frozen: acc.frozen + BigInt(frozen),\n      }\n    },\n    {\n      free: BigInt(0),\n      reserved: BigInt(0),\n      frozen: BigInt(0),\n    },\n  )\n}\n","import {\n  CompatibilityLevel,\n  CompatibilityToken,\n  PolkadotClient,\n  SS58String,\n} from \"polkadot-api\"\nimport { ApiOf, ChainAsset, ChainId, Descriptors, TChain } from \"./types\"\nimport { DESCRIPTORS } from \"./constants\"\nimport {\n  AllAssetsSdkTypedApi,\n  NativeBalanceSdkTypedApi,\n} from \"./pallets/descriptors\"\nimport { balances_getAccountBalance, system_getAccountBalance } from \"./pallets\"\n// import { NativeBalanceSdkTypedApi } from \"./descriptors/nativeBalanceDescriptors\"\n\nexport * from \"./types\"\nexport * from \"./pallets\"\nexport * from \"./constants\"\n\nexport class ChainConnector {\n  private static instance: ChainConnector\n  client: PolkadotClient\n  chainInfo: TChain\n  pallets: string[] = []\n  api: ApiOf<ChainId>\n  descriptors: Descriptors<ChainId>\n  compatibilityToken: CompatibilityToken\n  SS58Prefix: number\n  asset: ChainAsset\n\n  protected constructor(\n    info: TChain,\n    client: PolkadotClient,\n    api: ApiOf<ChainId>,\n    compatibilityToken: CompatibilityToken,\n    SS58Prefix: number,\n    asset: ChainAsset,\n    pallets: string[],\n  ) {\n    this.chainInfo = info\n    this.client = client\n    this.api = api\n    this.pallets = pallets\n    this.descriptors = DESCRIPTORS[info.id as ChainId]\n    this.SS58Prefix = SS58Prefix\n    this.compatibilityToken = compatibilityToken\n    this.asset = asset\n  }\n\n  static getInstance(): ChainConnector | undefined {\n    if (!this.instance) {\n      return undefined\n    }\n    return this.instance\n  }\n\n  static async init(\n    info: TChain,\n    client: PolkadotClient,\n  ): Promise<ChainConnector> {\n    const typedApi = client.getTypedApi(DESCRIPTORS[info.id as ChainId])\n    const chainInfo = await ChainConnector.getInitChainInfo(\n      client,\n      typedApi,\n      DESCRIPTORS[info.id as ChainId],\n    )\n\n    this.instance = new ChainConnector(\n      info,\n      client,\n      typedApi,\n      chainInfo.compatibilityToken,\n      chainInfo.SS58Prefix,\n      chainInfo.asset,\n      chainInfo.pallets,\n    )\n\n    return this.instance\n  }\n\n  async getBalances(): Promise<string> {\n    return \"\"\n  }\n  async getBlockHash(): Promise<string> {\n    return \"\"\n  }\n\n  async balanceOf(account: SS58String[]): Promise<{\n    free: bigint\n    reserved: bigint\n    frozen: bigint\n  }> {\n    if (\n      !this.pallets.includes(\"Balances\") &&\n      !this.pallets.includes(\"System\")\n    ) {\n      return {\n        free: 0n,\n        reserved: 0n,\n        frozen: 0n,\n      }\n    }\n    const api = this.client.getTypedApi(\n      this.descriptors,\n    ) as unknown as NativeBalanceSdkTypedApi\n\n    const [system, balances] = await Promise.allSettled([\n      // TODO: add checks for where the balances could be locked\n      system_getAccountBalance(this, api, account),\n      balances_getAccountBalance(this, api, account),\n    ])\n\n    // if every account checked does not have reserved/frozen/locked balance then skip checks and retur\n\n    if (system.status === \"rejected\" && balances.status === \"rejected\") {\n      throw new Error(\n        `Failed to get balances: ${system.reason}, ${balances.reason}`,\n      )\n    }\n\n    // give precedence to system pallet\n    const systemBalance = system.status === \"fulfilled\" ? system.value : null\n    const balancesValue =\n      balances.status === \"fulfilled\" ? balances.value : null\n\n    const accountBalance = {\n      free: systemBalance?.free || balancesValue?.free || 0n,\n      reserved: systemBalance?.reserved || balancesValue?.reserved || 0n,\n      frozen: systemBalance?.frozen || balancesValue?.frozen || 0n,\n    }\n\n    // const possibleLockingPallets = [\n    //   \"Balances\",\n    //   \"Staking\",\n    //   \"Democracy\",\n    //   \"Vesting\",\n    //   \"Conviction\",\n    //   \"Crowdloan\",\n    //   \"Assets\",\n    // ]\n    // const possibleFreezesPallets = [\"Balances\", \"ForeignAssets\", \"Assets\"]\n\n    return accountBalance\n  }\n\n  async getAssets() {\n    const api = this.client.getTypedApi(\n      this.descriptors,\n    ) as unknown as AllAssetsSdkTypedApi\n\n    const queryAssets = api.query.Assets.Asset\n    const queryPoolAssets = api.query.PoolAssets.Asset\n    const [assets, pool] = await Promise.allSettled([\n      this.pallets.includes(\"Assets\") &&\n      queryAssets.isCompatible(\n        CompatibilityLevel.BackwardsCompatible,\n        this.compatibilityToken,\n      )\n        ? api.query.Assets.Asset.getEntries()\n        : [],\n      this.pallets.includes(\"PoolAssets\") &&\n      queryPoolAssets.isCompatible(\n        CompatibilityLevel.BackwardsCompatible,\n        this.compatibilityToken,\n      )\n        ? api.query.PoolAssets.Asset.getEntries()\n        : [],\n    ])\n\n    return {\n      assets: assets.status === \"fulfilled\" ? assets.value : [],\n      pool: pool.status === \"fulfilled\" ? pool.value : [],\n    }\n  }\n\n  static async getInitChainInfo(\n    client: PolkadotClient,\n    typedApi: ApiOf<ChainId>,\n    descriptors: Descriptors<ChainId>,\n  ): Promise<{\n    SS58Prefix: number\n    compatibilityToken: CompatibilityToken\n    asset: ChainAsset\n    pallets: string[]\n  }> {\n    const [\n      { name, properties },\n      SS58Prefix,\n      compatibilityToken,\n      wrappedStorage,\n    ] = await Promise.all([\n      client.getChainSpecData(),\n      typedApi.constants.System.SS58Prefix(),\n      typedApi.compatibilityToken,\n      descriptors.descriptors,\n    ])\n\n    return {\n      SS58Prefix,\n      compatibilityToken,\n      asset: {\n        decimals: properties.tokenDecimals,\n        name: name,\n        symbol: properties.tokenSymbol,\n      },\n      pallets: Object.keys(wrappedStorage.storage),\n    }\n  }\n}\n","import { PolkadotClient } from \"polkadot-api\"\nimport { ChainConnector } from \"../chains\"\nimport { ChainId, TChain } from \"../chains/types\"\n\nexport class ChainRegistry {\n  private static registry = new Map<string, ChainConnector>()\n\n  static async getOrCreate<T extends ChainConnector>(\n    info: TChain,\n    client?: PolkadotClient,\n  ) {\n    if (this.registry.has(info.id)) {\n      return this.registry.get(info.id)! as T\n    }\n\n    if (!client) {\n      throw new Error(\"Client is required to create a new chain\")\n    }\n\n    const chain = ChainConnector.init(info, client)\n\n    return chain\n  }\n\n  static get(chainName: string): ChainConnector | undefined {\n    return this.registry.get(chainName)\n  }\n\n  static listChains(): string[] {\n    return [...this.registry.keys()]\n  }\n\n  static removeChain(chianId: ChainId) {\n    this.registry.get(chianId)?.client.destroy()\n    return this.registry.delete(chianId)\n  }\n\n  static clear() {\n    this.registry.forEach((chain) => {\n      return chain.client.destroy()\n    })\n\n    return this.registry.clear()\n  }\n}\n","import { Client } from \"polkadot-api/smoldot\"\nimport { ChainId, ChainIdRelay } from \"../chains/types\"\nimport { NetworkConnector } from \"./types\"\nimport { WellKnownChains } from \"./utils\"\nimport { createClient } from \"polkadot-api\"\nimport { withPolkadotSdkCompat } from \"polkadot-api/polkadot-sdk-compat\"\nimport { getWsProvider as NodeWsProvider } from \"polkadot-api/ws-provider/node\"\n// import { getWsProvider as WebWsProvider } from \"polkadot-api/ws-provider/web\"\nimport { ChainRegistry } from \"../registry/ChainRegistry\"\n\n// TODO generate instance with a client depening on network and type\n\nexport class WsHubConnector extends NetworkConnector {\n  private static instances = new Map<string, WsHubConnector>()\n\n  private status = \"disconnected\"\n\n  protected constructor(network: ChainIdRelay, client?: Client) {\n    super(network, client)\n  }\n\n  static getType(): string {\n    return \"websocket\"\n  }\n\n  async connect(): Promise<void> {\n    // load chains in registry and return\n    if (this.status === \"connected\" && this.chains.size > 0) {\n      return\n    }\n\n    await this.loadChains()\n    this.status = \"connected\"\n    return\n  }\n\n  async loadChains(): Promise<string[]> {\n    // load chains from the registry\n\n    // get all chains for the network\n    const chains = Object.entries(WellKnownChains).filter(([, val]) => {\n      return val.network === this.network\n    })\n\n    for (const [chainId, { info }] of chains) {\n      if (!info.wsUrl.length) {\n        console.log(\"No ws endpoints found for chain\")\n        continue\n      }\n      // const wsProvider =\n      //   typeof window === \"undefined\"\n      //     ? NodeWsProvider(info.wsUrl)\n      //     : WebWsProvider(info.wsUrl)\n\n      const chainClient = createClient(\n        withPolkadotSdkCompat(NodeWsProvider(info.wsUrl)),\n      )\n      // create a client for the chain\n      const chainConnector = await ChainRegistry.getOrCreate(info, chainClient)\n      this.chains.set(chainId as ChainId, chainConnector)\n    }\n    return Array.from(this.chains.keys())\n  }\n\n  async disconnect(): Promise<void> {\n    console.log(`[${this.network}] Disconnecting Substrate Connect...`)\n\n    if (this.status === \"disconnected\" && this.chains.size === 0) {\n      return\n    }\n    // destroy client and chains\n    this.client?.terminate()\n    this.chains.forEach((chain) => {\n      ChainRegistry.removeChain(chain.chainInfo.id)\n    })\n\n    this.status = \"disconnected\"\n  }\n\n  getStatus(): string {\n    return this.status\n  }\n\n  static getInstance(network: ChainIdRelay): WsHubConnector {\n    if (!this.instances.has(network)) {\n      this.instances.set(network, new WsHubConnector(network))\n    }\n    return this.instances.get(network)!\n  }\n}\n","// Smoldot\n// Copyright (C) 2019-2022  Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Thrown in case of a problem when initializing the chain.\n */\nexport class AddChainError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AddChainError\";\n    }\n}\n/**\n * Thrown in case the API user tries to use a chain or client that has already been destroyed.\n */\nexport class AlreadyDestroyedError extends Error {\n    constructor() {\n        super();\n        this.name = \"AlreadyDestroyedError\";\n    }\n}\n/**\n * Thrown when trying to send a JSON-RPC message to a chain whose JSON-RPC system hasn't been\n * enabled.\n */\nexport class JsonRpcDisabledError extends Error {\n    constructor() {\n        super();\n        this.name = \"JsonRpcDisabledError\";\n    }\n}\n/**\n * Thrown in case the underlying client encounters an unexpected crash.\n *\n * This is always an internal bug in smoldot and is never supposed to happen.\n */\nexport class CrashError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\n/**\n * Thrown in case the buffer of JSON-RPC requests is full and cannot accept any more request.\n */\nexport class QueueFullError extends Error {\n    constructor() {\n        super(\"JSON-RPC requests queue is full\");\n    }\n}\n","// Smoldot\n// Copyright (C) 2019-2022  Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nexport function utf8BytesToString(buffer, offset, length) {\n    checkRange(buffer, offset, length);\n    // The `TextDecoder` API is supported by all major browsers and by NodeJS.\n    // <https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder>\n    return new TextDecoder().decode(buffer.slice(offset, offset + length));\n}\nexport function readUInt8(buffer, offset) {\n    checkRange(buffer, offset, 1);\n    return buffer[offset];\n}\nexport function readUInt16BE(buffer, offset) {\n    checkRange(buffer, offset, 2);\n    return ((buffer[offset] << 8) | buffer[offset + 1]);\n}\nexport function readUInt32LE(buffer, offset) {\n    checkRange(buffer, offset, 4);\n    return (buffer[offset] | (buffer[offset + 1] << 8) | (buffer[offset + 2] << 16)) + (buffer[offset + 3] * 0x1000000);\n}\n/**\n * Sets the value of a given byte in the buffer.\n *\n * This function is equivalent to `buffer[offset] = value`, except that an exception is thrown\n * if `offset` is out of range.\n */\nexport function writeUInt8(buffer, offset, value) {\n    checkRange(buffer, offset, 1);\n    buffer[offset] = value & 0xff;\n}\nexport function writeUInt32LE(buffer, offset, value) {\n    checkRange(buffer, offset, 4);\n    buffer[offset + 3] = (value >>> 24) & 0xff;\n    buffer[offset + 2] = (value >>> 16) & 0xff;\n    buffer[offset + 1] = (value >>> 8) & 0xff;\n    buffer[offset] = value & 0xff;\n}\nexport function writeUInt64LE(buffer, offset, value) {\n    checkRange(buffer, offset, 8);\n    buffer[offset + 7] = Number((value >> BigInt(56)) & BigInt(0xff));\n    buffer[offset + 6] = Number((value >> BigInt(48)) & BigInt(0xff));\n    buffer[offset + 5] = Number((value >> BigInt(40)) & BigInt(0xff));\n    buffer[offset + 4] = Number((value >> BigInt(32)) & BigInt(0xff));\n    buffer[offset + 3] = Number((value >> BigInt(24)) & BigInt(0xff));\n    buffer[offset + 2] = Number((value >> BigInt(16)) & BigInt(0xff));\n    buffer[offset + 1] = Number((value >> BigInt(8)) & BigInt(0xff));\n    buffer[offset] = Number(value & BigInt(0xff));\n}\nfunction checkRange(buffer, offset, length) {\n    if (!Number.isInteger(offset) || offset < 0)\n        throw new RangeError();\n    if (offset + length > buffer.length)\n        throw new RangeError();\n}\n","// Smoldot\n// Copyright (C) 2019-2022  Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport * as buffer from './buffer.js';\n/**\n * Starts a new instance using the given configuration.\n *\n * Even though this function doesn't do anything asynchronous, it needs to be asynchronous due to\n * the fact that `WebAssembly.instantiate` is for some reason asynchronous.\n *\n * After this function returns, the execution of CPU-heavy tasks of smoldot will happen\n * asynchronously in the background.\n *\n * This instance is low-level in the sense that invalid input can lead to crashes and that input\n * isn't sanitized. In other words, you know what you're doing.\n */\nexport function startLocalInstance(config, wasmModule, eventCallback) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const state = {\n            instance: null,\n            currentTask: null,\n            bufferIndices: new Array(),\n            advanceExecutionPromise: null,\n            onShutdownExecutorOrWasmPanic: () => { }\n        };\n        const smoldotJsBindings = {\n            // Must exit with an error. A human-readable message can be found in the WebAssembly\n            // memory in the given buffer.\n            panic: (ptr, len) => {\n                const instance = state.instance;\n                state.instance = null;\n                ptr >>>= 0;\n                len >>>= 0;\n                const message = buffer.utf8BytesToString(new Uint8Array(instance.exports.memory.buffer), ptr, len);\n                eventCallback({ ty: \"wasm-panic\", message, currentTask: state.currentTask });\n                state.onShutdownExecutorOrWasmPanic();\n                state.onShutdownExecutorOrWasmPanic = () => { };\n                throw new Error();\n            },\n            chain_initialized: (chainId, errorMsgPtr, errorMsgLen) => {\n                const instance = state.instance;\n                const mem = new Uint8Array(instance.exports.memory.buffer);\n                errorMsgPtr >>>= 0;\n                errorMsgLen >>>= 0;\n                if (errorMsgPtr === 0) {\n                    eventCallback({ ty: \"add-chain-result\", chainId, success: true });\n                }\n                else {\n                    const errorMsg = buffer.utf8BytesToString(mem, errorMsgPtr, errorMsgLen);\n                    eventCallback({ ty: \"add-chain-result\", chainId, success: false, error: errorMsg });\n                }\n            },\n            random_get: (ptr, len) => {\n                const instance = state.instance;\n                ptr >>>= 0;\n                len >>>= 0;\n                const baseBuffer = new Uint8Array(instance.exports.memory.buffer)\n                    .subarray(ptr, ptr + len);\n                for (let iter = 0; iter < len; iter += 65536) {\n                    // `baseBuffer.subarray` automatically saturates at the end of the buffer\n                    config.getRandomValues(baseBuffer.subarray(iter, iter + 65536));\n                }\n            },\n            unix_timestamp_us: () => {\n                const value = Math.floor(Date.now());\n                if (value < 0)\n                    throw new Error(\"UNIX timestamp inferior to 0\");\n                return BigInt(value) * BigInt(1000);\n            },\n            monotonic_clock_us: () => {\n                const nowMs = config.performanceNow();\n                const nowMsInt = Math.floor(nowMs);\n                const now = BigInt(nowMsInt) * BigInt(1000) +\n                    BigInt(Math.floor(((nowMs - nowMsInt) * 1000)));\n                return now;\n            },\n            buffer_size: (bufferIndex) => {\n                const buf = state.bufferIndices[bufferIndex];\n                return buf.byteLength;\n            },\n            buffer_copy: (bufferIndex, targetPtr) => {\n                const instance = state.instance;\n                targetPtr = targetPtr >>> 0;\n                const buf = state.bufferIndices[bufferIndex];\n                new Uint8Array(instance.exports.memory.buffer).set(buf, targetPtr);\n            },\n            advance_execution_ready: () => {\n                if (state.advanceExecutionPromise)\n                    state.advanceExecutionPromise();\n                state.advanceExecutionPromise = null;\n            },\n            // Used by the Rust side to notify that a JSON-RPC response or subscription notification\n            // is available in the queue of JSON-RPC responses.\n            json_rpc_responses_non_empty: (chainId) => {\n                eventCallback({ ty: \"json-rpc-responses-non-empty\", chainId });\n            },\n            // Used by the Rust side to emit a log entry.\n            // See also the `max_log_level` parameter in the configuration.\n            log: (level, targetPtr, targetLen, messagePtr, messageLen) => {\n                const instance = state.instance;\n                targetPtr >>>= 0;\n                targetLen >>>= 0;\n                messagePtr >>>= 0;\n                messageLen >>>= 0;\n                const mem = new Uint8Array(instance.exports.memory.buffer);\n                let target = buffer.utf8BytesToString(mem, targetPtr, targetLen);\n                let message = buffer.utf8BytesToString(mem, messagePtr, messageLen);\n                eventCallback({ ty: \"log\", level, message, target });\n            },\n            // Must call `timer_finished` after the given number of milliseconds has elapsed.\n            start_timer: (ms) => {\n                const instance = state.instance;\n                // In both NodeJS and browsers, if `setTimeout` is called with a value larger than\n                // 2147483647, the delay is for some reason instead set to 1.\n                // As mentioned in the documentation of `start_timer`, it is acceptable to end the\n                // timer before the given number of milliseconds has passed.\n                if (ms > 2147483647)\n                    ms = 2147483647;\n                // In browsers, `setTimeout` works as expected when `ms` equals 0. However, NodeJS\n                // requires a minimum of 1 millisecond (if `0` is passed, it is automatically replaced\n                // with `1`) and wants you to use `setImmediate` instead.\n                if (ms < 1 && typeof setImmediate === \"function\") {\n                    setImmediate(() => {\n                        if (!state.instance)\n                            return;\n                        try {\n                            instance.exports.timer_finished();\n                        }\n                        catch (_error) { }\n                    });\n                }\n                else {\n                    setTimeout(() => {\n                        if (!state.instance)\n                            return;\n                        try {\n                            instance.exports.timer_finished();\n                        }\n                        catch (_error) { }\n                    }, ms);\n                }\n            },\n            // Must indicate whether the given connection type is supported.\n            connection_type_supported: (ty) => {\n                // TODO: consider extracting config options so user can't change the fields dynamically\n                switch (ty) {\n                    case 0:\n                    case 1:\n                    case 2: {\n                        return config.forbidTcp ? 0 : 1;\n                    }\n                    case 4:\n                    case 5:\n                    case 6: {\n                        return (config.forbidWs || config.forbidNonLocalWs) ? 0 : 1;\n                    }\n                    case 7: {\n                        return config.forbidWs ? 0 : 1;\n                    }\n                    case 14: {\n                        return config.forbidWss ? 0 : 1;\n                    }\n                    case 16:\n                    case 17: {\n                        return config.forbidWebRtc ? 0 : 1;\n                    }\n                    default:\n                        // Indicates a bug somewhere.\n                        throw new Error(\"Invalid connection type passed to `connection_type_supported`\");\n                }\n            },\n            // Must create a new connection object. This implementation stores the created object in\n            // `connections`.\n            connection_new: (connectionId, addrPtr, addrLen) => {\n                const instance = state.instance;\n                const mem = new Uint8Array(instance.exports.memory.buffer);\n                addrPtr >>>= 0;\n                addrLen >>>= 0;\n                let address;\n                switch (buffer.readUInt8(mem, addrPtr)) {\n                    case 0:\n                    case 1:\n                    case 2: {\n                        const port = buffer.readUInt16BE(mem, addrPtr + 1);\n                        const hostname = buffer.utf8BytesToString(mem, addrPtr + 3, addrLen - 3);\n                        address = { ty: \"tcp\", port, hostname };\n                        break;\n                    }\n                    case 4:\n                    case 6: {\n                        const port = buffer.readUInt16BE(mem, addrPtr + 1);\n                        const hostname = buffer.utf8BytesToString(mem, addrPtr + 3, addrLen - 3);\n                        address = { ty: \"websocket\", url: \"ws://\" + hostname + \":\" + port };\n                        break;\n                    }\n                    case 5: {\n                        const port = buffer.readUInt16BE(mem, addrPtr + 1);\n                        const hostname = buffer.utf8BytesToString(mem, addrPtr + 3, addrLen - 3);\n                        address = { ty: \"websocket\", url: \"ws://[\" + hostname + \"]:\" + port };\n                        break;\n                    }\n                    case 14: {\n                        const port = buffer.readUInt16BE(mem, addrPtr + 1);\n                        const hostname = buffer.utf8BytesToString(mem, addrPtr + 3, addrLen - 3);\n                        address = { ty: \"websocket\", url: \"wss://\" + hostname + \":\" + port };\n                        break;\n                    }\n                    case 16: {\n                        const targetPort = buffer.readUInt16BE(mem, addrPtr + 1);\n                        const remoteTlsCertificateSha256 = mem.slice(addrPtr + 3, addrPtr + 35);\n                        const targetIp = buffer.utf8BytesToString(mem, addrPtr + 35, addrLen - 35);\n                        address = { ty: \"webrtc\", ipVersion: '4', remoteTlsCertificateSha256, targetIp, targetPort };\n                        break;\n                    }\n                    case 17: {\n                        const targetPort = buffer.readUInt16BE(mem, addrPtr + 1);\n                        const remoteTlsCertificateSha256 = mem.slice(addrPtr + 3, addrPtr + 35);\n                        const targetIp = buffer.utf8BytesToString(mem, addrPtr + 35, addrLen - 35);\n                        address = { ty: \"webrtc\", ipVersion: '6', remoteTlsCertificateSha256, targetIp, targetPort };\n                        break;\n                    }\n                    default:\n                        // Indicates a bug somewhere.\n                        throw new Error(\"Invalid encoded address passed to `connection_new`\");\n                }\n                eventCallback({ ty: \"new-connection\", connectionId, address });\n            },\n            // Must close and destroy the connection object.\n            reset_connection: (connectionId) => {\n                eventCallback({ ty: \"connection-reset\", connectionId });\n            },\n            // Opens a new substream on a multi-stream connection.\n            connection_stream_open: (connectionId) => {\n                eventCallback({ ty: \"connection-stream-open\", connectionId });\n            },\n            // Closes a substream on a multi-stream connection.\n            connection_stream_reset: (connectionId, streamId) => {\n                eventCallback({ ty: \"connection-stream-reset\", connectionId, streamId });\n            },\n            // Must queue the data found in the WebAssembly memory at the given pointer. It is assumed\n            // that this function is called only when the connection is in an open state.\n            stream_send: (connectionId, streamId, ptr, len) => {\n                const instance = state.instance;\n                const mem = new Uint8Array(instance.exports.memory.buffer);\n                ptr >>>= 0;\n                len >>>= 0;\n                const data = new Array();\n                for (let i = 0; i < len; ++i) {\n                    const bufPtr = buffer.readUInt32LE(mem, ptr + 8 * i);\n                    const bufLen = buffer.readUInt32LE(mem, ptr + 8 * i + 4);\n                    data.push(mem.slice(bufPtr, bufPtr + bufLen));\n                }\n                // TODO: docs says the streamId is provided only for multi-stream connections, but here it's always provided\n                eventCallback({ ty: \"stream-send\", connectionId, streamId, data });\n            },\n            stream_send_close: (connectionId, streamId) => {\n                // TODO: docs says the streamId is provided only for multi-stream connections, but here it's always provided\n                eventCallback({ ty: \"stream-send-close\", connectionId, streamId });\n            },\n            current_task_entered: (ptr, len) => {\n                ptr >>>= 0;\n                len >>>= 0;\n                const taskName = buffer.utf8BytesToString(new Uint8Array(state.instance.exports.memory.buffer), ptr, len);\n                state.currentTask = taskName;\n            },\n            current_task_exit: () => {\n                state.currentTask = null;\n            }\n        };\n        // Start the Wasm virtual machine.\n        // The Rust code defines a list of imports that must be fulfilled by the environment. The second\n        // parameter provides their implementations.\n        const result = yield WebAssembly.instantiate(wasmModule, {\n            // The functions with the \"smoldot\" prefix are specific to smoldot.\n            \"smoldot\": smoldotJsBindings,\n        });\n        state.instance = result;\n        // Smoldot requires an initial call to the `init` function in order to do its internal\n        // configuration.\n        state.instance.exports.init(config.maxLogLevel);\n        // Promise that is notified when the `shutdownExecutor` function is called or when a Wasm\n        // panic happens.\n        const shutdownExecutorOrWasmPanicPromise = new Promise((resolve) => state.onShutdownExecutorOrWasmPanic = () => resolve(\"stop\"));\n        (() => __awaiter(this, void 0, void 0, function* () {\n            const cpuRateLimit = config.cpuRateLimit;\n            // In order to avoid calling `setTimeout` too often, we accumulate sleep up until\n            // a certain threshold.\n            let missingSleep = 0;\n            let now = config.performanceNow();\n            while (true) {\n                const whenReadyAgain = new Promise((resolve) => state.advanceExecutionPromise = () => resolve(\"ready\"));\n                if (!state.instance)\n                    break;\n                state.instance.exports.advance_execution();\n                const afterExec = config.performanceNow();\n                const elapsed = afterExec - now;\n                now = afterExec;\n                // In order to enforce the rate limiting, we stop executing for a certain\n                // amount of time.\n                // The base equation here is: `(sleep + elapsed) * rateLimit == elapsed`,\n                // from which the calculation below is derived.\n                const sleep = elapsed * (1.0 / cpuRateLimit - 1.0);\n                missingSleep += sleep;\n                if (missingSleep > 5) {\n                    // `setTimeout` has a maximum value, after which it will overflow. 🤦\n                    // See <https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value>\n                    // While adding a cap technically skews the CPU rate limiting algorithm, we don't\n                    // really care for such extreme values.\n                    if (missingSleep > 2147483646) // Doc says `> 2147483647`, but I don't really trust their pedanticism so let's be safe\n                        missingSleep = 2147483646;\n                    const sleepFinished = new Promise((resolve) => setTimeout(() => resolve(\"timeout\"), missingSleep));\n                    if ((yield Promise.race([sleepFinished, shutdownExecutorOrWasmPanicPromise])) === \"stop\")\n                        break;\n                }\n                if ((yield Promise.race([whenReadyAgain, shutdownExecutorOrWasmPanicPromise])) === \"stop\")\n                    break;\n                const afterWait = config.performanceNow();\n                // `afterWait - now` is equal to how long we've waited for the `setTimeout` callback to\n                // trigger. While in principle `afterWait - now` should be roughly equal to\n                // `missingSleep`, in reality `setTimeout` can take much longer than the parameter\n                // provided. See <https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#timeouts_in_inactive_tabs>.\n                // For this reason, `missingSleep` can become negative here. This is intended.\n                // However, we don't want to accumulate too much sleep. There should be a maximum\n                // amount of time during which the CPU executes without yielding. For this reason, we\n                // add a minimum bound for `missingSleep`.\n                missingSleep -= (afterWait - now);\n                if (missingSleep < -10000)\n                    missingSleep = -10000;\n                now = afterWait;\n            }\n            if (!state.instance)\n                return;\n            eventCallback({ ty: \"executor-shutdown\" });\n        }))();\n        return {\n            request: (request, chainId) => {\n                if (!state.instance)\n                    return 1; // TODO: return a different error code? should be documented\n                state.bufferIndices[0] = new TextEncoder().encode(request);\n                return state.instance.exports.json_rpc_send(0, chainId) >>> 0;\n            },\n            peekJsonRpcResponse: (chainId) => {\n                if (!state.instance)\n                    return null;\n                const responseInfo = state.instance.exports.json_rpc_responses_peek(chainId) >>> 0;\n                // Note that the memory must be created after calling the Wasm function, otherwise\n                // it might be invalidated if it is grown.\n                const mem = new Uint8Array(state.instance.exports.memory.buffer);\n                const ptr = buffer.readUInt32LE(mem, responseInfo) >>> 0;\n                const len = buffer.readUInt32LE(mem, responseInfo + 4) >>> 0;\n                // `len === 0` means \"queue is empty\" according to the API.\n                // In that situation, queue the resolve/reject.\n                if (len !== 0) {\n                    const message = buffer.utf8BytesToString(mem, ptr, len);\n                    state.instance.exports.json_rpc_responses_pop(chainId);\n                    return message;\n                }\n                else {\n                    return null;\n                }\n            },\n            addChain: (chainSpec, databaseContent, potentialRelayChains, disableJsonRpc, jsonRpcMaxPendingRequests, jsonRpcMaxSubscriptions) => {\n                if (!state.instance) {\n                    eventCallback({ ty: \"add-chain-id-allocated\", chainId: 0 });\n                    eventCallback({ ty: \"add-chain-result\", chainId: 0, success: false, error: \"Smoldot has crashed\" });\n                    return;\n                }\n                // The caller is supposed to avoid this situation.\n                console.assert(disableJsonRpc || jsonRpcMaxPendingRequests != 0, \"invalid jsonRpcMaxPendingRequests value passed to local-instance::addChain\");\n                // `add_chain` unconditionally allocates a chain id. If an error occurs, however, this chain\n                // id will refer to an *erroneous* chain. `chain_is_ok` is used below to determine whether it\n                // has succeeeded or not.\n                state.bufferIndices[0] = new TextEncoder().encode(chainSpec);\n                state.bufferIndices[1] = new TextEncoder().encode(databaseContent);\n                const potentialRelayChainsEncoded = new Uint8Array(potentialRelayChains.length * 4);\n                for (let idx = 0; idx < potentialRelayChains.length; ++idx) {\n                    buffer.writeUInt32LE(potentialRelayChainsEncoded, idx * 4, potentialRelayChains[idx]);\n                }\n                state.bufferIndices[2] = potentialRelayChainsEncoded;\n                const chainId = state.instance.exports.add_chain(0, 1, disableJsonRpc ? 0 : jsonRpcMaxPendingRequests, jsonRpcMaxSubscriptions, 2);\n                delete state.bufferIndices[0];\n                delete state.bufferIndices[1];\n                delete state.bufferIndices[2];\n                eventCallback({ ty: \"add-chain-id-allocated\", chainId });\n            },\n            removeChain: (chainId) => {\n                if (!state.instance)\n                    return;\n                state.instance.exports.remove_chain(chainId);\n            },\n            shutdownExecutor: () => {\n                if (!state.instance)\n                    return;\n                const cb = state.onShutdownExecutorOrWasmPanic;\n                state.onShutdownExecutorOrWasmPanic = () => { };\n                cb();\n            },\n            connectionMultiStreamSetHandshakeInfo: (connectionId, info) => {\n                if (!state.instance)\n                    return;\n                const handshakeTy = new Uint8Array(1 + info.localTlsCertificateSha256.length);\n                buffer.writeUInt8(handshakeTy, 0, 0);\n                handshakeTy.set(info.localTlsCertificateSha256, 1);\n                state.bufferIndices[0] = handshakeTy;\n                state.instance.exports.connection_multi_stream_set_handshake_info(connectionId, 0);\n                delete state.bufferIndices[0];\n            },\n            connectionReset: (connectionId, message) => {\n                if (!state.instance)\n                    return;\n                state.bufferIndices[0] = new TextEncoder().encode(message);\n                state.instance.exports.connection_reset(connectionId, 0);\n                delete state.bufferIndices[0];\n            },\n            streamWritableBytes: (connectionId, numExtra, streamId) => {\n                if (!state.instance)\n                    return;\n                state.instance.exports.stream_writable_bytes(connectionId, streamId || 0, numExtra);\n            },\n            streamMessage: (connectionId, message, streamId) => {\n                if (!state.instance)\n                    return;\n                state.bufferIndices[0] = message;\n                state.instance.exports.stream_message(connectionId, streamId || 0, 0);\n                delete state.bufferIndices[0];\n            },\n            streamOpened: (connectionId, streamId, direction) => {\n                if (!state.instance)\n                    return;\n                state.instance.exports.connection_stream_opened(connectionId, streamId, direction === 'outbound' ? 1 : 0);\n            },\n            streamReset: (connectionId, streamId, message) => {\n                if (!state.instance)\n                    return;\n                state.bufferIndices[0] = new TextEncoder().encode(message);\n                state.instance.exports.stream_reset(connectionId, streamId, 0);\n                delete state.bufferIndices[0];\n            },\n        };\n    });\n}\n","// Smoldot\n// Copyright (C) 2023  Pierre Krieger\n// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n// Contains an implementation of `Instance` that is remote.\n//\n// In terms of implementation, the logic is pretty straight forward, with two exceptions:\n//\n// - Connections are tracked on both sides in order to handle situations where one side has\n//   reset a connection or stream but the other is sending messages about this connection/stream.\n//\n// - JSON-RPC requests aren't sent back lazily one at a time. Instead, the client indicates that it\n//   is ready to accept more JSON-RPC responses, after which the server can send responses at any\n//   time and the client queues them locally.\nimport * as instance from './local-instance.js';\n// Implementation note: it is unclear even in the official specification\n// (https://html.spec.whatwg.org/multipage/web-messaging.html) whether both sides of a\n// `MessagePort` should be closed, or if one is enough.\n//\n// It has been noticed that doing `port.postMessage(...); port.close();` doesn't deliver the\n// message on Firefox (but it does on Chrome). The code below takes note of this, and only closes\n// a port upon *receiving* the last possible message. It therefore assumes that closing only one\n// side is enough. It is unclear whether this causes any memory leak.\nexport function connectToInstanceServer(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Send the wasm module and configuration to the server.\n        // Note that we await the `wasmModule` `Promise` here.\n        // If instead we used `wasmModule.then(...)`, the user would be able to start using the\n        // returned instance before the module has been sent to the server.\n        // In order to simplify the implementation, we create new ports and send one of them to\n        // the server. This is necessary so that the server can pause receiving messages while the\n        // instance is being initialized.\n        const { port1: portToServer, port2: serverToClient } = new MessageChannel();\n        const initialPort = config.portToServer;\n        const initialMessage = {\n            wasmModule: yield config.wasmModule,\n            serverToClient,\n            maxLogLevel: config.maxLogLevel,\n            cpuRateLimit: config.cpuRateLimit,\n            forbidWs: config.forbidWs,\n            forbidWss: config.forbidWss,\n            forbidNonLocalWs: config.forbidNonLocalWs,\n            forbidTcp: config.forbidTcp,\n            forbidWebRtc: config.forbidWebRtc\n        };\n        initialPort.postMessage(initialMessage, [serverToClient]);\n        // Note that closing `initialPort` here will lead to the message not being delivered on Firefox\n        // for some reason. It is therefore closed only on shutdown.\n        const state = {\n            jsonRpcResponses: new Map(),\n            connections: new Map(),\n        };\n        portToServer.onmessage = (messageEvent) => {\n            const message = messageEvent.data;\n            // Update some local state.\n            switch (message.ty) {\n                case \"wasm-panic\":\n                case \"executor-shutdown\": {\n                    portToServer.close();\n                    initialPort.close();\n                    break;\n                }\n                case \"add-chain-result\": {\n                    if (message.success) {\n                        state.jsonRpcResponses.set(message.chainId, new Array);\n                        const moreAccepted = { ty: \"accept-more-json-rpc-answers\", chainId: message.chainId };\n                        for (let i = 0; i < 10; ++i)\n                            portToServer.postMessage(moreAccepted);\n                    }\n                    break;\n                }\n                case \"new-connection\": {\n                    state.connections.set(message.connectionId, new Set());\n                    break;\n                }\n                case \"connection-reset\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    state.connections.delete(message.connectionId);\n                    break;\n                }\n                case \"connection-stream-open\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    break;\n                }\n                case \"connection-stream-reset\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    // The stream might have been reset locally in the past.\n                    if (!state.connections.get(message.connectionId).has(message.streamId))\n                        return;\n                    break;\n                }\n                case \"stream-send\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    // The stream might have been reset locally in the past.\n                    if (message.streamId && !state.connections.get(message.connectionId).has(message.streamId))\n                        return;\n                    break;\n                }\n                case \"stream-send-close\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    // The stream might have been reset locally in the past.\n                    if (message.streamId && !state.connections.get(message.connectionId).has(message.streamId))\n                        return;\n                    break;\n                }\n                case \"json-rpc-response\": {\n                    const queue = state.jsonRpcResponses.get(message.chainId);\n                    // The chain might have been removed locally in the past.\n                    if (queue) {\n                        queue.push(message.response);\n                        config.eventCallback({ ty: \"json-rpc-responses-non-empty\", chainId: message.chainId });\n                    }\n                    return;\n                }\n            }\n            config.eventCallback(message);\n        };\n        return {\n            addChain(chainSpec, databaseContent, potentialRelayChains, disableJsonRpc, jsonRpcMaxPendingRequests, jsonRpcMaxSubscriptions) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    const msg = { ty: \"add-chain\", chainSpec, databaseContent, potentialRelayChains, disableJsonRpc, jsonRpcMaxPendingRequests, jsonRpcMaxSubscriptions };\n                    portToServer.postMessage(msg);\n                });\n            },\n            removeChain(chainId) {\n                state.jsonRpcResponses.delete(chainId);\n                const msg = { ty: \"remove-chain\", chainId };\n                portToServer.postMessage(msg);\n            },\n            request(request, chainId) {\n                const msg = { ty: \"request\", chainId, request };\n                portToServer.postMessage(msg);\n                return 0; // TODO: wrong return value\n            },\n            peekJsonRpcResponse(chainId) {\n                const item = state.jsonRpcResponses.get(chainId).shift();\n                if (!item)\n                    return null;\n                const msg = { ty: \"accept-more-json-rpc-answers\", chainId };\n                portToServer.postMessage(msg);\n                return item;\n            },\n            shutdownExecutor() {\n                const msg = { ty: \"shutdown\" };\n                portToServer.postMessage(msg);\n            },\n            connectionReset(connectionId, message) {\n                state.connections.delete(connectionId);\n                const msg = { ty: \"connection-reset\", connectionId, message };\n                portToServer.postMessage(msg);\n            },\n            connectionMultiStreamSetHandshakeInfo(connectionId, info) {\n                const msg = { ty: \"connection-multistream-set-info\", connectionId, info };\n                portToServer.postMessage(msg);\n            },\n            streamMessage(connectionId, message, streamId) {\n                const msg = { ty: \"stream-message\", connectionId, message, streamId };\n                portToServer.postMessage(msg);\n            },\n            streamOpened(connectionId, streamId, direction) {\n                state.connections.get(connectionId).add(streamId);\n                const msg = { ty: \"stream-opened\", connectionId, streamId, direction };\n                portToServer.postMessage(msg);\n            },\n            streamWritableBytes(connectionId, numExtra, streamId) {\n                const msg = { ty: \"stream-writable-bytes\", connectionId, numExtra, streamId };\n                portToServer.postMessage(msg);\n            },\n            streamReset(connectionId, streamId, message) {\n                state.connections.get(connectionId).delete(streamId);\n                const msg = { ty: \"stream-reset\", connectionId, streamId, message };\n                portToServer.postMessage(msg);\n            },\n        };\n    });\n}\n/**\n * Returns a `Promise` that resolves when the instance shuts down. Since the function is also\n * an asynchronous function, the actual return type is `Promise<Promise<void>>`. That is, the\n * outer `Promise` yields once the instance starts, and the inner `Promise` yields once the\n * instance shuts down.\n */\nexport function startInstanceServer(config, initPortToClient) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { serverToClient: portToClient, wasmModule, maxLogLevel, cpuRateLimit, forbidTcp, forbidWs, forbidWss, forbidNonLocalWs, forbidWebRtc } = yield new Promise((resolve) => {\n            initPortToClient.onmessage = (event) => resolve(event.data);\n        });\n        initPortToClient.close();\n        const state = {\n            instance: null,\n            connections: new Map(),\n            acceptedJsonRpcResponses: new Map(),\n        };\n        const eventsCallback = (event) => {\n            switch (event.ty) {\n                case \"add-chain-result\": {\n                    if (event.success) {\n                        state.acceptedJsonRpcResponses.set(event.chainId, 0);\n                    }\n                    break;\n                }\n                case \"executor-shutdown\":\n                case \"wasm-panic\": {\n                    if (state.onExecutorShutdownOrWasmPanic) {\n                        const cb = state.onExecutorShutdownOrWasmPanic;\n                        delete state.onExecutorShutdownOrWasmPanic;\n                        cb();\n                    }\n                    break;\n                }\n                case \"json-rpc-responses-non-empty\": {\n                    // Process this event asynchronously because we can't call into `instance`\n                    // from within the events callback itself.\n                    // TODO: do better than setTimeout?\n                    setTimeout(() => {\n                        const numAccepted = state.acceptedJsonRpcResponses.get(event.chainId);\n                        if (numAccepted === undefined || numAccepted === 0)\n                            return;\n                        const response = state.instance.peekJsonRpcResponse(event.chainId);\n                        if (response) {\n                            state.acceptedJsonRpcResponses.set(event.chainId, numAccepted - 1);\n                            const msg = { ty: \"json-rpc-response\", chainId: event.chainId, response };\n                            portToClient.postMessage(msg);\n                        }\n                    }, 0);\n                    return;\n                }\n                case \"new-connection\": {\n                    state.connections.set(event.connectionId, new Set());\n                    break;\n                }\n                case \"connection-reset\": {\n                    state.connections.delete(event.connectionId);\n                    break;\n                }\n                case \"connection-stream-reset\": {\n                    state.connections.get(event.connectionId).delete(event.streamId);\n                    break;\n                }\n            }\n            const ev = event;\n            portToClient.postMessage(ev);\n        };\n        // We create the `Promise` ahead of time in order to potentially catch potential `wasm-panic`\n        // events as early as during initialization.\n        const execFinishedPromise = new Promise((resolve) => state.onExecutorShutdownOrWasmPanic = resolve);\n        state.instance = yield instance.startLocalInstance(Object.assign({ forbidTcp,\n            forbidWs,\n            forbidNonLocalWs,\n            forbidWss,\n            forbidWebRtc,\n            cpuRateLimit,\n            maxLogLevel }, config), wasmModule, eventsCallback);\n        portToClient.onmessage = (messageEvent) => {\n            const message = messageEvent.data;\n            switch (message.ty) {\n                case \"add-chain\": {\n                    state.instance.addChain(message.chainSpec, message.databaseContent, message.potentialRelayChains, message.disableJsonRpc, message.jsonRpcMaxPendingRequests, message.jsonRpcMaxSubscriptions);\n                    break;\n                }\n                case \"remove-chain\": {\n                    state.acceptedJsonRpcResponses.delete(message.chainId);\n                    state.instance.removeChain(message.chainId);\n                    break;\n                }\n                case \"request\": {\n                    state.instance.request(message.request, message.chainId); // TODO: return value unused\n                    break;\n                }\n                case \"accept-more-json-rpc-answers\": {\n                    const response = state.instance.peekJsonRpcResponse(message.chainId);\n                    if (response) {\n                        const msg = { ty: \"json-rpc-response\", chainId: message.chainId, response };\n                        portToClient.postMessage(msg);\n                    }\n                    else {\n                        const numAccepted = state.acceptedJsonRpcResponses.get(message.chainId);\n                        state.acceptedJsonRpcResponses.set(message.chainId, numAccepted + 1);\n                    }\n                    break;\n                }\n                case \"shutdown\": {\n                    state.instance.shutdownExecutor();\n                    break;\n                }\n                case \"connection-reset\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    state.instance.connectionReset(message.connectionId, message.message);\n                    break;\n                }\n                case \"connection-multistream-set-info\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    state.instance.connectionMultiStreamSetHandshakeInfo(message.connectionId, message.info);\n                    break;\n                }\n                case \"stream-message\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    // The stream might have been reset locally in the past.\n                    if (message.streamId !== undefined && !state.connections.get(message.connectionId).has(message.streamId))\n                        return;\n                    state.instance.streamMessage(message.connectionId, message.message, message.streamId);\n                    break;\n                }\n                case \"stream-opened\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    state.connections.get(message.connectionId).add(message.streamId);\n                    state.instance.streamOpened(message.connectionId, message.streamId, message.direction);\n                    break;\n                }\n                case \"stream-writable-bytes\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    // The stream might have been reset locally in the past.\n                    if (message.streamId !== undefined && !state.connections.get(message.connectionId).has(message.streamId))\n                        return;\n                    state.instance.streamWritableBytes(message.connectionId, message.numExtra, message.streamId);\n                    break;\n                }\n                case \"stream-reset\": {\n                    // The connection might have been reset locally in the past.\n                    if (!state.connections.has(message.connectionId))\n                        return;\n                    // The stream might have been reset locally in the past.\n                    if (!state.connections.get(message.connectionId).has(message.streamId))\n                        return;\n                    state.connections.get(message.connectionId).delete(message.streamId);\n                    state.instance.streamReset(message.connectionId, message.streamId, message.message);\n                    break;\n                }\n            }\n        };\n        return execFinishedPromise;\n    });\n}\n","// Smoldot\n// Copyright (C) 2019-2022  Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport { QueueFullError, AlreadyDestroyedError, AddChainError, JsonRpcDisabledError, CrashError } from '../public-types.js';\nimport * as instance from './local-instance.js';\nimport * as remote from './remote-instance.js';\n// This function is similar to the `start` function found in `index.ts`, except with an extra\n// parameter containing the platform-specific bindings.\n// Contrary to the one within `index.js`, this function is not supposed to be directly used.\nexport function start(options, wasmModule, platformBindings) {\n    const logCallback = options.logCallback || ((level, target, message) => {\n        // The first parameter of the methods of `console` has some printf-like substitution\n        // capabilities. We don't really need to use this, but not using it means that the logs might\n        // not get printed correctly if they contain `%`.\n        if (level <= 1) {\n            console.error(\"[%s] %s\", target, message);\n        }\n        else if (level == 2) {\n            console.warn(\"[%s] %s\", target, message);\n        }\n        else if (level == 3) {\n            console.info(\"[%s] %s\", target, message);\n        }\n        else if (level == 4) {\n            console.debug(\"[%s] %s\", target, message);\n        }\n        else {\n            console.trace(\"[%s] %s\", target, message);\n        }\n    });\n    if (!(wasmModule instanceof Promise)) {\n        wasmModule = Promise.resolve(wasmModule);\n    }\n    // Extract (to make sure the value doesn't change) and sanitize `cpuRateLimit`.\n    let cpuRateLimit = options.cpuRateLimit || 1.0;\n    if (isNaN(cpuRateLimit))\n        cpuRateLimit = 1.0;\n    if (cpuRateLimit > 1.0)\n        cpuRateLimit = 1.0;\n    if (cpuRateLimit < 0.0)\n        cpuRateLimit = 0.0;\n    // This object holds the state of everything.\n    const state = {\n        instance: { status: \"not-created\" },\n        chainIds: new WeakMap(),\n        connections: new Map(),\n        addChainIdAllocations: [],\n        addChainResults: new Map(),\n        onExecutorShutdownOrWasmPanic: () => { },\n        chains: new Map(),\n    };\n    // Callback called during the execution of the instance.\n    const eventCallback = (event) => {\n        switch (event.ty) {\n            case \"wasm-panic\": {\n                console.error(\"Smoldot has panicked\" +\n                    (event.currentTask ? (\" while executing task `\" + event.currentTask + \"`\") : \"\") +\n                    \". This is a bug in smoldot. Please open an issue at \" +\n                    \"https://github.com/smol-dot/smoldot/issues with the following message:\\n\" +\n                    event.message);\n                state.instance = {\n                    status: \"destroyed\",\n                    error: new CrashError(event.message),\n                };\n                state.connections.forEach((connec) => connec.reset());\n                state.connections.clear();\n                for (const addChainResult of state.addChainIdAllocations) {\n                    addChainResult({ success: false, error: \"Smoldot has crashed\" });\n                }\n                state.addChainIdAllocations = [];\n                state.addChainResults.forEach((addChainResult) => {\n                    addChainResult({ success: false, error: \"Smoldot has crashed\" });\n                });\n                state.addChainResults.clear();\n                for (const chain of Array.from(state.chains.values())) {\n                    for (const callback of chain.jsonRpcResponsesPromises) {\n                        callback();\n                    }\n                    chain.jsonRpcResponsesPromises = [];\n                }\n                state.chains.clear();\n                const cb = state.onExecutorShutdownOrWasmPanic;\n                state.onExecutorShutdownOrWasmPanic = () => { };\n                cb();\n                break;\n            }\n            case \"executor-shutdown\": {\n                const cb = state.onExecutorShutdownOrWasmPanic;\n                state.onExecutorShutdownOrWasmPanic = () => { };\n                cb();\n                break;\n            }\n            case \"log\": {\n                logCallback(event.level, event.target, event.message);\n                break;\n            }\n            case \"add-chain-id-allocated\": {\n                const callback = state.addChainIdAllocations.shift();\n                state.addChainResults.set(event.chainId, callback);\n                break;\n            }\n            case \"add-chain-result\": {\n                (state.addChainResults.get(event.chainId))(event);\n                state.addChainResults.delete(event.chainId);\n                break;\n            }\n            case \"json-rpc-responses-non-empty\": {\n                // Notify every single promise found in `jsonRpcResponsesPromises`.\n                const callbacks = state.chains.get(event.chainId).jsonRpcResponsesPromises;\n                while (callbacks.length !== 0) {\n                    (callbacks.shift())();\n                }\n                break;\n            }\n            case \"new-connection\": {\n                const connectionId = event.connectionId;\n                state.connections.set(connectionId, platformBindings.connect({\n                    address: event.address,\n                    onConnectionReset(message) {\n                        if (state.instance.status !== \"ready\")\n                            throw new Error();\n                        state.connections.delete(connectionId);\n                        state.instance.instance.connectionReset(connectionId, message);\n                    },\n                    onMessage(message, streamId) {\n                        if (state.instance.status !== \"ready\")\n                            throw new Error();\n                        state.instance.instance.streamMessage(connectionId, message, streamId);\n                    },\n                    onStreamOpened(streamId, direction) {\n                        if (state.instance.status !== \"ready\")\n                            throw new Error();\n                        state.instance.instance.streamOpened(connectionId, streamId, direction);\n                    },\n                    onMultistreamHandshakeInfo(info) {\n                        if (state.instance.status !== \"ready\")\n                            throw new Error();\n                        state.instance.instance.connectionMultiStreamSetHandshakeInfo(connectionId, info);\n                    },\n                    onWritableBytes(numExtra, streamId) {\n                        if (state.instance.status !== \"ready\")\n                            throw new Error();\n                        state.instance.instance.streamWritableBytes(connectionId, numExtra, streamId);\n                    },\n                    onStreamReset(streamId, message) {\n                        if (state.instance.status !== \"ready\")\n                            throw new Error();\n                        state.instance.instance.streamReset(connectionId, streamId, message);\n                    },\n                }));\n                break;\n            }\n            case \"connection-reset\": {\n                const connection = state.connections.get(event.connectionId);\n                connection.reset();\n                state.connections.delete(event.connectionId);\n                break;\n            }\n            case \"connection-stream-open\": {\n                const connection = state.connections.get(event.connectionId);\n                connection.openOutSubstream();\n                break;\n            }\n            case \"connection-stream-reset\": {\n                const connection = state.connections.get(event.connectionId);\n                connection.reset(event.streamId);\n                break;\n            }\n            case \"stream-send\": {\n                const connection = state.connections.get(event.connectionId);\n                connection.send(event.data, event.streamId);\n                break;\n            }\n            case \"stream-send-close\": {\n                const connection = state.connections.get(event.connectionId);\n                connection.closeSend(event.streamId);\n                break;\n            }\n        }\n    };\n    const portToWorker = options.portToWorker;\n    if (!portToWorker) {\n        // Start a local instance.\n        state.instance = {\n            status: \"not-ready\",\n            whenReady: wasmModule\n                .then((wasmModule) => {\n                return instance.startLocalInstance({\n                    forbidTcp: options.forbidTcp || false,\n                    forbidWs: options.forbidWs || false,\n                    forbidNonLocalWs: options.forbidNonLocalWs || false,\n                    forbidWss: options.forbidWss || false,\n                    forbidWebRtc: options.forbidWebRtc || false,\n                    maxLogLevel: options.maxLogLevel || 3,\n                    cpuRateLimit,\n                    envVars: [],\n                    performanceNow: platformBindings.performanceNow,\n                    getRandomValues: platformBindings.getRandomValues,\n                }, wasmModule.wasm, eventCallback);\n            })\n                .then((instance) => {\n                // The Wasm instance might have been crashed before this callback is called.\n                if (state.instance.status === \"destroyed\")\n                    return;\n                state.instance = {\n                    status: \"ready\",\n                    instance,\n                };\n            })\n        };\n    }\n    else {\n        // Connect to the remote instance.\n        state.instance = {\n            status: \"not-ready\",\n            whenReady: remote.connectToInstanceServer({\n                wasmModule: wasmModule.then((b) => b.wasm),\n                forbidTcp: options.forbidTcp || false,\n                forbidWs: options.forbidWs || false,\n                forbidNonLocalWs: options.forbidNonLocalWs || false,\n                forbidWss: options.forbidWss || false,\n                forbidWebRtc: options.forbidWebRtc || false,\n                maxLogLevel: options.maxLogLevel || 3,\n                cpuRateLimit,\n                portToServer: portToWorker,\n                eventCallback\n            }).then((instance) => {\n                // The Wasm instance might have been crashed before this callback is called.\n                if (state.instance.status === \"destroyed\")\n                    return;\n                state.instance = {\n                    status: \"ready\",\n                    instance,\n                };\n            })\n        };\n    }\n    return {\n        addChain: (options) => __awaiter(this, void 0, void 0, function* () {\n            if (state.instance.status === \"not-ready\")\n                yield state.instance.whenReady;\n            if (state.instance.status === \"destroyed\")\n                throw state.instance.error;\n            if (state.instance.status === \"not-created\" || state.instance.status === \"not-ready\")\n                throw new Error(); // Internal error, not supposed to ever happen.\n            // Passing a JSON object for the chain spec is an easy mistake, so we provide a more\n            // readable error.\n            if (!(typeof options.chainSpec === 'string'))\n                throw new Error(\"Chain specification must be a string\");\n            let potentialRelayChainsIds = [];\n            if (!!options.potentialRelayChains) {\n                for (const chain of options.potentialRelayChains) {\n                    // The content of `options.potentialRelayChains` are supposed to be chains earlier\n                    // returned by `addChain`.\n                    const id = state.chainIds.get(chain);\n                    if (id === undefined) // It is possible for `id` to be missing if it has earlier been removed.\n                        continue;\n                    potentialRelayChainsIds.push(id);\n                }\n            }\n            // Sanitize `jsonRpcMaxPendingRequests`.\n            let jsonRpcMaxPendingRequests = options.jsonRpcMaxPendingRequests === undefined ? Infinity : options.jsonRpcMaxPendingRequests;\n            jsonRpcMaxPendingRequests = Math.floor(jsonRpcMaxPendingRequests);\n            if (jsonRpcMaxPendingRequests <= 0 || isNaN(jsonRpcMaxPendingRequests)) {\n                throw new AddChainError(\"Invalid value for `jsonRpcMaxPendingRequests`\");\n            }\n            if (jsonRpcMaxPendingRequests > 0xffffffff) {\n                jsonRpcMaxPendingRequests = 0xffffffff;\n            }\n            // Sanitize `jsonRpcMaxSubscriptions`.\n            let jsonRpcMaxSubscriptions = options.jsonRpcMaxSubscriptions === undefined ? Infinity : options.jsonRpcMaxSubscriptions;\n            jsonRpcMaxSubscriptions = Math.floor(jsonRpcMaxSubscriptions);\n            if (jsonRpcMaxSubscriptions < 0 || isNaN(jsonRpcMaxSubscriptions)) {\n                throw new AddChainError(\"Invalid value for `jsonRpcMaxSubscriptions`\");\n            }\n            if (jsonRpcMaxSubscriptions > 0xffffffff) {\n                jsonRpcMaxSubscriptions = 0xffffffff;\n            }\n            // Sanitize `databaseContent`.\n            if (options.databaseContent !== undefined && typeof options.databaseContent !== 'string')\n                throw new AddChainError(\"`databaseContent` is not a string\");\n            const promise = new Promise((resolve) => state.addChainIdAllocations.push(resolve));\n            state.instance.instance.addChain(options.chainSpec, options.databaseContent || \"\", potentialRelayChainsIds, !!options.disableJsonRpc, jsonRpcMaxPendingRequests, jsonRpcMaxSubscriptions);\n            const outcome = yield promise;\n            if (!outcome.success)\n                throw new AddChainError(outcome.error);\n            const chainId = outcome.chainId;\n            state.chains.set(chainId, {\n                jsonRpcResponsesPromises: new Array()\n            });\n            const newChain = {\n                sendJsonRpc: (request) => {\n                    if (state.instance.status === \"destroyed\")\n                        throw state.instance.error;\n                    if (state.instance.status !== \"ready\")\n                        throw new Error(); // Internal error. Never supposed to happen.\n                    if (!state.chains.has(chainId))\n                        throw new AlreadyDestroyedError();\n                    if (options.disableJsonRpc)\n                        throw new JsonRpcDisabledError();\n                    const retVal = state.instance.instance.request(request, chainId);\n                    switch (retVal) {\n                        case 0: break;\n                        case 1: throw new QueueFullError();\n                        default: throw new Error(\"Internal error: unknown json_rpc_send error code: \" + retVal);\n                    }\n                },\n                jsonRpcResponses: {\n                    next: () => __awaiter(this, void 0, void 0, function* () {\n                        while (true) {\n                            if (!state.chains.has(chainId))\n                                return { done: true, value: undefined };\n                            if (options.disableJsonRpc)\n                                throw new JsonRpcDisabledError();\n                            if (state.instance.status === \"destroyed\")\n                                throw state.instance.error;\n                            if (state.instance.status !== \"ready\")\n                                throw new Error(); // Internal error. Never supposed to happen.\n                            // Try to pop a message from the queue.\n                            const message = state.instance.instance.peekJsonRpcResponse(chainId);\n                            if (message)\n                                return { done: false, value: message };\n                            // If no message is available, wait for one to be.\n                            yield new Promise((resolve) => {\n                                state.chains.get(chainId).jsonRpcResponsesPromises.push(resolve);\n                            });\n                        }\n                    }),\n                    [Symbol.asyncIterator]() {\n                        return this;\n                    }\n                },\n                nextJsonRpcResponse: () => __awaiter(this, void 0, void 0, function* () {\n                    const result = yield newChain.jsonRpcResponses.next();\n                    if (result.done) {\n                        throw new AlreadyDestroyedError();\n                    }\n                    return result.value;\n                }),\n                remove: () => {\n                    if (state.instance.status === \"destroyed\")\n                        throw state.instance.error;\n                    if (state.instance.status !== \"ready\")\n                        throw new Error(); // Internal error. Never supposed to happen.\n                    if (!state.chains.has(chainId))\n                        throw new AlreadyDestroyedError();\n                    console.assert(state.chainIds.has(newChain));\n                    state.chainIds.delete(newChain);\n                    for (const callback of state.chains.get(chainId).jsonRpcResponsesPromises) {\n                        callback();\n                    }\n                    state.chains.delete(chainId);\n                    state.instance.instance.removeChain(chainId);\n                },\n            };\n            state.chainIds.set(newChain, chainId);\n            return newChain;\n        }),\n        terminate: () => __awaiter(this, void 0, void 0, function* () {\n            if (state.instance.status === \"not-ready\")\n                yield state.instance.whenReady;\n            if (state.instance.status === \"destroyed\")\n                throw state.instance.error;\n            if (state.instance.status !== \"ready\")\n                throw new Error(); // Internal error. Never supposed to happen.\n            state.instance.instance.shutdownExecutor();\n            // Wait for the `executor-shutdown` event to be generated.\n            yield new Promise((resolve) => state.onExecutorShutdownOrWasmPanic = resolve);\n            // In case the instance crashes while we were waiting, we don't want to overwrite\n            // the error.\n            if (state.instance.status === \"ready\")\n                state.instance = { status: \"destroyed\", error: new AlreadyDestroyedError() };\n            state.connections.forEach((connec) => connec.reset());\n            state.connections.clear();\n            for (const addChainResult of state.addChainIdAllocations) {\n                addChainResult({ success: false, error: \"Client.terminate() has been called\" });\n            }\n            state.addChainIdAllocations = [];\n            state.addChainResults.forEach((addChainResult) => {\n                addChainResult({ success: false, error: \"Client.terminate() has been called\" });\n            });\n            state.addChainResults.clear();\n            for (const chain of Array.from(state.chains.values())) {\n                for (const callback of chain.jsonRpcResponsesPromises) {\n                    callback();\n                }\n                chain.jsonRpcResponsesPromises = [];\n            }\n            state.chains.clear();\n        })\n    };\n}\n","// Smoldot\n// Copyright (C) 2019-2022  Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { start as innerStart } from './internals/client.js';\nexport { AddChainError, AlreadyDestroyedError, CrashError, JsonRpcDisabledError, QueueFullError } from './public-types.js';\n/**\n * Initializes a new client. This is a pre-requisite to connecting to a blockchain.\n *\n * Can never fail.\n *\n * @param options Configuration of the client.\n */\nexport function startWithBytecode(options) {\n    options.forbidTcp = true;\n    // When in a secure context, browsers refuse to open non-secure WebSocket connections to\n    // non-localhost. There is an exception if the page is localhost, in which case all connections\n    // are allowed.\n    // Detecting this ahead of time is better for the overall health of the client, as it will\n    // avoid storing in memory addresses that it knows it can't connect to.\n    // The condition below is a hint, and false-positives or false-negatives are not fundamentally\n    // an issue.\n    if ((typeof isSecureContext === 'boolean' && isSecureContext) && typeof location !== undefined) {\n        const loc = location.toString();\n        if (loc.indexOf('localhost') !== -1 && loc.indexOf('127.0.0.1') !== -1 && loc.indexOf('::1') !== -1) {\n            options.forbidNonLocalWs = true;\n        }\n    }\n    return innerStart(options, options.bytecode, {\n        performanceNow: () => {\n            return performance.now();\n        },\n        getRandomValues: (buffer) => {\n            const crypto = globalThis.crypto;\n            if (!crypto)\n                throw new Error('randomness not available');\n            // Browsers have this completely undocumented behavior (it's not even part of a spec)\n            // that for some reason `getRandomValues` can't be called on arrayviews back by\n            // `SharedArrayBuffer`s and they throw an exception if you try.\n            if (buffer.buffer instanceof ArrayBuffer)\n                crypto.getRandomValues(buffer);\n            else {\n                const tmpArray = new Uint8Array(buffer.length);\n                crypto.getRandomValues(tmpArray);\n                buffer.set(tmpArray);\n            }\n        },\n        connect: (config) => {\n            return connect(config);\n        }\n    });\n}\n/**\n * Tries to open a new connection using the given configuration.\n *\n * @see Connection\n * @throws any If the multiaddress couldn't be parsed or contains an invalid protocol.\n */\nfunction connect(config) {\n    if (config.address.ty === \"websocket\") {\n        // Even though the WHATWG specification (<https://websockets.spec.whatwg.org/#dom-websocket-websocket>)\n        // doesn't mention it, `new WebSocket` can throw an exception if the URL is forbidden\n        // for security reasons. We absord this exception as soon as it is thrown.\n        // `connection` can be either a `WebSocket` object (the normal case), or a string\n        // indicating an error message that must be propagated with `onConnectionReset` as soon\n        // as possible, or `null` if the API user considers the connection as reset.\n        let connection;\n        try {\n            connection = new WebSocket(config.address.url);\n        }\n        catch (error) {\n            connection = error instanceof Error ? error.toString() : \"Exception thrown by new WebSocket\";\n        }\n        const bufferedAmountCheck = { quenedUnreportedBytes: 0, nextTimeout: 10 };\n        const checkBufferedAmount = () => {\n            if (!(connection instanceof WebSocket))\n                return;\n            if (connection.readyState != 1)\n                return;\n            // Note that we might expect `bufferedAmount` to always be <= the sum of the lengths\n            // of all the data that has been sent, but that might not be the case. For this\n            // reason, we use `bufferedAmount` as a hint rather than a correct value.\n            const bufferedAmount = connection.bufferedAmount;\n            let wasSent = bufferedAmountCheck.quenedUnreportedBytes - bufferedAmount;\n            if (wasSent < 0)\n                wasSent = 0;\n            bufferedAmountCheck.quenedUnreportedBytes -= wasSent;\n            if (bufferedAmountCheck.quenedUnreportedBytes != 0) {\n                setTimeout(checkBufferedAmount, bufferedAmountCheck.nextTimeout);\n                bufferedAmountCheck.nextTimeout *= 2;\n                if (bufferedAmountCheck.nextTimeout > 500)\n                    bufferedAmountCheck.nextTimeout = 500;\n            }\n            // Note: it is important to call `onWritableBytes` at the very end, as it might\n            // trigger a call to `send`.\n            if (wasSent != 0)\n                config.onWritableBytes(wasSent);\n        };\n        if (connection instanceof WebSocket) {\n            connection.binaryType = 'arraybuffer';\n            connection.onopen = () => {\n                config.onWritableBytes(1024 * 1024);\n            };\n            connection.onclose = (event) => {\n                const message = \"Error code \" + event.code + (!!event.reason ? (\": \" + event.reason) : \"\");\n                config.onConnectionReset(message);\n            };\n            connection.onmessage = (msg) => {\n                config.onMessage(new Uint8Array(msg.data));\n            };\n        }\n        else {\n            setTimeout(() => {\n                if (connection && !(connection instanceof WebSocket)) {\n                    config.onConnectionReset(connection);\n                    connection = null;\n                }\n            }, 1);\n        }\n        return {\n            reset: () => {\n                if (connection instanceof WebSocket) {\n                    connection.onopen = null;\n                    connection.onclose = null;\n                    connection.onmessage = null;\n                    connection.onerror = null;\n                    // According to the WebSocket specification, calling `close()` when a WebSocket\n                    // isn't fully opened yet is completely legal and seemingly a normal thing to\n                    // do (see <https://websockets.spec.whatwg.org/#dom-websocket-close>).\n                    // Unfortunately, browsers print a warning in the console if you do that. To\n                    // avoid these warnings, we only call `close()` if the connection is fully\n                    // opened. According to <https://websockets.spec.whatwg.org/#garbage-collection>,\n                    // removing all the event listeners will cause the WebSocket to be garbage\n                    // collected, which should have the same effect as `close()`.\n                    if (connection.readyState == WebSocket.OPEN)\n                        connection.close();\n                }\n                connection = null;\n            },\n            send: (data) => {\n                if (bufferedAmountCheck.quenedUnreportedBytes == 0) {\n                    bufferedAmountCheck.nextTimeout = 10;\n                    setTimeout(checkBufferedAmount, 10);\n                }\n                for (const buffer of data) {\n                    bufferedAmountCheck.quenedUnreportedBytes += buffer.length;\n                }\n                connection.send(new Blob(data));\n            },\n            closeSend: () => { throw new Error('Wrong connection type'); },\n            openOutSubstream: () => { throw new Error('Wrong connection type'); }\n        };\n    }\n    else if (config.address.ty === \"webrtc\") {\n        const { targetPort, ipVersion, targetIp, remoteTlsCertificateSha256 } = config.address;\n        const state = {\n            pc: undefined,\n            dataChannels: new Map(),\n            nextStreamId: 0,\n            isFirstOutSubstream: true,\n        };\n        // Kills all the JavaScript objects (the connection and all its substreams), ensuring that no\n        // callback will be called again. Doesn't report anything to smoldot, as this should be done\n        // by the caller.\n        const killAllJs = () => {\n            // The `RTCPeerConnection` is created pretty quickly. It is however still possible for\n            // smoldot to cancel the opening, in which case `pc` will still be undefined.\n            if (!state.pc) {\n                console.assert(state.dataChannels.size === 0, \"substreams exist while pc is undef\");\n                state.pc = null;\n                return;\n            }\n            state.pc.onconnectionstatechange = null;\n            state.pc.onnegotiationneeded = null;\n            state.pc.ondatachannel = null;\n            for (const channel of Array.from(state.dataChannels.values())) {\n                channel.channel.onopen = null;\n                channel.channel.onerror = null;\n                channel.channel.onclose = null;\n                channel.channel.onbufferedamountlow = null;\n                channel.channel.onmessage = null;\n            }\n            state.dataChannels.clear();\n            state.pc.close(); // Not necessarily necessary, but it doesn't hurt to do so.\n        };\n        // Function that configures a newly-opened channel and adds it to the map. Used for both\n        // inbound and outbound substreams.\n        const addChannel = (dataChannel, direction) => {\n            const streamId = state.nextStreamId;\n            state.nextStreamId += 1;\n            dataChannel.binaryType = 'arraybuffer';\n            let isOpen = { value: false };\n            dataChannel.onopen = () => {\n                console.assert(!isOpen.value, \"substream opened twice\");\n                isOpen.value = true;\n                config.onStreamOpened(streamId, direction);\n                config.onWritableBytes(65536, streamId);\n            };\n            dataChannel.onerror = dataChannel.onclose = (event) => {\n                // Note that Firefox doesn't support <https://developer.mozilla.org/en-US/docs/Web/API/RTCErrorEvent>.\n                const message = (event instanceof RTCErrorEvent) ? event.error.toString() : \"RTCDataChannel closed\";\n                if (!isOpen.value) {\n                    // Substream wasn't opened yet and thus has failed to open. The API has no\n                    // mechanism to report substream openings failures. We could try opening it\n                    // again, but given that it's unlikely to succeed, we simply opt to kill the\n                    // entire connection.\n                    killAllJs();\n                    // Note that the event doesn't give any additional reason for the failure.\n                    config.onConnectionReset(\"data channel failed to open: \" + message);\n                }\n                else {\n                    // Substream was open and is now closed. Normal situation.\n                    dataChannel.onopen = null;\n                    dataChannel.onerror = null;\n                    dataChannel.onclose = null;\n                    dataChannel.onbufferedamountlow = null;\n                    dataChannel.onmessage = null;\n                    state.dataChannels.delete(streamId);\n                    config.onStreamReset(streamId, message);\n                }\n            };\n            dataChannel.onbufferedamountlow = () => {\n                const channel = state.dataChannels.get(streamId);\n                const val = channel.bufferedBytes;\n                channel.bufferedBytes = 0;\n                config.onWritableBytes(val, streamId);\n            };\n            dataChannel.onmessage = (m) => {\n                // The `data` field is an `ArrayBuffer`.\n                config.onMessage(new Uint8Array(m.data), streamId);\n            };\n            state.dataChannels.set(streamId, { channel: dataChannel, bufferedBytes: 0 });\n        };\n        // It is possible for the browser to use multiple different certificates.\n        // In order for our local certificate to be deterministic, we need to generate it manually and\n        // set it explicitly as part of the configuration.\n        // According to <https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-generatecertificate>,\n        // browsers are guaranteed to support `{ name: \"ECDSA\", namedCurve: \"P-256\" }`.\n        RTCPeerConnection.generateCertificate({ name: \"ECDSA\", namedCurve: \"P-256\", hash: \"SHA-256\" }).then((localCertificate) => __awaiter(this, void 0, void 0, function* () {\n            if (state.pc === null)\n                return;\n            // Due to <https://bugzilla.mozilla.org/show_bug.cgi?id=1659672>, connections from\n            // Firefox to a localhost WebRTC server always fails. Since this bug has been opened\n            // for three years at the time of writing, it is unlikely to be fixed in the short\n            // term. In order to provider better user feedback, we straight up refuse connecting\n            // and stop the connection.\n            // Note that this is just a hint. Failing to detect this will lead to the WebRTC\n            // handshake  timing out.\n            // TODO: eventually remove this if the Firefox bug is fixed\n            if ((targetIp == 'localhost' || targetIp == '127.0.0.1' || targetIp == '::1') && navigator.userAgent.indexOf('Firefox') !== -1) {\n                killAllJs();\n                config.onConnectionReset(\"Firefox can't connect to a localhost WebRTC server\");\n                return;\n            }\n            // Create a new WebRTC connection.\n            state.pc = new RTCPeerConnection({ certificates: [localCertificate] });\n            // We need to build the multihash corresponding to the local certificate.\n            // While there exists a `RTCPeerConnection.getFingerprints` function, Firefox notably\n            // doesn't support it.\n            // See <https://developer.mozilla.org/en-US/docs/Web/API/RTCCertificate#browser_compatibility>\n            // An alternative to `getFingerprints` is to ask the browser to generate an SDP offer and\n            // extract from fingerprint from it. Because we explicitly provide a certificate, we have\n            // the guarantee that the list of certificates will always be the same whenever an SDP offer\n            // is generated by the browser. However, while this alternative does work on Firefox, it\n            // doesn't on Chrome, as the SDP offer is for some reason missing the fingerprints.\n            // Therefore, our strategy is to use `getFingerprints` when it is available (i.e. every\n            // browser except Firefox), and parse the SDP offer when it is not (i.e. Firefox). In the\n            // future, only `getFingerprints` would be used.\n            let localTlsCertificateHex;\n            if (localCertificate.getFingerprints) {\n                for (const { algorithm, value } of localCertificate.getFingerprints()) {\n                    if (algorithm === 'sha-256') {\n                        localTlsCertificateHex = value;\n                        break;\n                    }\n                }\n            }\n            else {\n                const localSdpOffer = yield state.pc.createOffer();\n                // Note that this regex is not strict. The browser isn't a malicious actor, and the\n                // objective of this regex is not to detect invalid input.\n                const localSdpOfferFingerprintMatch = localSdpOffer.sdp.match(/a(\\s*)=(\\s*)fingerprint:(\\s*)(sha|SHA)-256(\\s*)(([a-fA-F0-9]{2}(:)*){32})/);\n                if (localSdpOfferFingerprintMatch) {\n                    localTlsCertificateHex = localSdpOfferFingerprintMatch[6];\n                }\n            }\n            if (localTlsCertificateHex === undefined) {\n                // Because we've already returned from the `connect` function at this point, we pretend\n                // that the connection has failed to open.\n                config.onConnectionReset('Failed to obtain the browser certificate fingerprint');\n                return;\n            }\n            let localTlsCertificateSha256 = new Uint8Array(32);\n            localTlsCertificateSha256.set(localTlsCertificateHex.split(':').map((s) => parseInt(s, 16)), 0);\n            // `onconnectionstatechange` is used to detect when the connection has closed or has failed\n            // to open.\n            // Note that smoldot will think that the connection is open even when it is still opening.\n            // Therefore we don't care about events concerning the fact that the connection is now fully\n            // open.\n            state.pc.onconnectionstatechange = (_event) => {\n                if (state.pc.connectionState == \"closed\" || state.pc.connectionState == \"disconnected\" || state.pc.connectionState == \"failed\") {\n                    killAllJs();\n                    config.onConnectionReset(\"WebRTC state transitioned to \" + state.pc.connectionState);\n                }\n            };\n            state.pc.onnegotiationneeded = (_event) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                // Create a new offer and set it as local description.\n                let sdpOffer = (yield state.pc.createOffer()).sdp;\n                // We check that the locally-generated SDP offer has a data channel with the UDP\n                // protocol. If that isn't the case, the connection will likely fail.\n                if (sdpOffer.match(/^m=application(\\s+)(\\d+)(\\s+)UDP\\/DTLS\\/SCTP(\\s+)webrtc-datachannel$/m) === null) {\n                    console.error(\"Local offer doesn't contain UDP data channel. WebRTC connections will likely fail. Please report this issue.\");\n                }\n                // According to the libp2p WebRTC spec, the ufrag and pwd are the same\n                // randomly-generated string on both sides, and must be prefixed with\n                // `libp2p-webrtc-v1:`. We modify the local description to ensure that.\n                // While we could randomly generate a new string, we just grab the one that the\n                // browser has generated, in order to make sure that it respects the constraints\n                // of the ICE protocol.\n                const browserGeneratedPwd = (_a = sdpOffer.match(/^a=ice-pwd:(.+)$/m)) === null || _a === void 0 ? void 0 : _a.at(1);\n                if (browserGeneratedPwd === undefined) {\n                    console.error(\"Failed to set ufrag to pwd. WebRTC connections will likely fail. Please report this issue.\");\n                }\n                const ufragPwd = \"libp2p+webrtc+v1/\" + browserGeneratedPwd;\n                sdpOffer = sdpOffer.replace(/^a=ice-ufrag.*$/m, 'a=ice-ufrag:' + ufragPwd);\n                sdpOffer = sdpOffer.replace(/^a=ice-pwd.*$/m, 'a=ice-pwd:' + ufragPwd);\n                yield state.pc.setLocalDescription({ type: 'offer', sdp: sdpOffer });\n                // Transform certificate hash into fingerprint (upper-hex; each byte separated by \":\").\n                const fingerprint = Array.from(remoteTlsCertificateSha256).map((n) => (\"0\" + n.toString(16)).slice(-2).toUpperCase()).join(':');\n                // Note that the trailing line feed is important, as otherwise Chrome\n                // fails to parse the payload.\n                const remoteSdp = \n                // Version of the SDP protocol. Always 0. (RFC8866)\n                \"v=0\" + \"\\n\" +\n                    // Identifies the creator of the SDP document. We are allowed to use dummy values\n                    // (`-` and `0.0.0.0`) to remain anonymous, which we do. Note that \"IN\" means\n                    // \"Internet\" (and not \"input\"). (RFC8866)\n                    \"o=- 0 0 IN IP\" + ipVersion + \" \" + targetIp + \"\\n\" +\n                    // Name for the session. We are allowed to pass a dummy `-`. (RFC8866)\n                    \"s=-\" + \"\\n\" +\n                    // Start and end of the validity of the session. `0 0` means that the session never\n                    // expires. (RFC8866)\n                    \"t=0 0\" + \"\\n\" +\n                    // A lite implementation is only appropriate for devices that will\n                    // always be connected to the public Internet and have a public\n                    // IP address at which it can receive packets from any\n                    // correspondent.  ICE will not function when a lite implementation\n                    // is placed behind a NAT (RFC8445).\n                    \"a=ice-lite\" + \"\\n\" +\n                    // A `m=` line describes a request to establish a certain protocol.\n                    // The protocol in this line (i.e. `TCP/DTLS/SCTP` or `UDP/DTLS/SCTP`) must always be\n                    // the same as the one in the offer. We know that this is true because checked above.\n                    // The `<fmt>` component must always be `webrtc-datachannel` for WebRTC.\n                    // The rest of the SDP payload adds attributes to this specific media stream.\n                    // RFCs: 8839, 8866, 8841\n                    \"m=application \" + String(targetPort) + \" \" + \"UDP/DTLS/SCTP webrtc-datachannel\" + \"\\n\" +\n                    // Indicates the IP address of the remote.\n                    // Note that \"IN\" means \"Internet\" (and not \"input\").\n                    \"c=IN IP\" + ipVersion + \" \" + targetIp + \"\\n\" +\n                    // Media ID - uniquely identifies this media stream (RFC9143).\n                    \"a=mid:0\" + \"\\n\" +\n                    // Indicates that we are complying with RFC8839 (as oppposed to the legacy RFC5245).\n                    \"a=ice-options:ice2\" + \"\\n\" +\n                    // ICE username and password, which are used for establishing and\n                    // maintaining the ICE connection. (RFC8839)\n                    // These values are set according to the libp2p WebRTC specification.\n                    \"a=ice-ufrag:\" + ufragPwd + \"\\n\" +\n                    \"a=ice-pwd:\" + ufragPwd + \"\\n\" +\n                    // Fingerprint of the certificate that the server will use during the TLS\n                    // handshake. (RFC8122)\n                    // MUST be derived from the certificate used by the answerer (server).\n                    \"a=fingerprint:sha-256 \" + fingerprint + \"\\n\" +\n                    // Indicates that the remote DTLS server will only listen for incoming\n                    // connections. (RFC5763)\n                    // The answerer (server) MUST not be located behind a NAT (RFC6135).\n                    \"a=setup:passive\" + \"\\n\" +\n                    // The SCTP port (RFC8841)\n                    // Note it's different from the \"m=\" line port value, which\n                    // indicates the port of the underlying transport-layer protocol\n                    // (UDP or TCP)\n                    \"a=sctp-port:5000\" + \"\\n\" +\n                    // The maximum SCTP user message size (in bytes) (RFC8841)\n                    // Setting this field is part of the libp2p spec.\n                    \"a=max-message-size:16384\" + \"\\n\" +\n                    // A transport address for a candidate that can be used for connectivity\n                    // checks (RFC8839).\n                    \"a=candidate:1 1 UDP 1 \" + targetIp + \" \" + String(targetPort) + \" typ host\" + \"\\n\";\n                yield state.pc.setRemoteDescription({ type: \"answer\", sdp: remoteSdp });\n            });\n            state.pc.ondatachannel = ({ channel }) => {\n                // TODO: is the substream maybe already open? according to the Internet it seems that no but it's unclear\n                addChannel(channel, 'inbound');\n            };\n            config.onMultistreamHandshakeInfo({\n                handshake: 'webrtc',\n                localTlsCertificateSha256,\n            });\n        }));\n        return {\n            reset: (streamId) => {\n                // If `streamId` is undefined, then the whole connection must be destroyed.\n                if (streamId === undefined) {\n                    killAllJs();\n                }\n                else {\n                    const channel = state.dataChannels.get(streamId);\n                    channel.channel.onopen = null;\n                    channel.channel.onerror = null;\n                    channel.channel.onclose = null;\n                    channel.channel.onbufferedamountlow = null;\n                    channel.channel.onmessage = null;\n                    channel.channel.close();\n                    state.dataChannels.delete(streamId);\n                }\n            },\n            send: (data, streamId) => {\n                const channel = state.dataChannels.get(streamId);\n                for (const buffer of data) {\n                    channel.bufferedBytes += buffer.length;\n                }\n                channel.channel.send(new Blob(data));\n            },\n            closeSend: () => { throw new Error('Wrong connection type'); },\n            openOutSubstream: () => {\n                // `openOutSubstream` can only be called after we have called `config.onOpen`,\n                // therefore `pc` is guaranteed to be non-null.\n                // Note that the label passed to `createDataChannel` is required to be empty as\n                // per the libp2p WebRTC specification.\n                // TODO: adjusting the options based on the first substream is a bit hacky\n                const opts = state.isFirstOutSubstream ? { negotiated: true, id: 0 } : {};\n                state.isFirstOutSubstream = false;\n                addChannel(state.pc.createDataChannel(\"\", opts), 'outbound');\n            }\n        };\n    }\n    else {\n        // Should never happen, as we tweak the options to refuse connection types that\n        // we don't support.\n        throw new Error();\n    }\n}\n","import { startWithBytecode } from 'smoldot/no-auto-bytecode';\n\nconst startFromWorker = (worker, options = {}) => {\n  const bytecode = new Promise((resolve) => {\n    worker.onmessage = (event) => resolve(event.data);\n  });\n  const { port1, port2 } = new MessageChannel();\n  worker.postMessage(port1, [port1]);\n  return startWithBytecode({\n    bytecode,\n    portToWorker: port2,\n    ...options\n  });\n};\n\nexport { startFromWorker };\n//# sourceMappingURL=from-worker.mjs.map\n","const chainIds = /* @__PURE__ */ new WeakMap();\nconst startFromWorker = (worker, options = {}) => {\n  worker.setMaxListeners(0);\n  sendToWorker(worker, {\n    type: \"start\",\n    value: options\n  });\n  return {\n    async addChain(options2) {\n      const { potentialRelayChains, ...addChainOptions } = options2;\n      const id = await sendToWorker(worker, {\n        type: \"add-chain\",\n        value: {\n          ...addChainOptions,\n          potentialRelayChainIds: potentialRelayChains?.map((chain2) => {\n            const id2 = chainIds.get(chain2);\n            if (id2 == null) {\n              throw new Error(\"Only chains created with `addChain` can be used\");\n            }\n            return id2;\n          })\n        }\n      });\n      const chain = {\n        jsonRpcResponses: {\n          next: async () => sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"receiveIterable\"\n            }\n          }),\n          [Symbol.asyncIterator]() {\n            return this;\n          }\n        },\n        nextJsonRpcResponse() {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"receive\"\n            }\n          });\n        },\n        remove() {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"remove\"\n            }\n          });\n        },\n        sendJsonRpc(value) {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"send\",\n              value\n            }\n          });\n        }\n      };\n      chainIds.set(chain, id);\n      return chain;\n    },\n    async terminate() {\n      await sendToWorker(worker, {\n        type: \"terminate\"\n      });\n    }\n  };\n};\nlet msgId = 0;\nfunction sendToWorker(worker, msg) {\n  const id = msgId++;\n  worker.postMessage({ ...msg, id });\n  return new Promise((resolve) => {\n    const msgHandler = (response) => {\n      if (response.id === id) {\n        resolve(response.value);\n        worker.off(\"message\", msgHandler);\n      }\n    };\n    worker.on(\"message\", msgHandler);\n  });\n}\n\nexport { startFromWorker };\n//# sourceMappingURL=from-node-worker.mjs.map\n","// Smoldot\n// Copyright (C) 2023  Pierre Krieger\n// SPDX-License-Identifier: GPL-3.0-or-later WITH Classpath-exception-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n// You should have received a copy of the GNU General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n/// <reference lib=\"dom\" />\nimport { default as wasmBase64 } from './internals/bytecode/wasm.js';\n/**\n * Compiles and returns the smoldot WebAssembly binary.\n */\nexport function compileBytecode() {\n    return __awaiter(this, void 0, void 0, function* () {\n        // The actual Wasm bytecode is base64-decoded then deflate-decoded from a constant found in a\n        // different file.\n        // This is suboptimal compared to using `instantiateStreaming`, but it is the most\n        // cross-platform cross-bundler approach.\n        return WebAssembly.compile(yield zlibInflate(trustedBase64Decode(wasmBase64)))\n            .then((m) => { return { wasm: m }; });\n    });\n}\n/**\n * Applies the zlib inflate algorithm on the buffer.\n */\nfunction zlibInflate(buffer) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // This code has been copy-pasted from the official streams draft specification.\n        // At the moment, it is found here: https://wicg.github.io/compression/#example-deflate-compress\n        const ds = new DecompressionStream('deflate');\n        const writer = ds.writable.getWriter();\n        writer.write(buffer);\n        writer.close();\n        const output = [];\n        const reader = ds.readable.getReader();\n        let totalSize = 0;\n        while (true) {\n            const { value, done } = yield reader.read();\n            if (done)\n                break;\n            output.push(value);\n            totalSize += value.byteLength;\n        }\n        const concatenated = new Uint8Array(totalSize);\n        let offset = 0;\n        for (const array of output) {\n            concatenated.set(array, offset);\n            offset += array.byteLength;\n        }\n        return concatenated;\n    });\n}\n/**\n * Decodes a base64 string.\n *\n * The input is assumed to be correct.\n */\nfunction trustedBase64Decode(base64) {\n    // This code is a bit sketchy due to the fact that we decode into a string, but it seems to\n    // work.\n    const binaryString = atob(base64);\n    const size = binaryString.length;\n    const bytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n    }\n    return bytes;\n}\n","import { AddChainError, AlreadyDestroyedError, CrashError, JsonRpcDisabledError } from '@polkadot-api/smoldot';\nimport { getSyncProvider } from '@polkadot-api/json-rpc-provider-proxy';\n\nlet pending;\nconst isRecoverable = (error) => !(error instanceof AddChainError || error instanceof AlreadyDestroyedError || error instanceof CrashError || error instanceof JsonRpcDisabledError);\nconst getSmProvider = (chain) => getSyncProvider(async () => {\n  while (pending) await pending;\n  let resolvedChain;\n  if (chain instanceof Promise) {\n    pending = chain;\n    resolvedChain = await chain;\n    pending = null;\n  } else resolvedChain = chain;\n  return (listener, onError) => {\n    let listening = true;\n    (async () => {\n      do {\n        let message = \"\";\n        try {\n          message = await resolvedChain.nextJsonRpcResponse();\n        } catch (e) {\n          if (listening && isRecoverable(e)) onError();\n          return;\n        }\n        if (!listening) break;\n        listener(message);\n      } while (listening);\n    })();\n    return {\n      send(msg) {\n        resolvedChain.sendJsonRpc(msg);\n      },\n      disconnect() {\n        listening = false;\n        resolvedChain.remove();\n      }\n    };\n  };\n});\n\nexport { getSmProvider };\n//# sourceMappingURL=sm-provider.mjs.map\n","import { Client } from \"polkadot-api/smoldot\"\nimport { ChainId, ChainIdRelay } from \"../chains/types\"\nimport { NetworkConnector } from \"./types\"\nimport { startFromWorker as webStartFromWorker } from \"polkadot-api/smoldot/from-worker\"\nimport { Worker as ThreadWorker } from \"worker_threads\"\nimport { startFromWorker as NodeStartFromWorker } from \"polkadot-api/smoldot/from-node-worker\"\nimport { fileURLToPath } from \"url\"\nimport { WellKnownChains } from \"./utils\"\nimport { ChainRegistry } from \"../registry/ChainRegistry\"\nimport { createClient } from \"polkadot-api\"\nimport { getSmProvider } from \"polkadot-api/sm-provider\"\n// TODO generate instance with a client depening on network and type\n\nexport class SmHubConnector extends NetworkConnector {\n  private static instances = new Map<ChainId, SmHubConnector>()\n\n  private status = \"disconnected\"\n\n  protected constructor(network: ChainIdRelay, client?: Client) {\n    super(network, client)\n  }\n\n  static getType(): string {\n    return \"smoldot\"\n  }\n\n  async connect(): Promise<void> {\n    // load all chains needed, set them up in the registry\n\n    if (this.status === \"connected\" && this.chains.size > 0) {\n      return\n    }\n\n    await this.loadChains()\n    this.status = \"connected\"\n    return\n  }\n\n  async loadChains(): Promise<ChainId[]> {\n    // load chains from the registry\n    if (!this.client) {\n      throw new Error(\"Client is required to create a smoldot connector\")\n    }\n\n    const networkChains = Object.entries(WellKnownChains).filter(([, val]) => {\n      return val.network === this.network\n    })\n    // first load relay chain\n    const relay = networkChains.find(([key]) => {\n      return key === this.network\n    })\n\n    if (!relay || !relay[1].smoldot) {\n      throw new Error(\"No relay chain found or no smoldot config available\")\n    }\n\n    const smRelayChain = await this.client.addChain({\n      chainSpec: relay[1].smoldot,\n    })\n\n    const client = createClient(getSmProvider(smRelayChain))\n\n    const relayChain = await ChainRegistry.getOrCreate(relay[1].info, client)\n\n    this.chains.set(this.network, relayChain)\n    const promises = []\n\n    for (const entry of networkChains) {\n      const [chainId, { smoldot: chainSmoldot, info }] = entry\n\n      if (!chainSmoldot || chainId === this.network) {\n        continue\n      }\n      // TODO: once there are many chains, this might not be an option anymore\n      promises.push(\n        this.client!.addChain({\n          chainSpec: chainSmoldot,\n          potentialRelayChains: [smRelayChain],\n        }).then(async (chain) => {\n          const client = createClient(getSmProvider(chain))\n          return await ChainRegistry.getOrCreate(info, client)\n        }),\n      )\n    }\n    const chainConnectors = await Promise.allSettled(promises)\n    chainConnectors.forEach((chainConnector) => {\n      if (chainConnector.status === \"fulfilled\") {\n        this.chains.set(chainConnector.value.chainInfo.id, chainConnector.value)\n      }\n    })\n\n    return Array.from(this.chains.keys())\n  }\n\n  async disconnect(): Promise<void> {\n    console.log(`[${this.network}] Disconnecting Substrate Connect...`)\n\n    if (this.status === \"disconnected\" && this.chains.size === 0) {\n      return\n    }\n\n    this.client?.terminate()\n    this.chains.forEach((chain) => {\n      ChainRegistry.removeChain(chain.chainInfo.id)\n    })\n\n    this.status = \"disconnected\"\n  }\n\n  getStatus(): string {\n    return this.status\n  }\n\n  //   TODO make sure it tests for browser environments\n  static getInstance(network: ChainIdRelay): SmHubConnector {\n    if (!this.instances.has(network)) {\n      if (typeof window === \"undefined\") {\n        const smClient = NodeStartFromWorker(\n          new ThreadWorker(\n            fileURLToPath(\n              import.meta.resolve(\"polkadot-api/smoldot/node-worker\"),\n            ),\n          ),\n        )\n\n        this.instances.set(network, new SmHubConnector(network, smClient))\n      } else {\n        const smClient = webStartFromWorker(\n          new Worker(new URL(\"polkadot-api/smoldot/worker\", import.meta.url)),\n        )\n        this.instances.set(network, new SmHubConnector(network, smClient))\n      }\n    }\n    return this.instances.get(network)!\n  }\n}\n\n// ONLY FOR TEST PURPOSES\nif (typeof __vite_ssr_import_meta__ !== \"undefined\") {\n  __vite_ssr_import_meta__!.resolve = (path: string) =>\n    \"file://\" + globalCreateRequire(import.meta.url).resolve(path)\n}\n","import { WsHubConnector } from \"../connectors\"\nimport { SmHubConnector } from \"../connectors/SmoldotConnector\"\nimport { NetworkConnector } from \"../connectors/types\"\n\nexport interface ConnectorStatic<\n  T extends NetworkConnector = NetworkConnector,\n> {\n  getType(): string\n  getInstance(network: string): T\n}\n\nexport class ConnectorRegistry {\n  private static registry = new Map<string, ConnectorStatic>([\n    [\"websocket\", WsHubConnector],\n    [\"smoldot\", SmHubConnector],\n    // [\"substrate\", SubstrateConnectConnector],\n  ])\n\n  static createConnector(\n    network: string,\n    type: string,\n  ): NetworkConnector | undefined {\n    const Connector = this.registry.get(type)\n    if (!Connector) {\n      throw new Error(`Connector type \"${type}\" not supported`)\n    }\n\n    return Connector.getInstance(network)\n  }\n\n  static listConnectors(): string[] {\n    return [...this.registry.keys()]\n  }\n\n  static getConnector(network: string, type: string): NetworkConnector {\n    // TODO: make it a singleton\n    const Connector = this.registry.get(type)\n    if (!Connector) {\n      throw new Error(`Connector type \"${type}\" not supported`)\n    }\n    return Connector.getInstance(network)\n  }\n}\n","import \"./connectors\" // ensures registration happens\nimport { ConnectorRegistry } from \"./registry/ConnectorRegistry\"\nimport { NetworkConnector } from \"./connectors/types\"\n\nexport function createNetworkConnector(\n  network: string,\n  type: string,\n): NetworkConnector {\n  return ConnectorRegistry.getConnector(network, type)\n}\n","export const packageInfo = { name: '@polkadot/x-global', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '13.4.3' };\n","export { packageInfo } from './packageInfo.js';\n/** @internal Last-resort \"this\", if it gets here it probably would fail anyway */\nfunction evaluateThis(fn) {\n    return fn('return this');\n}\n/**\n * A cross-environment implementation for globalThis\n */\nexport const xglobal = /*#__PURE__*/ (typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof global !== 'undefined'\n        ? global\n        : typeof self !== 'undefined'\n            ? self\n            : typeof window !== 'undefined'\n                ? window\n                : evaluateThis(Function));\n/**\n * Extracts a known global from the environment, applying a fallback if not found\n */\nexport function extractGlobal(name, fallback) {\n    // Not quite sure why this is here - snuck in with TS 4.7.2 with no real idea\n    // (as of now) as to why this looks like an \"any\" when we do cast it to a T\n    //\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return typeof xglobal[name] === 'undefined'\n        ? fallback\n        : xglobal[name];\n}\n/**\n * Expose a value as a known global, if not already defined\n */\nexport function exposeGlobal(name, fallback) {\n    if (typeof xglobal[name] === 'undefined') {\n        xglobal[name] = fallback;\n    }\n}\n","/**\n * @name isFunction\n * @summary Tests for a `function`.\n * @description\n * Checks to see if the input value is a JavaScript function.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isFunction } from '@polkadot/util';\n *\n * isFunction(() => false); // => true\n * ```\n */\nexport function isFunction(value) {\n    return typeof value === 'function';\n}\n","export const packageInfo = { name: '@polkadot/x-bigint', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '13.4.3' };\n","import { extractGlobal } from '@polkadot/x-global';\nexport { packageInfo } from './packageInfo.js';\n/**\n * @internal\n *\n * There are _still_ some older environments (specifically RN < 0.70), that does\n * not have proper BigInt support - a non-working fallback is provided for those.\n *\n * We detect availability of BigInt upon usage, so this is purely to allow functional\n * compilation & bundling. Since we have operators such as *+-/ top-level, a number-ish\n * result is used here.\n */\nfunction invalidFallback() {\n    return Number.NaN;\n}\nexport const BigInt = /*#__PURE__*/ extractGlobal('BigInt', invalidFallback);\n","import { BigInt } from '@polkadot/x-bigint';\nimport { _1n } from '../bi/consts.js';\nconst U8_MAX = BigInt(256);\nconst U16_MAX = BigInt(256 * 256);\nconst U64_MAX = BigInt('0x10000000000000000');\n/**\n * @name u8aToBigInt\n * @summary Creates a BigInt from a Uint8Array object.\n */\nexport function u8aToBigInt(value, { isLe = true, isNegative = false } = {}) {\n    // slice + reverse is expensive, however SCALE is LE by default so this is the path\n    // we are most interested in (the BE is added for the sake of being comprehensive)\n    if (!isLe) {\n        value = value.slice().reverse();\n    }\n    const count = value.length;\n    if (isNegative && count && (value[count - 1] & 0x80)) {\n        switch (count) {\n            case 0:\n                return BigInt(0);\n            case 1:\n                return BigInt(((value[0] ^ 0x0000_00ff) * -1) - 1);\n            case 2:\n                return BigInt((((value[0] + (value[1] << 8)) ^ 0x0000_ffff) * -1) - 1);\n            case 4:\n                return BigInt((((value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 0x1_00_00_00)) ^ 0xffff_ffff) * -1) - 1);\n        }\n        const dvI = new DataView(value.buffer, value.byteOffset);\n        if (count === 8) {\n            return dvI.getBigInt64(0, true);\n        }\n        let result = BigInt(0);\n        const mod = count % 2;\n        for (let i = count - 2; i >= mod; i -= 2) {\n            result = (result * U16_MAX) + BigInt(dvI.getUint16(i, true) ^ 0xffff);\n        }\n        if (mod) {\n            result = (result * U8_MAX) + BigInt(value[0] ^ 0xff);\n        }\n        return (result * -_1n) - _1n;\n    }\n    switch (count) {\n        case 0:\n            return BigInt(0);\n        case 1:\n            return BigInt(value[0]);\n        case 2:\n            return BigInt(value[0] + (value[1] << 8));\n        case 4:\n            return BigInt(value[0] + (value[1] << 8) + (value[2] << 16) + (value[3] * 0x1_00_00_00));\n    }\n    const dvI = new DataView(value.buffer, value.byteOffset);\n    switch (count) {\n        case 8:\n            return dvI.getBigUint64(0, true);\n        case 16:\n            return (dvI.getBigUint64(8, true) * U64_MAX) + dvI.getBigUint64(0, true);\n        default: {\n            let result = BigInt(0);\n            const mod = count % 2;\n            for (let i = count - 2; i >= mod; i -= 2) {\n                result = (result * U16_MAX) + BigInt(dvI.getUint16(i, true));\n            }\n            if (mod) {\n                result = (result * U8_MAX) + BigInt(value[0]);\n            }\n            return result;\n        }\n    }\n}\n","const CHR = '0123456789abcdef';\nconst U8 = new Uint8Array(256);\nconst U16 = new Uint8Array(256 * 256);\nfor (let i = 0, count = CHR.length; i < count; i++) {\n    U8[CHR[i].charCodeAt(0) | 0] = i | 0;\n    if (i > 9) {\n        U8[CHR[i].toUpperCase().charCodeAt(0) | 0] = i | 0;\n    }\n}\nfor (let i = 0; i < 256; i++) {\n    const s = i << 8;\n    for (let j = 0; j < 256; j++) {\n        U16[s | j] = (U8[i] << 4) | U8[j];\n    }\n}\n/**\n * @name hexToU8a\n * @summary Creates a Uint8Array object from a hex string.\n * @description\n * `null` inputs returns an empty `Uint8Array` result. Hex input values return the actual bytes value converted to a Uint8Array. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToU8a } from '@polkadot/util';\n *\n * hexToU8a('0x80001f'); // Uint8Array([0x80, 0x00, 0x1f])\n * hexToU8a('0x80001f', 32); // Uint8Array([0x00, 0x80, 0x00, 0x1f])\n * ```\n */\nexport function hexToU8a(value, bitLength = -1) {\n    if (!value) {\n        return new Uint8Array();\n    }\n    let s = value.startsWith('0x')\n        ? 2\n        : 0;\n    const decLength = Math.ceil((value.length - s) / 2);\n    const endLength = Math.ceil(bitLength === -1\n        ? decLength\n        : bitLength / 8);\n    const result = new Uint8Array(endLength);\n    const offset = endLength > decLength\n        ? endLength - decLength\n        : 0;\n    for (let i = offset; i < endLength; i++, s += 2) {\n        // The big factor here is actually the string lookups. If we do\n        // HEX_TO_U16[value.substring()] we get an 10x slowdown. In the\n        // same vein using charCodeAt (as opposed to value[s] or value.charAt(s)) is\n        // also the faster operation by at least 2x with the character map above\n        result[i] = U16[(value.charCodeAt(s) << 8) | value.charCodeAt(s + 1)];\n    }\n    return result;\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import { BN } from '../bn/bn.js';\n/**\n * @name isBn\n * @summary Tests for a `BN` object instance.\n * @description\n * Checks to see if the input object is an instance of `BN` (bn.js).\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { isBn } from '@polkadot/util';\n *\n * console.log('isBn', isBn(new BN(1))); // => true\n * ```\n */\nexport function isBn(value) {\n    return BN.isBN(value);\n}\n","export const REGEX_HEX_PREFIXED = /^0x[\\da-fA-F]+$/;\nexport const REGEX_HEX_NOPREFIX = /^[\\da-fA-F]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\nexport function isHex(value, bitLength = -1, ignoreLength) {\n    return (typeof value === 'string' && (value === '0x' ||\n        REGEX_HEX_PREFIXED.test(value))) && (bitLength === -1\n        ? (ignoreLength || (value.length % 2 === 0))\n        : (value.length === (2 + Math.ceil(bitLength / 4))));\n}\n","/**\n * @name isObject\n * @summary Tests for an `object`.\n * @description\n * Checks to see if the input value is a JavaScript object.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isObject } from '@polkadot/util';\n *\n * isObject({}); // => true\n * isObject('something'); // => false\n * ```\n */\nexport function isObject(value) {\n    return !!value && typeof value === 'object';\n}\n","import { isFunction } from './function.js';\nimport { isObject } from './object.js';\nexport function isOn(...fns) {\n    return (value) => (isObject(value) || isFunction(value)) &&\n        fns.every((f) => isFunction(value[f]));\n}\nexport function isOnFunction(...fns) {\n    return (value) => isFunction(value) &&\n        fns.every((f) => isFunction(value[f]));\n}\nexport function isOnObject(...fns) {\n    return (value) => isObject(value) &&\n        fns.every((f) => isFunction(value[f]));\n}\n","import { isOn } from './helpers.js';\nexport const isToBigInt = /*#__PURE__*/ isOn('toBigInt');\n","import { isOn } from './helpers.js';\nexport const isToBn = /*#__PURE__*/ isOn('toBn');\n","import { BigInt } from '@polkadot/x-bigint';\nimport { xglobal } from '@polkadot/x-global';\n/** true if the environment has proper BigInt support */\nexport const hasBigInt = typeof BigInt === 'function' && typeof BigInt.asIntN === 'function';\n/** true if the environment is CJS */\nexport const hasCjs = typeof require === 'function' && typeof module !== 'undefined';\n/** true if the environment has __dirname available */\nexport const hasDirname = typeof __dirname !== 'undefined';\n/** true if the environment is ESM */\nexport const hasEsm = !hasCjs;\n/** true if the environment has WebAssembly available */\nexport const hasWasm = typeof WebAssembly !== 'undefined';\n/** true if the environment has support for Buffer (typically Node.js) */\nexport const hasBuffer = typeof xglobal.Buffer === 'function' && typeof xglobal.Buffer.isBuffer === 'function';\n/** true if the environment has process available (typically Node.js) */\nexport const hasProcess = typeof xglobal.process === 'object';\n","import { xglobal } from '@polkadot/x-global';\nimport { hasBuffer } from '../has.js';\nimport { isFunction } from './function.js';\n/**\n * @name isBuffer\n * @summary Tests for a `Buffer` object instance.\n * @description\n * Checks to see if the input object is an instance of `Buffer`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBuffer } from '@polkadot/util';\n *\n * console.log('isBuffer', isBuffer(Buffer.from([]))); // => true\n * ```\n */\nexport function isBuffer(value) {\n    // we do check a function first, since it is slightly faster than isBuffer itself\n    return hasBuffer && !!value && isFunction(value.readDoubleLE) && xglobal.Buffer.isBuffer(value);\n}\n","/**\n * @name isU8a\n * @summary Tests for a `Uint8Array` object instance.\n * @description\n * Checks to see if the input object is an instance of `Uint8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isUint8Array } from '@polkadot/util';\n *\n * console.log('isU8a', isU8a([])); // => false\n * ```\n */\nexport function isU8a(value) {\n    // here we defer the instanceof check which is actually slightly\n    // slower than just checking the constrctor (direct instances)\n    return (((value && value.constructor) === Uint8Array) ||\n        value instanceof Uint8Array);\n}\n","import { TextEncoder } from '@polkadot/x-textencoder';\nconst encoder = new TextEncoder();\n/**\n * @name stringToU8a\n * @summary Creates a Uint8Array object from a utf-8 string.\n * @description\n * String input values return the actual encoded `UInt8Array`. `null` or `undefined` values returns an empty encoded array.\n * @example\n * <BR>\n *\n * ```javascript\n * import { stringToU8a } from '@polkadot/util';\n *\n * stringToU8a('hello'); // [0x68, 0x65, 0x6c, 0x6c, 0x6f]\n * ```\n */\nexport function stringToU8a(value) {\n    return value\n        ? encoder.encode(value.toString())\n        : new Uint8Array();\n}\n","import { hexToU8a } from '../hex/toU8a.js';\nimport { isBuffer } from '../is/buffer.js';\nimport { isHex } from '../is/hex.js';\nimport { isU8a } from '../is/u8a.js';\nimport { stringToU8a } from '../string/toU8a.js';\n/**\n * @name u8aToU8a\n * @summary Creates a Uint8Array value from a Uint8Array, Buffer, string or hex input.\n * @description\n * `null` or `undefined` inputs returns a `[]` result, Uint8Array values returns the value, hex strings returns a Uint8Array representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToU8a } from '@polkadot/util';\n *\n * u8aToU8a(new Uint8Array([0x12, 0x34]); // => Uint8Array([0x12, 0x34])\n * u8aToU8a(0x1234); // => Uint8Array([0x12, 0x34])\n * ```\n */\nexport function u8aToU8a(value) {\n    return isU8a(value)\n        // NOTE isBuffer needs to go here since it actually extends\n        // Uint8Array on Node.js environments, so all Buffer are Uint8Array,\n        // but Uint8Array is not Buffer\n        ? isBuffer(value)\n            ? new Uint8Array(value)\n            : value\n        : isHex(value)\n            ? hexToU8a(value)\n            : Array.isArray(value)\n                ? new Uint8Array(value)\n                : stringToU8a(value);\n}\n","import { u8aToU8a } from './toU8a.js';\n/**\n * @name u8aConcat\n * @summary Creates a concatenated Uint8Array from the inputs.\n * @description\n * Concatenates the input arrays into a single `UInt8Array`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { { u8aConcat } from '@polkadot/util';\n *\n * u8aConcat(\n *   new Uint8Array([1, 2, 3]),\n *   new Uint8Array([4, 5, 6])\n * ); // [1, 2, 3, 4, 5, 6]\n * ```\n */\nexport function u8aConcat(...list) {\n    const count = list.length;\n    const u8as = new Array(count);\n    let length = 0;\n    for (let i = 0; i < count; i++) {\n        u8as[i] = u8aToU8a(list[i]);\n        length += u8as[i].length;\n    }\n    return u8aConcatStrict(u8as, length);\n}\n/**\n * @name u8aConcatStrict\n * @description A strict version of [[u8aConcat]], accepting only Uint8Array inputs\n */\nexport function u8aConcatStrict(u8as, length = 0) {\n    const count = u8as.length;\n    let offset = 0;\n    if (!length) {\n        for (let i = 0; i < count; i++) {\n            length += u8as[i].length;\n        }\n    }\n    const result = new Uint8Array(length);\n    for (let i = 0; i < count; i++) {\n        result.set(u8as[i], offset);\n        offset += u8as[i].length;\n    }\n    return result;\n}\n","const U8 = new Array(256);\nconst U16 = new Array(256 * 256);\nfor (let n = 0; n < 256; n++) {\n    U8[n] = n.toString(16).padStart(2, '0');\n}\nfor (let i = 0; i < 256; i++) {\n    const s = i << 8;\n    for (let j = 0; j < 256; j++) {\n        U16[s | j] = U8[i] + U8[j];\n    }\n}\n/** @internal */\nfunction hex(value, result) {\n    const mod = (value.length % 2) | 0;\n    const length = (value.length - mod) | 0;\n    for (let i = 0; i < length; i += 2) {\n        result += U16[(value[i] << 8) | value[i + 1]];\n    }\n    if (mod) {\n        result += U8[value[length] | 0];\n    }\n    return result;\n}\n/**\n * @name u8aToHex\n * @summary Creates a hex string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual hex string. `null` or `undefined` values returns an `0x` string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToHex } from '@polkadot/util';\n *\n * u8aToHex(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0xf])); // 0x68656c0f\n * ```\n */\nexport function u8aToHex(value, bitLength = -1, isPrefixed = true) {\n    // this is not 100% correct sinmce we support isPrefixed = false....\n    const empty = isPrefixed\n        ? '0x'\n        : '';\n    if (!value?.length) {\n        return empty;\n    }\n    else if (bitLength > 0) {\n        const length = Math.ceil(bitLength / 8);\n        if (value.length > length) {\n            return `${hex(value.subarray(0, length / 2), empty)}…${hex(value.subarray(value.length - length / 2), '')}`;\n        }\n    }\n    return hex(value, empty);\n}\n","import { TextDecoder } from '@polkadot/x-textdecoder';\nconst decoder = new TextDecoder('utf-8');\n/**\n * @name u8aToString\n * @summary Creates a utf-8 string from a Uint8Array object.\n * @description\n * `UInt8Array` input values return the actual decoded utf-8 string. `null` or `undefined` values returns an empty string.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aToString } from '@polkadot/util';\n *\n * u8aToString(new Uint8Array([0x68, 0x65, 0x6c, 0x6c, 0x6f])); // hello\n * ```\n */\nexport function u8aToString(value) {\n    return value\n        ? decoder.decode(value)\n        : '';\n}\n","import { u8aConcatStrict } from './concat.js';\nimport { u8aEq } from './eq.js';\nimport { u8aToU8a } from './toU8a.js';\n/** @internal */\nexport const U8A_WRAP_ETHEREUM = /*#__PURE__*/ u8aToU8a('\\x19Ethereum Signed Message:\\n');\n/** @internal */\nexport const U8A_WRAP_PREFIX = /*#__PURE__*/ u8aToU8a('<Bytes>');\n/** @internal */\nexport const U8A_WRAP_POSTFIX = /*#__PURE__*/ u8aToU8a('</Bytes>');\nconst WRAP_LEN = U8A_WRAP_PREFIX.length + U8A_WRAP_POSTFIX.length;\n/** @internal */\nexport function u8aIsWrapped(u8a, withEthereum) {\n    return ((u8a.length >= WRAP_LEN &&\n        u8aEq(u8a.subarray(0, U8A_WRAP_PREFIX.length), U8A_WRAP_PREFIX) &&\n        u8aEq(u8a.slice(-U8A_WRAP_POSTFIX.length), U8A_WRAP_POSTFIX)) ||\n        (withEthereum &&\n            u8a.length >= U8A_WRAP_ETHEREUM.length &&\n            u8aEq(u8a.subarray(0, U8A_WRAP_ETHEREUM.length), U8A_WRAP_ETHEREUM)));\n}\n/**\n * @name u8aUnwrapBytes\n * @description Removes all <Bytes>...</Bytes> wrappers from the supplied value\n */\nexport function u8aUnwrapBytes(bytes) {\n    const u8a = u8aToU8a(bytes);\n    // we don't want to unwrap Ethereum-style wraps\n    return u8aIsWrapped(u8a, false)\n        ? u8a.subarray(U8A_WRAP_PREFIX.length, u8a.length - U8A_WRAP_POSTFIX.length)\n        : u8a;\n}\n/**\n * @name u8aWrapBytes\n * @description\n * Adds a <Bytes>...</Bytes> wrapper to the supplied value, if\n * - We don't already have a Bytes wrapper\n * - The message is not an Ethereum-style message\n */\nexport function u8aWrapBytes(bytes) {\n    const u8a = u8aToU8a(bytes);\n    return u8aIsWrapped(u8a, true)\n        ? u8a\n        : u8aConcatStrict([U8A_WRAP_PREFIX, u8a, U8A_WRAP_POSTFIX]);\n}\n","import { REGEX_HEX_NOPREFIX, REGEX_HEX_PREFIXED } from '../is/hex.js';\n/**\n * @name hexStripPrefix\n * @summary Strips any leading `0x` prefix.\n * @description\n * Tests for the existence of a `0x` prefix, and returns the value without the prefix. Un-prefixed values are returned as-is.\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexStripPrefix } from '@polkadot/util';\n *\n * console.log('stripped', hexStripPrefix('0x1234')); // => 1234\n * ```\n */\nexport function hexStripPrefix(value) {\n    if (!value || value === '0x') {\n        return '';\n    }\n    else if (REGEX_HEX_PREFIXED.test(value)) {\n        return value.substring(2);\n    }\n    else if (REGEX_HEX_NOPREFIX.test(value)) {\n        return value;\n    }\n    throw new Error(`Expected hex value to convert, found '${value}'`);\n}\n","import { BN } from '../bn/bn.js';\nimport { hexStripPrefix } from './stripPrefix.js';\n/**\n * @name hexToBn\n * @summary Creates a BN.js object from a hex string.\n * @description\n * `null` inputs returns a `BN(0)` result. Hex input values return the actual value converted to a BN. Anything that is not a hex string (including the `0x` prefix) throws an error.\n * @param _value The value to convert\n * @param _options Options to pass while converting\n * @param _options.isLe Convert using Little Endian\n * @param _options.isNegative Convert using two's complement\n * @example\n * <BR>\n *\n * ```javascript\n * import { hexToBn } from '@polkadot/util';\n *\n * hexToBn('0x123480001f'); // => BN(0x123480001f)\n * ```\n */\nexport function hexToBn(value, { isLe = false, isNegative = false } = {}) {\n    if (!value || value === '0x') {\n        return new BN(0);\n    }\n    const stripped = hexStripPrefix(value);\n    const bn = new BN(stripped, 16, isLe ? 'le' : 'be');\n    // fromTwos takes as parameter the number of bits, which is the hex length\n    // multiplied by 4 (2 bytes being 8 bits)\n    return isNegative\n        ? bn.fromTwos(stripped.length * 4)\n        : bn;\n}\n","import { BN } from './bn.js';\n/**\n * @name BN_ZERO\n * @summary BN constant for 0.\n */\nexport const BN_ZERO = /*#__PURE__*/ new BN(0);\n/**\n * @name BN_ONE\n * @summary BN constant for 1.\n */\nexport const BN_ONE = /*#__PURE__*/ new BN(1);\n/**\n * @name BN_TWO\n * @summary BN constant for 2.\n */\nexport const BN_TWO = /*#__PURE__*/ new BN(2);\n/**\n * @name BN_THREE\n * @summary BN constant for 3.\n */\nexport const BN_THREE = /*#__PURE__*/ new BN(3);\n/**\n * @name BN_FOUR\n * @summary BN constant for 4.\n */\nexport const BN_FOUR = /*#__PURE__*/ new BN(4);\n/**\n * @name BN_FIVE\n * @summary BN constant for 5.\n */\nexport const BN_FIVE = /*#__PURE__*/ new BN(5);\n/**\n * @name BN_SIX\n * @summary BN constant for 6.\n */\nexport const BN_SIX = /*#__PURE__*/ new BN(6);\n/**\n * @name BN_SEVEN\n * @summary BN constant for 7.\n */\nexport const BN_SEVEN = /*#__PURE__*/ new BN(7);\n/**\n * @name BN_EIGHT\n * @summary BN constant for 8.\n */\nexport const BN_EIGHT = /*#__PURE__*/ new BN(8);\n/**\n * @name BN_NINE\n * @summary BN constant for 9.\n */\nexport const BN_NINE = /*#__PURE__*/ new BN(9);\n/**\n * @name BN_TEN\n * @summary BN constant for 10.\n */\nexport const BN_TEN = /*#__PURE__*/ new BN(10);\n/**\n * @name BN_HUNDRED\n * @summary BN constant for 100.\n */\nexport const BN_HUNDRED = /*#__PURE__*/ new BN(100);\n/**\n * @name BN_THOUSAND\n * @summary BN constant for 1,000.\n */\nexport const BN_THOUSAND = /*#__PURE__*/ new BN(1_000);\n/**\n * @name BN_MILLION\n * @summary BN constant for 1,000,000.\n */\nexport const BN_MILLION = /*#__PURE__*/ new BN(1_000_000);\n/**\n * @name BN_BILLION\n * @summary BN constant for 1,000,000,000.\n */\nexport const BN_BILLION = /*#__PURE__*/ new BN(1_000_000_000);\n/**\n * @name BN_QUINTILL\n * @summary BN constant for 1,000,000,000,000,000,000.\n */\nexport const BN_QUINTILL = BN_BILLION.mul(BN_BILLION);\n/**\n * @name BN_MAX_INTEGER\n * @summary BN constant for MAX_SAFE_INTEGER\n */\nexport const BN_MAX_INTEGER = /*#__PURE__*/ new BN(Number.MAX_SAFE_INTEGER);\n/**\n * @name BN_SQRT_MAX_INTEGER\n * @summary BN constant for Math.sqrt(MAX_SAFE_INTEGER)\n */\nexport const BN_SQRT_MAX_INTEGER = /*#__PURE__*/ new BN(94906265);\n","/**\n * @name isBigInt\n * @summary Tests for a `BigInt` object instance.\n * @description\n * Checks to see if the input object is an instance of `BigInt`\n * @example\n * <BR>\n *\n * ```javascript\n * import { isBigInt } from '@polkadot/util';\n *\n * console.log('isBigInt', isBigInt(123_456n)); // => true\n * ```\n */\nexport function isBigInt(value) {\n    return typeof value === 'bigint';\n}\n","import { hexToBn } from '../hex/toBn.js';\nimport { isBigInt } from '../is/bigInt.js';\nimport { isHex } from '../is/hex.js';\nimport { isToBigInt } from '../is/toBigInt.js';\nimport { isToBn } from '../is/toBn.js';\nimport { BN } from './bn.js';\n/**\n * @name bnToBn\n * @summary Creates a BN value from a BN, bigint, string (base 10 or hex) or number input.\n * @description\n * `null` inputs returns a `0x0` result, BN values returns the value, numbers returns a BN representation.\n * @example\n * <BR>\n *\n * ```javascript\n * import BN from 'bn.js';\n * import { bnToBn } from '@polkadot/util';\n *\n * bnToBn(0x1234); // => BN(0x1234)\n * bnToBn(new BN(0x1234)); // => BN(0x1234)\n * ```\n */\nexport function bnToBn(value) {\n    return value\n        ? BN.isBN(value)\n            ? value\n            : isHex(value)\n                ? hexToBn(value.toString())\n                : isBigInt(value)\n                    ? new BN(value.toString())\n                    : isToBn(value)\n                        ? value.toBn()\n                        : isToBigInt(value)\n                            ? new BN(value.toBigInt().toString())\n                            : new BN(value)\n        : new BN(0);\n}\n","import { bnToBn } from './toBn.js';\nconst DEFAULT_OPTS = { bitLength: -1, isLe: true, isNegative: false };\n/**\n * @name bnToU8a\n * @summary Creates a Uint8Array object from a BN.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `Uint8Array` result. `BN` input values return the actual bytes value converted to a `Uint8Array`. Optionally convert using little-endian format if `isLE` is set.\n * @example\n * <BR>\n *\n * ```javascript\n * import { bnToU8a } from '@polkadot/util';\n *\n * bnToU8a(new BN(0x1234)); // => [0x12, 0x34]\n * ```\n */\nexport function bnToU8a(value, { bitLength = -1, isLe = true, isNegative = false } = DEFAULT_OPTS) {\n    const valueBn = bnToBn(value);\n    const byteLength = bitLength === -1\n        ? Math.ceil(valueBn.bitLength() / 8)\n        : Math.ceil((bitLength || 0) / 8);\n    if (!value) {\n        return bitLength === -1\n            ? new Uint8Array(1)\n            : new Uint8Array(byteLength);\n    }\n    const output = new Uint8Array(byteLength);\n    const bn = isNegative\n        ? valueBn.toTwos(byteLength * 8)\n        : valueBn;\n    output.set(bn.toArray(isLe ? 'le' : 'be', byteLength), 0);\n    return output;\n}\n","import { BN, BN_ONE, BN_TWO, bnToBn, bnToU8a } from '../bn/index.js';\nimport { u8aConcatStrict } from '../u8a/index.js';\nconst MAX_U8 = BN_TWO.pow(new BN(8 - 2)).isub(BN_ONE);\nconst MAX_U16 = BN_TWO.pow(new BN(16 - 2)).isub(BN_ONE);\nconst MAX_U32 = BN_TWO.pow(new BN(32 - 2)).isub(BN_ONE);\nconst BL_16 = { bitLength: 16 };\nconst BL_32 = { bitLength: 32 };\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\nexport function compactToU8a(value) {\n    const bn = bnToBn(value);\n    if (bn.lte(MAX_U8)) {\n        return new Uint8Array([bn.toNumber() << 2]);\n    }\n    else if (bn.lte(MAX_U16)) {\n        return bnToU8a(bn.shln(2).iadd(BN_ONE), BL_16);\n    }\n    else if (bn.lte(MAX_U32)) {\n        return bnToU8a(bn.shln(2).iadd(BN_TWO), BL_32);\n    }\n    const u8a = bnToU8a(bn);\n    let length = u8a.length;\n    // adjust to the minimum number of bytes\n    while (u8a[length - 1] === 0) {\n        length--;\n    }\n    if (length < 4) {\n        throw new Error('Invalid length, previous checks match anything less than 2^30');\n    }\n    return u8aConcatStrict([\n        // subtract 4 as minimum (also catered for in decoding)\n        new Uint8Array([((length - 4) << 2) + 0b11]),\n        u8a.subarray(0, length)\n    ]);\n}\n","import { u8aConcatStrict } from '../u8a/index.js';\nimport { compactToU8a } from './toU8a.js';\n/**\n * @name compactAddLength\n * @description Adds a length prefix to the input value\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactAddLength } from '@polkadot/util';\n *\n * console.log(compactAddLength(new Uint8Array([0xde, 0xad, 0xbe, 0xef]))); // Uint8Array([4 << 2, 0xde, 0xad, 0xbe, 0xef])\n * ```\n */\nexport function compactAddLength(input) {\n    return u8aConcatStrict([\n        compactToU8a(input.length),\n        input\n    ]);\n}\n","/** @internal */\nfunction zeroPad(value) {\n    return value.toString().padStart(2, '0');\n}\n/**\n * @name formatDate\n * @description Formats a date in CCYY-MM-DD HH:MM:SS format\n */\nexport function formatDate(date) {\n    const year = date.getFullYear().toString();\n    const month = zeroPad((date.getMonth() + 1));\n    const day = zeroPad(date.getDate());\n    const hour = zeroPad(date.getHours());\n    const minute = zeroPad(date.getMinutes());\n    const second = zeroPad(date.getSeconds());\n    return `${year}-${month}-${day} ${hour}:${minute}:${second}`;\n}\n","/**\n * A sharable identity function. Returns the input as-is with no transformation applied.\n */\nexport function identity(value) {\n    return value;\n}\n/**\n * A sharable noop function. As the name suggests, does nothing\n */\nexport function noop() {\n    // noop\n}\n","import { xglobal } from '@polkadot/x-global';\nimport { formatDate } from './format/formatDate.js';\nimport { isBn } from './is/bn.js';\nimport { isBuffer } from './is/buffer.js';\nimport { isFunction } from './is/function.js';\nimport { isObject } from './is/object.js';\nimport { isU8a } from './is/u8a.js';\nimport { u8aToHex } from './u8a/toHex.js';\nimport { u8aToU8a } from './u8a/toU8a.js';\nimport { noop } from './noop.js';\nconst logTo = {\n    debug: 'log',\n    error: 'error',\n    log: 'log',\n    warn: 'warn'\n};\nfunction formatOther(value) {\n    if (value && isObject(value) && value.constructor === Object) {\n        const result = {};\n        for (const [k, v] of Object.entries(value)) {\n            result[k] = loggerFormat(v);\n        }\n        return result;\n    }\n    return value;\n}\nexport function loggerFormat(value) {\n    if (Array.isArray(value)) {\n        return value.map(loggerFormat);\n    }\n    else if (isBn(value)) {\n        return value.toString();\n    }\n    else if (isU8a(value) || isBuffer(value)) {\n        return u8aToHex(u8aToU8a(value));\n    }\n    return formatOther(value);\n}\nfunction formatWithLength(maxLength) {\n    return (v) => {\n        if (maxLength <= 0) {\n            return v;\n        }\n        const r = `${v}`;\n        return r.length < maxLength\n            ? v\n            : `${r.substring(0, maxLength)} ...`;\n    };\n}\nfunction apply(log, type, values, maxSize = -1) {\n    if (values.length === 1 && isFunction(values[0])) {\n        const fnResult = values[0]();\n        return apply(log, type, Array.isArray(fnResult) ? fnResult : [fnResult], maxSize);\n    }\n    console[logTo[log]](formatDate(new Date()), type, ...values\n        .map(loggerFormat)\n        .map(formatWithLength(maxSize)));\n}\nfunction isDebugOn(e, type) {\n    return !!e && (e === '*' ||\n        type === e ||\n        (e.endsWith('*') &&\n            type.startsWith(e.slice(0, -1))));\n}\nfunction isDebugOff(e, type) {\n    return !!e && (e.startsWith('-') &&\n        (type === e.slice(1) ||\n            (e.endsWith('*') &&\n                type.startsWith(e.slice(1, -1)))));\n}\nfunction getDebugFlag(env, type) {\n    let flag = false;\n    for (const e of env) {\n        if (isDebugOn(e, type)) {\n            flag = true;\n        }\n        else if (isDebugOff(e, type)) {\n            flag = false;\n        }\n    }\n    return flag;\n}\nfunction parseEnv(type) {\n    const maxSize = parseInt(xglobal.process?.env?.['DEBUG_MAX'] || '-1', 10);\n    return [\n        getDebugFlag((xglobal.process?.env?.['DEBUG'] || '').toLowerCase().split(','), type),\n        isNaN(maxSize)\n            ? -1\n            : maxSize\n    ];\n}\n/**\n * @name Logger\n * @summary Creates a consistent log interface for messages\n * @description\n * Returns a `Logger` that has `.log`, `.error`, `.warn` and `.debug` (controlled with environment `DEBUG=typeA,typeB`) methods. Logging is done with a consistent prefix (type of logger, date) followed by the actual message using the underlying console.\n * @example\n * <BR>\n *\n * ```javascript\n * import { logger } from '@polkadot/util';\n *\n * const l = logger('test');\n * ```\n */\nexport function logger(origin) {\n    const type = `${origin.toUpperCase()}:`.padStart(16);\n    const [isDebug, maxSize] = parseEnv(origin.toLowerCase());\n    return {\n        debug: isDebug\n            ? (...values) => apply('debug', type, values, maxSize)\n            : noop,\n        error: (...values) => apply('error', type, values),\n        log: (...values) => apply('log', type, values),\n        noop,\n        warn: (...values) => apply('warn', type, values)\n    };\n}\n","export const packageInfo = { name: '@polkadot/wasm-crypto', path: (import.meta && import.meta.url) ? new URL(import.meta.url).pathname.substring(0, new URL(import.meta.url).pathname.lastIndexOf('/') + 1) : 'auto', type: 'esm', version: '7.4.1' };\n","import { getRandomValues } from '@polkadot/x-randomvalues';\nconst DEFAULT_CRYPTO = { getRandomValues };\nconst DEFAULT_SELF = { crypto: DEFAULT_CRYPTO };\n/**\n * @name Wbg\n * @description\n * This defines the internal interfaces that wasm-bindgen used to communicate\n * with the host layer. None of these functions are available to the user, rather\n * they are called internally from the WASM code itself.\n *\n * The interfaces here are exposed in the imports on the created WASM interfaces.\n *\n * Internally the implementation does a thin layer into the supplied bridge.\n */\nexport class Wbg {\n    __internal__bridge;\n    constructor(bridge) {\n        this.__internal__bridge = bridge;\n    }\n    /** @internal */\n    abort = () => {\n        throw new Error('abort');\n    };\n    /** @internal */\n    __wbindgen_is_undefined = (idx) => {\n        return this.__internal__bridge.getObject(idx) === undefined;\n    };\n    /** @internal */\n    __wbindgen_throw = (ptr, len) => {\n        throw new Error(this.__internal__bridge.getString(ptr, len));\n    };\n    /** @internal */\n    __wbg_self_1b7a39e3a92c949c = () => {\n        return this.__internal__bridge.addObject(DEFAULT_SELF);\n    };\n    /** @internal */\n    __wbg_require_604837428532a733 = (ptr, len) => {\n        throw new Error(`Unable to require ${this.__internal__bridge.getString(ptr, len)}`);\n    };\n    /** @internal */\n    __wbg_crypto_968f1772287e2df0 = (_idx) => {\n        return this.__internal__bridge.addObject(DEFAULT_CRYPTO);\n    };\n    /** @internal */\n    __wbg_getRandomValues_a3d34b4fee3c2869 = (_idx) => {\n        return this.__internal__bridge.addObject(DEFAULT_CRYPTO.getRandomValues);\n    };\n    /** @internal */\n    __wbg_getRandomValues_f5e14ab7ac8e995d = (_arg0, ptr, len) => {\n        DEFAULT_CRYPTO.getRandomValues(this.__internal__bridge.getU8a(ptr, len));\n    };\n    /** @internal */\n    __wbg_randomFillSync_d5bd2d655fdf256a = (_idx, _ptr, _len) => {\n        throw new Error('randomFillsync is not available');\n        // getObject(idx).randomFillSync(getU8a(ptr, len));\n    };\n    /** @internal */\n    __wbindgen_object_drop_ref = (idx) => {\n        this.__internal__bridge.takeObject(idx);\n    };\n}\n","import { stringToU8a, u8aToString } from '@polkadot/util';\nimport { Wbg } from './wbg.js';\n/**\n * @name Bridge\n * @description\n * Creates a bridge between the JS and WASM environments.\n *\n * For any bridge it is passed an function which is then called internally at the\n * time of initialization. This affectively implements the layer between WASM and\n * the native environment, providing all the plumbing needed for the Wbg classes.\n */\nexport class Bridge {\n    __internal__createWasm;\n    __internal__heap;\n    __internal__wbg;\n    __internal__cachegetInt32;\n    __internal__cachegetUint8;\n    __internal__heapNext;\n    __internal__wasm;\n    __internal__wasmError;\n    __internal__wasmPromise;\n    __internal__type;\n    constructor(createWasm) {\n        this.__internal__createWasm = createWasm;\n        this.__internal__cachegetInt32 = null;\n        this.__internal__cachegetUint8 = null;\n        this.__internal__heap = new Array(32)\n            .fill(undefined)\n            .concat(undefined, null, true, false);\n        this.__internal__heapNext = this.__internal__heap.length;\n        this.__internal__type = 'none';\n        this.__internal__wasm = null;\n        this.__internal__wasmError = null;\n        this.__internal__wasmPromise = null;\n        this.__internal__wbg = { ...new Wbg(this) };\n    }\n    /** @description Returns the init error */\n    get error() {\n        return this.__internal__wasmError;\n    }\n    /** @description Returns the init type */\n    get type() {\n        return this.__internal__type;\n    }\n    /** @description Returns the created wasm interface */\n    get wasm() {\n        return this.__internal__wasm;\n    }\n    /** @description Performs the wasm initialization */\n    async init(createWasm) {\n        if (!this.__internal__wasmPromise || createWasm) {\n            this.__internal__wasmPromise = (createWasm || this.__internal__createWasm)(this.__internal__wbg);\n        }\n        const { error, type, wasm } = await this.__internal__wasmPromise;\n        this.__internal__type = type;\n        this.__internal__wasm = wasm;\n        this.__internal__wasmError = error;\n        return this.__internal__wasm;\n    }\n    /**\n     * @internal\n     * @description Gets an object from the heap\n     */\n    getObject(idx) {\n        return this.__internal__heap[idx];\n    }\n    /**\n     * @internal\n     * @description Removes an object from the heap\n     */\n    dropObject(idx) {\n        if (idx < 36) {\n            return;\n        }\n        this.__internal__heap[idx] = this.__internal__heapNext;\n        this.__internal__heapNext = idx;\n    }\n    /**\n     * @internal\n     * @description Retrieves and removes an object to the heap\n     */\n    takeObject(idx) {\n        const ret = this.getObject(idx);\n        this.dropObject(idx);\n        return ret;\n    }\n    /**\n     * @internal\n     * @description Adds an object to the heap\n     */\n    addObject(obj) {\n        if (this.__internal__heapNext === this.__internal__heap.length) {\n            this.__internal__heap.push(this.__internal__heap.length + 1);\n        }\n        const idx = this.__internal__heapNext;\n        this.__internal__heapNext = this.__internal__heap[idx];\n        this.__internal__heap[idx] = obj;\n        return idx;\n    }\n    /**\n     * @internal\n     * @description Retrieve an Int32 in the WASM interface\n     */\n    getInt32() {\n        if (this.__internal__cachegetInt32 === null || this.__internal__cachegetInt32.buffer !== this.__internal__wasm.memory.buffer) {\n            this.__internal__cachegetInt32 = new Int32Array(this.__internal__wasm.memory.buffer);\n        }\n        return this.__internal__cachegetInt32;\n    }\n    /**\n     * @internal\n     * @description Retrieve an Uint8Array in the WASM interface\n     */\n    getUint8() {\n        if (this.__internal__cachegetUint8 === null || this.__internal__cachegetUint8.buffer !== this.__internal__wasm.memory.buffer) {\n            this.__internal__cachegetUint8 = new Uint8Array(this.__internal__wasm.memory.buffer);\n        }\n        return this.__internal__cachegetUint8;\n    }\n    /**\n     * @internal\n     * @description Retrieves an Uint8Array in the WASM interface\n     */\n    getU8a(ptr, len) {\n        return this.getUint8().subarray(ptr / 1, ptr / 1 + len);\n    }\n    /**\n     * @internal\n     * @description Retrieves a string in the WASM interface\n     */\n    getString(ptr, len) {\n        return u8aToString(this.getU8a(ptr, len));\n    }\n    /**\n     * @internal\n     * @description Allocates an Uint8Array in the WASM interface\n     */\n    allocU8a(arg) {\n        const ptr = this.__internal__wasm.__wbindgen_malloc(arg.length * 1);\n        this.getUint8().set(arg, ptr / 1);\n        return [ptr, arg.length];\n    }\n    /**\n     * @internal\n     * @description Allocates a string in the WASM interface\n     */\n    allocString(arg) {\n        return this.allocU8a(stringToU8a(arg));\n    }\n    /**\n     * @internal\n     * @description Retrieves an Uint8Array from the WASM interface\n     */\n    resultU8a() {\n        const r0 = this.getInt32()[8 / 4 + 0];\n        const r1 = this.getInt32()[8 / 4 + 1];\n        const ret = this.getU8a(r0, r1).slice();\n        this.__internal__wasm.__wbindgen_free(r0, r1 * 1);\n        return ret;\n    }\n    /**\n     * @internal\n     * @description Retrieve a string from the WASM interface\n     */\n    resultString() {\n        return u8aToString(this.resultU8a());\n    }\n}\n","import { Bridge } from '@polkadot/wasm-bridge';\nimport { createWasm } from '@polkadot/wasm-crypto-init';\n/**\n * @name bridge\n * @description\n * The JS <-> WASM bridge that is in operation. For the specific package\n * it is a global, i.e. all operations happens on this specific bridge\n */\nexport const bridge = new Bridge(createWasm);\n/**\n * @name initBridge\n * @description\n * Creates a new bridge interface with the (optional) initialization function\n */\nexport async function initBridge(createWasm) {\n    return bridge.init(createWasm);\n}\n","import { bridge, initBridge } from './init.js';\nexport { packageInfo } from './packageInfo.js';\nexport { bridge };\n/**\n * @internal\n * @description\n * This create an extenal interface function from the signature, all the while checking\n * the actual bridge wasm interface to ensure it has been initialized.\n *\n * This means that we can call it\n *\n *   withWasm(wasm: WasmCryptoInstance, a: number, b: string) => Uint8Array\n *\n * and in this case it will create an interface function with the signarure\n *\n *   (a: number, b: string) => Uint8Array\n */\nfunction withWasm(fn) {\n    return (...params) => {\n        if (!bridge.wasm) {\n            throw new Error('The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.');\n        }\n        return fn(bridge.wasm, ...params);\n    };\n}\nexport const bip39Generate = /*#__PURE__*/ withWasm((wasm, words) => {\n    wasm.ext_bip39_generate(8, words);\n    return bridge.resultString();\n});\nexport const bip39ToEntropy = /*#__PURE__*/ withWasm((wasm, phrase) => {\n    wasm.ext_bip39_to_entropy(8, ...bridge.allocString(phrase));\n    return bridge.resultU8a();\n});\nexport const bip39ToMiniSecret = /*#__PURE__*/ withWasm((wasm, phrase, password) => {\n    wasm.ext_bip39_to_mini_secret(8, ...bridge.allocString(phrase), ...bridge.allocString(password));\n    return bridge.resultU8a();\n});\nexport const bip39ToSeed = /*#__PURE__*/ withWasm((wasm, phrase, password) => {\n    wasm.ext_bip39_to_seed(8, ...bridge.allocString(phrase), ...bridge.allocString(password));\n    return bridge.resultU8a();\n});\nexport const bip39Validate = /*#__PURE__*/ withWasm((wasm, phrase) => {\n    const ret = wasm.ext_bip39_validate(...bridge.allocString(phrase));\n    return ret !== 0;\n});\nexport const ed25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed) => {\n    wasm.ext_ed_from_seed(8, ...bridge.allocU8a(seed));\n    return bridge.resultU8a();\n});\nexport const ed25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, seckey, message) => {\n    wasm.ext_ed_sign(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(seckey), ...bridge.allocU8a(message));\n    return bridge.resultU8a();\n});\nexport const ed25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey) => {\n    const ret = wasm.ext_ed_verify(...bridge.allocU8a(signature), ...bridge.allocU8a(message), ...bridge.allocU8a(pubkey));\n    return ret !== 0;\n});\nexport const secp256k1FromSeed = /*#__PURE__*/ withWasm((wasm, seckey) => {\n    wasm.ext_secp_from_seed(8, ...bridge.allocU8a(seckey));\n    return bridge.resultU8a();\n});\nexport const secp256k1Compress = /*#__PURE__*/ withWasm((wasm, pubkey) => {\n    wasm.ext_secp_pub_compress(8, ...bridge.allocU8a(pubkey));\n    return bridge.resultU8a();\n});\nexport const secp256k1Expand = /*#__PURE__*/ withWasm((wasm, pubkey) => {\n    wasm.ext_secp_pub_expand(8, ...bridge.allocU8a(pubkey));\n    return bridge.resultU8a();\n});\nexport const secp256k1Recover = /*#__PURE__*/ withWasm((wasm, msgHash, sig, recovery) => {\n    wasm.ext_secp_recover(8, ...bridge.allocU8a(msgHash), ...bridge.allocU8a(sig), recovery);\n    return bridge.resultU8a();\n});\nexport const secp256k1Sign = /*#__PURE__*/ withWasm((wasm, msgHash, seckey) => {\n    wasm.ext_secp_sign(8, ...bridge.allocU8a(msgHash), ...bridge.allocU8a(seckey));\n    return bridge.resultU8a();\n});\nexport const sr25519DeriveKeypairHard = /*#__PURE__*/ withWasm((wasm, pair, cc) => {\n    wasm.ext_sr_derive_keypair_hard(8, ...bridge.allocU8a(pair), ...bridge.allocU8a(cc));\n    return bridge.resultU8a();\n});\nexport const sr25519DeriveKeypairSoft = /*#__PURE__*/ withWasm((wasm, pair, cc) => {\n    wasm.ext_sr_derive_keypair_soft(8, ...bridge.allocU8a(pair), ...bridge.allocU8a(cc));\n    return bridge.resultU8a();\n});\nexport const sr25519DerivePublicSoft = /*#__PURE__*/ withWasm((wasm, pubkey, cc) => {\n    wasm.ext_sr_derive_public_soft(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(cc));\n    return bridge.resultU8a();\n});\nexport const sr25519KeypairFromSeed = /*#__PURE__*/ withWasm((wasm, seed) => {\n    wasm.ext_sr_from_seed(8, ...bridge.allocU8a(seed));\n    return bridge.resultU8a();\n});\nexport const sr25519Sign = /*#__PURE__*/ withWasm((wasm, pubkey, secret, message) => {\n    wasm.ext_sr_sign(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(secret), ...bridge.allocU8a(message));\n    return bridge.resultU8a();\n});\nexport const sr25519Verify = /*#__PURE__*/ withWasm((wasm, signature, message, pubkey) => {\n    const ret = wasm.ext_sr_verify(...bridge.allocU8a(signature), ...bridge.allocU8a(message), ...bridge.allocU8a(pubkey));\n    return ret !== 0;\n});\nexport const sr25519Agree = /*#__PURE__*/ withWasm((wasm, pubkey, secret) => {\n    wasm.ext_sr_agree(8, ...bridge.allocU8a(pubkey), ...bridge.allocU8a(secret));\n    return bridge.resultU8a();\n});\nexport const vrfSign = /*#__PURE__*/ withWasm((wasm, secret, context, message, extra) => {\n    wasm.ext_vrf_sign(8, ...bridge.allocU8a(secret), ...bridge.allocU8a(context), ...bridge.allocU8a(message), ...bridge.allocU8a(extra));\n    return bridge.resultU8a();\n});\nexport const vrfVerify = /*#__PURE__*/ withWasm((wasm, pubkey, context, message, extra, outAndProof) => {\n    const ret = wasm.ext_vrf_verify(...bridge.allocU8a(pubkey), ...bridge.allocU8a(context), ...bridge.allocU8a(message), ...bridge.allocU8a(extra), ...bridge.allocU8a(outAndProof));\n    return ret !== 0;\n});\nexport const blake2b = /*#__PURE__*/ withWasm((wasm, data, key, size) => {\n    wasm.ext_blake2b(8, ...bridge.allocU8a(data), ...bridge.allocU8a(key), size);\n    return bridge.resultU8a();\n});\nexport const hmacSha256 = /*#__PURE__*/ withWasm((wasm, key, data) => {\n    wasm.ext_hmac_sha256(8, ...bridge.allocU8a(key), ...bridge.allocU8a(data));\n    return bridge.resultU8a();\n});\nexport const hmacSha512 = /*#__PURE__*/ withWasm((wasm, key, data) => {\n    wasm.ext_hmac_sha512(8, ...bridge.allocU8a(key), ...bridge.allocU8a(data));\n    return bridge.resultU8a();\n});\nexport const keccak256 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_keccak256(8, ...bridge.allocU8a(data));\n    return bridge.resultU8a();\n});\nexport const keccak512 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_keccak512(8, ...bridge.allocU8a(data));\n    return bridge.resultU8a();\n});\nexport const pbkdf2 = /*#__PURE__*/ withWasm((wasm, data, salt, rounds) => {\n    wasm.ext_pbkdf2(8, ...bridge.allocU8a(data), ...bridge.allocU8a(salt), rounds);\n    return bridge.resultU8a();\n});\nexport const scrypt = /*#__PURE__*/ withWasm((wasm, password, salt, log2n, r, p) => {\n    wasm.ext_scrypt(8, ...bridge.allocU8a(password), ...bridge.allocU8a(salt), log2n, r, p);\n    return bridge.resultU8a();\n});\nexport const sha256 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_sha256(8, ...bridge.allocU8a(data));\n    return bridge.resultU8a();\n});\nexport const sha512 = /*#__PURE__*/ withWasm((wasm, data) => {\n    wasm.ext_sha512(8, ...bridge.allocU8a(data));\n    return bridge.resultU8a();\n});\nexport const twox = /*#__PURE__*/ withWasm((wasm, data, rounds) => {\n    wasm.ext_twox(8, ...bridge.allocU8a(data), rounds);\n    return bridge.resultU8a();\n});\nexport function isReady() {\n    return !!bridge.wasm;\n}\nexport async function waitReady() {\n    try {\n        const wasm = await initBridge();\n        return !!wasm;\n    }\n    catch {\n        return false;\n    }\n}\n","import { u8aToU8a } from '@polkadot/util';\n/** @internal */\nexport function createDecode({ coder, ipfs }, validate) {\n    return (value, ipfsCompat) => {\n        validate(value, ipfsCompat);\n        return coder.decode(ipfs && ipfsCompat\n            ? value.substring(1)\n            : value);\n    };\n}\n/** @internal */\nexport function createEncode({ coder, ipfs }) {\n    return (value, ipfsCompat) => {\n        const out = coder.encode(u8aToU8a(value));\n        return ipfs && ipfsCompat\n            ? `${ipfs}${out}`\n            : out;\n    };\n}\n/** @internal */\nexport function createIs(validate) {\n    return (value, ipfsCompat) => {\n        try {\n            return validate(value, ipfsCompat);\n        }\n        catch {\n            return false;\n        }\n    };\n}\n/** @internal */\nexport function createValidate({ chars, ipfs, type, withPadding }) {\n    return (value, ipfsCompat) => {\n        if (typeof value !== 'string') {\n            throw new Error(`Expected ${type} string input`);\n        }\n        else if (ipfs && ipfsCompat && !value.startsWith(ipfs)) {\n            throw new Error(`Expected ipfs-compatible ${type} to start with '${ipfs}'`);\n        }\n        for (let i = (ipfsCompat ? 1 : 0), count = value.length; i < count; i++) {\n            if (chars.includes(value[i])) {\n                // all ok, character found\n            }\n            else if (withPadding && value[i] === '=') {\n                if (i === count - 1) {\n                    // last character, everything ok\n                }\n                else if (value[i + 1] === '=') {\n                    // next one is also padding, sequence ok\n                }\n                else {\n                    throw new Error(`Invalid ${type} padding sequence \"${value[i]}${value[i + 1]}\" at index ${i}`);\n                }\n            }\n            else {\n                throw new Error(`Invalid ${type} character \"${value[i]}\" (0x${value.charCodeAt(i).toString(16)}) at index ${i}`);\n            }\n        }\n        return true;\n    };\n}\n","import { base58 } from '@scure/base';\nimport { createDecode, createEncode, createIs, createValidate } from '../base32/helpers.js';\nconst config = {\n    chars: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz',\n    coder: base58,\n    ipfs: 'z',\n    type: 'base58'\n};\n/**\n * @name base58Validate\n * @summary Validates a base58 value.\n * @description\n * Validates that the supplied value is valid base58, throwing exceptions if not\n */\nexport const base58Validate = /*#__PURE__*/ createValidate(config);\n/**\n * @name base58Decode\n * @summary Decodes a base58 value.\n * @description\n * From the provided input, decode the base58 and return the result as an `Uint8Array`.\n */\nexport const base58Decode = /*#__PURE__*/ createDecode(config, base58Validate);\n/**\n* @name base58Encode\n* @summary Creates a base58 value.\n* @description\n* From the provided input, create the base58 and return the result as a string.\n*/\nexport const base58Encode = /*#__PURE__*/ createEncode(config);\n/**\n* @name isBase58\n* @description Checks if the input is in base58, returning true/false\n*/\nexport const isBase58 = /*#__PURE__*/ createIs(base58Validate);\n","import { blake2b as blake2bJs } from '@noble/hashes/blake2b';\nimport { hasBigInt, u8aToU8a } from '@polkadot/util';\nimport { blake2b, isReady } from '@polkadot/wasm-crypto';\nimport { createAsHex } from '../helpers.js';\n/**\n * @name blake2AsU8a\n * @summary Creates a blake2b u8a from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a u8a with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsU8a } from '@polkadot/util-crypto';\n *\n * blake2AsU8a('abc'); // => [0xba, 0x80, 0xa5, 0x3f, 0x98, 0x1c, 0x4d, 0x0d]\n * ```\n */\nexport function blake2AsU8a(data, bitLength = 256, key, onlyJs) {\n    const byteLength = Math.ceil(bitLength / 8);\n    const u8a = u8aToU8a(data);\n    return !hasBigInt || (!onlyJs && isReady())\n        ? blake2b(u8a, u8aToU8a(key), byteLength)\n        : key\n            ? blake2bJs(u8a, { dkLen: byteLength, key })\n            : blake2bJs(u8a, { dkLen: byteLength });\n}\n/**\n * @name blake2AsHex\n * @description Creates a blake2b hex from the input.\n */\nexport const blake2AsHex = /*#__PURE__*/ createAsHex(blake2AsU8a);\n","import { stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst SS58_PREFIX = stringToU8a('SS58PRE');\nexport function sshash(key) {\n    return blake2AsU8a(u8aConcat(SS58_PREFIX, key), 512);\n}\n","import { sshash } from './sshash.js';\nexport function checkAddressChecksum(decoded) {\n    const ss58Length = (decoded[0] & 0b0100_0000) ? 2 : 1;\n    const ss58Decoded = ss58Length === 1\n        ? decoded[0]\n        : ((decoded[0] & 0b0011_1111) << 2) | (decoded[1] >> 6) | ((decoded[1] & 0b0011_1111) << 8);\n    // 32/33 bytes public + 2 bytes checksum + prefix\n    const isPublicKey = [34 + ss58Length, 35 + ss58Length].includes(decoded.length);\n    const length = decoded.length - (isPublicKey ? 2 : 1);\n    // calculate the hash and do the checksum byte checks\n    const hash = sshash(decoded.subarray(0, length));\n    const isValid = (decoded[0] & 0b1000_0000) === 0 && ![46, 47].includes(decoded[0]) && (isPublicKey\n        ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1]\n        : decoded[decoded.length - 1] === hash[0]);\n    return [isValid, length, ss58Length, ss58Decoded];\n}\n","// Copyright (C) 2021-2024 Parity Technologies (UK) Ltd.\n// SPDX-License-Identifier: Apache-2.0\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// \thttp://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nexport default [\n\t{\n\t\t\"prefix\": 0,\n\t\t\"network\": \"polkadot\",\n\t\t\"displayName\": \"Polkadot Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"DOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadot.network\"\n\t},\n\t{\n\t\t\"prefix\": 1,\n\t\t\"network\": \"BareSr25519\",\n\t\t\"displayName\": \"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 2,\n\t\t\"network\": \"kusama\",\n\t\t\"displayName\": \"Kusama Relay Chain\",\n\t\t\"symbols\": [\n\t\t\t\"KSM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kusama.network\"\n\t},\n\t{\n\t\t\"prefix\": 3,\n\t\t\"network\": \"BareEd25519\",\n\t\t\"displayName\": \"Bare 32-bit Ed25519 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"Ed25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 4,\n\t\t\"network\": \"katalchain\",\n\t\t\"displayName\": \"Katal Chain\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 5,\n\t\t\"network\": \"astar\",\n\t\t\"displayName\": \"Astar Network\",\n\t\t\"symbols\": [\n\t\t\t\"ASTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://astar.network\"\n\t},\n\t{\n\t\t\"prefix\": 6,\n\t\t\"network\": \"bifrost\",\n\t\t\"displayName\": \"Bifrost\",\n\t\t\"symbols\": [\n\t\t\t\"BNC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bifrost.finance/\"\n\t},\n\t{\n\t\t\"prefix\": 7,\n\t\t\"network\": \"edgeware\",\n\t\t\"displayName\": \"Edgeware\",\n\t\t\"symbols\": [\n\t\t\t\"EDG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://edgewa.re\"\n\t},\n\t{\n\t\t\"prefix\": 8,\n\t\t\"network\": \"karura\",\n\t\t\"displayName\": \"Karura\",\n\t\t\"symbols\": [\n\t\t\t\"KAR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karura.network/\"\n\t},\n\t{\n\t\t\"prefix\": 9,\n\t\t\"network\": \"reynolds\",\n\t\t\"displayName\": \"Laminar Reynolds Canary\",\n\t\t\"symbols\": [\n\t\t\t\"REY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 10,\n\t\t\"network\": \"acala\",\n\t\t\"displayName\": \"Acala\",\n\t\t\"symbols\": [\n\t\t\t\"ACA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://acala.network/\"\n\t},\n\t{\n\t\t\"prefix\": 11,\n\t\t\"network\": \"laminar\",\n\t\t\"displayName\": \"Laminar\",\n\t\t\"symbols\": [\n\t\t\t\"LAMI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://laminar.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12,\n\t\t\"network\": \"polymesh\",\n\t\t\"displayName\": \"Polymesh\",\n\t\t\"symbols\": [\n\t\t\t\"POLYX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polymath.network/\"\n\t},\n\t{\n\t\t\"prefix\": 13,\n\t\t\"network\": \"integritee\",\n\t\t\"displayName\": \"Integritee\",\n\t\t\"symbols\": [\n\t\t\t\"TEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 14,\n\t\t\"network\": \"totem\",\n\t\t\"displayName\": \"Totem\",\n\t\t\"symbols\": [\n\t\t\t\"TOTEM\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 15,\n\t\t\"network\": \"synesthesia\",\n\t\t\"displayName\": \"Synesthesia\",\n\t\t\"symbols\": [\n\t\t\t\"SYN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://synesthesia.network/\"\n\t},\n\t{\n\t\t\"prefix\": 16,\n\t\t\"network\": \"kulupu\",\n\t\t\"displayName\": \"Kulupu\",\n\t\t\"symbols\": [\n\t\t\t\"KLP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kulupu.network/\"\n\t},\n\t{\n\t\t\"prefix\": 17,\n\t\t\"network\": \"dark\",\n\t\t\"displayName\": \"Dark Mainnet\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 18,\n\t\t\"network\": \"darwinia\",\n\t\t\"displayName\": \"Darwinia Network\",\n\t\t\"symbols\": [\n\t\t\t\"RING\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://darwinia.network\"\n\t},\n\t{\n\t\t\"prefix\": 19,\n\t\t\"network\": \"watr\",\n\t\t\"displayName\": \"Watr Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"WATR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.watr.org\"\n\t},\n\t{\n\t\t\"prefix\": 20,\n\t\t\"network\": \"stafi\",\n\t\t\"displayName\": \"Stafi\",\n\t\t\"symbols\": [\n\t\t\t\"FIS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://stafi.io\"\n\t},\n\t{\n\t\t\"prefix\": 21,\n\t\t\"network\": \"karmachain\",\n\t\t\"displayName\": \"Karmacoin\",\n\t\t\"symbols\": [\n\t\t\t\"KCOIN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://karmaco.in\"\n\t},\n\t{\n\t\t\"prefix\": 22,\n\t\t\"network\": \"dock-pos-mainnet\",\n\t\t\"displayName\": \"Dock Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"DCK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t6\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dock.io\"\n\t},\n\t{\n\t\t\"prefix\": 23,\n\t\t\"network\": \"shift\",\n\t\t\"displayName\": \"ShiftNrg\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 24,\n\t\t\"network\": \"zero\",\n\t\t\"displayName\": \"ZERO\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 25,\n\t\t\"network\": \"zero-alphaville\",\n\t\t\"displayName\": \"ZERO Alphaville\",\n\t\t\"symbols\": [\n\t\t\t\"ZERO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zero.io\"\n\t},\n\t{\n\t\t\"prefix\": 26,\n\t\t\"network\": \"jupiter\",\n\t\t\"displayName\": \"Jupiter\",\n\t\t\"symbols\": [\n\t\t\t\"jDOT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://jupiter.patract.io\"\n\t},\n\t{\n\t\t\"prefix\": 27,\n\t\t\"network\": \"kabocha\",\n\t\t\"displayName\": \"Kabocha\",\n\t\t\"symbols\": [\n\t\t\t\"KAB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kabocha.network\"\n\t},\n\t{\n\t\t\"prefix\": 28,\n\t\t\"network\": \"subsocial\",\n\t\t\"displayName\": \"Subsocial\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 29,\n\t\t\"network\": \"cord\",\n\t\t\"displayName\": \"CORD Network\",\n\t\t\"symbols\": [\n\t\t\t\"DHI\",\n\t\t\t\"WAY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cord.network/\"\n\t},\n\t{\n\t\t\"prefix\": 30,\n\t\t\"network\": \"phala\",\n\t\t\"displayName\": \"Phala Network\",\n\t\t\"symbols\": [\n\t\t\t\"PHA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://phala.network\"\n\t},\n\t{\n\t\t\"prefix\": 31,\n\t\t\"network\": \"litentry\",\n\t\t\"displayName\": \"Litentry Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 32,\n\t\t\"network\": \"robonomics\",\n\t\t\"displayName\": \"Robonomics\",\n\t\t\"symbols\": [\n\t\t\t\"XRT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://robonomics.network\"\n\t},\n\t{\n\t\t\"prefix\": 33,\n\t\t\"network\": \"datahighway\",\n\t\t\"displayName\": \"DataHighway\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 34,\n\t\t\"network\": \"ares\",\n\t\t\"displayName\": \"Ares Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"ARES\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.aresprotocol.com/\"\n\t},\n\t{\n\t\t\"prefix\": 35,\n\t\t\"network\": \"vln\",\n\t\t\"displayName\": \"Valiu Liquidity Network\",\n\t\t\"symbols\": [\n\t\t\t\"USDv\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://valiu.com/\"\n\t},\n\t{\n\t\t\"prefix\": 36,\n\t\t\"network\": \"centrifuge\",\n\t\t\"displayName\": \"Centrifuge Chain\",\n\t\t\"symbols\": [\n\t\t\t\"CFG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 37,\n\t\t\"network\": \"nodle\",\n\t\t\"displayName\": \"Nodle Chain\",\n\t\t\"symbols\": [\n\t\t\t\"NODL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t11\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nodle.io/\"\n\t},\n\t{\n\t\t\"prefix\": 38,\n\t\t\"network\": \"kilt\",\n\t\t\"displayName\": \"KILT Spiritnet\",\n\t\t\"symbols\": [\n\t\t\t\"KILT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t15\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://kilt.io/\"\n\t},\n\t{\n\t\t\"prefix\": 39,\n\t\t\"network\": \"mathchain\",\n\t\t\"displayName\": \"MathChain mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 40,\n\t\t\"network\": \"mathchain-testnet\",\n\t\t\"displayName\": \"MathChain testnet\",\n\t\t\"symbols\": [\n\t\t\t\"MATH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mathwallet.org\"\n\t},\n\t{\n\t\t\"prefix\": 41,\n\t\t\"network\": \"polimec\",\n\t\t\"displayName\": \"Polimec Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"PLMC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.polimec.org/\"\n\t},\n\t{\n\t\t\"prefix\": 42,\n\t\t\"network\": \"substrate\",\n\t\t\"displayName\": \"Substrate\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://substrate.io/\"\n\t},\n\t{\n\t\t\"prefix\": 43,\n\t\t\"network\": \"BareSecp256k1\",\n\t\t\"displayName\": \"Bare 32-bit ECDSA SECP-256k1 public key.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 44,\n\t\t\"network\": \"chainx\",\n\t\t\"displayName\": \"ChainX\",\n\t\t\"symbols\": [\n\t\t\t\"PCX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainx.org/\"\n\t},\n\t{\n\t\t\"prefix\": 45,\n\t\t\"network\": \"uniarts\",\n\t\t\"displayName\": \"UniArts Network\",\n\t\t\"symbols\": [\n\t\t\t\"UART\",\n\t\t\t\"UINK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://uniarts.me\"\n\t},\n\t{\n\t\t\"prefix\": 46,\n\t\t\"network\": \"reserved46\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 47,\n\t\t\"network\": \"reserved47\",\n\t\t\"displayName\": \"This prefix is reserved.\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": null,\n\t\t\"website\": null\n\t},\n\t{\n\t\t\"prefix\": 48,\n\t\t\"network\": \"neatcoin\",\n\t\t\"displayName\": \"Neatcoin Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"NEAT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://neatcoin.org\"\n\t},\n\t{\n\t\t\"prefix\": 49,\n\t\t\"network\": \"picasso\",\n\t\t\"displayName\": \"Picasso\",\n\t\t\"symbols\": [\n\t\t\t\"PICA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://picasso.composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 50,\n\t\t\"network\": \"composable\",\n\t\t\"displayName\": \"Composable Finance\",\n\t\t\"symbols\": [\n\t\t\t\"LAYR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://composable.finance\"\n\t},\n\t{\n\t\t\"prefix\": 51,\n\t\t\"network\": \"oak\",\n\t\t\"displayName\": \"OAK Network\",\n\t\t\"symbols\": [\n\t\t\t\"OAK\",\n\t\t\t\"TUR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10,\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://oak.tech\"\n\t},\n\t{\n\t\t\"prefix\": 52,\n\t\t\"network\": \"KICO\",\n\t\t\"displayName\": \"KICO\",\n\t\t\"symbols\": [\n\t\t\t\"KICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 53,\n\t\t\"network\": \"DICO\",\n\t\t\"displayName\": \"DICO\",\n\t\t\"symbols\": [\n\t\t\t\"DICO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t14\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dico.io\"\n\t},\n\t{\n\t\t\"prefix\": 54,\n\t\t\"network\": \"cere\",\n\t\t\"displayName\": \"Cere Network\",\n\t\t\"symbols\": [\n\t\t\t\"CERE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cere.network\"\n\t},\n\t{\n\t\t\"prefix\": 55,\n\t\t\"network\": \"xxnetwork\",\n\t\t\"displayName\": \"xx network\",\n\t\t\"symbols\": [\n\t\t\t\"XX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xx.network\"\n\t},\n\t{\n\t\t\"prefix\": 56,\n\t\t\"network\": \"pendulum\",\n\t\t\"displayName\": \"Pendulum chain\",\n\t\t\"symbols\": [\n\t\t\t\"PEN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 57,\n\t\t\"network\": \"amplitude\",\n\t\t\"displayName\": \"Amplitude chain\",\n\t\t\"symbols\": [\n\t\t\t\"AMPE\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pendulumchain.org/\"\n\t},\n\t{\n\t\t\"prefix\": 58,\n\t\t\"network\": \"eternal-civilization\",\n\t\t\"displayName\": \"Eternal Civilization\",\n\t\t\"symbols\": [\n\t\t\t\"ECC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"http://www.ysknfr.cn/\"\n\t},\n\t{\n\t\t\"prefix\": 63,\n\t\t\"network\": \"hydradx\",\n\t\t\"displayName\": \"Hydration\",\n\t\t\"symbols\": [\n\t\t\t\"HDX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hydration.net\"\n\t},\n\t{\n\t\t\"prefix\": 65,\n\t\t\"network\": \"aventus\",\n\t\t\"displayName\": \"Aventus Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"AVT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://aventus.io\"\n\t},\n\t{\n\t\t\"prefix\": 66,\n\t\t\"network\": \"crust\",\n\t\t\"displayName\": \"Crust Network\",\n\t\t\"symbols\": [\n\t\t\t\"CRU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://crust.network\"\n\t},\n\t{\n\t\t\"prefix\": 67,\n\t\t\"network\": \"genshiro\",\n\t\t\"displayName\": \"Genshiro Network\",\n\t\t\"symbols\": [\n\t\t\t\"GENS\",\n\t\t\t\"EQD\",\n\t\t\t\"LPT0\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9,\n\t\t\t9,\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://genshiro.equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 68,\n\t\t\"network\": \"equilibrium\",\n\t\t\"displayName\": \"Equilibrium Network\",\n\t\t\"symbols\": [\n\t\t\t\"EQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://equilibrium.io\"\n\t},\n\t{\n\t\t\"prefix\": 69,\n\t\t\"network\": \"sora\",\n\t\t\"displayName\": \"SORA Network\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 71,\n\t\t\"network\": \"p3d\",\n\t\t\"displayName\": \"3DP network\",\n\t\t\"symbols\": [\n\t\t\t\"P3D\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://3dpass.org\"\n\t},\n\t{\n\t\t\"prefix\": 72,\n\t\t\"network\": \"p3dt\",\n\t\t\"displayName\": \"3DP test network\",\n\t\t\"symbols\": [\n\t\t\t\"P3Dt\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://3dpass.org\"\n\t},\n\t{\n\t\t\"prefix\": 73,\n\t\t\"network\": \"zeitgeist\",\n\t\t\"displayName\": \"Zeitgeist\",\n\t\t\"symbols\": [\n\t\t\t\"ZTG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://zeitgeist.pm\"\n\t},\n\t{\n\t\t\"prefix\": 77,\n\t\t\"network\": \"manta\",\n\t\t\"displayName\": \"Manta network\",\n\t\t\"symbols\": [\n\t\t\t\"MANTA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 78,\n\t\t\"network\": \"calamari\",\n\t\t\"displayName\": \"Calamari: Manta Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"KMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://manta.network\"\n\t},\n\t{\n\t\t\"prefix\": 81,\n\t\t\"network\": \"sora_dot_para\",\n\t\t\"displayName\": \"SORA Polkadot Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 88,\n\t\t\"network\": \"polkadex\",\n\t\t\"displayName\": \"Polkadex Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 89,\n\t\t\"network\": \"polkadexparachain\",\n\t\t\"displayName\": \"Polkadex Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"PDEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkadex.trade\"\n\t},\n\t{\n\t\t\"prefix\": 90,\n\t\t\"network\": \"frequency\",\n\t\t\"displayName\": \"Frequency\",\n\t\t\"symbols\": [\n\t\t\t\"FRQCY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t8\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.frequency.xyz\"\n\t},\n\t{\n\t\t\"prefix\": 92,\n\t\t\"network\": \"anmol\",\n\t\t\"displayName\": \"Anmol Network\",\n\t\t\"symbols\": [\n\t\t\t\"ANML\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://anmol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 93,\n\t\t\"network\": \"fragnova\",\n\t\t\"displayName\": \"Fragnova Network\",\n\t\t\"symbols\": [\n\t\t\t\"NOVA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://fragnova.com\"\n\t},\n\t{\n\t\t\"prefix\": 98,\n\t\t\"network\": \"polkasmith\",\n\t\t\"displayName\": \"PolkaSmith Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 99,\n\t\t\"network\": \"polkafoundry\",\n\t\t\"displayName\": \"PolkaFoundry Network\",\n\t\t\"symbols\": [\n\t\t\t\"PKF\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://polkafoundry.com\"\n\t},\n\t{\n\t\t\"prefix\": 100,\n\t\t\"network\": \"ibtida\",\n\t\t\"displayName\": \"Anmol Network Ibtida Canary network\",\n\t\t\"symbols\": [\n\t\t\t\"IANML\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://anmol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 101,\n\t\t\"network\": \"origintrail-parachain\",\n\t\t\"displayName\": \"OriginTrail Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"OTP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parachain.origintrail.io/\"\n\t},\n\t{\n\t\t\"prefix\": 105,\n\t\t\"network\": \"pontem-network\",\n\t\t\"displayName\": \"Pontem Network\",\n\t\t\"symbols\": [\n\t\t\t\"PONT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://pontem.network\"\n\t},\n\t{\n\t\t\"prefix\": 110,\n\t\t\"network\": \"heiko\",\n\t\t\"displayName\": \"Heiko\",\n\t\t\"symbols\": [\n\t\t\t\"HKO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 113,\n\t\t\"network\": \"integritee-incognito\",\n\t\t\"displayName\": \"Integritee Incognito\",\n\t\t\"symbols\": [],\n\t\t\"decimals\": [],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://integritee.network\"\n\t},\n\t{\n\t\t\"prefix\": 117,\n\t\t\"network\": \"tinker\",\n\t\t\"displayName\": \"Tinker\",\n\t\t\"symbols\": [\n\t\t\t\"TNKR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://invarch.network\"\n\t},\n\t{\n\t\t\"prefix\": 126,\n\t\t\"network\": \"joystream\",\n\t\t\"displayName\": \"Joystream\",\n\t\t\"symbols\": [\n\t\t\t\"JOY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.joystream.org\"\n\t},\n\t{\n\t\t\"prefix\": 128,\n\t\t\"network\": \"clover\",\n\t\t\"displayName\": \"Clover Finance\",\n\t\t\"symbols\": [\n\t\t\t\"CLV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://clover.finance\"\n\t},\n\t{\n\t\t\"prefix\": 129,\n\t\t\"network\": \"dorafactory-polkadot\",\n\t\t\"displayName\": \"Dorafactory Polkadot Network\",\n\t\t\"symbols\": [\n\t\t\t\"DORA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://dorafactory.org\"\n\t},\n\t{\n\t\t\"prefix\": 131,\n\t\t\"network\": \"litmus\",\n\t\t\"displayName\": \"Litmus Network\",\n\t\t\"symbols\": [\n\t\t\t\"LIT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://litentry.com/\"\n\t},\n\t{\n\t\t\"prefix\": 136,\n\t\t\"network\": \"altair\",\n\t\t\"displayName\": \"Altair\",\n\t\t\"symbols\": [\n\t\t\t\"AIR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://centrifuge.io/\"\n\t},\n\t{\n\t\t\"prefix\": 137,\n\t\t\"network\": \"vara\",\n\t\t\"displayName\": \"Vara Network\",\n\t\t\"symbols\": [\n\t\t\t\"VARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://vara.network/\"\n\t},\n\t{\n\t\t\"prefix\": 172,\n\t\t\"network\": \"parallel\",\n\t\t\"displayName\": \"Parallel\",\n\t\t\"symbols\": [\n\t\t\t\"PARA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parallel.fi/\"\n\t},\n\t{\n\t\t\"prefix\": 252,\n\t\t\"network\": \"social-network\",\n\t\t\"displayName\": \"Social Network\",\n\t\t\"symbols\": [\n\t\t\t\"NET\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://social.network\"\n\t},\n\t{\n\t\t\"prefix\": 255,\n\t\t\"network\": \"quartz_mainnet\",\n\t\t\"displayName\": \"QUARTZ by UNIQUE\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 268,\n\t\t\"network\": \"pioneer_network\",\n\t\t\"displayName\": \"Pioneer Network by Bit.Country\",\n\t\t\"symbols\": [\n\t\t\t\"NEER\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bit.country\"\n\t},\n\t{\n\t\t\"prefix\": 420,\n\t\t\"network\": \"sora_kusama_para\",\n\t\t\"displayName\": \"SORA Kusama Parachain\",\n\t\t\"symbols\": [\n\t\t\t\"XOR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://sora.org\"\n\t},\n\t{\n\t\t\"prefix\": 440,\n\t\t\"network\": \"allfeat_network\",\n\t\t\"displayName\": \"Allfeat Network\",\n\t\t\"symbols\": [\n\t\t\t\"AFT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://allfeat.network\"\n\t},\n\t{\n\t\t\"prefix\": 666,\n\t\t\"network\": \"metaquity_network\",\n\t\t\"displayName\": \"Metaquity Network\",\n\t\t\"symbols\": [\n\t\t\t\"MQTY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://metaquity.xyz/\"\n\t},\n\t{\n\t\t\"prefix\": 777,\n\t\t\"network\": \"curio\",\n\t\t\"displayName\": \"Curio\",\n\t\t\"symbols\": [\n\t\t\t\"CGT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://parachain.capitaldex.exchange/\"\n\t},\n\t{\n\t\t\"prefix\": 789,\n\t\t\"network\": \"geek\",\n\t\t\"displayName\": \"GEEK Network\",\n\t\t\"symbols\": [\n\t\t\t\"GEEK\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://geek.gl\"\n\t},\n\t{\n\t\t\"prefix\": 995,\n\t\t\"network\": \"ternoa\",\n\t\t\"displayName\": \"Ternoa\",\n\t\t\"symbols\": [\n\t\t\t\"CAPS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.ternoa.network\"\n\t},\n\t{\n\t\t\"prefix\": 1110,\n\t\t\"network\": \"efinity\",\n\t\t\"displayName\": \"Efinity\",\n\t\t\"symbols\": [\n\t\t\t\"EFI\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://efinity.io/\"\n\t},\n\t{\n\t\t\"prefix\": 1221,\n\t\t\"network\": \"peaq\",\n\t\t\"displayName\": \"Peaq Network\",\n\t\t\"symbols\": [\n\t\t\t\"PEAQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1222,\n\t\t\"network\": \"krest\",\n\t\t\"displayName\": \"Krest Network\",\n\t\t\"symbols\": [\n\t\t\t\"KREST\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"Sr25519\",\n\t\t\"website\": \"https://www.peaq.network/\"\n\t},\n\t{\n\t\t\"prefix\": 1284,\n\t\t\"network\": \"moonbeam\",\n\t\t\"displayName\": \"Moonbeam\",\n\t\t\"symbols\": [\n\t\t\t\"GLMR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1285,\n\t\t\"network\": \"moonriver\",\n\t\t\"displayName\": \"Moonriver\",\n\t\t\"symbols\": [\n\t\t\t\"MOVR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonbeam.network\"\n\t},\n\t{\n\t\t\"prefix\": 1328,\n\t\t\"network\": \"ajuna\",\n\t\t\"displayName\": \"Ajuna Network\",\n\t\t\"symbols\": [\n\t\t\t\"AJUN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1337,\n\t\t\"network\": \"bajun\",\n\t\t\"displayName\": \"Bajun Network\",\n\t\t\"symbols\": [\n\t\t\t\"BAJU\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ajuna.io\"\n\t},\n\t{\n\t\t\"prefix\": 1516,\n\t\t\"network\": \"societal\",\n\t\t\"displayName\": \"Societal\",\n\t\t\"symbols\": [\n\t\t\t\"SCTL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.sctl.xyz\"\n\t},\n\t{\n\t\t\"prefix\": 1985,\n\t\t\"network\": \"seals\",\n\t\t\"displayName\": \"Seals Network\",\n\t\t\"symbols\": [\n\t\t\t\"SEAL\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://seals.app\"\n\t},\n\t{\n\t\t\"prefix\": 2007,\n\t\t\"network\": \"kapex\",\n\t\t\"displayName\": \"Kapex\",\n\t\t\"symbols\": [\n\t\t\t\"KAPEX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://totemaccounting.com\"\n\t},\n\t{\n\t\t\"prefix\": 2009,\n\t\t\"network\": \"cloudwalk_mainnet\",\n\t\t\"displayName\": \"CloudWalk Network Mainnet\",\n\t\t\"symbols\": [\n\t\t\t\"CWN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://explorer.mainnet.cloudwalk.io\"\n\t},\n\t{\n\t\t\"prefix\": 2021,\n\t\t\"network\": \"logion\",\n\t\t\"displayName\": \"logion network\",\n\t\t\"symbols\": [\n\t\t\t\"LGNT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://logion.network\"\n\t},\n\t{\n\t\t\"prefix\": 2024,\n\t\t\"network\": \"vow-chain\",\n\t\t\"displayName\": \"Enigmatic Smile\",\n\t\t\"symbols\": [\n\t\t\t\"VOW\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.vow.foundation/\"\n\t},\n\t{\n\t\t\"prefix\": 2032,\n\t\t\"network\": \"interlay\",\n\t\t\"displayName\": \"Interlay\",\n\t\t\"symbols\": [\n\t\t\t\"INTR\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t10\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2092,\n\t\t\"network\": \"kintsugi\",\n\t\t\"displayName\": \"Kintsugi\",\n\t\t\"symbols\": [\n\t\t\t\"KINT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://interlay.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2106,\n\t\t\"network\": \"bitgreen\",\n\t\t\"displayName\": \"Bitgreen\",\n\t\t\"symbols\": [\n\t\t\t\"BBB\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bitgreen.org/\"\n\t},\n\t{\n\t\t\"prefix\": 2112,\n\t\t\"network\": \"chainflip\",\n\t\t\"displayName\": \"Chainflip\",\n\t\t\"symbols\": [\n\t\t\t\"FLIP\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://chainflip.io/\"\n\t},\n\t{\n\t\t\"prefix\": 2199,\n\t\t\"network\": \"moonsama\",\n\t\t\"displayName\": \"Moonsama\",\n\t\t\"symbols\": [\n\t\t\t\"SAMA\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://moonsama.com\"\n\t},\n\t{\n\t\t\"prefix\": 2206,\n\t\t\"network\": \"ICE\",\n\t\t\"displayName\": \"ICE Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 2207,\n\t\t\"network\": \"SNOW\",\n\t\t\"displayName\": \"SNOW: ICE Canary Network\",\n\t\t\"symbols\": [\n\t\t\t\"ICZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://icenetwork.io\"\n\t},\n\t{\n\t\t\"prefix\": 2254,\n\t\t\"network\": \"subspace_testnet\",\n\t\t\"displayName\": \"Subspace testnet\",\n\t\t\"symbols\": [\n\t\t\t\"tSSC\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://subspace.network\"\n\t},\n\t{\n\t\t\"prefix\": 3333,\n\t\t\"network\": \"peerplays\",\n\t\t\"displayName\": \"Peerplays\",\n\t\t\"symbols\": [\n\t\t\t\"PPY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://www.peerplays.com/\"\n\t},\n\t{\n\t\t\"prefix\": 4450,\n\t\t\"network\": \"g1\",\n\t\t\"displayName\": \"Ğ1\",\n\t\t\"symbols\": [\n\t\t\t\"G1\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t2\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://duniter.org\"\n\t},\n\t{\n\t\t\"prefix\": 5234,\n\t\t\"network\": \"humanode\",\n\t\t\"displayName\": \"Humanode Network\",\n\t\t\"symbols\": [\n\t\t\t\"HMND\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://humanode.io\"\n\t},\n\t{\n\t\t\"prefix\": 5845,\n\t\t\"network\": \"tangle\",\n\t\t\"displayName\": \"Tangle Network\",\n\t\t\"symbols\": [\n\t\t\t\"TNT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.tangle.tools/\"\n\t},\n\t{\n\t\t\"prefix\": 6094,\n\t\t\"network\": \"autonomys\",\n\t\t\"displayName\": \"Autonomys\",\n\t\t\"symbols\": [\n\t\t\t\"AI3\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://autonomys.xyz\"\n\t},\n\t{\n\t\t\"prefix\": 7007,\n\t\t\"network\": \"tidefi\",\n\t\t\"displayName\": \"Tidefi\",\n\t\t\"symbols\": [\n\t\t\t\"TDFY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://tidefi.com\"\n\t},\n\t{\n\t\t\"prefix\": 7013,\n\t\t\"network\": \"gm\",\n\t\t\"displayName\": \"GM\",\n\t\t\"symbols\": [\n\t\t\t\"FREN\",\n\t\t\t\"GM\",\n\t\t\t\"GN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12,\n\t\t\t0,\n\t\t\t0\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://gmordie.com\"\n\t},\n\t{\n\t\t\"prefix\": 7306,\n\t\t\"network\": \"krigan\",\n\t\t\"displayName\": \"Krigan Network\",\n\t\t\"symbols\": [\n\t\t\t\"KRGN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://krigan.network\"\n\t},\n\t{\n\t\t\"prefix\": 7391,\n\t\t\"network\": \"unique_mainnet\",\n\t\t\"displayName\": \"Unique Network\",\n\t\t\"symbols\": [\n\t\t\t\"UNQ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 8866,\n\t\t\"network\": \"golden_gate\",\n\t\t\"displayName\": \"Golden Gate\",\n\t\t\"symbols\": [\n\t\t\t\"GGX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ggxchain.io/\"\n\t},\n\t{\n\t\t\"prefix\": 8883,\n\t\t\"network\": \"sapphire_mainnet\",\n\t\t\"displayName\": \"Sapphire by Unique\",\n\t\t\"symbols\": [\n\t\t\t\"QTZ\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://unique.network\"\n\t},\n\t{\n\t\t\"prefix\": 8886,\n\t\t\"network\": \"golden_gate_sydney\",\n\t\t\"displayName\": \"Golden Gate Sydney\",\n\t\t\"symbols\": [\n\t\t\t\"GGXT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ggxchain.io/\"\n\t},\n\t{\n\t\t\"prefix\": 9072,\n\t\t\"network\": \"hashed\",\n\t\t\"displayName\": \"Hashed Network\",\n\t\t\"symbols\": [\n\t\t\t\"HASH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://hashed.network\"\n\t},\n\t{\n\t\t\"prefix\": 9807,\n\t\t\"network\": \"dentnet\",\n\t\t\"displayName\": \"DENTNet\",\n\t\t\"symbols\": [\n\t\t\t\"DENTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://www.dentnet.io\"\n\t},\n\t{\n\t\t\"prefix\": 9935,\n\t\t\"network\": \"t3rn\",\n\t\t\"displayName\": \"t3rn\",\n\t\t\"symbols\": [\n\t\t\t\"TRN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://t3rn.io/\"\n\t},\n\t{\n\t\t\"prefix\": 10041,\n\t\t\"network\": \"basilisk\",\n\t\t\"displayName\": \"Basilisk\",\n\t\t\"symbols\": [\n\t\t\t\"BSX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bsx.fi\"\n\t},\n\t{\n\t\t\"prefix\": 11330,\n\t\t\"network\": \"cess-testnet\",\n\t\t\"displayName\": \"CESS Testnet\",\n\t\t\"symbols\": [\n\t\t\t\"TCESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11331,\n\t\t\"network\": \"cess\",\n\t\t\"displayName\": \"CESS\",\n\t\t\"symbols\": [\n\t\t\t\"CESS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://cess.cloud\"\n\t},\n\t{\n\t\t\"prefix\": 11486,\n\t\t\"network\": \"luhn\",\n\t\t\"displayName\": \"Luhn Network\",\n\t\t\"symbols\": [\n\t\t\t\"LUHN\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://luhn.network\"\n\t},\n\t{\n\t\t\"prefix\": 11820,\n\t\t\"network\": \"contextfree\",\n\t\t\"displayName\": \"Automata ContextFree\",\n\t\t\"symbols\": [\n\t\t\t\"CTX\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://ata.network\"\n\t},\n\t{\n\t\t\"prefix\": 12155,\n\t\t\"network\": \"impact\",\n\t\t\"displayName\": \"Impact Protocol Network\",\n\t\t\"symbols\": [\n\t\t\t\"BSTY\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://impactprotocol.network/\"\n\t},\n\t{\n\t\t\"prefix\": 12191,\n\t\t\"network\": \"nftmart\",\n\t\t\"displayName\": \"NFTMart\",\n\t\t\"symbols\": [\n\t\t\t\"NMT\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://nftmart.io\"\n\t},\n\t{\n\t\t\"prefix\": 12850,\n\t\t\"network\": \"analog-timechain\",\n\t\t\"displayName\": \"Analog Timechain\",\n\t\t\"symbols\": [\n\t\t\t\"ANLOG\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://analog.one\"\n\t},\n\t{\n\t\t\"prefix\": 13116,\n\t\t\"network\": \"bittensor\",\n\t\t\"displayName\": \"Bittensor\",\n\t\t\"symbols\": [\n\t\t\t\"TAO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://bittensor.com\"\n\t},\n\t{\n\t\t\"prefix\": 14697,\n\t\t\"network\": \"goro\",\n\t\t\"displayName\": \"GORO Network\",\n\t\t\"symbols\": [\n\t\t\t\"GORO\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t9\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://goro.network\"\n\t},\n\t{\n\t\t\"prefix\": 14998,\n\t\t\"network\": \"mosaic-chain\",\n\t\t\"displayName\": \"Mosaic Chain\",\n\t\t\"symbols\": [\n\t\t\t\"MOS\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://mosaicchain.io\"\n\t},\n\t{\n\t\t\"prefix\": 29972,\n\t\t\"network\": \"mythos\",\n\t\t\"displayName\": \"Mythos\",\n\t\t\"symbols\": [\n\t\t\t\"MYTH\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t18\n\t\t],\n\t\t\"standardAccount\": \"secp256k1\",\n\t\t\"website\": \"https://mythos.foundation\"\n\t},\n\t{\n\t\t\"prefix\": 8888,\n\t\t\"network\": \"xcavate\",\n\t\t\"displayName\": \"Xcavate Protocol\",\n\t\t\"symbols\": [\n\t\t\t\"XCAV\"\n\t\t],\n\t\t\"decimals\": [\n\t\t\t12\n\t\t],\n\t\t\"standardAccount\": \"*25519\",\n\t\t\"website\": \"https://xcavate.io/\"\n\t}\n];\n","export const knownGenesis = {\n    acala: [\n        '0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c'\n    ],\n    ajuna: [\n        '0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee'\n    ],\n    'aleph-node': [\n        '0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e'\n    ],\n    astar: [\n        '0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6'\n    ],\n    basilisk: [\n        '0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755'\n    ],\n    bifrost: [\n        '0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b'\n    ],\n    'bifrost-kusama': [\n        '0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed'\n    ],\n    bittensor: [\n        '0x2f0555cc76fc2840a25a6ea3b9637146806f1f44b090c175ffde2a7e5ab36c03'\n    ],\n    centrifuge: [\n        '0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82',\n        '0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5'\n    ],\n    cere: [\n        '0x81443836a9a24caaa23f1241897d1235717535711d1d3fe24eae4fdc942c092c'\n    ],\n    composable: [\n        '0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d'\n    ],\n    darwinia: [\n        '0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6'\n    ],\n    'dock-mainnet': [\n        '0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae',\n        '0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9'\n    ],\n    edgeware: [\n        '0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b'\n    ],\n    encointer: [\n        '0x7dd99936c1e9e6d1ce7d90eb6f33bea8393b4bf87677d675aa63c9cb3e8c5b5b'\n    ],\n    enjin: [\n        '0xd8761d3c88f26dc12875c00d3165f7d67243d56fc85b4cf19937601a7916e5a9'\n    ],\n    equilibrium: [\n        '0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925'\n    ],\n    frequency: [\n        '0x4a587bf17a404e3572747add7aab7bbe56e805a5479c6c436f07f36fcc8d3ae1'\n    ],\n    genshiro: [\n        '0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243'\n    ],\n    hydradx: [\n        '0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d', // Hydration | HydraDX Parachain\n        '0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc', // Snakenet Gen3-1\n        '0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9', // Snakenet Gen3\n        '0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047', // Snakenet Gen2\n        '0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2' // Snakenet Gen1\n    ],\n    integritee: [\n        '0xcdedc8eadbfa209d3f207bba541e57c3c58a667b05a2e1d1e86353c9000758da', // on Kusama\n        '0xe13e7af377c64e83f95e0d70d5e5c3c01d697a84538776c5b9bbe0e7d7b6034c' // on Polkadot\n    ],\n    'interlay-parachain': [\n        '0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72'\n    ],\n    karura: [\n        '0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b'\n    ],\n    khala: [\n        '0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d'\n    ],\n    kulupu: [\n        '0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba'\n    ],\n    kusama: [\n        '0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe', // Kusama CC3,\n        '0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636', // Kusama CC2\n        '0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf' // Kusama CC1\n    ],\n    matrixchain: [\n        '0x3af4ff48ec76d2efc8476730f423ac07e25ad48f5f4c9dc39c778b164d808615'\n    ],\n    nodle: [\n        '0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21'\n    ],\n    origintrail: [\n        '0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174'\n    ],\n    p3d: [\n        '0x6c5894837ad89b6d92b114a2fb3eafa8fe3d26a54848e3447015442cd6ef4e66'\n    ],\n    parallel: [\n        '0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97'\n    ],\n    peaq: [\n        '0xd2a5d385932d1f650dae03ef8e2748983779ee342c614f80854d32b8cd8fa48c'\n    ],\n    pendulum: [\n        '0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86'\n    ],\n    phala: [\n        '0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736'\n    ],\n    picasso: [\n        '0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc',\n        '0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c'\n    ],\n    polimec: [\n        '0x7eb9354488318e7549c722669dcbdcdc526f1fef1420e7944667212f3601fdbd'\n    ],\n    polkadex: [\n        '0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c'\n    ],\n    polkadot: [\n        '0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3'\n    ],\n    polymesh: [\n        '0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063'\n    ],\n    quartz: [\n        '0xcd4d732201ebe5d6b014edda071c4203e16867305332301dc8d092044b28e554'\n    ],\n    rococo: [\n        '0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e',\n        '0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897',\n        '0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770',\n        '0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff',\n        '0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a',\n        '0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9',\n        '0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779',\n        '0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215',\n        '0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9',\n        '0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147',\n        '0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd',\n        '0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299'\n    ],\n    sora: [\n        '0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5'\n    ],\n    stafi: [\n        '0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80'\n    ],\n    statemine: [\n        '0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a'\n    ],\n    statemint: [\n        '0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f'\n    ],\n    subsocial: [\n        '0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8'\n    ],\n    ternoa: [\n        '0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e'\n    ],\n    unique: [\n        '0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31'\n    ],\n    vara: [\n        '0xfe1b4c55fd4d668101126434206571a7838a8b6b93a6d1b95d607e78e6c53763'\n    ],\n    vtb: [\n        '0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f',\n        '0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa'\n    ],\n    westend: [\n        '0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e'\n    ],\n    xxnetwork: [\n        '0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa'\n    ],\n    zeitgeist: [\n        '0x1bf2a2ecb4a868de66ea8610f2ce7c8c43706561b6476031315f6640fe38e060'\n    ]\n};\n","export const knownIcon = {\n    centrifuge: 'polkadot',\n    kusama: 'polkadot',\n    polkadot: 'polkadot',\n    sora: 'polkadot',\n    statemine: 'polkadot',\n    statemint: 'polkadot',\n    westmint: 'polkadot'\n};\n","export const knownLedger = {\n    acala: 0x00000313,\n    ajuna: 0x00000162,\n    'aleph-node': 0x00000283,\n    astar: 0x0000032a,\n    bifrost: 0x00000314,\n    'bifrost-kusama': 0x00000314,\n    bittensor: 0x00000162,\n    centrifuge: 0x000002eb,\n    composable: 0x00000162,\n    darwinia: 0x00000162,\n    'dock-mainnet': 0x00000252,\n    edgeware: 0x0000020b,\n    encointer: 0x000001b2,\n    enjin: 0x00000483,\n    equilibrium: 0x05f5e0fd,\n    frequency: 0x0000082b,\n    genshiro: 0x05f5e0fc,\n    hydradx: 0x00000162,\n    integritee: 0x000007df,\n    'interlay-parachain': 0x00000162,\n    karura: 0x000002ae,\n    khala: 0x000001b2,\n    kusama: 0x000001b2,\n    matrixchain: 0x00000483,\n    nodle: 0x000003eb,\n    origintrail: 0x00000162,\n    parallel: 0x00000162,\n    peaq: 0x00000d0a,\n    pendulum: 0x00000162,\n    phala: 0x00000162,\n    picasso: 0x000001b2,\n    polimec: 0x00000d10,\n    polkadex: 0x0000031f,\n    polkadot: 0x00000162,\n    polymesh: 0x00000253,\n    quartz: 0x00000277,\n    sora: 0x00000269,\n    stafi: 0x0000038b,\n    statemine: 0x000001b2, // common-good on Kusama, shares derivation\n    statemint: 0x00000162, // common-good on Polkadot, shares derivation\n    ternoa: 0x00003e3,\n    unique: 0x00000295,\n    vara: 0x00001370,\n    vtb: 0x000002b6,\n    xxnetwork: 0x000007a3,\n    zeitgeist: 0x00000162\n};\n","export const knownTestnet = {\n    '': true, // this is the default non-network entry\n    'cess-testnet': true,\n    'dock-testnet': true,\n    jupiter: true,\n    'mathchain-testnet': true,\n    p3dt: true,\n    subspace_testnet: true,\n    'zero-alphaville': true\n};\n","import knownSubstrate from '@substrate/ss58-registry';\nimport { knownGenesis, knownIcon, knownLedger, knownTestnet } from './defaults/index.js';\nconst UNSORTED = [0, 2, 42];\nconst TESTNETS = ['testnet'];\nfunction toExpanded(o) {\n    const network = o.network || '';\n    const nameParts = network.replace(/_/g, '-').split('-');\n    const n = o;\n    // ledger additions\n    n.slip44 = knownLedger[network];\n    n.hasLedgerSupport = !!n.slip44;\n    // general items\n    n.genesisHash = knownGenesis[network] || [];\n    n.icon = knownIcon[network] || 'substrate';\n    // filtering\n    n.isTestnet = !!knownTestnet[network] || TESTNETS.includes(nameParts[nameParts.length - 1]);\n    n.isIgnored = n.isTestnet || (!(o.standardAccount &&\n        o.decimals?.length &&\n        o.symbols?.length) &&\n        o.prefix !== 42);\n    return n;\n}\nfunction filterSelectable({ genesisHash, prefix }) {\n    return !!genesisHash.length || prefix === 42;\n}\nfunction filterAvailable(n) {\n    return !n.isIgnored && !!n.network;\n}\nfunction sortNetworks(a, b) {\n    const isUnSortedA = UNSORTED.includes(a.prefix);\n    const isUnSortedB = UNSORTED.includes(b.prefix);\n    return isUnSortedA === isUnSortedB\n        ? isUnSortedA\n            ? 0\n            : a.displayName.localeCompare(b.displayName)\n        : isUnSortedA\n            ? -1\n            : 1;\n}\nexport const allNetworks = knownSubstrate.map(toExpanded);\nexport const availableNetworks = allNetworks.filter(filterAvailable).sort(sortNetworks);\nexport const selectableNetworks = availableNetworks.filter(filterSelectable);\n","import { availableNetworks } from '../networks.js';\nexport const defaults = {\n    allowedDecodedLengths: [1, 2, 4, 8, 32, 33],\n    // publicKey has prefix + 2 checksum bytes, short only prefix + 1 checksum byte\n    allowedEncodedLengths: [3, 4, 6, 10, 35, 36, 37, 38],\n    allowedPrefix: availableNetworks.map(({ prefix }) => prefix),\n    prefix: 42\n};\n","import { isHex, isU8a, u8aToU8a } from '@polkadot/util';\nimport { base58Decode } from '../base58/index.js';\nimport { checkAddressChecksum } from './checksum.js';\nimport { defaults } from './defaults.js';\nexport function decodeAddress(encoded, ignoreChecksum, ss58Format = -1) {\n    if (!encoded) {\n        throw new Error('Invalid empty address passed');\n    }\n    if (isU8a(encoded) || isHex(encoded)) {\n        return u8aToU8a(encoded);\n    }\n    try {\n        const decoded = base58Decode(encoded);\n        if (!defaults.allowedEncodedLengths.includes(decoded.length)) {\n            throw new Error('Invalid decoded address length');\n        }\n        const [isValid, endPos, ss58Length, ss58Decoded] = checkAddressChecksum(decoded);\n        if (!isValid && !ignoreChecksum) {\n            throw new Error('Invalid decoded address checksum');\n        }\n        else if (ss58Format !== -1 && ss58Format !== ss58Decoded) {\n            throw new Error(`Expected ss58Format ${ss58Format}, received ${ss58Decoded}`);\n        }\n        return decoded.slice(ss58Length, endPos);\n    }\n    catch (error) {\n        throw new Error(`Decoding ${encoded}: ${error.message}`);\n    }\n}\n","import { compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst HDKD = compactAddLength(stringToU8a('Secp256k1HDKD'));\nexport function secp256k1DeriveHard(seed, chainCode) {\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n        throw new Error('Invalid chainCode passed to derive');\n    }\n    // NOTE This is specific to the Substrate HDD derivation, so always use the blake2 hasher\n    return blake2AsU8a(u8aConcat(HDKD, seed, chainCode), 256);\n}\n","import { compactAddLength, isU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nconst HDKD = compactAddLength(stringToU8a('Ed25519HDKD'));\nexport function ed25519DeriveHard(seed, chainCode) {\n    if (!isU8a(chainCode) || chainCode.length !== 32) {\n        throw new Error('Invalid chainCode passed to derive');\n    }\n    return blake2AsU8a(u8aConcat(HDKD, seed, chainCode));\n}\n","import { BN, hexToBn } from '@polkadot/util';\nimport { randomAsHex } from './asU8a.js';\nconst BN_53 = new BN(0b11111111111111111111111111111111111111111111111111111);\n/**\n * @name randomAsNumber\n * @summary Creates a random number from random bytes.\n * @description\n * Returns a random number generated from the secure bytes.\n * @example\n * <BR>\n *\n * ```javascript\n * import { randomAsNumber } from '@polkadot/util-crypto';\n *\n * randomAsNumber(); // => <random number>\n * ```\n */\nexport function randomAsNumber() {\n    return hexToBn(randomAsHex(8)).and(BN_53).toNumber();\n}\n","import { bnToU8a, stringToU8a, u8aConcat } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nimport { BN_LE_16_OPTS } from '../bn.js';\nimport { decodeAddress } from './decode.js';\nconst PREFIX = stringToU8a('modlpy/utilisuba');\nexport function createKeyDerived(who, index) {\n    return blake2AsU8a(u8aConcat(PREFIX, decodeAddress(who), bnToU8a(index, BN_LE_16_OPTS)));\n}\n","import { bnToU8a, compactToU8a, stringToU8a, u8aConcat, u8aSorted } from '@polkadot/util';\nimport { blake2AsU8a } from '../blake2/asU8a.js';\nimport { BN_LE_16_OPTS } from '../bn.js';\nimport { addressToU8a } from './util.js';\nconst PREFIX = stringToU8a('modlpy/utilisuba');\nexport function createKeyMulti(who, threshold) {\n    return blake2AsU8a(u8aConcat(PREFIX, compactToU8a(who.length), ...u8aSorted(who.map(addressToU8a)), bnToU8a(threshold, BN_LE_16_OPTS)));\n}\n","import { logger } from '@polkadot/util';\nimport { defaults } from './defaults.js';\nconst l = logger('setSS58Format');\n/**\n * @description Sets the global SS58 format to use for address encoding\n * @deprecated Use keyring.setSS58Format\n */\nexport function setSS58Format(prefix) {\n    l.warn('Global setting of the ss58Format is deprecated and not recommended. Set format on the keyring (if used) or as part of the address encode function');\n    defaults.prefix = prefix;\n}\n","import { SS58String } from \"polkadot-api\"\nimport { u8aToHex } from \"@polkadot/util\"\nimport { decodeAddress } from \"@polkadot/util-crypto\"\nimport { ChainId } from \"../chains/types\"\nimport { NetworkConnector } from \"../connectors\"\n\nexport class Account {\n  private addresses: SS58String[]\n  constructor(addresses: SS58String[]) {\n    this.addresses = addresses\n  }\n\n  listAddresses(): SS58String[] {\n    return this.addresses\n  }\n\n  addAddress(address: SS58String): void {\n    this.addresses.push(address)\n  }\n\n  removeAddress(address: SS58String): void {\n    this.addresses = this.addresses.filter((addr) => addr !== address)\n  }\n\n  clearAddresses(): void {\n    this.addresses = []\n  }\n\n  static getAddressPubkey(address: string) {\n    if (address.startsWith(\"0x\") && address.length === 42) {\n      return address\n    }\n    return u8aToHex(decodeAddress(address))\n  }\n\n  async balance(networkConnector: NetworkConnector, chain?: ChainId) {\n    if (networkConnector.getStatus() !== \"connected\") {\n      throw new Error(\"Network connector is not connected\")\n    }\n\n    if (!this.addresses.length) {\n      throw new Error(\"No addresses provided\")\n    }\n\n    // load chains and query all chains balance\n\n    const chains = networkConnector.getChains()\n    if (chain) {\n      if (!chains.includes(chain)) {\n        throw new Error(`Chain ${chain} not found in network connector`)\n      }\n      const chainConnector = networkConnector.getChain(chain)!\n\n      const balances = await chainConnector.balanceOf(this.addresses)\n      return balances\n    } else {\n      const balances = await Promise.allSettled(\n        chains.map((chain) =>\n          networkConnector.getChain(chain)!.balanceOf(this.addresses),\n        ),\n      )\n      const successfulBalances = balances.reduce(\n        (acc, balance) => {\n          if (balance.status === \"fulfilled\") {\n            const { free, reserved, frozen } = balance.value\n            acc.free += BigInt(free)\n            acc.reserved += BigInt(reserved)\n            acc.frozen += BigInt(frozen)\n          }\n          return acc\n        },\n        {\n          free: BigInt(0),\n          reserved: BigInt(0),\n          frozen: BigInt(0),\n        },\n      )\n\n      return successfulBalances\n    }\n  }\n}\n"],"names":["__publicField","chainSpec","wellKnownChains.polkadot","wellKnownChains.polkadot_asset_hub","wellKnownChains.polkadot_bridge_hub","wellKnownChains.polkadot_collectives","wellKnownChains.polkadot_coretime","wellKnownChains.polkadot_people","wellKnownChains.ksmcc3","wellKnownChains.ksmcc3_asset_hub","wellKnownChains.ksmcc3_bridge_hub","wellKnownChains.ksmcc3_people","wellKnownChains.westend2","wellKnownChains.westend2_asset_hub","wellKnownChains.westend2_bridge_hub","wellKnownChains.westend2_collectives","wellKnownChains.westend2_people","__defProp","__defNormalProp","HEX_MAP","fromHex","mergeUint8","mapObject","u8","u32","u64","textEncoder","textDecoder","noop","_void","Enum","isBytes","anumber","SIGMA","add","blake2b","SS58_PREFIX","_bytes","enc","dec","bitSequence","Enum$1","hashers","empty","extrinsic","opaqueBytes","len32","chainHead","transaction","createClient","clientCache","createClient$1","__awaiter","isFunction","config","Symbol_observable","Symbol_iterator","process","iterator","isArray","combineLatest","asyncScheduler","scale.Bin","scale._void","scale.ethAccount","scale.compactBn","scale.compactNumber","scale.bitSequence","scale.Vector","scale.Tuple","scale.Struct","scale.Option","scale.Result","scale.Variant","scale.Self","scale.AccountId","scale.Bytes","scale.createCodec","scale.Storage","shareLatest","EMPTY_VALUE","Observable2","state","jsonRpcMsg","require$$0","bufferUtilModule","bufferUtil","require$$1","require$$2","require$$3","validationModule","require$$4","require$$5","require$$6","require$$8","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$7","WebSocket","NodeWsProvider","this","buffer.utf8BytesToString","buffer.readUInt8","buffer.readUInt16BE","buffer.readUInt32LE","buffer.writeUInt32LE","buffer.writeUInt8","instance.startLocalInstance","remote.connectToInstanceServer","innerStart","startFromWorker","client","NodeStartFromWorker","ThreadWorker","webStartFromWorker","BigInt","U8","U16","TextEncoder","TextDecoder","blake2bJs","chain"],"mappings":";;;;;;;;;;;;;;;;;;;;MAIsB,gBAAgB,CAAA;AAAA,EAMpC,WAAA,CAAsB,SAAuB,MAAe,EAAA;AAL5D,IAAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AACA,IAAwBA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,IAAA,CAAA;AACd,IAAAA,eAAA,CAAA,IAAA,EAAA,QAAA,sBAA2C,GAAG,EAAA,CAAA;AAC9C,IAAcA,eAAA,CAAA,IAAA,EAAA,aAAA,EAAA,KAAA,CAAA;AAGtB,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA;AACf,IAAA,IAAA,CAAK,SAAS,MAAU,IAAA,IAAA;AAAA;AAC1B,EAMA,SAAS,OAAgB,EAAA;AACvB,IAAO,OAAA,IAAA,CAAK,MAAO,CAAA,GAAA,CAAI,OAAO,CAAA;AAAA;AAChC,EAEA,SAAS,GAAA;AACP,IAAO,OAAA,IAAA,CAAK,cAAc,WAAc,GAAA,cAAA;AAAA;AAC1C,EAEA,SAAS,GAAA;AACP,IAAA,OAAO,CAAC,GAAG,IAAK,CAAA,MAAA,CAAO,MAAM,CAAA;AAAA;AAEhC;;AC9BD;AACA,IAAIC,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACzDD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC7CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC7CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC7CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC/CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC9DD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC9CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC7CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC5CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC9BD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC3BD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC/DD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC7CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AC/CD;AACA,IAAIA,WAAS,GAAG,CAAC;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;ACtCM,MAAM,eAAoD,GAAA;AAAA,EAC/D,QAAU,EAAA;AAAA,IACR,OAAS,EAAA,UAAA;AAAA,IACT,SAASC,WAAgB;AAAA,IACzB,IAAM,EAAA;AAAA,MACJ,EAAI,EAAA,UAAA;AAAA,MACJ,IAAM,EAAA,UAAA;AAAA,MACN,KAAO,EAAA;AAAA,QACL,gCAAA;AAAA,QACA,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C,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;AACxD,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACxD,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;AACxD,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;AACxD,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACxD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;AACxD,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;AACxD;AACA,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,E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tD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACvD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;AACtD,YAAY,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,EAAE,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAA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EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACrF,QAAQ,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,GAAG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,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC;MACjD,EAAE,IAAI,SAAS;AACnB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC;MACjD,EAAE,IAAI,SAAS;AACnB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC;MACjD,EAAE,IAAI,SAAS;AACnB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC;MACjD,EAAE,IAAI,SAAS;AACnB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC;MACjD,EAAE,IAAI,SAAS;AACnB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC1D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC;MACjD,EAAE,IAAI,SAAS;AACnB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC5B,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACvC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;AACzC,MAAI,EAAE,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACnC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB;MACI,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;AAC7B,MAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI,CAAC;MACrC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC;MACxB,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,CAAC,IAAI,CAAC;AAC3D,MAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,KAAK,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC;MAClD,GAAG,IAAI,SAAS;AACpB,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;AACb,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG;AACf,MAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AACjB,QAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC;QACT,GAAG,CAAC,MAAM,EAAE;AAClB;AACA,MAAI,OAAO,GAAG;KACX;;AAEH;AACA,IAAE,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;MACd,WAAW,GAAG,UAAU;AAC5B;;IAEE,SAAS,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;MACjC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ;MAC3C,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM;;MAErC,IAAI,KAAK,GAAG,CAAC;MACb,IAAI,OAAO,GAAG,CAAC;AACnB,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C;AACA;QACM,IAAI,MAAM,GAAG,OAAO;QACpB,OAAO,GAAG,CAAC;AACjB,QAAM,IAAI,KAAK,GAAG,KAAK,GAAG,SAAS;AACnC,QAAM,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QACtC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE;AACrE,UAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;UACb,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;UACzB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AAChC,UAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;;AAErB,UAAQ,IAAI,EAAE,GAAG,CAAC,GAAG,SAAS;AAC9B,UAAQ,MAAM,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC;AACrD,UAAQ,EAAE,GAAG,CAAC,EAAE,GAAG,KAAK,IAAI,CAAC;AAC7B,UAAQ,KAAK,GAAG,EAAE,GAAG,SAAS;UACtB,MAAM,GAAG,CAAC,MAAM,IAAI,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC;;AAE3C,UAAQ,OAAO,IAAI,MAAM,KAAK,EAAE;UACxB,MAAM,IAAI,SAAS;AAC3B;AACA,QAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK;QACpB,KAAK,GAAG,MAAM;QACd,MAAM,GAAG,OAAO;AACtB;AACA,MAAI,IAAI,KAAK,KAAK,CAAC,EAAE;AACrB,QAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK;AAC1B,OAAK,MAAM;QACL,GAAG,CAAC,MAAM,EAAE;AAClB;;AAEA,MAAI,OAAO,GAAG,CAAC,MAAM,EAAE;AACvB;;IAEE,SAAS,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;AACvC;AACA;AACA;MACI,OAAO,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;AACnC;;AAEA,IAAE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AACjD,MAAI,IAAI,GAAG;MACP,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM;AACtC,MAAI,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EAAE;QAC3C,GAAG,GAAG,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;AACvC,OAAK,MAAM,IAAI,GAAG,GAAG,EAAE,EAAE;QACnB,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;AACtC,OAAK,MAAM,IAAI,GAAG,GAAG,IAAI,EAAE;QACrB,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;AACpC,OAAK,MAAM;QACL,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;AACtC;;AAEA,MAAI,OAAO,GAAG;KACX;;AAsMH;IACE,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;AACxC,MAAI,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC;AAC1B,MAAI,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;MAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC;KAC5B;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;AAC1C,MAAI,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC;AAC1B,MAAI,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;MAC/C,OAAO,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;KAClC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC;KACrC;;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAC5C,MAAI,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC;AAC1B,MAAI,IAAI,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG;;AAE5B,MAAI,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;AACnC,MAAI,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;;AAE3B;MACI,IAAI,KAAK,GAAG,CAAC;AACjB,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC1C,QAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG;QACjC,IAAI,EAAE,GAAG,CAAC,CAAC,GAAG,SAAS,KAAK,KAAK,GAAG,SAAS,CAAC;QAC9C,KAAK,KAAK,EAAE;AAClB,QAAM,KAAK,IAAI,CAAC,CAAC,GAAG,SAAS,IAAI,CAAC;AAClC;AACA,QAAM,KAAK,IAAI,EAAE,KAAK,EAAE;QAClB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS;AACpC;;AAEA,MAAI,IAAI,KAAK,KAAK,CAAC,EAAE;AACrB,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK;QACrB,IAAI,CAAC,MAAM,EAAE;AACnB;;MAEI,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI;KACrC;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;KAC/B;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI;AACrC,MAAI,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;KACtB;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,IAAI;MACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;KAC/B;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;AACxC,MAAI,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC;AAC3B,MAAI,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;;AAExC;MACI,IAAI,GAAG,GAAG,IAAI;MACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE;AACxD,QAAM,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AACtB;;AAEA,MAAI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;QAClB,KAAK,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,EAAE;AAC9D,UAAQ,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;;AAExB,UAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACxB;AACA;;AAEA,MAAI,OAAO,GAAG;KACX;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,IAAI,EAAE;MAC3C,MAAM,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC;AACjD,MAAI,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;MACjB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE;AAC3B,MAAI,IAAI,SAAS,GAAG,CAAC,SAAS,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACxD,MAAI,IAAI,CAAC;;AAET,MAAI,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,IAAI,KAAK,GAAG,CAAC;;AAEnB,QAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;UAChC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS;AAChD,UAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,QAAQ,KAAK,CAAC;UAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK;AACjC,UAAQ,KAAK,GAAG,QAAQ,MAAM,EAAE,GAAG,CAAC,CAAC;AACrC;;QAEM,IAAI,KAAK,EAAE;AACjB,UAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK;UACrB,IAAI,CAAC,MAAM,EAAE;AACrB;AACA;;AAEA,MAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AACjB,QAAM,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC7C,UAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACzC;;QAEM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAC9B,UAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACzB;;AAEA,QAAM,IAAI,CAAC,MAAM,IAAI,CAAC;AACtB;;AAEA,MAAI,OAAO,IAAI,CAAC,MAAM,EAAE;KACrB;;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;AAC7C;AACA,MAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;AAC/B,MAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;KACzB;;AAEH;AACA;AACA;AACA,IAAE,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;MAC3D,MAAM,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC;AACjD,MAAI,IAAI,CAAC;MACL,IAAI,IAAI,EAAE;QACR,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE;AACnC,OAAK,MAAM;QACL,CAAC,GAAG,CAAC;AACX;;AAEA,MAAI,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;AACrB,MAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC;MAC9C,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,SAAS,KAAK,CAAC,KAAK,CAAC,CAAC;MAC/C,IAAI,WAAW,GAAG,QAAQ;;MAE1B,CAAC,IAAI,CAAC;MACN,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;;AAEtB;MACI,IAAI,WAAW,EAAE;AACrB,QAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AAClC,UAAQ,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5C;AACA,QAAM,WAAW,CAAC,MAAM,GAAG,CAAC;AAC5B;;AAEA,MAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAEZ,MAAM,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAChC,QAAM,IAAI,CAAC,MAAM,IAAI,CAAC;AACtB,QAAM,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACxC,UAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;AACzC;AACA,OAAK,MAAM;AACX,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACvB,QAAM,IAAI,CAAC,MAAM,GAAG,CAAC;AACrB;;MAEI,IAAI,KAAK,GAAG,CAAC;MACb,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QAChE,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AAClC,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE,GAAG,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC;AACxD,QAAM,KAAK,GAAG,IAAI,GAAG,IAAI;AACzB;;AAEA;AACA,MAAI,IAAI,WAAW,IAAI,KAAK,KAAK,CAAC,EAAE;QAC9B,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK;AACrD;;AAEA,MAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AAC3B,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACvB,QAAM,IAAI,CAAC,MAAM,GAAG,CAAC;AACrB;;AAEA,MAAI,OAAO,IAAI,CAAC,MAAM,EAAE;KACrB;;AAEH,IAAE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC7D;AACA,MAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC;MAC3B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC;KACzC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE;MACvC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;KAChC;;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;MACzC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;KACjC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,IAAI,EAAE;MACvC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;KAChC;;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;MACzC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;KACjC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;MACxC,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,IAAI,CAAC,CAAC;AAC/C,MAAI,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE;MAChB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE;AAC1B,MAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;;AAElB;MACI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE,OAAO,KAAK;;AAEtC;MACI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;AAEzB,MAAI,OAAO,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;KACjB;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,IAAI,EAAE;MAC3C,MAAM,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC;AACjD,MAAI,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE;MACjB,IAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,EAAE;;MAEvB,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,yCAAyC,CAAC;;AAE1E,MAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;AAC1B,QAAM,OAAO,IAAI;AACjB;;AAEA,MAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AACjB,QAAM,CAAC,EAAE;AACT;AACA,MAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC;;AAE1C,MAAI,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,IAAI,IAAI,GAAG,SAAS,IAAI,CAAC,SAAS,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI;AACzC;;AAEA,MAAI,OAAO,IAAI,CAAC,MAAM,EAAE;KACrB;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;MACzC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;KACjC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAC5C,MAAI,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;AACnC,MAAI,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AAC3B,MAAI,IAAI,GAAG,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;;AAExC;AACA,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC7B,QAAM,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,EAAE;AAC3D,UAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACjD,UAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC;AACzB,UAAQ,OAAO,IAAI;AACnB;;AAEA,QAAM,IAAI,CAAC,QAAQ,GAAG,CAAC;AACvB,QAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACrB,QAAM,IAAI,CAAC,QAAQ,GAAG,CAAC;AACvB,QAAM,OAAO,IAAI;AACjB;;AAEA;AACA,MAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;KACxB;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE;AAC9C,MAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;;AAExB;MACI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE,CAAC,EAAE,EAAE;AACxE,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS;QAC1B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;UACzB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC;AAC7B,SAAO,MAAM;UACL,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;AAC3B;AACA;AACA,MAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC;;AAE9C,MAAI,OAAO,IAAI;KACZ;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAC5C,MAAI,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;AACnC,MAAI,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AAC3B,MAAI,IAAI,GAAG,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC;;AAExC,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC7B,QAAM,IAAI,CAAC,QAAQ,GAAG,CAAC;AACvB,QAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;AACrB,QAAM,IAAI,CAAC,QAAQ,GAAG,CAAC;AACvB,QAAM,OAAO,IAAI;AACjB;;AAEA,MAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG;;AAExB,MAAI,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AAChD,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AACpC,QAAM,IAAI,CAAC,QAAQ,GAAG,CAAC;AACvB,OAAK,MAAM;AACX;QACM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;AACjE,UAAQ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS;UAC1B,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;AAC9B;AACA;;AAEA,MAAI,OAAO,IAAI,CAAC,MAAM,EAAE;KACrB;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;KAC/B;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;KAC/B;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,IAAI;AACvC,MAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;;AAErB,MAAI,OAAO,IAAI;KACZ;;IAED,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,IAAI;AACrC,MAAI,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE;KAC3B;;AAEH,IAAE,EAAE,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACtE,MAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,KAAK;AAChC,MAAI,IAAI,CAAC;;AAET,MAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;;AAErB,MAAI,IAAI,CAAC;MACL,IAAI,KAAK,GAAG,CAAC;AACjB,MAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK;AAC7C,QAAM,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG;AAC1C,QAAM,CAAC,IAAI,KAAK,GAAG,SAAS;AAC5B,QAAM,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,SAAS,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,SAAS;AAC3C;MACI,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;AACzC,QAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,KAAK;AAC7C,QAAM,KAAK,GAAG,CAAC,IAAI,EAAE;QACf,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,SAAS;AAC3C;;MAEI,IAAI,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE;;AAEzC;AACA,MAAI,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC;MACpB,KAAK,GAAG,CAAC;AACb,MAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,QAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK;AACtC,QAAM,KAAK,GAAG,CAAC,IAAI,EAAE;QACf,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS;AACnC;AACA,MAAI,IAAI,CAAC,QAAQ,GAAG,CAAC;;AAErB,MAAI,OAAO,IAAI,CAAC,MAAM,EAAE;KACrB;;AAEH,IAAE,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE;MACpD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM;;AAExC,MAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;MACpB,IAAI,CAAC,GAAG,GAAG;;AAEf;AACA,MAAI,IAAI,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;MACnC,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AACtC,MAAI,KAAK,GAAG,EAAE,GAAG,OAAO;AACxB,MAAI,IAAI,KAAK,KAAK,CAAC,EAAE;AACrB,QAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;AACxB,QAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;AACrB,QAAM,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AACrC;;AAEA;MACI,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM;AAC/B,MAAI,IAAI,CAAC;;AAET,MAAI,IAAI,IAAI,KAAK,KAAK,EAAE;AACxB,QAAM,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC;AACtB,QAAM,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC;QAChB,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC;AACnC,QAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,UAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACtB;AACA;;AAEA,MAAI,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC9C,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;QACvB,CAAC,GAAG,IAAI;QACR,IAAI,CAAC,EAAE;AACb,UAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACtB;AACA;;AAEA,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AACrC,QAAM,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,SAAS;AACtD,WAAS,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;;AAEvC;AACA;AACA,QAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,SAAS,CAAC;;QAExC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC9B,QAAM,OAAO,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC/B,UAAQ,EAAE,EAAE;AACZ,UAAQ,CAAC,CAAC,QAAQ,GAAG,CAAC;UACd,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAC/B,UAAQ,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;AACzB,YAAU,CAAC,CAAC,QAAQ,IAAI,CAAC;AACzB;AACA;QACM,IAAI,CAAC,EAAE;AACb,UAAQ,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;AACvB;AACA;MACI,IAAI,CAAC,EAAE;QACL,CAAC,CAAC,MAAM,EAAE;AAChB;MACI,CAAC,CAAC,MAAM,EAAE;;AAEd;MACI,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,EAAE;AACvC,QAAM,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;AACrB;;AAEA,MAAI,OAAO;AACX,QAAM,GAAG,EAAE,CAAC,IAAI,IAAI;AACpB,QAAM,GAAG,EAAE;OACN;KACF;;AAEH;AACA;AACA;AACA;AACA,IAAE,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;AAC9D,MAAI,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;;AAEzB,MAAI,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE;AACvB,QAAM,OAAO;AACb,UAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACtB,UAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;SACd;AACP;;AAEA,MAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG;AACrB,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AACnD,QAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC;;AAExC,QAAM,IAAI,IAAI,KAAK,KAAK,EAAE;AAC1B,UAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;AAC3B;;AAEA,QAAM,IAAI,IAAI,KAAK,KAAK,EAAE;AAC1B,UAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;UACnB,IAAI,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC5C,YAAU,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AACvB;AACA;;AAEA,QAAM,OAAO;UACL,GAAG,EAAE,GAAG;AAChB,UAAQ,GAAG,EAAE;SACN;AACP;;AAEA,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AACnD,QAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC;;AAExC,QAAM,IAAI,IAAI,KAAK,KAAK,EAAE;AAC1B,UAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;AAC3B;;AAEA,QAAM,OAAO;UACL,GAAG,EAAE,GAAG;UACR,GAAG,EAAE,GAAG,CAAC;SACV;AACP;;MAEI,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,MAAM,CAAC,EAAE;AAC9C,QAAM,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC;;AAE9C,QAAM,IAAI,IAAI,KAAK,KAAK,EAAE;AAC1B,UAAQ,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE;UACnB,IAAI,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC5C,YAAU,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC;AACvB;AACA;;AAEA,QAAM,OAAO;AACb,UAAQ,GAAG,EAAE,GAAG,CAAC,GAAG;AACpB,UAAQ,GAAG,EAAE;SACN;AACP;;AAEA;;AAEA;AACA,MAAI,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACvD,QAAM,OAAO;AACb,UAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AACtB,UAAQ,GAAG,EAAE;SACN;AACP;;AAEA;AACA,MAAI,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;AAC1B,QAAM,IAAI,IAAI,KAAK,KAAK,EAAE;AAC1B,UAAQ,OAAO;AACf,YAAU,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACtC,YAAU,GAAG,EAAE;WACN;AACT;;AAEA,QAAM,IAAI,IAAI,KAAK,KAAK,EAAE;AAC1B,UAAQ,OAAO;YACL,GAAG,EAAE,IAAI;AACnB,YAAU,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;WACrC;AACT;;AAEA,QAAM,OAAO;AACb,UAAQ,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACpC,UAAQ,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;SACrC;AACP;;MAEI,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC;KAChC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;AACxC,MAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG;KAC1C;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;AACxC,MAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG;KAC1C;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;AAC1C,MAAI,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG;KACzC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,EAAE,GAAG,EAAE;MAC9C,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;;AAE7B;MACI,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,GAAG;;MAElC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG;;MAE3D,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;;AAE3B;AACA,MAAI,IAAI,GAAG,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG;;AAEzD;MACI,OAAO,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;KACjE;;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAC5C,MAAI,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC;AAC1B,MAAI,IAAI,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG;;AAE5B,MAAI,MAAM,CAAC,GAAG,IAAI,SAAS,CAAC;MACxB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,GAAG;;MAEvB,IAAI,GAAG,GAAG,CAAC;AACf,MAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,QAAM,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG;AACjD;;AAEA,MAAI,OAAO,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG;KAC7B;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;AAC1C,MAAI,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;KACvB;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAC5C,MAAI,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC;AAC1B,MAAI,IAAI,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG;;AAE5B,MAAI,MAAM,CAAC,GAAG,IAAI,SAAS,CAAC;;MAExB,IAAI,KAAK,GAAG,CAAC;AACjB,MAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,QAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,SAAS;AACrD,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;AACnC,QAAM,KAAK,GAAG,CAAC,GAAG,GAAG;AACrB;;MAEI,IAAI,CAAC,MAAM,EAAE;MACb,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI;KACrC;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC;KAC/B;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;AACxC,MAAI,MAAM,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC;AAC5B,MAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;;MAEnB,IAAI,CAAC,GAAG,IAAI;AAChB,MAAI,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;;AAErB,MAAI,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC1B,QAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACnB,OAAK,MAAM;AACX,QAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;AACnB;;AAEA;AACA,MAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;AACrB,MAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;;AAErB;AACA,MAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;AACrB,MAAI,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;;MAEjB,IAAI,CAAC,GAAG,CAAC;;MAET,OAAO,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACrC,QAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjB,QAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjB,QAAM,EAAE,CAAC;AACT;;AAEA,MAAI,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE;AACtB,MAAI,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE;;AAEtB,MAAI,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE;AACxB,QAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC/E,QAAM,IAAI,CAAC,GAAG,CAAC,EAAE;AACjB,UAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB,UAAQ,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;YACd,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;AACtC,cAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACtB,cAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACtB;;AAEA,YAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACrB,YAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACrB;AACA;;AAEA,QAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC/E,QAAM,IAAI,CAAC,GAAG,CAAC,EAAE;AACjB,UAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB,UAAQ,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;YACd,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;AACtC,cAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACtB,cAAY,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;AACtB;;AAEA,YAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACrB,YAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACrB;AACA;;QAEM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AACzB,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB,SAAO,MAAM;AACb,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB;AACA;;AAEA,MAAI,OAAO;QACL,CAAC,EAAE,CAAC;QACJ,CAAC,EAAE,CAAC;AACV,QAAM,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;OAChB;KACF;;AAEH;AACA;AACA;IACE,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,CAAC,EAAE;AAC5C,MAAI,MAAM,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC;AAC5B,MAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;;MAEnB,IAAI,CAAC,GAAG,IAAI;AAChB,MAAI,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;;AAErB,MAAI,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC1B,QAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACnB,OAAK,MAAM;AACX,QAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE;AACnB;;AAEA,MAAI,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;AACtB,MAAI,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC;;AAEtB,MAAI,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE;;AAEzB,MAAI,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AAC3C,QAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC/E,QAAM,IAAI,CAAC,GAAG,CAAC,EAAE;AACjB,UAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB,UAAQ,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;AACxB,YAAU,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE;AAC1B,cAAY,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1B;;AAEA,YAAU,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACtB;AACA;;AAEA,QAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;AAC/E,QAAM,IAAI,CAAC,GAAG,CAAC,EAAE;AACjB,UAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB,UAAQ,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE;AACxB,YAAU,IAAI,EAAE,CAAC,KAAK,EAAE,EAAE;AAC1B,cAAY,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AAC1B;;AAEA,YAAU,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AACtB;AACA;;QAEM,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AACzB,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB,UAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;AACnB,SAAO,MAAM;AACb,UAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB,UAAQ,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;AACnB;AACA;;AAEA,MAAI,IAAI,GAAG;MACP,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;QACnB,GAAG,GAAG,EAAE;AACd,OAAK,MAAM;QACL,GAAG,GAAG,EAAE;AACd;;MAEI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AACzB,QAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AACjB;;AAEA,MAAI,OAAO,GAAG;KACX;;IAED,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;MACpC,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,EAAE;MACnC,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,CAAC,GAAG,EAAE;;AAEvC,MAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE;AACxB,MAAI,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE;AACvB,MAAI,CAAC,CAAC,QAAQ,GAAG,CAAC;AAClB,MAAI,CAAC,CAAC,QAAQ,GAAG,CAAC;;AAElB;AACA,MAAI,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,EAAE;AAC3D,QAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjB,QAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjB;;AAEA,MAAI,GAAG;AACP,QAAM,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;AACzB,UAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB;AACA,QAAM,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;AACzB,UAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACnB;;QAEM,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACtB,QAAM,IAAI,CAAC,GAAG,CAAC,EAAE;AACjB;UACQ,IAAI,CAAC,GAAG,CAAC;UACT,CAAC,GAAG,CAAC;UACL,CAAC,GAAG,CAAC;AACb,SAAO,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;UACrC;AACR;;AAEA,QAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACf,OAAK,QAAQ,IAAI;;AAEjB,MAAI,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;KACvB;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;AAC1C,MAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;KAClC;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,IAAI;MACvC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;KACjC;;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,IAAI;MACrC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;KACjC;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;MACxC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG;KAC3B;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAC5C,MAAI,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC;AACnC,MAAI,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE;MAChB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,EAAE;AAC1B,MAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;;AAElB;AACA,MAAI,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;AAC1B,QAAM,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AACzB,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;AACxB,QAAM,OAAO,IAAI;AACjB;;AAEA;MACI,IAAI,KAAK,GAAG,CAAC;AACjB,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnD,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QACzB,CAAC,IAAI,KAAK;AAChB,QAAM,KAAK,GAAG,CAAC,KAAK,EAAE;QAChB,CAAC,IAAI,SAAS;AACpB,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACvB;AACA,MAAI,IAAI,KAAK,KAAK,CAAC,EAAE;AACrB,QAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK;QACrB,IAAI,CAAC,MAAM,EAAE;AACnB;AACA,MAAI,OAAO,IAAI;KACZ;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,IAAI;AAC3C,MAAI,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;KAChD;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;AAC1C,MAAI,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC;;AAE1B,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE;MAC/C,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,QAAQ,EAAE,OAAO,CAAC;;MAE7C,IAAI,CAAC,MAAM,EAAE;;AAEjB,MAAI,IAAI,GAAG;AACX,MAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;QACnB,GAAG,GAAG,CAAC;AACb,OAAK,MAAM;QACL,IAAI,QAAQ,EAAE;UACZ,GAAG,GAAG,CAAC,GAAG;AAClB;;AAEA,QAAM,MAAM,CAAC,GAAG,IAAI,SAAS,EAAE,mBAAmB,CAAC;;QAE7C,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AAC/B,QAAM,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC;AAC5C;MACI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC;AAC5C,MAAI,OAAO,GAAG;KACX;;AAEH;AACA;AACA;AACA;IACE,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;AACxC,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,EAAE;AAC5D,MAAI,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,CAAC;;MAEvD,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;MACxB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC;AAC5C,MAAI,OAAO,GAAG;KACX;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;AAC1C;MACI,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;MACtC,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE;;MAEvC,IAAI,GAAG,GAAG,CAAC;AACf,MAAI,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QACzC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QACzB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;;AAE9B,QAAM,IAAI,CAAC,KAAK,CAAC,EAAE;AACnB,QAAM,IAAI,CAAC,GAAG,CAAC,EAAE;UACT,GAAG,GAAG,EAAE;AAChB,SAAO,MAAM,IAAI,CAAC,GAAG,CAAC,EAAE;UAChB,GAAG,GAAG,CAAC;AACf;QACM;AACN;AACA,MAAI,OAAO,GAAG;KACX;;IAED,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;MACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;KAC5B;;IAED,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,EAAE,EAAE,GAAG,EAAE;MAClC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;KAC3B;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;KAC3B;;IAED,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;MACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;KAC1B;;IAED,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;MACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE;KAC7B;;IAED,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,EAAE,EAAE,GAAG,EAAE;MAClC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE;KAC5B;;IAED,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;MACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC;KAC3B;;IAED,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;MACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;KAC1B;;IAED,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;MACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;KAC5B;;IAED,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,EAAE,EAAE,GAAG,EAAE;MAClC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC;KAC3B;;AAEH;AACA;AACA;AACA;IACE,EAAE,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE;AAC9B,MAAI,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC;KACpB;;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;MACxC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,uCAAuC,CAAC;MAC1D,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,+BAA+B,CAAC;MAC5D,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;KAC1C;;IAED,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,IAAI;AAC7C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,sDAAsD,CAAC;MACxE,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC;KAClC;;IAED,EAAE,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,EAAE,GAAG,EAAE;AACpD,MAAI,IAAI,CAAC,GAAG,GAAG,GAAG;AAClB,MAAI,OAAO,IAAI;KACZ;;IAED,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,EAAE,GAAG,EAAE;MAC9C,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,uCAAuC,CAAC;AAC9D,MAAI,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;KAC3B;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE;AAC9C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC;MACtD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;KAC/B;;IAED,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE,GAAG,EAAE;AAChD,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC;MACvD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;KAChC;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE;AAC9C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC;MACtD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;KAC/B;;IAED,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE,GAAG,EAAE;AAChD,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC;MACvD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;KAChC;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE;AAC9C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC;MACtD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;KAC/B;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE;AAC9C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC;MACtD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC;MAC5B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;KAC/B;;IAED,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE,GAAG,EAAE;AAChD,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC;MACtD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC;MAC5B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC;KAChC;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,IAAI;AAC3C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC;AAC1D,MAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACvB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;KAC1B;;IAED,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,IAAI;AAC7C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC;AAC3D,MAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACvB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KAC3B;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,IAAI;AAC7C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC;AAC3D,MAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACvB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KAC3B;;IAED,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,IAAI;AAC7C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC;AAC3D,MAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACvB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;KAC3B;;AAEH;IACE,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,IAAI;AAC3C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC;AAC1D,MAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACvB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;KAC1B;;IAED,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,EAAE,GAAG,EAAE;AAC9C,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC;AACrD,MAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC;MACvB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC;KAC/B;;AAEH;IACE,IAAI,MAAM,GAAG;MACX,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;MACV,IAAI,EAAE,IAAI;AACd,MAAI,MAAM,EAAE;KACT;;AAEH;AACA,IAAE,SAAS,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE;AAC5B;AACA,MAAI,IAAI,CAAC,IAAI,GAAG,IAAI;MAChB,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MACtB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;MAC3B,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAElD,MAAI,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE;AAC1B;;IAEE,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,IAAI;AAC3C,MAAI,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC;AAC1B,MAAI,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;AACjD,MAAI,OAAO,GAAG;KACX;;IAED,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,EAAE,GAAG,EAAE;AACpD;AACA;MACI,IAAI,CAAC,GAAG,GAAG;AACf,MAAI,IAAI,IAAI;;AAEZ,MAAI,GAAG;QACD,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC;AAC7B,QAAM,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QACjB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAC1B,QAAM,IAAI,GAAG,CAAC,CAAC,SAAS,EAAE;AAC1B,OAAK,QAAQ,IAAI,GAAG,IAAI,CAAC,CAAC;;AAE1B,MAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,MAAI,IAAI,GAAG,KAAK,CAAC,EAAE;AACnB,QAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACpB,QAAM,CAAC,CAAC,MAAM,GAAG,CAAC;AAClB,OAAK,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE;AACxB,QAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACpB,OAAK,MAAM;AACX,QAAM,IAAI,CAAC,CAAC,KAAK,KAAK,SAAS,EAAE;AACjC;UACQ,CAAC,CAAC,KAAK,EAAE;AACjB,SAAO,MAAM;AACb;UACQ,CAAC,CAAC,MAAM,EAAE;AAClB;AACA;;AAEA,MAAI,OAAO,CAAC;KACT;;AAEH,IAAE,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;MACnD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC;KAC7B;;IAED,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;MAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACxB;;IAED,SAAS,IAAI,IAAI;MACf,MAAM,CAAC,IAAI;AACf,QAAM,IAAI;AACV,QAAM,MAAM;AACZ,QAAM,yEAAyE,CAAC;AAChF;AACA,IAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;;AAExB,IAAE,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE;AACxD;MACI,IAAI,IAAI,GAAG,QAAQ;;AAEvB,MAAI,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;AAC1C,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,QAAM,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AACtC;AACA,MAAI,MAAM,CAAC,MAAM,GAAG,MAAM;;AAE1B,MAAI,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;AAC3B,QAAM,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACxB,QAAM,KAAK,CAAC,MAAM,GAAG,CAAC;QAChB;AACN;;AAEA;MACI,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7B,MAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI;;AAE/C,MAAI,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7B,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,EAAE,CAAC;QAC1D,IAAI,GAAG,IAAI;AACjB;MACI,IAAI,MAAM,EAAE;MACZ,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI;MAC1B,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE,EAAE;AACzC,QAAM,KAAK,CAAC,MAAM,IAAI,EAAE;AACxB,OAAK,MAAM;AACX,QAAM,KAAK,CAAC,MAAM,IAAI,CAAC;AACvB;KACG;;IAED,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAC9C;MACI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC;MACzB,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC;AACjC,MAAI,GAAG,CAAC,MAAM,IAAI,CAAC;;AAEnB;MACI,IAAI,EAAE,GAAG,CAAC;AACd,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACnC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AAC9B,QAAM,EAAE,IAAI,CAAC,GAAG,KAAK;QACf,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS;AACnC,QAAM,EAAE,GAAG,CAAC,GAAG,IAAI,IAAI,CAAC,EAAE,GAAG,SAAS,IAAI,CAAC,CAAC;AAC5C;;AAEA;AACA,MAAI,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;QACnC,GAAG,CAAC,MAAM,EAAE;AAClB,QAAM,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;UACnC,GAAG,CAAC,MAAM,EAAE;AACpB;AACA;AACA,MAAI,OAAO,GAAG;KACX;;IAED,SAAS,IAAI,IAAI;MACf,MAAM,CAAC,IAAI;AACf,QAAM,IAAI;AACV,QAAM,MAAM;AACZ,QAAM,gEAAgE,CAAC;AACvE;AACA,IAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;;IAEtB,SAAS,IAAI,IAAI;MACf,MAAM,CAAC,IAAI;AACf,QAAM,IAAI;AACV,QAAM,MAAM;AACZ,QAAM,uDAAuD,CAAC;AAC9D;AACA,IAAE,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;;IAEtB,SAAS,MAAM,IAAI;AACrB;MACI,MAAM,CAAC,IAAI;AACf,QAAM,IAAI;AACV,QAAM,OAAO;AACb,QAAM,qEAAqE,CAAC;AAC5E;AACA,IAAE,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC;;IAExB,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,EAAE,GAAG,EAAE;AAChD;MACI,IAAI,KAAK,GAAG,CAAC;AACjB,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,QAAM,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,KAAK;AAChD,QAAM,IAAI,EAAE,GAAG,EAAE,GAAG,SAAS;QACvB,EAAE,MAAM,EAAE;;AAEhB,QAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;QACjB,KAAK,GAAG,EAAE;AAChB;AACA,MAAI,IAAI,KAAK,KAAK,CAAC,EAAE;QACf,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK;AACrC;AACA,MAAI,OAAO,GAAG;KACX;;AAEH;IACE,EAAE,CAAC,MAAM,GAAG,SAAS,KAAK,EAAE,IAAI,EAAE;AACpC;MACI,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC;;AAEzC,MAAI,IAAI,KAAK;AACb,MAAI,IAAI,IAAI,KAAK,MAAM,EAAE;AACzB,QAAM,KAAK,GAAG,IAAI,IAAI,EAAE;AACxB,OAAK,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AAChC,QAAM,KAAK,GAAG,IAAI,IAAI,EAAE;AACxB,OAAK,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AAChC,QAAM,KAAK,GAAG,IAAI,IAAI,EAAE;AACxB,OAAK,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;AAClC,QAAM,KAAK,GAAG,IAAI,MAAM,EAAE;AAC1B,OAAK,MAAM;AACX,QAAM,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAC9C;AACA,MAAI,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK;;AAExB,MAAI,OAAO,KAAK;KACb;;AAEH;AACA;AACA;AACA,IAAE,SAAS,GAAG,EAAE,CAAC,EAAE;AACnB,MAAI,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;QACzB,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;AAC9B,QAAM,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;AACtB,QAAM,IAAI,CAAC,KAAK,GAAG,KAAK;AACxB,OAAK,MAAM;QACL,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,gCAAgC,CAAC;AACxD,QAAM,IAAI,CAAC,CAAC,GAAG,CAAC;AAChB,QAAM,IAAI,CAAC,KAAK,GAAG,IAAI;AACvB;AACA;;IAEE,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,EAAE,CAAC,EAAE;MAC7C,MAAM,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE,+BAA+B,CAAC;AAC7D,MAAI,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,iCAAiC,CAAC;KACjD;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE;AACpD,MAAI,MAAM,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,MAAM,CAAC,EAAE,+BAA+B,CAAC;AAC5E,MAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG;AACnC,QAAM,iCAAiC,CAAC;KACrC;;IAED,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;AACzC,MAAI,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;;AAEhE,MAAI,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAC3C,MAAI,OAAO,CAAC;KACT;;IAED,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE;AACvC,MAAI,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AACpB,QAAM,OAAO,CAAC,CAAC,KAAK,EAAE;AACtB;;AAEA,MAAI,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;KACrC;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;AAC1C,MAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;MAEnB,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAClB,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AAC9B,QAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACtB;AACA,MAAI,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;AAC5C,MAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;MAEnB,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MACnB,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;AAC9B,QAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACtB;AACA,MAAI,OAAO,GAAG;KACX;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;AAC1C,MAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;MAEnB,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAClB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AACzB,QAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACtB;AACA,MAAI,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;AAC5C,MAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;MAEnB,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MACnB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;AACzB,QAAM,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACtB;AACA,MAAI,OAAO,GAAG;KACX;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;AAC5C,MAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;MAChB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAC/B;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;AAC5C,MAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MACnB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAC5B;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;AAC1C,MAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;MACnB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;KAC3B;;IAED,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;MACrC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;KAC/B;;IAED,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE;MACnC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;KACtB;;IAED,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;MACrC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE;;MAEhC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9B,MAAI,MAAM,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;;AAE1B;AACA,MAAI,IAAI,IAAI,KAAK,CAAC,EAAE;AACpB,QAAM,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACzC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC;AAC7B;;AAEA;AACA;AACA;MACI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MACtB,IAAI,CAAC,GAAG,CAAC;AACb,MAAI,OAAO,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE;AAC5C,QAAM,CAAC,EAAE;AACT,QAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACjB;AACA,MAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC;;AAEvB,MAAI,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;AACnC,MAAI,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE;;AAE3B;AACA;AACA,MAAI,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;MACnC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;AAC9B,MAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;;AAErC,MAAI,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC9C,QAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC;AACrB;;MAEI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACtB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;MACxC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;MACtB,IAAI,CAAC,GAAG,CAAC;MACT,OAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QACvB,IAAI,GAAG,GAAG,CAAC;AACjB,QAAM,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAAE;AAC/C,UAAQ,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE;AAC1B;AACA,QAAM,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;AAEtD,QAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AACrB,QAAM,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;AACpB,QAAM,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACf,CAAC,GAAG,CAAC;AACX;;AAEA,MAAI,OAAO,CAAC;KACT;;IAED,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;MACrC,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9B,MAAI,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;AAC5B,QAAM,GAAG,CAAC,QAAQ,GAAG,CAAC;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE;AACpC,OAAK,MAAM;AACX,QAAM,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;AAC3B;KACG;;AAEH,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE;AAC5C,MAAI,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;AAClD,MAAI,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE;;MAEvC,IAAI,UAAU,GAAG,CAAC;MAClB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC;AACxC,MAAI,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;AAClC,MAAI,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;AACd,MAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACzC,QAAM,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACtC;;AAEA,MAAI,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;MAChB,IAAI,OAAO,GAAG,CAAC;MACf,IAAI,UAAU,GAAG,CAAC;MAClB,IAAI,KAAK,GAAG,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE;AACpC,MAAI,IAAI,KAAK,KAAK,CAAC,EAAE;QACf,KAAK,GAAG,EAAE;AAChB;;AAEA,MAAI,KAAK,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;QACpC,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7B,QAAM,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;UACnC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC;AACjC,UAAQ,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE;AAC5B,YAAU,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;AAC7B;;UAEQ,IAAI,GAAG,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,EAAE;YAC9B,UAAU,GAAG,CAAC;YACd;AACV;;UAEQ,OAAO,KAAK,CAAC;UACb,OAAO,IAAI,GAAG;AACtB,UAAQ,UAAU,EAAE;AACpB,UAAQ,IAAI,UAAU,KAAK,UAAU,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;;AAE/D,UAAQ,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;UACjC,UAAU,GAAG,CAAC;UACd,OAAO,GAAG,CAAC;AACnB;QACM,KAAK,GAAG,EAAE;AAChB;;AAEA,MAAI,OAAO,GAAG;KACX;;IAED,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,EAAE,GAAG,EAAE;MACjD,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;MAExB,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC;KACjC;;IAED,GAAG,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,EAAE,GAAG,EAAE;AACzD,MAAI,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE;AACzB,MAAI,GAAG,CAAC,GAAG,GAAG,IAAI;AAClB,MAAI,OAAO,GAAG;KACX;;AAEH;AACA;AACA;;IAEE,EAAE,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,GAAG,EAAE;AAChC,MAAI,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC;KACrB;;AAEH,IAAE,SAAS,IAAI,EAAE,CAAC,EAAE;AACpB,MAAI,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;;MAEjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;MAC/B,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC,EAAE;QACzB,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;AAC1C;;AAEA,MAAI,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;AACzC,MAAI,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;AACrC,MAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1D,MAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACtC,MAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AACrC;AACA,IAAE,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC;;IAEnB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,EAAE,GAAG,EAAE;AACtD,MAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACxC;;IAED,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,EAAE,GAAG,EAAE;AAC1D,MAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,MAAI,CAAC,CAAC,GAAG,GAAG,IAAI;AAChB,MAAI,OAAO,CAAC;KACT;;AAEH,IAAE,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE;MACzC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;AAClC,QAAM,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC;AACpB,QAAM,CAAC,CAAC,MAAM,GAAG,CAAC;AAClB,QAAM,OAAO,CAAC;AACd;;MAEI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AACrB,MAAI,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E,MAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC;;MAEX,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;QACtB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;OACrB,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACxB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1B;;AAEA,MAAI,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B;;AAEH,IAAE,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE;MACvC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;;MAE9D,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACpB,MAAI,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;AAC7E,MAAI,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;MACpC,IAAI,GAAG,GAAG,CAAC;MACX,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;QACtB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;OACrB,MAAM,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;QACxB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AAC1B;;AAEA,MAAI,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B;;IAED,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,CAAC,EAAE;AAC1C;MACI,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACtD,MAAI,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC;KAC3B;GACF,EAAmC,MAAM,EAAEjB,EAAI,CAAC,CAAA;;;;;;;;ACz9GjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,IAAI,CAAC,KAAK,EAAE;AAC5B,IAAI,OAAO,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;AACzB;;AClBO,MAAM,kBAAkB,GAAG,iBAAiB;AAC5C,MAAM,kBAAkB,GAAG,eAAe;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,KAAK,EAAE,SAAS,GAAG,EAAE,EAAE,YAAY,EAAE;AAC3D,IAAI,OAAO,CAAC,OAAO,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,IAAI;AACxD,QAAQ,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,SAAS,KAAK;AAC3D,WAA2B,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC;AACnD,WAAW,KAAK,CAAC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC,IAAI,OAAO,CAAC,CAAC,KAAK,IAAI,OAAO,KAAK,KAAK,QAAQ;AAC/C;;ACfO,SAAS,IAAI,CAAC,GAAG,GAAG,EAAE;AAC7B,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,UAAU,CAAC,KAAK,CAAC;AAC3D,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C;;ACJO,MAAM,UAAU,iBAAiB,IAAI,CAAC,UAAU,CAAC;;ACAjD,MAAM,MAAM,iBAAiB,IAAI,CAAC,MAAM,CAAC;;ACChD;AACO,MAAM,SAAS,GAAG,OAAOe,QAAM,KAAK,UAAU,IAAI,OAAOA,QAAM,CAAC,MAAM,KAAK,UAAU;AAS5F;AACO,MAAM,SAAS,GAAG,OAAO,OAAO,CAAC,MAAM,KAAK,UAAU,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC,QAAQ,KAAK,UAAU;AAC9G;AAC0B,OAAO,OAAO,CAAC,OAAO,KAAK;;ACZrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC;AACA,IAAI,OAAO,SAAS,IAAI,CAAC,CAAC,KAAK,IAAI,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;AACnG;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,KAAK,CAAC,KAAK,EAAE;AAC7B;AACA;AACA,IAAI,QAAQ,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,WAAW,MAAM,UAAU;AACxD,QAAQ,KAAK,YAAY,UAAU;AACnC;;AClBA,MAAM,OAAO,GAAG,IAAIG,aAAW,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,KAAK,EAAE;AACnC,IAAI,OAAO;AACX,UAAU,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE;AACzC,UAAU,IAAI,UAAU,EAAE;AAC1B;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC,IAAI,OAAO,KAAK,CAAC,KAAK;AACtB;AACA;AACA;AACA,UAAU,QAAQ,CAAC,KAAK;AACxB,cAAc,IAAI,UAAU,CAAC,KAAK;AAClC,cAAc;AACd,UAAU,KAAK,CAAC,KAAK;AACrB,cAAc,QAAQ,CAAC,KAAK;AAC5B,cAAc,KAAK,CAAC,OAAO,CAAC,KAAK;AACjC,kBAAkB,IAAI,UAAU,CAAC,KAAK;AACtC,kBAAkB,WAAW,CAAC,KAAK,CAAC;AACpC;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,SAAS,CAAC,GAAG,IAAI,EAAE;AACnC,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM;AAC7B,IAAI,MAAM,IAAI,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC;AACjC,IAAI,IAAI,MAAM,GAAG,CAAC;AAClB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;AACpC,QAAQ,IAAI,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnC,QAAQ,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;AAChC;AACA,IAAI,OAAO,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC;AACxC;AACA;AACA;AACA;AACA;AACO,SAAS,eAAe,CAAC,IAAI,EAAE,MAAM,GAAG,CAAC,EAAE;AAClD,IAAI,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM;AAC7B,IAAI,IAAI,MAAM,GAAG,CAAC;AAClB,IAAI,IAAI,CAAC,MAAM,EAAE;AACjB,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;AACxC,YAAY,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;AACpC;AACA;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC;AACzC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;AACpC,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC;AACnC,QAAQ,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;AAChC;AACA,IAAI,OAAO,MAAM;AACjB;;AC9CA,MAAM,EAAE,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC;AACzB,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;AAChC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC9B,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC3C;AACA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAC9B,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;AACpB,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AAClC,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AAClC;AACA;AACA;AACA,SAAS,GAAG,CAAC,KAAK,EAAE,MAAM,EAAE;AAC5B,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC;AACtC,IAAI,MAAM,MAAM,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,IAAI,CAAC;AAC3C,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;AACxC,QAAQ,MAAM,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AACrD;AACA,IAAI,IAAI,GAAG,EAAE;AACb,QAAQ,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACvC;AACA,IAAI,OAAO,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE,SAAS,GAAG,EAAE,EAAE,UAAU,GAAG,IAAI,EAAE;AACnE;AACA,IAAI,MAAM,KAAK,GAAG;AAClB,UAAU;AACV,UAAU,EAAE;AACZ,IAAI,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE;AACxB,QAAQ,OAAO,KAAK;AACpB;AACA,SAAS,IAAI,SAAS,GAAG,CAAC,EAAE;AAC5B,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC/C,QAAQ,IAAI,KAAK,CAAC,MAAM,GAAG,MAAM,EAAE;AACnC,YAAY,OAAO,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;AACvH;AACA;AACA,IAAI,OAAO,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC;AAC5B;;ACnDA,MAAM,OAAO,GAAG,IAAIC,aAAW,CAAC,OAAO,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,KAAK,EAAE;AACnC,IAAI,OAAO;AACX,UAAU,OAAO,CAAC,MAAM,CAAC,KAAK;AAC9B,UAAU,EAAE;AACZ;;ACfA;AACO,MAAM,eAAe,iBAAiB,QAAQ,CAAC,SAAS,CAAC;AAChE;AACO,MAAM,gBAAgB,iBAAiB,QAAQ,CAAC,UAAU,CAAC;AACjD,eAAe,CAAC,MAAM,GAAG,gBAAgB,CAAC;;ACR3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,KAAK,EAAE;AACtC,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,EAAE;AAClC,QAAQ,OAAO,EAAE;AACjB;AACA,SAAS,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC7C,QAAQ,OAAO,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;AACjC;AACA,SAAS,IAAI,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC7C,QAAQ,OAAO,KAAK;AACpB;AACA,IAAI,MAAM,IAAI,KAAK,CAAC,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACtE;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,OAAO,CAAC,KAAK,EAAE,EAAE,IAAI,GAAG,KAAK,EAAE,UAAU,GAAG,KAAK,EAAE,GAAG,EAAE,EAAE;AAC1E,IAAI,IAAI,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,EAAE;AAClC,QAAQ,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC;AACxB;AACA,IAAI,MAAM,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC;AAC1C,IAAI,MAAM,EAAE,GAAG,IAAI,EAAE,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AACvD;AACA;AACA,IAAI,OAAO;AACX,UAAU,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC;AACzC,UAAU,EAAE;AACZ;;ACzBA;AACA;AACA;AACA;AACO,MAAM,MAAM,iBAAiB,IAAI,EAAE,CAAC,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACO,MAAM,MAAM,iBAAiB,IAAI,EAAE,CAAC,CAAC,CAAC;AAwD7C;AACA;AACA;AACA;AACO,MAAM,UAAU,iBAAiB,IAAI,EAAE,CAAC,aAAa,CAAC;AAC7D;AACA;AACA;AACA;AAC2B,UAAU,CAAC,GAAG,CAAC,UAAU;;AChFpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,QAAQ,CAAC,KAAK,EAAE;AAChC,IAAI,OAAO,OAAO,KAAK,KAAK,QAAQ;AACpC;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,MAAM,CAAC,KAAK,EAAE;AAC9B,IAAI,OAAO;AACX,UAAU,EAAE,CAAC,IAAI,CAAC,KAAK;AACvB,cAAc;AACd,cAAc,KAAK,CAAC,KAAK;AACzB,kBAAkB,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE;AAC1C,kBAAkB,QAAQ,CAAC,KAAK;AAChC,sBAAsB,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE;AAC7C,sBAAsB,MAAM,CAAC,KAAK;AAClC,0BAA0B,KAAK,CAAC,IAAI;AACpC,0BAA0B,UAAU,CAAC,KAAK;AAC1C,8BAA8B,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE;AAChE,8BAA8B,IAAI,EAAE,CAAC,KAAK;AAC1C,UAAU,IAAI,EAAE,CAAC,CAAC,CAAC;AACnB;;ACnCA,MAAM,YAAY,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,OAAO,CAAC,KAAK,EAAE,EAAE,SAAS,GAAG,EAAE,EAAE,IAAI,GAAG,IAAI,EAAE,UAAU,GAAG,KAAK,EAAE,GAAG,YAAY,EAAE;AACnG,IAAI,MAAM,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AACjC,IAAI,MAAM,UAAU,GAAG,SAAS,KAAK;AACrC,UAAU,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC;AAC3C,UAAU,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,CAAC;AACzC,IAAI,IAAI,CAAC,KAAK,EAAE;AAChB,QAAQ,OAAO,SAAS,KAAK;AAC7B,cAAc,IAAI,UAAU,CAAC,CAAC;AAC9B,cAAc,IAAI,UAAU,CAAC,UAAU,CAAC;AACxC;AACA,IAAI,MAAM,MAAM,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC;AAC7C,IAAI,MAAM,EAAE,GAAG;AACf,UAAU,OAAO,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC;AACvC,UAAU,OAAO;AACjB,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC;AAC7D,IAAI,OAAO,MAAM;AACjB;;AC9BA,MAAM,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AACrD,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AACvD,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AACvD,MAAM,KAAK,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE;AAC/B,MAAM,KAAK,GAAG,EAAE,SAAS,EAAE,EAAE,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,YAAY,CAAC,KAAK,EAAE;AACpC,IAAI,MAAM,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC;AAC5B,IAAI,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AACxB,QAAQ,OAAO,IAAI,UAAU,CAAC,CAAC,EAAE,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC;AACnD;AACA,SAAS,IAAI,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AAC9B,QAAQ,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;AACtD;AACA,SAAS,IAAI,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AAC9B,QAAQ,OAAO,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC;AACtD;AACA,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,EAAE,CAAC;AAC3B,IAAI,IAAI,MAAM,GAAG,GAAG,CAAC,MAAM;AAC3B;AACA,IAAI,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;AAClC,QAAQ,MAAM,EAAE;AAChB;AACA,IAAI,IAAI,MAAM,GAAG,CAAC,EAAE;AACpB,QAAQ,MAAM,IAAI,KAAK,CAAC,+DAA+D,CAAC;AACxF;AACA,IAAI,OAAO,eAAe,CAAC;AAC3B;AACA,QAAQ,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC;AACpD,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM;AAC9B,KAAK,CAAC;AACN;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,gBAAgB,CAAC,KAAK,EAAE;AACxC,IAAI,OAAO,eAAe,CAAC;AAC3B,QAAQ,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC;AAClC,QAAQ;AACR,KAAK,CAAC;AACN;;ACnBA;AACA,SAAS,OAAO,CAAC,KAAK,EAAE;AACxB,IAAI,OAAO,KAAK,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACO,SAAS,UAAU,CAAC,IAAI,EAAE;AACjC,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,EAAE;AAC9C,IAAI,MAAM,KAAK,GAAG,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;AAChD,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;AACvC,IAAI,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;AACzC,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;AAC7C,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;AAC7C,IAAI,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AAChE;;AChBA;AACA;AACA;AAIA;AACA;AACA;AACO,SAAS,IAAI,GAAG;AACvB;AACA;;ACDA,MAAM,KAAK,GAAG;AACd,IAAI,KAAK,EAAE,KAAK;AAChB,IAAI,KAAK,EAAE,OAAO;AAClB,IAAI,GAAG,EAAE,KAAK;AACd,IAAI,IAAI,EAAE;AACV,CAAC;AACD,SAAS,WAAW,CAAC,KAAK,EAAE;AAC5B,IAAI,IAAI,KAAK,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,WAAW,KAAK,MAAM,EAAE;AAClE,QAAQ,MAAM,MAAM,GAAG,EAAE;AACzB,QAAQ,KAAK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AACpD,YAAY,MAAM,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;AACvC;AACA,QAAQ,OAAO,MAAM;AACrB;AACA,IAAI,OAAO,KAAK;AAChB;AACO,SAAS,YAAY,CAAC,KAAK,EAAE;AACpC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAC9B,QAAQ,OAAO,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC;AACtC;AACA,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;AAC1B,QAAQ,OAAO,KAAK,CAAC,QAAQ,EAAE;AAC/B;AACA,SAAS,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;AAC9C,QAAQ,OAAO,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxC;AACA,IAAI,OAAO,WAAW,CAAC,KAAK,CAAC;AAC7B;AACA,SAAS,gBAAgB,CAAC,SAAS,EAAE;AACrC,IAAI,OAAO,CAAC,CAAC,KAAK;AAClB,QAAQ,IAAI,SAAS,IAAI,CAAC,EAAE;AAC5B,YAAY,OAAO,CAAC;AACpB;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;AACxB,QAAQ,OAAO,CAAC,CAAC,MAAM,GAAG;AAC1B,cAAc;AACd,cAAc,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,IAAI,CAAC;AAChD,KAAK;AACL;AACA,SAAS,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;AAChD,IAAI,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE;AACtD,QAAQ,MAAM,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC,EAAE;AACpC,QAAQ,OAAO,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,CAAC,QAAQ,CAAC,EAAE,OAAO,CAAC;AACzF;AACA,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG;AACzD,SAAS,GAAG,CAAC,YAAY;AACzB,SAAS,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC;AACxC;AACA,SAAS,SAAS,CAAC,CAAC,EAAE,IAAI,EAAE;AAC5B,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG;AAC5B,QAAQ,IAAI,KAAK,CAAC;AAClB,SAAS,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;AACxB,YAAY,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7C;AACA,SAAS,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE;AAC7B,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC;AACpC,SAAS,IAAI,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC5B,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC;AAC5B,gBAAgB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD;AACA,SAAS,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE;AACjC,IAAI,IAAI,IAAI,GAAG,KAAK;AACpB,IAAI,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;AACzB,QAAQ,IAAI,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;AAChC,YAAY,IAAI,GAAG,IAAI;AACvB;AACA,aAAa,IAAI,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE;AACtC,YAAY,IAAI,GAAG,KAAK;AACxB;AACA;AACA,IAAI,OAAO,IAAI;AACf;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,IAAI,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,GAAG,WAAW,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;AAC7E,IAAI,OAAO;AACX,QAAQ,YAAY,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,GAAG,OAAO,CAAC,IAAI,EAAE,EAAE,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;AAC5F,QAAQ,KAAK,CAAC,OAAO;AACrB,cAAc;AACd,cAAc;AACd,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,MAAM,CAAC,MAAM,EAAE;AAC/B,IAAI,MAAM,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC;AACxD,IAAI,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;AAC7D,IAAI,OAAO;AACX,QAAQ,KAAK,EAAE;AACf,cAAc,CAAC,GAAG,MAAM,KAAK,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO;AACjE,cAAc,IAAI;AAClB,QAAQ,KAAK,EAAE,CAAC,GAAG,MAAM,KAAK,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,MAAM,CAAC;AAC1D,QAAQ,GAAG,EAAE,CAAC,GAAG,MAAM,KAAK,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC;AACtD,QAAQ,IAAI;AACZ,QAAQ,IAAI,EAAE,CAAC,GAAG,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,MAAM;AACvD,KAAK;AACL;;CCrH2B,EAAiC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,MAAsC;;ACCpP,MAAM,cAAc,GAAG,EAAE,eAAe,EAAE;AAC1C,MAAM,YAAY,GAAG,EAAE,MAAM,EAAE,cAAc,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,GAAG,CAAC;AACjB,IAAI,kBAAkB;AACtB,IAAI,WAAW,CAAC,MAAM,EAAE;AACxB,QAAQ,IAAI,CAAC,kBAAkB,GAAG,MAAM;AACxC;AACA;AACA,IAAI,KAAK,GAAG,MAAM;AAClB,QAAQ,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC;AAChC,KAAK;AACL;AACA,IAAI,uBAAuB,GAAG,CAAC,GAAG,KAAK;AACvC,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,SAAS;AACnE,KAAK;AACL;AACA,IAAI,gBAAgB,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;AACrC,QAAQ,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACpE,KAAK;AACL;AACA,IAAI,2BAA2B,GAAG,MAAM;AACxC,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,YAAY,CAAC;AAC9D,KAAK;AACL;AACA,IAAI,8BAA8B,GAAG,CAAC,GAAG,EAAE,GAAG,KAAK;AACnD,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3F,KAAK;AACL;AACA,IAAI,6BAA6B,GAAG,CAAC,IAAI,KAAK;AAC9C,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,cAAc,CAAC;AAChE,KAAK;AACL;AACA,IAAI,sCAAsC,GAAG,CAAC,IAAI,KAAK;AACvD,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,cAAc,CAAC,eAAe,CAAC;AAChF,KAAK;AACL;AACA,IAAI,sCAAsC,GAAG,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,KAAK;AAClE,QAAQ,cAAc,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AAChF,KAAK;AACL;AACA,IAAI,qCAAqC,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,KAAK;AAClE,QAAQ,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC;AAC1D;AACA,KAAK;AACL;AACA,IAAI,0BAA0B,GAAG,CAAC,GAAG,KAAK;AAC1C,QAAQ,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,GAAG,CAAC;AAC/C,KAAK;AACL;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,CAAC;AACpB,IAAI,sBAAsB;AAC1B,IAAI,gBAAgB;AACpB,IAAI,eAAe;AACnB,IAAI,yBAAyB;AAC7B,IAAI,yBAAyB;AAC7B,IAAI,oBAAoB;AACxB,IAAI,gBAAgB;AACpB,IAAI,qBAAqB;AACzB,IAAI,uBAAuB;AAC3B,IAAI,gBAAgB;AACpB,IAAI,WAAW,CAAC,UAAU,EAAE;AAC5B,QAAQ,IAAI,CAAC,sBAAsB,GAAG,UAAU;AAChD,QAAQ,IAAI,CAAC,yBAAyB,GAAG,IAAI;AAC7C,QAAQ,IAAI,CAAC,yBAAyB,GAAG,IAAI;AAC7C,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,KAAK,CAAC,EAAE;AAC5C,aAAa,IAAI,CAAC,SAAS;AAC3B,aAAa,MAAM,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;AACjD,QAAQ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM;AAChE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,MAAM;AACtC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI;AACpC,QAAQ,IAAI,CAAC,qBAAqB,GAAG,IAAI;AACzC,QAAQ,IAAI,CAAC,uBAAuB,GAAG,IAAI;AAC3C,QAAQ,IAAI,CAAC,eAAe,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,IAAI,CAAC,EAAE;AACnD;AACA;AACA,IAAI,IAAI,KAAK,GAAG;AAChB,QAAQ,OAAO,IAAI,CAAC,qBAAqB;AACzC;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,gBAAgB;AACpC;AACA;AACA,IAAI,IAAI,IAAI,GAAG;AACf,QAAQ,OAAO,IAAI,CAAC,gBAAgB;AACpC;AACA;AACA,IAAI,MAAM,IAAI,CAAC,UAAU,EAAE;AAC3B,QAAQ,IAAI,CAAC,IAAI,CAAC,uBAAuB,IAAI,UAAU,EAAE;AACzD,YAAY,IAAI,CAAC,uBAAuB,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,eAAe,CAAC;AAC5G;AACA,QAAQ,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,uBAAuB;AACxE,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI;AACpC,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI;AACpC,QAAQ,IAAI,CAAC,qBAAqB,GAAG,KAAK;AAC1C,QAAQ,OAAO,IAAI,CAAC,gBAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE;AACnB,QAAQ,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,IAAI,GAAG,GAAG,EAAE,EAAE;AACtB,YAAY;AACZ;AACA,QAAQ,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,oBAAoB;AAC9D,QAAQ,IAAI,CAAC,oBAAoB,GAAG,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA,IAAI,UAAU,CAAC,GAAG,EAAE;AACpB,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;AACvC,QAAQ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;AAC5B,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE;AACnB,QAAQ,IAAI,IAAI,CAAC,oBAAoB,KAAK,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE;AACxE,YAAY,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,GAAG,CAAC,CAAC;AACxE;AACA,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,oBAAoB;AAC7C,QAAQ,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;AAC9D,QAAQ,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,GAAG,GAAG;AACxC,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,IAAI,CAAC,yBAAyB,KAAK,IAAI,IAAI,IAAI,CAAC,yBAAyB,CAAC,MAAM,KAAK,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE;AACtI,YAAY,IAAI,CAAC,yBAAyB,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC;AAChG;AACA,QAAQ,OAAO,IAAI,CAAC,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,GAAG;AACf,QAAQ,IAAI,IAAI,CAAC,yBAAyB,KAAK,IAAI,IAAI,IAAI,CAAC,yBAAyB,CAAC,MAAM,KAAK,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE;AACtI,YAAY,IAAI,CAAC,yBAAyB,GAAG,IAAI,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,CAAC;AAChG;AACA,QAAQ,OAAO,IAAI,CAAC,yBAAyB;AAC7C;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;AAC/D;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG,EAAE,GAAG,EAAE;AACxB,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;AACjD;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,CAAC,GAAG,EAAE;AAClB,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3E,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;AACzC,QAAQ,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA,IAAI,WAAW,CAAC,GAAG,EAAE;AACrB,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA,IAAI,SAAS,GAAG;AAChB,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAQ,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AAC7C,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE;AAC/C,QAAQ,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,EAAE,EAAE,GAAG,CAAC,CAAC;AACzD,QAAQ,OAAO,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,YAAY,GAAG;AACnB,QAAQ,OAAO,WAAW,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;AAC5C;AACA;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,MAAM,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC;;ACL5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,EAAE,EAAE;AACtB,IAAI,OAAO,CAAC,GAAG,MAAM,KAAK;AAC1B,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;AAC1B,YAAY,MAAM,IAAI,KAAK,CAAC,+OAA+O,CAAC;AAC5Q;AACA,QAAQ,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC;AACzC,KAAK;AACL;AAyFO,MAAM,OAAO,iBAAiB,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,KAAK;AACzE,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;AAChF,IAAI,OAAO,MAAM,CAAC,SAAS,EAAE;AAC7B,CAAC,CAAC;AAqCK,SAAS,OAAO,GAAG;AAC1B,IAAI,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI;AACxB;;AC1JA;AACO,SAAS,YAAY,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE;AACxD,IAAI,OAAO,CAAC,KAAK,EAAE,UAAU,KAAK;AAClC,QAAQ,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC;AACnC,QAAQ,OAAO,KAAK,CAAC,MAAM,CAAS;AACpC,cAAc,KAAK,CAAC,SAAS,CAAC,CAAC;AAC/B,cAAc,KAAK,CAAC;AACpB,KAAK;AACL;AAqBA;AACO,SAAS,cAAc,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE;AACnE,IAAI,OAAO,CAAC,KAAK,EAAE,UAAU,KAAK;AAClC,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AACvC,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;AAC5D;AACA,aAAa,IAAY,UAAU,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;AAChE,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,yBAAyB,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;AACvF;AACA,QAAQ,KAAK,IAAI,CAAC,IAAI,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;AACjF,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AAG1C,iBAAiB,IAAI,WAAW,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AACtD,gBAAgB,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,EAAE;AAGrC,qBAAqB,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE;AAG/C,qBAAqB;AACrB,oBAAoB,MAAM,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;AAClH;AACA;AACA,iBAAiB;AACjB,gBAAgB,MAAM,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,CAAC;AAChI;AACA;AACA,QAAQ,OAAO,IAAI;AACnB,KAAK;AACL;;AC1DA,MAAM,MAAM,GAAG;AACf,IAAI,KAAK,EAAE,4DAA4D;AACvE,IAAI,KAAK,EAAE,MAAM;AACjB,IAAI,IAAI,EAAE,GAAG;AACb,IAAI,IAAI,EAAE;AACV,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,cAAc,iBAAiB,cAAc,CAAC,MAAM,CAAC;AAClE;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,YAAY,iBAAiB,YAAY,CAAC,MAAM,EAAE,cAAc,CAAC;;ACjB9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,WAAW,CAAC,IAAI,EAAE,SAAS,GAAG,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE;AAChE,IAAI,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;AAC/C,IAAI,MAAM,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC9B,IAAI,OAAO,CAAC,SAAS,KAAK,CAAC,MAAM,IAAI,OAAO,EAAE;AAC9C,UAAU,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,GAAG,CAAC,EAAE,UAAU;AAChD,UAAU;AACV,cAAcC,SAAS,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG,EAAE;AACvD,cAAcA,SAAS,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC;AACnD;;ACxBA,MAAM,WAAW,GAAG,WAAW,CAAC,SAAS,CAAC;AACnC,SAAS,MAAM,CAAC,GAAG,EAAE;AAC5B,IAAI,OAAO,WAAW,CAAC,SAAS,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;AACxD;;ACJO,SAAS,oBAAoB,CAAC,OAAO,EAAE;AAC9C,IAAI,MAAM,UAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,IAAI,CAAC,GAAG,CAAC;AACzD,IAAI,MAAM,WAAW,GAAG,UAAU,KAAK;AACvC,UAAU,OAAO,CAAC,CAAC;AACnB,UAAU,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,KAAK,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,KAAK,CAAC,CAAC;AACnG;AACA,IAAI,MAAM,WAAW,GAAG,CAAC,EAAE,GAAG,UAAU,EAAE,EAAE,GAAG,UAAU,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;AACnF,IAAI,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,IAAI,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC;AACzD;AACA,IAAI,MAAM,IAAI,GAAG,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACpD,IAAI,MAAM,OAAO,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;AAC3F,UAAU,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC;AAC3F,UAAU,OAAO,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;AAClD,IAAI,OAAO,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC;AACrD;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAe;AACf,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,sBAAsB;AACvC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,aAAa;AAC1B,EAAE,aAAa,EAAE,uDAAuD;AACxE,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,SAAS;AAC9B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,oBAAoB;AACrC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,aAAa;AAC1B,EAAE,aAAa,EAAE,iCAAiC;AAClD,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,SAAS;AAC9B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,CAAC;AACb,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,yBAAyB;AAC1C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,OAAO;AACxB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,YAAY;AAC7B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,OAAO;AACxB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,aAAa;AAC1B,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,WAAW;AAChC,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,OAAO;AACxB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,kBAAkB;AAC/B,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,MAAM;AACvB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,iBAAiB;AAC9B,EAAE,aAAa,EAAE,iBAAiB;AAClC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG,KAAK;AACR,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG,EAAE;AACL,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,YAAY;AAC7B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,aAAa;AAC1B,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,KAAK;AAClB,EAAE,aAAa,EAAE,yBAAyB;AAC1C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,mBAAmB;AACpC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,mBAAmB;AAChC,EAAE,aAAa,EAAE,mBAAmB;AACpC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,eAAe;AAC5B,EAAE,aAAa,EAAE,0CAA0C;AAC3D,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,WAAW;AAChC,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,iBAAiB;AAClC,EAAE,SAAS,EAAE;AACb,GAAG,MAAM;AACT,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG,EAAE;AACL,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,0BAA0B;AAC3C,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,IAAI;AACzB,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,0BAA0B;AAC3C,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,IAAI;AACzB,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,oBAAoB;AACrC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,KAAK;AAClB,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE;AACb,GAAG,KAAK;AACR,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG,EAAE;AACL,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,MAAM;AACvB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,MAAM;AACvB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,YAAY;AAC7B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,iBAAiB;AAClC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,sBAAsB;AACnC,EAAE,aAAa,EAAE,sBAAsB;AACvC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,iBAAiB;AAClC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG,MAAM;AACT,GAAG,KAAK;AACR,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG,CAAC;AACJ,GAAG,CAAC;AACJ,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,aAAa;AAC1B,EAAE,aAAa,EAAE,qBAAqB;AACtC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,KAAK;AAClB,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,gCAAgC;AACjD,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,eAAe;AAC5B,EAAE,aAAa,EAAE,yBAAyB;AAC1C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,mBAAmB;AAChC,EAAE,aAAa,EAAE,oBAAoB;AACrC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,YAAY;AACzB,EAAE,aAAa,EAAE,2BAA2B;AAC5C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,EAAE;AACd,EAAE,SAAS,EAAE,cAAc;AAC3B,EAAE,aAAa,EAAE,sBAAsB;AACvC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,qCAAqC;AACtD,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,uBAAuB;AACpC,EAAE,aAAa,EAAE,uBAAuB;AACxC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,gBAAgB;AAC7B,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,OAAO;AACxB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,sBAAsB;AACnC,EAAE,aAAa,EAAE,sBAAsB;AACvC,EAAE,SAAS,EAAE,EAAE;AACf,EAAE,UAAU,EAAE,EAAE;AAChB,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,sBAAsB;AACnC,EAAE,aAAa,EAAE,8BAA8B;AAC/C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,gBAAgB;AAC7B,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,gBAAgB;AAC7B,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,iBAAiB;AAC9B,EAAE,aAAa,EAAE,gCAAgC;AACjD,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,kBAAkB;AAC/B,EAAE,aAAa,EAAE,uBAAuB;AACxC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,iBAAiB;AAC9B,EAAE,aAAa,EAAE,iBAAiB;AAClC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,mBAAmB;AAChC,EAAE,aAAa,EAAE,mBAAmB;AACpC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,OAAO;AACxB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,GAAG;AACf,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,SAAS;AAC9B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,SAAS;AAC9B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,WAAW;AAChC,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,WAAW;AAChC,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,eAAe;AAChC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,OAAO;AACpB,EAAE,aAAa,EAAE,OAAO;AACxB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,mBAAmB;AAChC,EAAE,aAAa,EAAE,2BAA2B;AAC5C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,iBAAiB;AAClC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,WAAW;AAChC,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,KAAK;AAClB,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,0BAA0B;AAC3C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,kBAAkB;AAC/B,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,WAAW;AAChC,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,IAAI;AACjB,EAAE,aAAa,EAAE,IAAI;AACrB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,IAAI;AACjB,EAAE,aAAa,EAAE,IAAI;AACrB,EAAE,SAAS,EAAE;AACb,GAAG,MAAM;AACT,GAAG,IAAI;AACP,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG,EAAE;AACL,GAAG,CAAC;AACJ,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,gBAAgB;AAC7B,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,aAAa;AAC1B,EAAE,aAAa,EAAE,aAAa;AAC9B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,kBAAkB;AAC/B,EAAE,aAAa,EAAE,oBAAoB;AACrC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,oBAAoB;AACjC,EAAE,aAAa,EAAE,oBAAoB;AACrC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,gBAAgB;AACjC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,MAAM;AACvB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,UAAU;AACvB,EAAE,aAAa,EAAE,UAAU;AAC3B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,cAAc;AAC3B,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,MAAM;AACvB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,aAAa;AAC1B,EAAE,aAAa,EAAE,sBAAsB;AACvC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,yBAAyB;AAC1C,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,SAAS;AAC1B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,kBAAkB;AAC/B,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,WAAW;AACxB,EAAE,aAAa,EAAE,WAAW;AAC5B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,MAAM;AACnB,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,cAAc;AAC3B,EAAE,aAAa,EAAE,cAAc;AAC/B,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,KAAK;AACjB,EAAE,SAAS,EAAE,QAAQ;AACrB,EAAE,aAAa,EAAE,QAAQ;AACzB,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,WAAW;AAChC,EAAE,SAAS,EAAE;AACb,EAAE;AACF,CAAC;AACD,EAAE,QAAQ,EAAE,IAAI;AAChB,EAAE,SAAS,EAAE,SAAS;AACtB,EAAE,aAAa,EAAE,kBAAkB;AACnC,EAAE,SAAS,EAAE;AACb,GAAG;AACH,GAAG;AACH,EAAE,UAAU,EAAE;AACd,GAAG;AACH,GAAG;AACH,EAAE,iBAAiB,EAAE,QAAQ;AAC7B,EAAE,SAAS,EAAE;AACb;AACA,CAAC;;AC/3DM,MAAM,YAAY,GAAG;AAC5B,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,YAAY,EAAE;AAClB,QAAQ;AACR,KAAK;AACL,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,OAAO,EAAE;AACb,QAAQ;AACR,KAAK;AACL,IAAI,gBAAgB,EAAE;AACtB,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR,KAAK;AACL,IAAI,UAAU,EAAE;AAChB,QAAQ,oEAAoE;AAC5E,QAAQ;AACR,KAAK;AACL,IAAI,IAAI,EAAE;AACV,QAAQ;AACR,KAAK;AACL,IAAI,UAAU,EAAE;AAChB,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,cAAc,EAAE;AACpB,QAAQ,oEAAoE;AAC5E,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR,KAAK;AACL,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,WAAW,EAAE;AACjB,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,OAAO,EAAE;AACb,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,KAAK;AACL,IAAI,UAAU,EAAE;AAChB,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,KAAK;AACL,IAAI,oBAAoB,EAAE;AAC1B,QAAQ;AACR,KAAK;AACL,IAAI,MAAM,EAAE;AACZ,QAAQ;AACR,KAAK;AACL,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,MAAM,EAAE;AACZ,QAAQ;AACR,KAAK;AACL,IAAI,MAAM,EAAE;AACZ,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,KAAK;AACL,IAAI,WAAW,EAAE;AACjB,QAAQ;AACR,KAAK;AACL,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,WAAW,EAAE;AACjB,QAAQ;AACR,KAAK;AACL,IAAI,GAAG,EAAE;AACT,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,IAAI,EAAE;AACV,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,OAAO,EAAE;AACb,QAAQ,oEAAoE;AAC5E,QAAQ;AACR,KAAK;AACL,IAAI,OAAO,EAAE;AACb,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,QAAQ,EAAE;AACd,QAAQ;AACR,KAAK;AACL,IAAI,MAAM,EAAE;AACZ,QAAQ;AACR,KAAK;AACL,IAAI,MAAM,EAAE;AACZ,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ,oEAAoE;AAC5E,QAAQ;AACR,KAAK;AACL,IAAI,IAAI,EAAE;AACV,QAAQ;AACR,KAAK;AACL,IAAI,KAAK,EAAE;AACX,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR,KAAK;AACL,IAAI,MAAM,EAAE;AACZ,QAAQ;AACR,KAAK;AACL,IAAI,MAAM,EAAE;AACZ,QAAQ;AACR,KAAK;AACL,IAAI,IAAI,EAAE;AACV,QAAQ;AACR,KAAK;AACL,IAAI,GAAG,EAAE;AACT,QAAQ,oEAAoE;AAC5E,QAAQ;AACR,KAAK;AACL,IAAI,OAAO,EAAE;AACb,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR,KAAK;AACL,IAAI,SAAS,EAAE;AACf,QAAQ;AACR;AACA,CAAC;;ACtLM,MAAM,SAAS,GAAG;AACzB,IAAI,UAAU,EAAE,UAAU;AAC1B,IAAI,MAAM,EAAE,UAAU;AACtB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,QAAQ,EAAE;AACd,CAAC;;ACRM,MAAM,WAAW,GAAG;AAC3B,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,YAAY,EAAE,UAAU;AAC5B,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,OAAO,EAAE,UAAU;AACvB,IAAI,gBAAgB,EAAE,UAAU;AAChC,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,UAAU,EAAE,UAAU;AAC1B,IAAI,UAAU,EAAE,UAAU;AAC1B,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,cAAc,EAAE,UAAU;AAC9B,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,WAAW,EAAE,UAAU;AAC3B,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,OAAO,EAAE,UAAU;AACvB,IAAI,UAAU,EAAE,UAAU;AAC1B,IAAI,oBAAoB,EAAE,UAAU;AACpC,IAAI,MAAM,EAAE,UAAU;AACtB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,MAAM,EAAE,UAAU;AACtB,IAAI,WAAW,EAAE,UAAU;AAC3B,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,WAAW,EAAE,UAAU;AAC3B,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,OAAO,EAAE,UAAU;AACvB,IAAI,OAAO,EAAE,UAAU;AACvB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,QAAQ,EAAE,UAAU;AACxB,IAAI,MAAM,EAAE,UAAU;AACtB,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,KAAK,EAAE,UAAU;AACrB,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,MAAM,EAAE,SAAS;AACrB,IAAI,MAAM,EAAE,UAAU;AACtB,IAAI,IAAI,EAAE,UAAU;AACpB,IAAI,GAAG,EAAE,UAAU;AACnB,IAAI,SAAS,EAAE,UAAU;AACzB,IAAI,SAAS,EAAE;AACf,CAAC;;AC/CM,MAAM,YAAY,GAAG;AAC5B,IAAI,EAAE,EAAE,IAAI;AACZ,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,cAAc,EAAE,IAAI;AACxB,IAAI,OAAO,EAAE,IAAI;AACjB,IAAI,mBAAmB,EAAE,IAAI;AAC7B,IAAI,IAAI,EAAE,IAAI;AACd,IAAI,gBAAgB,EAAE,IAAI;AAC1B,IAAI,iBAAiB,EAAE;AACvB,CAAC;;ACPD,MAAM,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;AAC3B,MAAM,QAAQ,GAAG,CAAC,SAAS,CAAC;AAC5B,SAAS,UAAU,CAAC,CAAC,EAAE;AACvB,IAAI,MAAM,OAAO,GAAG,CAAC,CAAC,OAAO,IAAI,EAAE;AACnC,IAAI,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC;AAC3D,IAAI,MAAM,CAAC,GAAG,CAAC;AACf;AACA,IAAI,CAAC,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC;AACnC,IAAI,CAAC,CAAC,gBAAgB,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;AACnC;AACA,IAAI,CAAC,CAAC,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE;AAC/C,IAAI,CAAC,CAAC,IAAI,GAAG,SAAS,CAAC,OAAO,CAAC,IAAI,WAAW;AAC9C;AACA,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/F,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,KAAK,EAAE,CAAC,CAAC,eAAe;AACrD,QAAQ,CAAC,CAAC,QAAQ,EAAE,MAAM;AAC1B,QAAQ,CAAC,CAAC,OAAO,EAAE,MAAM,CAAC;AAC1B,QAAQ,CAAC,CAAC,MAAM,KAAK,EAAE,CAAC;AACxB,IAAI,OAAO,CAAC;AACZ;AACA,SAAS,gBAAgB,CAAC,EAAE,WAAW,EAAE,MAAM,EAAE,EAAE;AACnD,IAAI,OAAO,CAAC,CAAC,WAAW,CAAC,MAAM,IAAI,MAAM,KAAK,EAAE;AAChD;AACA,SAAS,eAAe,CAAC,CAAC,EAAE;AAC5B,IAAI,OAAO,CAAC,CAAC,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO;AACtC;AACA,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE;AAC5B,IAAI,MAAM,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;AACnD,IAAI,MAAM,WAAW,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;AACnD,IAAI,OAAO,WAAW,KAAK;AAC3B,UAAU;AACV,cAAc;AACd,cAAc,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,WAAW;AACvD,UAAU;AACV,cAAc;AACd,cAAc,CAAC;AACf;AACO,MAAM,WAAW,GAAG,cAAc,CAAC,GAAG,CAAC,UAAU,CAAC;AAClD,MAAM,iBAAiB,GAAG,WAAW,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;AACrD,iBAAiB,CAAC,MAAM,CAAC,gBAAgB;;ACxCpE,MAAM,QAAQ,GAAG;AACxB,IAAI,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;AAC/C;AACA,IAAI,qBAAqB,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACxD,IAAI,aAAa,EAAE,iBAAiB,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,EAAE,KAAK,MAAM,CAAC;AAChE,IAAI,MAAM,EAAE;AACZ,CAAC;;ACHM,SAAS,aAAa,CAAC,OAAO,EAAE,cAAc,EAAE,UAAU,GAAG,EAAE,EAAE;AACxE,IAAI,IAAI,CAAC,OAAO,EAAE;AAClB,QAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC;AACvD;AACA,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE;AAC1C,QAAQ,OAAO,QAAQ,CAAC,OAAO,CAAC;AAChC;AACA,IAAI,IAAI;AACR,QAAQ,MAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;AAC7C,QAAQ,IAAI,CAAC,QAAQ,CAAC,qBAAqB,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AACtE,YAAY,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC;AAC7D;AACA,QAAQ,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,WAAW,CAAC,GAAG,oBAAoB,CAAC,OAAO,CAAC;AACxF,QAAQ,IAAI,CAAC,OAAO,IAAI,CAAC,cAAc,EAAE;AACzC,YAAY,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC;AAC/D;AACA,aAAa,IAAI,UAAU,KAAK,CAAC,CAAC,IAAI,UAAU,KAAK,WAAW,EAAE;AAClE,YAAY,MAAM,IAAI,KAAK,CAAC,CAAC,oBAAoB,EAAE,UAAU,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;AACzF;AACA,QAAQ,OAAO,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,MAAM,CAAC;AAChD;AACA,IAAI,OAAO,KAAK,EAAE;AAClB,QAAQ,MAAM,IAAI,KAAK,CAAC,CAAC,SAAS,EAAE,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;AAChE;AACA;;AC1Ba,gBAAgB,CAAC,WAAW,CAAC,eAAe,CAAC;;ACA7C,gBAAgB,CAAC,WAAW,CAAC,aAAa,CAAC;;ACA1C,IAAI,EAAE,CAAC,uDAAuD;;ACE7D,WAAW,CAAC,kBAAkB;;ACA9B,WAAW,CAAC,kBAAkB;;ACFnC,MAAM,CAAC,eAAe;;;;;MCInB,OAAO,CAAA;AAAA,EAElB,YAAY,SAAuB,EAAA;AAD3B,IAAA,aAAA,CAAA,IAAA,EAAA,WAAA,CAAA;AAEN,IAAA,IAAA,CAAK,SAAY,GAAA,SAAA;AAAA;AACnB,EAEA,aAAa,GAAA;AACX,IAAA,OAAO,IAAK,CAAA,SAAA;AAAA;AACd,EAEA,WAAW,OAAmB,EAAA;AAC5B,IAAK,IAAA,CAAA,SAAA,CAAU,KAAK,OAAO,CAAA;AAAA;AAC7B,EAEA,cAAc,OAAmB,EAAA;AAC/B,IAAA,IAAA,CAAK,YAAY,IAAK,CAAA,SAAA,CAAU,OAAO,CAAC,IAAA,KAAS,SAAS,OAAO,CAAA;AAAA;AACnE,EAEA,cAAc,GAAA;AACZ,IAAA,IAAA,CAAK,YAAY,EAAA;AAAA;AACnB,EAEA,OAAO,iBAAiB,OAAe,EAAA;AACrC,IAAA,IAAI,QAAQ,UAAW,CAAA,IAAI,CAAK,IAAA,OAAA,CAAQ,WAAW,EAAI,EAAA;AACrD,MAAO,OAAA,OAAA;AAAA;AAET,IAAO,OAAA,QAAA,CAAS,aAAc,CAAA,OAAO,CAAC,CAAA;AAAA;AACxC,EAEA,MAAM,OAAQ,CAAA,gBAAA,EAAoC,KAAe,EAAA;AAC/D,IAAI,IAAA,gBAAA,CAAiB,gBAAgB,WAAa,EAAA;AAChD,MAAM,MAAA,IAAI,MAAM,oCAAoC,CAAA;AAAA;AAGtD,IAAI,IAAA,CAAC,IAAK,CAAA,SAAA,CAAU,MAAQ,EAAA;AAC1B,MAAM,MAAA,IAAI,MAAM,uBAAuB,CAAA;AAAA;AAKzC,IAAM,MAAA,MAAA,GAAS,iBAAiB;AAChC,IAAA,IAAI,KAAO,EAAA;AACT,MAAA,IAAI,CAAC,MAAA,CAAO,QAAS,CAAA,KAAK,CAAG,EAAA;AAC3B,QAAA,MAAM,IAAI,KAAA,CAAM,CAAS,MAAA,EAAA,KAAK,CAAiC,+BAAA,CAAA,CAAA;AAAA;AAEjE,MAAM,MAAA,cAAA,GAAiB,gBAAiB,CAAA,QAAA,CAAS,KAAK,CAAA;AAEtD,MAAA,MAAM,QAAW,GAAA,MAAM,cAAe,CAAA,SAAA,CAAU,KAAK,SAAS,CAAA;AAC9D,MAAO,OAAA,QAAA;AAAA,KACF,MAAA;AACL,MAAA,MAAM,WAAW,MAAM,OAAA,CAAQ,UAC7B,CAAA,MAAA,CAAO,IAAI,CAACC,MAAAA,KACV,gBAAiB,CAAA,QAAA,CAASA,MAAK,CAAG,CAAA,SAAA,CAAU,IAAK,CAAA,SAAS,CAAC,CAC5D,CAAA;AAEH,MAAA,MAAM,kBAAqB,GAAA,QAAA,CAAS,MAClC,CAAA,CAAC,KAAK,OAAW,KAAA;AACf,QAAI,IAAA,OAAA,CAAQ,WAAW,WAAa,EAAA;AAClC,UAAA,MAAM,EAAE,IAAA,EAAM,QAAU,EAAA,MAAA,KAAW,OAAQ,CAAA,KAAA;AAC3C,UAAI,GAAA,CAAA,IAAA,IAAQ,OAAO,IAAI,CAAA;AACvB,UAAI,GAAA,CAAA,QAAA,IAAY,OAAO,QAAQ,CAAA;AAC/B,UAAI,GAAA,CAAA,MAAA,IAAU,OAAO,MAAM,CAAA;AAAA;AAE7B,QAAO,OAAA,GAAA;AAAA,OAET,EAAA;AAAA,QACE,IAAA,EAAM,OAAO,CAAC,CAAA;AAAA,QACd,QAAA,EAAU,OAAO,CAAC,CAAA;AAAA,QAClB,MAAA,EAAQ,OAAO,CAAC;AAAA,OACjB,CAAA;AAGH,MAAO,OAAA,kBAAA;AAAA;AACT;AAEH;;;;","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,268,269,270,271,272,273,274,275,276,277,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338]}