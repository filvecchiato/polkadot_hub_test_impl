// .papi/descriptors/src/kct_metadata.ts
var binMeta = "";
var kct_metadata_default = binMeta;
export {
  kct_metadata_default as default
};
