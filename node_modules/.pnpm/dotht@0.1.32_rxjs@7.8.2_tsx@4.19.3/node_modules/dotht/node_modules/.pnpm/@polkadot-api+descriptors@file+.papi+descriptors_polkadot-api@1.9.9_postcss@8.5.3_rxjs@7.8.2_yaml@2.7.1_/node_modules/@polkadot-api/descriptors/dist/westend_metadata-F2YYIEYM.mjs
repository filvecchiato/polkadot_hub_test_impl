// .papi/descriptors/src/westend_metadata.ts
var binMeta = "";
var westend_metadata_default = binMeta;
export {
  westend_metadata_default as default
};
