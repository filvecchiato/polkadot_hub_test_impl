// .papi/descriptors/src/pct_metadata.ts
var binMeta = "";
var pct_metadata_default = binMeta;
export {
  pct_metadata_default as default
};
