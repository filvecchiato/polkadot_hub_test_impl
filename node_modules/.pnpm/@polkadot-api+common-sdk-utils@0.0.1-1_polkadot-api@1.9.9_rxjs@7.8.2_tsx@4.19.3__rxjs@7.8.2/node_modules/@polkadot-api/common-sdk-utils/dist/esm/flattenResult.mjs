const isResult = (value) => typeof value === "object" && !!value && "success" in value && "value" in value && typeof value.success === "boolean";
const flattenValues = (v) => {
  const result = flattenResult(v);
  return result.success ? { value: result.value } : null;
};
const flattenErrors = (v) => {
  const result = flattenResult(v);
  return result.success ? null : { error: result.value };
};
const flattenResult = (v) => isResult(v) ? v.success ? flattenResult(v.value) : { success: false, value: v.value } : { success: true, value: v };
function mapResult(result, mapFns) {
  return result.success ? {
    success: true,
    value: mapFns.value?.(result.value) ?? result.value
  } : {
    success: false,
    value: mapFns.error?.(result.value) ?? result.value
  };
}

export { flattenErrors, flattenResult, flattenValues, mapResult };
//# sourceMappingURL=flattenResult.mjs.map
